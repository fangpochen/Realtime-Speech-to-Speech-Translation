DEBUG:root:send audio data 1748516224.770715
DEBUG:root:send audio data 1748516227.780187
DEBUG:root:send audio data 1748516230.780916
DEBUG:root:send audio data 1748516233.920609
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          18	STORE_FAST(arg=3, lineno=1140)
          20	LOAD_FAST(arg=1, lineno=1141)
          22	UNARY_NEGATIVE(arg=None, lineno=1141)
          24	LOAD_FAST(arg=3, lineno=1141)
          26	SWAP(arg=2, lineno=1141)
          28	COPY(arg=2, lineno=1141)
          30	COMPARE_OP(arg=1, lineno=1141)
          36	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1141)
          38	LOAD_FAST(arg=1, lineno=1141)
          40	COMPARE_OP(arg=1, lineno=1141)
          46	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1141)
          48	JUMP_FORWARD(arg=2, lineno=1141)
>         50	POP_TOP(arg=None, lineno=1141)
          52	JUMP_FORWARD(arg=2, lineno=1141)
>         54	LOAD_CONST(arg=1, lineno=1142)
          56	STORE_FAST(arg=3, lineno=1142)
>         58	LOAD_FAST(arg=0, lineno=1144)
          60	LOAD_CONST(arg=2, lineno=1144)
          62	BINARY_SUBSCR(arg=None, lineno=1144)
          72	STORE_FAST(arg=4, lineno=1144)
          74	LOAD_FAST(arg=1, lineno=1145)
          76	UNARY_NEGATIVE(arg=None, lineno=1145)
          78	LOAD_FAST(arg=4, lineno=1145)
          80	SWAP(arg=2, lineno=1145)
          82	COPY(arg=2, lineno=1145)
          84	COMPARE_OP(arg=1, lineno=1145)
          90	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
          92	LOAD_FAST(arg=1, lineno=1145)
          94	COMPARE_OP(arg=1, lineno=1145)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
         102	JUMP_FORWARD(arg=2, lineno=1145)
>        104	POP_TOP(arg=None, lineno=1145)
         106	JUMP_FORWARD(arg=2, lineno=1145)
>        108	LOAD_CONST(arg=1, lineno=1146)
         110	STORE_FAST(arg=4, lineno=1146)
>        112	LOAD_FAST(arg=2, lineno=1148)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1148)
         116	LOAD_GLOBAL(arg=1, lineno=1149)
         128	LOAD_ATTR(arg=1, lineno=1149)
         138	LOAD_FAST(arg=3, lineno=1149)
         140	PRECALL(arg=1, lineno=1149)
         144	CALL(arg=1, lineno=1149)
         154	LOAD_GLOBAL(arg=1, lineno=1149)
         166	LOAD_ATTR(arg=1, lineno=1149)
         176	LOAD_FAST(arg=4, lineno=1149)
         178	PRECALL(arg=1, lineno=1149)
         182	CALL(arg=1, lineno=1149)
         192	COMPARE_OP(arg=3, lineno=1149)
         198	RETURN_VALUE(arg=None, lineno=1149)
>        200	LOAD_GLOBAL(arg=1, lineno=1151)
         212	LOAD_ATTR(arg=2, lineno=1151)
         222	LOAD_FAST(arg=3, lineno=1151)
         224	PRECALL(arg=1, lineno=1151)
         228	CALL(arg=1, lineno=1151)
         238	LOAD_GLOBAL(arg=1, lineno=1151)
         250	LOAD_ATTR(arg=2, lineno=1151)
         260	LOAD_FAST(arg=4, lineno=1151)
         262	PRECALL(arg=1, lineno=1151)
         266	CALL(arg=1, lineno=1151)
         276	COMPARE_OP(arg=3, lineno=1151)
         282	RETURN_VALUE(arg=None, lineno=1151)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1137)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=3, lineno=1140)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=1141)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$threshold20.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$22unary_negative.4']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=SWAP(arg=2, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$22unary_negative.4', '$x024.5']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=COPY(arg=2, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$x024.5', '$22unary_negative.4']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=COMPARE_OP(arg=1, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$x024.5', '$22unary_negative.4', '$x024.5']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$x024.5', '$30compare_op.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=38, stack=('$x024.5',), blockstack=(), npush=0), Edge(pc=50, stack=('$x024.5',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=38 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi38.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=38 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$phi38.0']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=1, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$threshold38.1']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$40compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi50.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=50 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=50, inst=POP_TOP(arg=None, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$phi50.0']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=JUMP_FORWARD(arg=2, lineno=1141)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=48 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=48, inst=JUMP_FORWARD(arg=2, lineno=1141)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1144)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=1144)
DEBUG:numba.core.byteflow:stack ['$x58.0']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=1144)
DEBUG:numba.core.byteflow:stack ['$x58.0', '$const60.1.2']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=STORE_FAST(arg=4, lineno=1144)
DEBUG:numba.core.byteflow:stack ['$62binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=1145)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$threshold74.3']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=4, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$76unary_negative.4']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=SWAP(arg=2, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$76unary_negative.4', '$x178.5']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=COPY(arg=2, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$x178.5', '$76unary_negative.4']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=COMPARE_OP(arg=1, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$x178.5', '$76unary_negative.4', '$x178.5']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$x178.5', '$84compare_op.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=92, stack=('$x178.5',), blockstack=(), npush=0), Edge(pc=104, stack=('$x178.5',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=54 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1142)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=56, inst=STORE_FAST(arg=3, lineno=1142)
DEBUG:numba.core.byteflow:stack ['$const54.0.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi92.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=92 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$phi92.0']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=COMPARE_OP(arg=1, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$phi92.0', '$threshold92.1']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$94compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi104.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=104 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=104, inst=POP_TOP(arg=None, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$phi104.0']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=JUMP_FORWARD(arg=2, lineno=1145)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=102 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=102, inst=JUMP_FORWARD(arg=2, lineno=1145)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=108, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=112 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=1148)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1148)
DEBUG:numba.core.byteflow:stack ['$zero_pos112.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=200, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=108 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=1146)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=STORE_FAST(arg=4, lineno=1146)
DEBUG:numba.core.byteflow:stack ['$const108.0.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=116 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_GLOBAL(arg=1, lineno=1149)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_ATTR(arg=1, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$116load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_FAST(arg=3, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$128load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=PRECALL(arg=1, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=CALL(arg=1, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_GLOBAL(arg=1, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$144call.4']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_ATTR(arg=1, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$144call.4', '$null$154.6', '$154load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=LOAD_FAST(arg=4, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$144call.4', '$null$154.6', '$166load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=178, inst=PRECALL(arg=1, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
DEBUG:numba.core.byteflow:dispatch pc=182, inst=CALL(arg=1, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=COMPARE_OP(arg=3, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$144call.4', '$182call.9']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=RETURN_VALUE(arg=None, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$192compare_op.10']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=200 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=200, inst=LOAD_GLOBAL(arg=1, lineno=1151)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=212, inst=LOAD_ATTR(arg=2, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$null$200.1', '$200load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=LOAD_FAST(arg=3, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$null$200.1', '$212load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=PRECALL(arg=1, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=CALL(arg=1, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=LOAD_GLOBAL(arg=1, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$228call.4']
DEBUG:numba.core.byteflow:dispatch pc=250, inst=LOAD_ATTR(arg=2, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$228call.4', '$null$238.6', '$238load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=LOAD_FAST(arg=4, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$228call.4', '$null$238.6', '$250load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=PRECALL(arg=1, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
DEBUG:numba.core.byteflow:dispatch pc=266, inst=CALL(arg=1, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=COMPARE_OP(arg=3, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$228call.4', '$266call.9']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=RETURN_VALUE(arg=None, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$276compare_op.10']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=112 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=1): {'$phi38.0'},
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): {'$phi92.0'},
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=1): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi104.0': State(pc_initial=58 nstack_initial=0),
 '$phi38.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi92.0': State(pc_initial=58 nstack_initial=0)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
 '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi38.0': '$x024.5'},
             State(pc_initial=58 nstack_initial=0): {'$phi92.0': '$x178.5'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'value': '$8binary_subscr.2'}), (20, {'res': '$threshold20.3'}), (22, {'value': '$threshold20.3', 'res': '$22unary_negative.4'}), (24, {'res': '$x024.5'}), (30, {'lhs': '$22unary_negative.4', 'rhs': '$x024.5', 'res': '$30compare_op.6'}), (32, {}), (34, {}), (36, {'pred': '$30compare_op.6'})), outgoing_phis={'$phi38.0': '$x024.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: ('$x024.5',), 50: ('$x024.5',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=38 nstack_initial=1):
AdaptBlockInfo(insts=((38, {'res': '$threshold38.1'}), (40, {'lhs': '$phi38.0', 'rhs': '$threshold38.1', 'res': '$40compare_op.2'}), (42, {}), (44, {}), (46, {'pred': '$40compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 58: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((52, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0.1'}), (56, {'value': '$const54.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$x58.0'}), (60, {'res': '$const60.1.2'}), (62, {'index': '$const60.1.2', 'target': '$x58.0', 'res': '$62binary_subscr.2'}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {'value': '$62binary_subscr.2'}), (74, {'res': '$threshold74.3'}), (76, {'value': '$threshold74.3', 'res': '$76unary_negative.4'}), (78, {'res': '$x178.5'}), (84, {'lhs': '$76unary_negative.4', 'rhs': '$x178.5', 'res': '$84compare_op.6'}), (86, {}), (88, {}), (90, {'pred': '$84compare_op.6'})), outgoing_phis={'$phi92.0': '$x178.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ('$x178.5',), 104: ('$x178.5',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((92, {'res': '$threshold92.1'}), (94, {'lhs': '$phi92.0', 'rhs': '$threshold92.1', 'res': '$94compare_op.2'}), (96, {}), (98, {}), (100, {'pred': '$94compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 112: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=104 nstack_initial=1):
AdaptBlockInfo(insts=((106, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$const108.0.1'}), (110, {'value': '$const108.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$zero_pos112.0'}), (114, {'pred': '$zero_pos112.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 200: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 0, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'item': '$116load_global.0', 'res': '$128load_attr.2'}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {'res': '$x0138.3'}), (140, {}), (142, {}), (144, {'func': '$128load_attr.2', 'args': ['$x0138.3'], 'kw_names': None, 'res': '$144call.4'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'idx': 0, 'res': '$154load_global.5'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {}), (166, {'item': '$154load_global.5', 'res': '$166load_attr.7'}), (168, {}), (170, {}), (172, {}), (174, {}), (176, {'res': '$x1176.8'}), (178, {}), (180, {}), (182, {'func': '$166load_attr.7', 'args': ['$x1176.8'], 'kw_names': None, 'res': '$182call.9'}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'lhs': '$144call.4', 'rhs': '$182call.9', 'res': '$192compare_op.10'}), (194, {}), (196, {}), (198, {'retval': '$192compare_op.10', 'castval': '$198return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=200 nstack_initial=0):
AdaptBlockInfo(insts=((200, {'idx': 0, 'res': '$200load_global.0'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {'item': '$200load_global.0', 'res': '$212load_attr.2'}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {'res': '$x0222.3'}), (224, {}), (226, {}), (228, {'func': '$212load_attr.2', 'args': ['$x0222.3'], 'kw_names': None, 'res': '$228call.4'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'idx': 0, 'res': '$238load_global.5'}), (240, {}), (242, {}), (244, {}), (246, {}), (248, {}), (250, {'item': '$238load_global.5', 'res': '$250load_attr.7'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'res': '$x1260.8'}), (262, {}), (264, {}), (266, {'func': '$250load_attr.7', 'args': ['$x1260.8'], 'kw_names': None, 'res': '$266call.9'}), (268, {}), (270, {}), (272, {}), (274, {}), (276, {'lhs': '$228call.4', 'rhs': '$266call.9', 'res': '$276compare_op.10'}), (278, {}), (280, {}), (282, {'retval': '$276compare_op.10', 'castval': '$282return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$22unary_negative.4', 'threshold']
    $30compare_op.6 = $22unary_negative.4 <= x0 ['$22unary_negative.4', '$30compare_op.6', 'x0']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.6', '$36pred', 'bool36']
    $phi38.0 = x0                            ['$phi38.0', 'x0']
    branch $36pred, 38, 50                   ['$36pred']
label 38:
    $40compare_op.2 = $phi38.0 <= threshold  ['$40compare_op.2', '$phi38.0', 'threshold']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.2', '$46pred', 'bool46']
    branch $46pred, 48, 58                   ['$46pred']
label 48:
    jump 54                                  []
label 50:
    jump 58                                  []
label 54:
    x0 = const(int, 0)                       ['x0']
    jump 58                                  []
label 58:
    $const60.1.2 = const(int, -1)            ['$const60.1.2']
    x1 = getitem(value=x, index=$const60.1.2, fn=<built-in function getitem>) ['$const60.1.2', 'x', 'x1']
    $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$76unary_negative.4', 'threshold']
    $84compare_op.6 = $76unary_negative.4 <= x1 ['$76unary_negative.4', '$84compare_op.6', 'x1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$84compare_op.6', '$90pred', 'bool90']
    $phi92.0 = x1                            ['$phi92.0', 'x1']
    branch $90pred, 92, 104                  ['$90pred']
label 92:
    $94compare_op.2 = $phi92.0 <= threshold  ['$94compare_op.2', '$phi92.0', 'threshold']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$94compare_op.2', 'bool100']
    branch $100pred, 102, 112                ['$100pred']
label 102:
    jump 108                                 []
label 104:
    jump 112                                 []
label 108:
    x1 = const(int, 0)                       ['x1']
    jump 112                                 []
label 112:
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$114pred', 'bool114', 'zero_pos']
    branch $114pred, 116, 200                ['$114pred']
label 116:
    $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$116load_global.0']
    $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit) ['$116load_global.0', '$128load_attr.2']
    $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_attr.2', '$144call.4', 'x0']
    $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$154load_global.5']
    $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit) ['$154load_global.5', '$166load_attr.7']
    $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.7', '$182call.9', 'x1']
    $192compare_op.10 = $144call.4 != $182call.9 ['$144call.4', '$182call.9', '$192compare_op.10']
    $198return_value.11 = cast(value=$192compare_op.10) ['$192compare_op.10', '$198return_value.11']
    return $198return_value.11               ['$198return_value.11']
label 200:
    $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$200load_global.0']
    $212load_attr.2 = getattr(value=$200load_global.0, attr=sign) ['$200load_global.0', '$212load_attr.2']
    $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$212load_attr.2', '$228call.4', 'x0']
    $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$238load_global.5']
    $250load_attr.7 = getattr(value=$238load_global.5, attr=sign) ['$238load_global.5', '$250load_attr.7']
    $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$250load_attr.7', '$266call.9', 'x1']
    $276compare_op.10 = $228call.4 != $266call.9 ['$228call.4', '$266call.9', '$276compare_op.10']
    $282return_value.11 = cast(value=$276compare_op.10) ['$276compare_op.10', '$282return_value.11']
    return $282return_value.11               ['$282return_value.11']

DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1154)
           2	RESUME(arg=0, lineno=1154)
           4	LOAD_GLOBAL(arg=1, lineno=1170)
          16	LOAD_FAST(arg=0, lineno=1170)
          18	LOAD_FAST(arg=1, lineno=1170)
          20	LOAD_FAST(arg=2, lineno=1170)
          22	PRECALL(arg=3, lineno=1170)
          26	CALL(arg=3, lineno=1170)
          36	LOAD_FAST(arg=3, lineno=1170)
          38	LOAD_CONST(arg=1, lineno=1170)
          40	LOAD_CONST(arg=1, lineno=1170)
          42	BUILD_SLICE(arg=2, lineno=1170)
          44	STORE_SUBSCR(arg=None, lineno=1170)
          48	LOAD_CONST(arg=1, lineno=1170)
          50	RETURN_VALUE(arg=None, lineno=1170)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1154)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1154)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1170)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=PRECALL(arg=3, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3', '$zero_pos20.4']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL(arg=3, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3', '$zero_pos20.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=3, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$26call.5']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$26call.5', '$y36.6']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$26call.5', '$y36.6', '$const38.7.1']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BUILD_SLICE(arg=2, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$26call.5', '$y36.6', '$const38.7.1', '$const40.8.1']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=STORE_SUBSCR(arg=None, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$26call.5', '$y36.6', '$42build_slice.10']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1170)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=RETURN_VALUE(arg=None, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$const48.11.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$threshold18.3'}), (20, {'res': '$zero_pos20.4'}), (22, {}), (24, {}), (26, {'func': '$4load_global.0', 'args': ['$x16.2', '$threshold18.3', '$zero_pos20.4'], 'kw_names': None, 'res': '$26call.5'}), (28, {}), (30, {}), (32, {}), (34, {}), (36, {'res': '$y36.6'}), (38, {'res': '$const38.7.1'}), (40, {'res': '$const40.8.1'}), (42, {'start': '$const38.7.1', 'stop': '$const40.8.1', 'step': None, 'res': '$42build_slice.10', 'slicevar': '$42build_slice.9'}), (44, {'target': '$y36.6', 'index': '$42build_slice.10', 'value': '$26call.5'}), (46, {}), (48, {'res': '$const48.11.1'}), (50, {'retval': '$const48.11.1', 'castval': '$50return_value.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x0000019A1541F1D0>) ['$4load_global.0']
    $26call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$26call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const38.7.1 = const(NoneType, None)     ['$const38.7.1']
    $const40.8.1 = const(NoneType, None)     ['$const40.8.1']
    $42build_slice.9 = global(slice: <class 'slice'>) ['$42build_slice.9']
    $42build_slice.10 = call $42build_slice.9($const38.7.1, $const40.8.1, func=$42build_slice.9, args=(Var($const38.7.1, audio.py:1170), Var($const40.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$42build_slice.10', '$42build_slice.9', '$const38.7.1', '$const40.8.1']
    y[$42build_slice.10] = $26call.5         ['$26call.5', '$42build_slice.10', 'y']
    $const48.11.1 = const(NoneType, None)    ['$const48.11.1']
    $50return_value.12 = cast(value=$const48.11.1) ['$50return_value.12', '$const48.11.1']
    return $50return_value.12                ['$50return_value.12']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15E9C090>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: threshold = arg(1, name=threshold)
DEBUG:numba.core.ssa:on stmt: zero_pos = arg(2, name=zero_pos)
DEBUG:numba.core.ssa:on stmt: y = arg(3, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x0000019A1541F1D0>)
DEBUG:numba.core.ssa:on stmt: $26call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const38.7.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const40.8.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $42build_slice.9 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $42build_slice.10 = call $42build_slice.9($const38.7.1, $const40.8.1, func=$42build_slice.9, args=(Var($const38.7.1, audio.py:1170), Var($const40.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: y[slice(None, None, None)] = $26call.5
DEBUG:numba.core.ssa:on stmt: $const48.11.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $50return_value.12 = cast(value=$const48.11.1)
DEBUG:numba.core.ssa:on stmt: return $50return_value.12
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$26call.5': [(<numba.core.ir.Assign object at 0x0000019A15E99D50>,
                            0)],
             '$42build_slice.10': [(<numba.core.ir.Assign object at 0x0000019A15E9A690>,
                                    0)],
             '$42build_slice.9': [(<numba.core.ir.Assign object at 0x0000019A15E9A510>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A15E99410>,
                                  0)],
             '$50return_value.12': [(<numba.core.ir.Assign object at 0x0000019A15E9AB90>,
                                     0)],
             '$const38.7.1': [(<numba.core.ir.Assign object at 0x0000019A15E9A150>,
                               0)],
             '$const40.8.1': [(<numba.core.ir.Assign object at 0x0000019A15E9A310>,
                               0)],
             '$const48.11.1': [(<numba.core.ir.Assign object at 0x0000019A15E9A950>,
                                0)],
             'threshold': [(<numba.core.ir.Assign object at 0x0000019A15E98F50>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A15E98E90>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000019A15E99150>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x0000019A15E99050>,
                           0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A15E9C090>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=3, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=3, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=4, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=4, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=4, lineno=5)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=3, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=2, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=5, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=6, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=4, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=3, lineno=2)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$18load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=CALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=STORE_FAST(arg=4, lineno=3)
DEBUG:numba.core.byteflow:stack ['$82call.8']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=4, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0', '$const100.12.3']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$102build_slice.14']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=4, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.2']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.2', '$const114.18.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$116build_slice.20']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$154call.27']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_FAST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30.2']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.2']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.2']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$218call.38']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi230.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=230 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi230.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=240 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=240, inst=LOAD_FAST(arg=4, lineno=8)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:stack ['$out0240.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=232 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=232, inst=STORE_FAST(arg=5, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=STORE_FAST(arg=6, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$const234.2.2']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9.2'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11.0'}), (100, {'res': '$const100.12.3'}), (102, {'start': '$const98.11.0', 'stop': '$const100.12.3', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9.2'}), (106, {}), (108, {'res': '$const108.15.2'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17.2'}), (114, {'res': '$const114.18.0'}), (116, {'start': '$const112.17.2', 'stop': '$const114.18.0', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15.2'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25.2'}), (148, {'res': '$const148.26.4'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25.2', '$const148.26.4'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30.2'}), (170, {'index': '$const168.30.2', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34.2'}), (194, {'res': '$const194.35.2'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34.2', '$const194.35.2'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2.2'}), (236, {'value': '$const234.2.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9.2 = const(int, 0)             ['$const94.9.2']
    $const98.11.0 = const(NoneType, None)    ['$const98.11.0']
    $const100.12.3 = const(int, 1)           ['$const100.12.3']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11.0, $const100.12.3, func=$102build_slice.13, args=(Var($const98.11.0, <string>:4), Var($const100.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12.3', '$const98.11.0']
    out0[$102build_slice.14] = $const94.9.2  ['$102build_slice.14', '$const94.9.2', 'out0']
    $const108.15.2 = const(int, 0)           ['$const108.15.2']
    $const112.17.2 = const(int, 0)           ['$const112.17.2']
    $const114.18.0 = const(NoneType, None)   ['$const114.18.0']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17.2, $const114.18.0, func=$116build_slice.19, args=(Var($const112.17.2, <string>:5), Var($const114.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17.2', '$const114.18.0']
    out0[$116build_slice.20] = $const108.15.2 ['$116build_slice.20', '$const108.15.2', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25.2 = const(int, 0)           ['$const146.25.2']
    $const148.26.4 = const(int, -1)          ['$const148.26.4']
    $154call.27 = call $134load_global.23($const146.25.2, $const148.26.4, func=$134load_global.23, args=[Var($const146.25.2, <string>:6), Var($const148.26.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25.2', '$const148.26.4']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30.2 = const(int, 0)           ['$const168.30.2']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30.2, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30.2', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34.2 = const(int, 0)           ['$const192.34.2']
    $const194.35.2 = const(int, 0)           ['$const194.35.2']
    $200call.36 = call $180load_global.32($const192.34.2, $const194.35.2, func=$180load_global.32, args=[Var($const192.34.2, <string>:6), Var($const194.35.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34.2', '$const194.35.2']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15FB6350>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: threshold = arg(1, name=threshold)
DEBUG:numba.core.ssa:on stmt: zero_pos = arg(2, name=zero_pos)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.2.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.2.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.2.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block analysis pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15FB6350>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 442
DEBUG:numba.core.ssa:==== SSA block analysis pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15FB6350>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block analysis pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15FB6350>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15FB6350>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi38.0 = x0
DEBUG:numba.core.ssa:on stmt: branch $36pred, 241, 291
DEBUG:numba.core.ssa:==== SSA block analysis pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15FB6350>
DEBUG:numba.core.ssa:on stmt: $40compare_op.2 = x0 <= threshold
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 279, 295
DEBUG:numba.core.ssa:==== SSA block analysis pass on 279
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15FB6350>
DEBUG:numba.core.ssa:on stmt: jump 289
DEBUG:numba.core.ssa:==== SSA block analysis pass on 291
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15FB6350>
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block analysis pass on 289
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15FB6350>
DEBUG:numba.core.ssa:on stmt: x0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block analysis pass on 295
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15FB6350>
DEBUG:numba.core.ssa:on stmt: $const60.1.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const60.1.2 + index00
DEBUG:numba.core.ssa:on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
DEBUG:numba.core.ssa:on stmt: bool90 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi92.0 = x1
DEBUG:numba.core.ssa:on stmt: branch $90pred, 299, 345
DEBUG:numba.core.ssa:==== SSA block analysis pass on 299
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15FB6350>
DEBUG:numba.core.ssa:on stmt: $94compare_op.2 = x1 <= threshold
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 333, 349
DEBUG:numba.core.ssa:==== SSA block analysis pass on 333
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15FB6350>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block analysis pass on 345
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15FB6350>
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block analysis pass on 343
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15FB6350>
DEBUG:numba.core.ssa:on stmt: x1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block analysis pass on 349
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15FB6350>
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 353, 357
DEBUG:numba.core.ssa:==== SSA block analysis pass on 353
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15FB6350>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $192compare_op.10 = $144call.4 != $182call.9
DEBUG:numba.core.ssa:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $198return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block analysis pass on 357
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15FB6350>
DEBUG:numba.core.ssa:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
DEBUG:numba.core.ssa:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
DEBUG:numba.core.ssa:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $276compare_op.10 = $228call.4 != $266call.9
DEBUG:numba.core.ssa:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $282return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block analysis pass on 441
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15FB6350>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x0000019A15F609D0>,
                           299)],
             '$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x0000019A15FB14D0>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x0000019A15FB1650>,
                                       0)],
             '$114pred': [(<numba.core.ir.Assign object at 0x0000019A15F71910>,
                           349)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x0000019A15FB1FD0>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x0000019A15FB2150>,
                                       0)],
             '$116load_global.0': [(<numba.core.ir.Assign object at 0x0000019A15EAD6D0>,
                                    353)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x0000019A15FB2390>,
                                       0)],
             '$128load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A15E98310>,
                                  353)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x0000019A15FB25D0>,
                                       0)],
             '$144call.4': [(<numba.core.ir.Assign object at 0x0000019A15F774D0>,
                             353)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x0000019A15FB2C50>,
                                0)],
             '$154load_global.5': [(<numba.core.ir.Assign object at 0x0000019A15F7C5D0>,
                                    353)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x0000019A15FB2F50>,
                                          0)],
             '$166load_attr.7': [(<numba.core.ir.Assign object at 0x0000019A15F7D810>,
                                  353)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x0000019A15FB34D0>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x0000019A15FB3750>,
                                       0)],
             '$182call.9': [(<numba.core.ir.Assign object at 0x0000019A15F7E7D0>,
                             353)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x0000019A15FABBD0>,
                                     0)],
             '$192compare_op.10': [(<numba.core.ir.Assign object at 0x0000019A15F80B90>,
                                    353)],
             '$198return_value.11': [(<numba.core.ir.Assign object at 0x0000019A15F81F10>,
                                      353)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x0000019A15FB3DD0>,
                                0)],
             '$200load_global.0': [(<numba.core.ir.Assign object at 0x0000019A15F89710>,
                                    357)],
             '$212load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A15F89D10>,
                                  357)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x0000019A15FB4350>,
                                0)],
             '$228call.4': [(<numba.core.ir.Assign object at 0x0000019A15F8BA10>,
                             357)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x0000019A15FB4610>,
                                    0)],
             '$22unary_negative.4': [(<numba.core.ir.Assign object at 0x0000019A15F1EB10>,
                                      240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x0000019A15FB4710>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x0000019A15FB4890>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x0000019A15FB4A10>,
                                   230)],
             '$238load_global.5': [(<numba.core.ir.Assign object at 0x0000019A15F90B10>,
                                    357)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x0000019A15FB5610>,
                                       442)],
             '$250load_attr.7': [(<numba.core.ir.Assign object at 0x0000019A15F91D50>,
                                  357)],
             '$266call.9': [(<numba.core.ir.Assign object at 0x0000019A15F92D10>,
                             357)],
             '$276compare_op.10': [(<numba.core.ir.Assign object at 0x0000019A15F990D0>,
                                    357)],
             '$282return_value.11': [(<numba.core.ir.Assign object at 0x0000019A15F9A450>,
                                      357)],
             '$30compare_op.6': [(<numba.core.ir.Assign object at 0x0000019A15F24ED0>,
                                  240)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x0000019A15FABED0>,
                                     0)],
             '$36pred': [(<numba.core.ir.Assign object at 0x0000019A15F274D0>,
                          240)],
             '$40compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A15F2BF50>,
                                  241)],
             '$46pred': [(<numba.core.ir.Assign object at 0x0000019A15F32850>,
                          241)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x0000019A15FB03D0>,
                                     0)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x0000019A15FB0650>,
                                   0)],
             '$76unary_negative.4': [(<numba.core.ir.Assign object at 0x0000019A15F48F50>,
                                      295)],
             '$84compare_op.6': [(<numba.core.ir.Assign object at 0x0000019A15F4A010>,
                                  295)],
             '$90pred': [(<numba.core.ir.Assign object at 0x0000019A15F51590>,
                          295)],
             '$94compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A15F560D0>,
                                  299)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x0000019A15FB40D0>,
                                     0)],
             '$const100.12.3.1': [(<numba.core.ir.Assign object at 0x0000019A15FB12D0>,
                                   0)],
             '$const108.15.2.1': [(<numba.core.ir.Assign object at 0x0000019A15FB1910>,
                                   0)],
             '$const112.17.2.1': [(<numba.core.ir.Assign object at 0x0000019A15FB1C10>,
                                   0)],
             '$const114.18.0.1': [(<numba.core.ir.Assign object at 0x0000019A15FB1DD0>,
                                   0)],
             '$const146.25.2.1': [(<numba.core.ir.Assign object at 0x0000019A15FB27D0>,
                                   0)],
             '$const148.26.4.1': [(<numba.core.ir.Assign object at 0x0000019A15FB2990>,
                                   0)],
             '$const168.30.2.1': [(<numba.core.ir.Assign object at 0x0000019A15FB32D0>,
                                   0)],
             '$const192.34.2.1': [(<numba.core.ir.Assign object at 0x0000019A15FB3950>,
                                   0)],
             '$const194.35.2.1': [(<numba.core.ir.Assign object at 0x0000019A15FB3B10>,
                                   0)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x0000019A15F1C990>,
                              240)],
             '$const60.1.2': [(<numba.core.ir.Assign object at 0x0000019A15F43E50>,
                               295)],
             '$const94.9.2.1': [(<numba.core.ir.Assign object at 0x0000019A15FB0DD0>,
                                 0)],
             '$const98.11.0.1': [(<numba.core.ir.Assign object at 0x0000019A15FB1110>,
                                  0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x0000019A15FABA10>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x0000019A15FB4AD0>,
                              230)],
             '$phi38.0': [(<numba.core.ir.Assign object at 0x0000019A15F1FB10>,
                           240)],
             '$phi92.0': [(<numba.core.ir.Assign object at 0x0000019A15F52950>,
                           295)],
             'bool100': [(<numba.core.ir.Assign object at 0x0000019A15F56390>,
                          299)],
             'bool114': [(<numba.core.ir.Assign object at 0x0000019A15F71290>,
                          349)],
             'bool36': [(<numba.core.ir.Assign object at 0x0000019A15EACDD0>,
                         240)],
             'bool46': [(<numba.core.ir.Assign object at 0x0000019A15F30250>,
                         241)],
             'bool90': [(<numba.core.ir.Assign object at 0x0000019A15F50210>,
                         295)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x0000019A15FAB750>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x0000019A15FB4D90>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x0000019A15FB0A10>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x0000019A15EACA10>,
                                240),
                               (<numba.core.ir.Assign object at 0x0000019A15F1EA90>,
                                295)],
             'threshold': [(<numba.core.ir.Assign object at 0x0000019A15EC6950>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A15EAA710>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x0000019A15EAE690>, 240),
                    (<numba.core.ir.Assign object at 0x0000019A15F409D0>, 289)],
             'x1': [(<numba.core.ir.Assign object at 0x0000019A15FA1450>, 295),
                    (<numba.core.ir.Assign object at 0x0000019A15F6AA90>, 343)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x0000019A15FAA790>,
                           0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A15EC7990>
DEBUG:numba.core.ssa:Fix SSA violator on var stencil_index
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15EC7610>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: threshold = arg(1, name=threshold)
DEBUG:numba.core.ssa:on stmt: zero_pos = arg(2, name=zero_pos)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.2.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.2.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.2.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15EC7610>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15EC7610>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15EC7610>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15EC7610>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:first assign: stencil_index
DEBUG:numba.core.ssa:replaced with: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi38.0 = x0
DEBUG:numba.core.ssa:on stmt: branch $36pred, 241, 291
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15EC7610>
DEBUG:numba.core.ssa:on stmt: $40compare_op.2 = x0 <= threshold
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 279, 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 279
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15EC7610>
DEBUG:numba.core.ssa:on stmt: jump 289
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 291
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15EC7610>
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 289
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15EC7610>
DEBUG:numba.core.ssa:on stmt: x0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 295
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15EC7610>
DEBUG:numba.core.ssa:on stmt: $const60.1.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const60.1.2 + index00
DEBUG:numba.core.ssa:replaced with: stencil_index.1 = $const60.1.2 + index00
DEBUG:numba.core.ssa:on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
DEBUG:numba.core.ssa:on stmt: bool90 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi92.0 = x1
DEBUG:numba.core.ssa:on stmt: branch $90pred, 299, 345
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 299
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15EC7610>
DEBUG:numba.core.ssa:on stmt: $94compare_op.2 = x1 <= threshold
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 333, 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 333
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15EC7610>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 345
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15EC7610>
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 343
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15EC7610>
DEBUG:numba.core.ssa:on stmt: x1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 349
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15EC7610>
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 353, 357
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 353
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15EC7610>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $192compare_op.10 = $144call.4 != $182call.9
DEBUG:numba.core.ssa:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $198return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 357
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15EC7610>
DEBUG:numba.core.ssa:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
DEBUG:numba.core.ssa:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
DEBUG:numba.core.ssa:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $276compare_op.10 = $228call.4 != $266call.9
DEBUG:numba.core.ssa:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $282return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 441
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15EC7610>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {240: [<numba.core.ir.Assign object at 0x0000019A15E8A950>],
             295: [<numba.core.ir.Assign object at 0x0000019A15FD6650>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FD76D0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: threshold = arg(1, name=threshold)
DEBUG:numba.core.ssa:on stmt: zero_pos = arg(2, name=zero_pos)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.2.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.2.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.2.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FD76D0>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FD76D0>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FD76D0>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FD76D0>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi38.0 = x0
DEBUG:numba.core.ssa:on stmt: branch $36pred, 241, 291
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FD76D0>
DEBUG:numba.core.ssa:on stmt: $40compare_op.2 = x0 <= threshold
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 279, 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 279
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FD76D0>
DEBUG:numba.core.ssa:on stmt: jump 289
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 291
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FD76D0>
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 289
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FD76D0>
DEBUG:numba.core.ssa:on stmt: x0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 295
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FD76D0>
DEBUG:numba.core.ssa:on stmt: $const60.1.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const60.1.2 + index00
DEBUG:numba.core.ssa:on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
DEBUG:numba.core.ssa:on stmt: bool90 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi92.0 = x1
DEBUG:numba.core.ssa:on stmt: branch $90pred, 299, 345
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 299
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FD76D0>
DEBUG:numba.core.ssa:on stmt: $94compare_op.2 = x1 <= threshold
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 333, 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 333
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FD76D0>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 345
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FD76D0>
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 343
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FD76D0>
DEBUG:numba.core.ssa:on stmt: x1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 349
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FD76D0>
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 353, 357
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 353
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FD76D0>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $192compare_op.10 = $144call.4 != $182call.9
DEBUG:numba.core.ssa:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $198return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 357
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FD76D0>
DEBUG:numba.core.ssa:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
DEBUG:numba.core.ssa:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
DEBUG:numba.core.ssa:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $276compare_op.10 = $228call.4 != $266call.9
DEBUG:numba.core.ssa:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $282return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 441
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FD76D0>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:Fix SSA violator on var x0
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: threshold = arg(1, name=threshold)
DEBUG:numba.core.ssa:on stmt: zero_pos = arg(2, name=zero_pos)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.2.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.2.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.2.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:first assign: x0
DEBUG:numba.core.ssa:replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi38.0 = x0
DEBUG:numba.core.ssa:on stmt: branch $36pred, 241, 291
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: $40compare_op.2 = x0 <= threshold
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 279, 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 279
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: jump 289
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 291
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 289
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: x0 = const(int, 0)
DEBUG:numba.core.ssa:replaced with: x0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 295
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: $const60.1.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const60.1.2 + index00
DEBUG:numba.core.ssa:on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
DEBUG:numba.core.ssa:on stmt: bool90 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi92.0 = x1
DEBUG:numba.core.ssa:on stmt: branch $90pred, 299, 345
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 299
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: $94compare_op.2 = x1 <= threshold
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 333, 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 333
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 345
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 343
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: x1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 349
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 353, 357
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 353
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $192compare_op.10 = $144call.4 != $182call.9
DEBUG:numba.core.ssa:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $198return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 357
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
DEBUG:numba.core.ssa:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
DEBUG:numba.core.ssa:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $276compare_op.10 = $228call.4 != $266call.9
DEBUG:numba.core.ssa:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $282return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 441
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {240: [<numba.core.ir.Assign object at 0x0000019A15FD6750>],
             289: [<numba.core.ir.Assign object at 0x0000019A15FD5B50>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: threshold = arg(1, name=threshold)
DEBUG:numba.core.ssa:on stmt: zero_pos = arg(2, name=zero_pos)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.2.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.2.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.2.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
DEBUG:numba.core.ssa:find_def var='x0' stmt=$30compare_op.6 = $22unary_negative.4 <= x0
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi38.0 = x0
DEBUG:numba.core.ssa:find_def var='x0' stmt=$phi38.0 = x0
DEBUG:numba.core.ssa:on stmt: branch $36pred, 241, 291
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: $40compare_op.2 = x0 <= threshold
DEBUG:numba.core.ssa:find_def var='x0' stmt=$40compare_op.2 = x0 <= threshold
DEBUG:numba.core.ssa:find_def_from_top label 241
DEBUG:numba.core.ssa:idom 240 from label 241
DEBUG:numba.core.ssa:find_def_from_bottom label 240
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 279, 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 279
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: jump 289
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 291
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 289
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: x0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 295
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: $const60.1.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const60.1.2 + index00
DEBUG:numba.core.ssa:on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
DEBUG:numba.core.ssa:on stmt: bool90 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi92.0 = x1
DEBUG:numba.core.ssa:on stmt: branch $90pred, 299, 345
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 299
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: $94compare_op.2 = x1 <= threshold
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 333, 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 333
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 345
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 343
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: x1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 349
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 353, 357
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 353
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='x0' stmt=$144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 353
DEBUG:numba.core.ssa:idom 349 from label 353
DEBUG:numba.core.ssa:find_def_from_bottom label 349
DEBUG:numba.core.ssa:find_def_from_top label 349
DEBUG:numba.core.ssa:idom 295 from label 349
DEBUG:numba.core.ssa:find_def_from_bottom label 295
DEBUG:numba.core.ssa:find_def_from_top label 295
DEBUG:numba.core.ssa:insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 295
DEBUG:numba.core.ssa:find_def_from_bottom label 241
DEBUG:numba.core.ssa:find_def_from_top label 241
DEBUG:numba.core.ssa:idom 240 from label 241
DEBUG:numba.core.ssa:find_def_from_bottom label 240
DEBUG:numba.core.ssa:incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_bottom label 291
DEBUG:numba.core.ssa:find_def_from_top label 291
DEBUG:numba.core.ssa:idom 240 from label 291
DEBUG:numba.core.ssa:find_def_from_bottom label 240
DEBUG:numba.core.ssa:incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_bottom label 289
DEBUG:numba.core.ssa:incoming_def x0.1 = const(int, 0)
DEBUG:numba.core.ssa:replaced with: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $192compare_op.10 = $144call.4 != $182call.9
DEBUG:numba.core.ssa:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $198return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 357
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
DEBUG:numba.core.ssa:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='x0' stmt=$228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 357
DEBUG:numba.core.ssa:idom 349 from label 357
DEBUG:numba.core.ssa:find_def_from_bottom label 349
DEBUG:numba.core.ssa:find_def_from_top label 349
DEBUG:numba.core.ssa:idom 295 from label 349
DEBUG:numba.core.ssa:find_def_from_bottom label 295
DEBUG:numba.core.ssa:replaced with: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
DEBUG:numba.core.ssa:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $276compare_op.10 = $228call.4 != $266call.9
DEBUG:numba.core.ssa:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $282return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 441
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FA2E50>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:Fix SSA violator on var x1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FD5E10>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: threshold = arg(1, name=threshold)
DEBUG:numba.core.ssa:on stmt: zero_pos = arg(2, name=zero_pos)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.2.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.2.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.2.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FD5E10>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FD5E10>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FD5E10>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FD5E10>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi38.0 = x0
DEBUG:numba.core.ssa:on stmt: branch $36pred, 241, 291
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FD5E10>
DEBUG:numba.core.ssa:on stmt: $40compare_op.2 = x0 <= threshold
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 279, 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 279
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FD5E10>
DEBUG:numba.core.ssa:on stmt: jump 289
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 291
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FD5E10>
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 289
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FD5E10>
DEBUG:numba.core.ssa:on stmt: x0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 295
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FD5E10>
DEBUG:numba.core.ssa:on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0, audio.py:1140), Var(x0.1, audio.py:1142)], incoming_blocks=[241, 291, 289])
DEBUG:numba.core.ssa:on stmt: $const60.1.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const60.1.2 + index00
DEBUG:numba.core.ssa:on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:first assign: x1
DEBUG:numba.core.ssa:replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
DEBUG:numba.core.ssa:on stmt: bool90 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi92.0 = x1
DEBUG:numba.core.ssa:on stmt: branch $90pred, 299, 345
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 299
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FD5E10>
DEBUG:numba.core.ssa:on stmt: $94compare_op.2 = x1 <= threshold
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 333, 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 333
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FD5E10>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 345
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FD5E10>
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 343
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FD5E10>
DEBUG:numba.core.ssa:on stmt: x1 = const(int, 0)
DEBUG:numba.core.ssa:replaced with: x1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 349
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FD5E10>
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 353, 357
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 353
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FD5E10>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $192compare_op.10 = $144call.4 != $182call.9
DEBUG:numba.core.ssa:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $198return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 357
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FD5E10>
DEBUG:numba.core.ssa:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
DEBUG:numba.core.ssa:on stmt: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
DEBUG:numba.core.ssa:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $276compare_op.10 = $228call.4 != $266call.9
DEBUG:numba.core.ssa:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $282return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 441
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A15FD5E10>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {295: [<numba.core.ir.Assign object at 0x0000019A15FDE190>],
             343: [<numba.core.ir.Assign object at 0x0000019A15FDEA90>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FDEAD0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: threshold = arg(1, name=threshold)
DEBUG:numba.core.ssa:on stmt: zero_pos = arg(2, name=zero_pos)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.2.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.2.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.2.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FDEAD0>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FDEAD0>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FDEAD0>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FDEAD0>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi38.0 = x0
DEBUG:numba.core.ssa:on stmt: branch $36pred, 241, 291
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FDEAD0>
DEBUG:numba.core.ssa:on stmt: $40compare_op.2 = x0 <= threshold
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 279, 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 279
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FDEAD0>
DEBUG:numba.core.ssa:on stmt: jump 289
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 291
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FDEAD0>
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 289
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FDEAD0>
DEBUG:numba.core.ssa:on stmt: x0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 295
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FDEAD0>
DEBUG:numba.core.ssa:on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0, audio.py:1140), Var(x0.1, audio.py:1142)], incoming_blocks=[241, 291, 289])
DEBUG:numba.core.ssa:on stmt: $const60.1.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const60.1.2 + index00
DEBUG:numba.core.ssa:on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
DEBUG:numba.core.ssa:find_def var='x1' stmt=$84compare_op.6 = $76unary_negative.4 <= x1
DEBUG:numba.core.ssa:on stmt: bool90 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi92.0 = x1
DEBUG:numba.core.ssa:find_def var='x1' stmt=$phi92.0 = x1
DEBUG:numba.core.ssa:on stmt: branch $90pred, 299, 345
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 299
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FDEAD0>
DEBUG:numba.core.ssa:on stmt: $94compare_op.2 = x1 <= threshold
DEBUG:numba.core.ssa:find_def var='x1' stmt=$94compare_op.2 = x1 <= threshold
DEBUG:numba.core.ssa:find_def_from_top label 299
DEBUG:numba.core.ssa:idom 295 from label 299
DEBUG:numba.core.ssa:find_def_from_bottom label 295
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 333, 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 333
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FDEAD0>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 345
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FDEAD0>
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 343
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FDEAD0>
DEBUG:numba.core.ssa:on stmt: x1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 349
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FDEAD0>
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 353, 357
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 353
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FDEAD0>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='x1' stmt=$182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 353
DEBUG:numba.core.ssa:idom 349 from label 353
DEBUG:numba.core.ssa:find_def_from_bottom label 349
DEBUG:numba.core.ssa:find_def_from_top label 349
DEBUG:numba.core.ssa:insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 349
DEBUG:numba.core.ssa:find_def_from_bottom label 345
DEBUG:numba.core.ssa:find_def_from_top label 345
DEBUG:numba.core.ssa:idom 295 from label 345
DEBUG:numba.core.ssa:find_def_from_bottom label 295
DEBUG:numba.core.ssa:incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_bottom label 299
DEBUG:numba.core.ssa:find_def_from_top label 299
DEBUG:numba.core.ssa:idom 295 from label 299
DEBUG:numba.core.ssa:find_def_from_bottom label 295
DEBUG:numba.core.ssa:incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_bottom label 343
DEBUG:numba.core.ssa:incoming_def x1.1 = const(int, 0)
DEBUG:numba.core.ssa:replaced with: $182call.9 = call $166load_attr.7(x1.2, func=$166load_attr.7, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $192compare_op.10 = $144call.4 != $182call.9
DEBUG:numba.core.ssa:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $198return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 357
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FDEAD0>
DEBUG:numba.core.ssa:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
DEBUG:numba.core.ssa:on stmt: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
DEBUG:numba.core.ssa:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='x1' stmt=$266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 357
DEBUG:numba.core.ssa:idom 349 from label 357
DEBUG:numba.core.ssa:find_def_from_bottom label 349
DEBUG:numba.core.ssa:replaced with: $266call.9 = call $250load_attr.7(x1.2, func=$250load_attr.7, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $276compare_op.10 = $228call.4 != $266call.9
DEBUG:numba.core.ssa:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $282return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 441
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A15FDEAD0>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4454)
           2	COPY_FREE_VARS(arg=1, lineno=4454)
           4	RESUME(arg=0, lineno=4454)
           6	LOAD_GLOBAL(arg=1, lineno=4455)
          18	LOAD_FAST(arg=0, lineno=4455)
          20	LOAD_FAST(arg=1, lineno=4455)
          22	LOAD_DEREF(arg=2, lineno=4455)
          24	PRECALL(arg=3, lineno=4455)
          28	CALL(arg=3, lineno=4455)
          38	RETURN_VALUE(arg=None, lineno=4455)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4454)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=4454)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=RESUME(arg=0, lineno=4454)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_GLOBAL(arg=1, lineno=4455)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=4455)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=4455)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_global.0', '$shape18.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_DEREF(arg=2, lineno=4455)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_global.0', '$shape18.2', '$dtype20.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=PRECALL(arg=3, lineno=4455)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_global.0', '$shape18.2', '$dtype20.3', '$22load_deref.4']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL(arg=3, lineno=4455)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_global.0', '$shape18.2', '$dtype20.3', '$22load_deref.4']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=RETURN_VALUE(arg=None, lineno=4455)
DEBUG:numba.core.byteflow:stack ['$28call.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'idx': 0, 'res': '$6load_global.0'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$shape18.2'}), (20, {'res': '$dtype20.3'}), (22, {'res': '$22load_deref.4'}), (24, {}), (26, {}), (28, {'func': '$6load_global.0', 'args': ['$shape18.2', '$dtype20.3', '$22load_deref.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'retval': '$28call.5', 'castval': '$38return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $6load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$6load_global.0']
    $22load_deref.4 = freevar(retty: array(bool, 1d, C)) ['$22load_deref.4']
    $28call.5 = call $6load_global.0(shape, dtype, $22load_deref.4, func=$6load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($22load_deref.4, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_deref.4', '$28call.5', '$6load_global.0', 'dtype', 'shape']
    $38return_value.6 = cast(value=$28call.5) ['$28call.5', '$38return_value.6']
    return $38return_value.6                 ['$38return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15FE9790>
DEBUG:numba.core.ssa:on stmt: shape = arg(0, name=shape)
DEBUG:numba.core.ssa:on stmt: dtype = arg(1, name=dtype)
DEBUG:numba.core.ssa:on stmt: $6load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
DEBUG:numba.core.ssa:on stmt: $22load_deref.4 = freevar(retty: array(bool, 1d, C))
DEBUG:numba.core.ssa:on stmt: $28call.5 = call $6load_global.0(shape, dtype, $22load_deref.4, func=$6load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($22load_deref.4, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $38return_value.6 = cast(value=$28call.5)
DEBUG:numba.core.ssa:on stmt: return $38return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$22load_deref.4': [(<numba.core.ir.Assign object at 0x0000019A15EAA850>,
                                  0)],
             '$28call.5': [(<numba.core.ir.Assign object at 0x0000019A15FE9CD0>,
                            0)],
             '$38return_value.6': [(<numba.core.ir.Assign object at 0x0000019A15FE9910>,
                                    0)],
             '$6load_global.0': [(<numba.core.ir.Assign object at 0x0000019A15FEAA50>,
                                  0)],
             'dtype': [(<numba.core.ir.Assign object at 0x0000019A15FEAED0>,
                        0)],
             'shape': [(<numba.core.ir.Assign object at 0x0000019A15EC7C10>,
                        0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A15FE9790>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4330)
           2	RESUME(arg=0, lineno=4330)
           4	LOAD_FAST(arg=0, lineno=4333)
           6	LOAD_METHOD(arg=0, lineno=4333)
          28	LOAD_FAST(arg=1, lineno=4333)
          30	LOAD_FAST(arg=2, lineno=4333)
          32	PRECALL(arg=2, lineno=4333)
          36	CALL(arg=2, lineno=4333)
          46	RETURN_VALUE(arg=None, lineno=4333)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4330)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=4330)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4333)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=4333)
DEBUG:numba.core.byteflow:stack ['$arrtype4.0']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=4333)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=2, lineno=4333)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2', '$size28.3']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=PRECALL(arg=2, lineno=4333)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2', '$size28.3', '$align30.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=CALL(arg=2, lineno=4333)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2', '$size28.3', '$align30.4']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4333)
DEBUG:numba.core.byteflow:stack ['$36call.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$arrtype4.0'}), (6, {'item': '$arrtype4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$size28.3'}), (30, {'res': '$align30.4'}), (32, {}), (34, {}), (36, {'func': '$6load_method.2', 'args': ['$size28.3', '$align30.4'], 'kw_names': None, 'res': '$36call.5'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'retval': '$36call.5', 'castval': '$46return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $6load_method.2 = getattr(value=arrtype, attr=_allocate) ['$6load_method.2', 'arrtype']
    $36call.5 = call $6load_method.2(size, align, func=$6load_method.2, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None) ['$36call.5', '$6load_method.2', 'align', 'size']
    $46return_value.6 = cast(value=$36call.5) ['$36call.5', '$46return_value.6']
    return $46return_value.6                 ['$46return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160BD050>
DEBUG:numba.core.ssa:on stmt: arrtype = arg(0, name=arrtype)
DEBUG:numba.core.ssa:on stmt: size = arg(1, name=size)
DEBUG:numba.core.ssa:on stmt: align = arg(2, name=align)
DEBUG:numba.core.ssa:on stmt: $6load_method.2 = getattr(value=arrtype, attr=_allocate)
DEBUG:numba.core.ssa:on stmt: $36call.5 = call $6load_method.2(size, align, func=$6load_method.2, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $46return_value.6 = cast(value=$36call.5)
DEBUG:numba.core.ssa:on stmt: return $46return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$36call.5': [(<numba.core.ir.Assign object at 0x0000019A160187D0>,
                            0)],
             '$46return_value.6': [(<numba.core.ir.Assign object at 0x0000019A16018A50>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x0000019A1600FF50>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x0000019A1600FA90>,
                        0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x0000019A1600F7D0>,
                          0)],
             'size': [(<numba.core.ir.Assign object at 0x0000019A1600F990>,
                       0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A15E884D0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4325)
           2	RESUME(arg=0, lineno=4325)
           4	LOAD_GLOBAL(arg=1, lineno=4326)
          16	LOAD_FAST(arg=1, lineno=4326)
          18	LOAD_FAST(arg=2, lineno=4326)
          20	PRECALL(arg=2, lineno=4326)
          24	CALL(arg=2, lineno=4326)
          34	RETURN_VALUE(arg=None, lineno=4326)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4325)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=4325)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=4326)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=4326)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=4326)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$allocsize16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=PRECALL(arg=2, lineno=4326)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$allocsize16.2', '$align18.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL(arg=2, lineno=4326)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$allocsize16.2', '$align18.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=RETURN_VALUE(arg=None, lineno=4326)
DEBUG:numba.core.byteflow:stack ['$24call.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$allocsize16.2'}), (18, {'res': '$align18.3'}), (20, {}), (22, {}), (24, {'func': '$4load_global.0', 'args': ['$allocsize16.2', '$align18.3'], 'kw_names': None, 'res': '$24call.4'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'retval': '$24call.4', 'castval': '$34return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $4load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$4load_global.0']
    $24call.4 = call $4load_global.0(allocsize, align, func=$4load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None) ['$24call.4', '$4load_global.0', 'align', 'allocsize']
    $34return_value.5 = cast(value=$24call.4) ['$24call.4', '$34return_value.5']
    return $34return_value.5                 ['$34return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160D8E50>
DEBUG:numba.core.ssa:on stmt: cls = arg(0, name=cls)
DEBUG:numba.core.ssa:on stmt: allocsize = arg(1, name=allocsize)
DEBUG:numba.core.ssa:on stmt: align = arg(2, name=align)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
DEBUG:numba.core.ssa:on stmt: $24call.4 = call $4load_global.0(allocsize, align, func=$4load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34return_value.5 = cast(value=$24call.4)
DEBUG:numba.core.ssa:on stmt: return $34return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$24call.4': [(<numba.core.ir.Assign object at 0x0000019A160D8110>,
                            0)],
             '$34return_value.5': [(<numba.core.ir.Assign object at 0x0000019A160D8310>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A160BFA10>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x0000019A160BF7D0>,
                        0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x0000019A160BF690>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x0000019A160BF550>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A15E9BD10>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=200)
           2	COPY_FREE_VARS(arg=1, lineno=200)
           4	RESUME(arg=0, lineno=200)
           6	LOAD_FAST(arg=0, lineno=201)
           8	LOAD_DEREF(arg=2, lineno=201)
          10	BINARY_SUBSCR(arg=None, lineno=201)
          20	RETURN_VALUE(arg=None, lineno=201)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=200)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=200)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=RESUME(arg=0, lineno=200)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=201)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_DEREF(arg=2, lineno=201)
DEBUG:numba.core.byteflow:stack ['$tup6.0']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=BINARY_SUBSCR(arg=None, lineno=201)
DEBUG:numba.core.byteflow:stack ['$tup6.0', '$8load_deref.1']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=201)
DEBUG:numba.core.byteflow:stack ['$10binary_subscr.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$tup6.0'}), (8, {'res': '$8load_deref.1'}), (10, {'index': '$8load_deref.1', 'target': '$tup6.0', 'res': '$10binary_subscr.2'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {'retval': '$10binary_subscr.2', 'castval': '$20return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    tup = arg(0, name=tup)                   ['tup']
    idx = arg(1, name=idx)                   ['idx']
    $8load_deref.1 = freevar(idx_val: 0)     ['$8load_deref.1']
    $10binary_subscr.2 = getitem(value=tup, index=$8load_deref.1, fn=<built-in function getitem>) ['$10binary_subscr.2', '$8load_deref.1', 'tup']
    $20return_value.3 = cast(value=$10binary_subscr.2) ['$10binary_subscr.2', '$20return_value.3']
    return $20return_value.3                 ['$20return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A16159610>
DEBUG:numba.core.ssa:on stmt: tup = arg(0, name=tup)
DEBUG:numba.core.ssa:on stmt: idx = arg(1, name=idx)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(idx_val: 0)
DEBUG:numba.core.ssa:on stmt: $10binary_subscr.2 = static_getitem(value=tup, index=0, index_var=$8load_deref.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $20return_value.3 = cast(value=$10binary_subscr.2)
DEBUG:numba.core.ssa:on stmt: return $20return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$10binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000019A16158F90>,
                                     0)],
             '$20return_value.3': [(<numba.core.ir.Assign object at 0x0000019A16158790>,
                                    0)],
             '$8load_deref.1': [(<numba.core.ir.Assign object at 0x0000019A16158450>,
                                 0)],
             'idx': [(<numba.core.ir.Assign object at 0x0000019A16147FD0>, 0)],
             'tup': [(<numba.core.ir.Assign object at 0x0000019A16147ED0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A160BE390>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1650)
           2	RESUME(arg=0, lineno=1650)
           4	LOAD_GLOBAL(arg=1, lineno=1651)
          16	LOAD_FAST(arg=0, lineno=1651)
          18	PRECALL(arg=1, lineno=1651)
          22	CALL(arg=1, lineno=1651)
          32	LOAD_CONST(arg=1, lineno=1651)
          34	COMPARE_OP(arg=2, lineno=1651)
          40	POP_JUMP_FORWARD_IF_FALSE(arg=13, lineno=1651)
          42	LOAD_CONST(arg=2, lineno=1652)
          44	LOAD_FAST(arg=0, lineno=1652)
          46	LOAD_CONST(arg=3, lineno=1652)
          48	BINARY_SUBSCR(arg=None, lineno=1652)
          58	FORMAT_VALUE(arg=0, lineno=1652)
          60	LOAD_CONST(arg=4, lineno=1652)
          62	BUILD_STRING(arg=3, lineno=1652)
          64	STORE_FAST(arg=2, lineno=1652)
          66	JUMP_FORWARD(arg=35, lineno=1652)
>         68	LOAD_CONST(arg=2, lineno=1654)
          70	LOAD_CONST(arg=5, lineno=1654)
          72	LOAD_METHOD(arg=1, lineno=1654)
          94	LOAD_CONST(arg=6, lineno=1654)
          96	MAKE_FUNCTION(arg=0, lineno=1654)
          98	LOAD_FAST(arg=0, lineno=1654)
         100	GET_ITER(arg=None, lineno=1654)
         102	PRECALL(arg=0, lineno=1654)
         106	CALL(arg=0, lineno=1654)
         116	PRECALL(arg=1, lineno=1654)
         120	CALL(arg=1, lineno=1654)
         130	FORMAT_VALUE(arg=0, lineno=1654)
         132	LOAD_CONST(arg=7, lineno=1654)
         134	BUILD_STRING(arg=3, lineno=1654)
         136	STORE_FAST(arg=2, lineno=1654)
>        138	LOAD_GLOBAL(arg=1, lineno=1655)
         150	LOAD_FAST(arg=1, lineno=1655)
         152	PRECALL(arg=1, lineno=1655)
         156	CALL(arg=1, lineno=1655)
         166	LOAD_CONST(arg=1, lineno=1655)
         168	COMPARE_OP(arg=2, lineno=1655)
         174	POP_JUMP_FORWARD_IF_FALSE(arg=13, lineno=1655)
         176	LOAD_CONST(arg=2, lineno=1656)
         178	LOAD_FAST(arg=1, lineno=1656)
         180	LOAD_CONST(arg=3, lineno=1656)
         182	BINARY_SUBSCR(arg=None, lineno=1656)
         192	FORMAT_VALUE(arg=0, lineno=1656)
         194	LOAD_CONST(arg=4, lineno=1656)
         196	BUILD_STRING(arg=3, lineno=1656)
         198	STORE_FAST(arg=3, lineno=1656)
         200	JUMP_FORWARD(arg=35, lineno=1656)
>        202	LOAD_CONST(arg=2, lineno=1658)
         204	LOAD_CONST(arg=5, lineno=1658)
         206	LOAD_METHOD(arg=1, lineno=1658)
         228	LOAD_CONST(arg=8, lineno=1658)
         230	MAKE_FUNCTION(arg=0, lineno=1658)
         232	LOAD_FAST(arg=1, lineno=1658)
         234	GET_ITER(arg=None, lineno=1658)
         236	PRECALL(arg=0, lineno=1658)
         240	CALL(arg=0, lineno=1658)
         250	PRECALL(arg=1, lineno=1658)
         254	CALL(arg=1, lineno=1658)
         264	FORMAT_VALUE(arg=0, lineno=1658)
         266	LOAD_CONST(arg=7, lineno=1658)
         268	BUILD_STRING(arg=3, lineno=1658)
         270	STORE_FAST(arg=3, lineno=1658)
>        272	LOAD_CONST(arg=9, lineno=1659)
         274	LOAD_FAST(arg=2, lineno=1659)
         276	FORMAT_VALUE(arg=0, lineno=1659)
         278	LOAD_CONST(arg=10, lineno=1659)
         280	LOAD_FAST(arg=3, lineno=1660)
         282	FORMAT_VALUE(arg=0, lineno=1659)
         284	BUILD_STRING(arg=4, lineno=1659)
         286	STORE_FAST(arg=4, lineno=1659)
         288	LOAD_GLOBAL(arg=5, lineno=1661)
         300	LOAD_FAST(arg=4, lineno=1661)
         302	PRECALL(arg=1, lineno=1661)
         306	CALL(arg=1, lineno=1661)
         316	RAISE_VARARGS(arg=1, lineno=1661)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1650)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1650)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1651)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1651)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=PRECALL(arg=1, lineno=1651)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$src_shapes16.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL(arg=1, lineno=1651)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$src_shapes16.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=1651)
DEBUG:numba.core.byteflow:stack ['$22call.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=COMPARE_OP(arg=2, lineno=1651)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$const32.4.1']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=POP_JUMP_FORWARD_IF_FALSE(arg=13, lineno=1651)
DEBUG:numba.core.byteflow:stack ['$34compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=42, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=42 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1652)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_FAST(arg=0, lineno=1652)
DEBUG:numba.core.byteflow:stack ['$const42.0.2']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_CONST(arg=3, lineno=1652)
DEBUG:numba.core.byteflow:stack ['$const42.0.2', '$src_shapes44.1']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=BINARY_SUBSCR(arg=None, lineno=1652)
DEBUG:numba.core.byteflow:stack ['$const42.0.2', '$src_shapes44.1', '$const46.2.3']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=FORMAT_VALUE(arg=0, lineno=1652)
DEBUG:numba.core.byteflow:stack ['$const42.0.2', '$48binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=4, lineno=1652)
DEBUG:numba.core.byteflow:stack ['$const42.0.2', '$58format_value.5']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=BUILD_STRING(arg=3, lineno=1652)
DEBUG:numba.core.byteflow:stack ['$const42.0.2', '$58format_value.5', '$const60.6.4']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=STORE_FAST(arg=2, lineno=1652)
DEBUG:numba.core.byteflow:stack ['$62build_string.8']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=JUMP_FORWARD(arg=35, lineno=1652)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=68 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=1654)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_CONST(arg=5, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$const68.0.2']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_METHOD(arg=1, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$const68.0.2', '$const70.1.5']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=6, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$const68.0.2', '$null$72.2', '$72load_method.3']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=MAKE_FUNCTION(arg=0, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$const68.0.2', '$null$72.2', '$72load_method.3', '$const94.4.6']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$const68.0.2', '$null$72.2', '$72load_method.3', '$96make_function.5']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=GET_ITER(arg=None, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$const68.0.2', '$null$72.2', '$72load_method.3', '$96make_function.5', '$src_shapes98.6']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=PRECALL(arg=0, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$const68.0.2', '$null$72.2', '$72load_method.3', '$96make_function.5', '$100get_iter.7']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=CALL(arg=0, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$const68.0.2', '$null$72.2', '$72load_method.3', '$96make_function.5', '$100get_iter.7']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=PRECALL(arg=1, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$const68.0.2', '$null$72.2', '$72load_method.3', '$106call.8']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=CALL(arg=1, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$const68.0.2', '$null$72.2', '$72load_method.3', '$106call.8']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=FORMAT_VALUE(arg=0, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$const68.0.2', '$120call.9']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=LOAD_CONST(arg=7, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$const68.0.2', '$130format_value.11']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=BUILD_STRING(arg=3, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$const68.0.2', '$130format_value.11', '$const132.12.7']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=STORE_FAST(arg=2, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$134build_string.14']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=138 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_GLOBAL(arg=1, lineno=1655)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_FAST(arg=1, lineno=1655)
DEBUG:numba.core.byteflow:stack ['$null$138.1', '$138load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=PRECALL(arg=1, lineno=1655)
DEBUG:numba.core.byteflow:stack ['$null$138.1', '$138load_global.0', '$index_shape150.2']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=CALL(arg=1, lineno=1655)
DEBUG:numba.core.byteflow:stack ['$null$138.1', '$138load_global.0', '$index_shape150.2']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_CONST(arg=1, lineno=1655)
DEBUG:numba.core.byteflow:stack ['$156call.3']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=COMPARE_OP(arg=2, lineno=1655)
DEBUG:numba.core.byteflow:stack ['$156call.3', '$const166.4.1']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=POP_JUMP_FORWARD_IF_FALSE(arg=13, lineno=1655)
DEBUG:numba.core.byteflow:stack ['$168compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=202, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=202 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=202 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=176 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=176, inst=LOAD_CONST(arg=2, lineno=1656)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=178, inst=LOAD_FAST(arg=1, lineno=1656)
DEBUG:numba.core.byteflow:stack ['$const176.0.2']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_CONST(arg=3, lineno=1656)
DEBUG:numba.core.byteflow:stack ['$const176.0.2', '$index_shape178.1']
DEBUG:numba.core.byteflow:dispatch pc=182, inst=BINARY_SUBSCR(arg=None, lineno=1656)
DEBUG:numba.core.byteflow:stack ['$const176.0.2', '$index_shape178.1', '$const180.2.3']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=FORMAT_VALUE(arg=0, lineno=1656)
DEBUG:numba.core.byteflow:stack ['$const176.0.2', '$182binary_subscr.3']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_CONST(arg=4, lineno=1656)
DEBUG:numba.core.byteflow:stack ['$const176.0.2', '$192format_value.5']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=BUILD_STRING(arg=3, lineno=1656)
DEBUG:numba.core.byteflow:stack ['$const176.0.2', '$192format_value.5', '$const194.6.4']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=STORE_FAST(arg=3, lineno=1656)
DEBUG:numba.core.byteflow:stack ['$196build_string.8']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=JUMP_FORWARD(arg=35, lineno=1656)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=272, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=202 nstack_initial=0), State(pc_initial=272 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=202 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=202, inst=LOAD_CONST(arg=2, lineno=1658)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=204, inst=LOAD_CONST(arg=5, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$const202.0.2']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=LOAD_METHOD(arg=1, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$const202.0.2', '$const204.1.5']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=LOAD_CONST(arg=8, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$const202.0.2', '$null$206.2', '$206load_method.3']
DEBUG:numba.core.byteflow:dispatch pc=230, inst=MAKE_FUNCTION(arg=0, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$const202.0.2', '$null$206.2', '$206load_method.3', '$const228.4.8']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=LOAD_FAST(arg=1, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$const202.0.2', '$null$206.2', '$206load_method.3', '$230make_function.5']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=GET_ITER(arg=None, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$const202.0.2', '$null$206.2', '$206load_method.3', '$230make_function.5', '$index_shape232.6']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=PRECALL(arg=0, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$const202.0.2', '$null$206.2', '$206load_method.3', '$230make_function.5', '$234get_iter.7']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=CALL(arg=0, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$const202.0.2', '$null$206.2', '$206load_method.3', '$230make_function.5', '$234get_iter.7']
DEBUG:numba.core.byteflow:dispatch pc=250, inst=PRECALL(arg=1, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$const202.0.2', '$null$206.2', '$206load_method.3', '$240call.8']
DEBUG:numba.core.byteflow:dispatch pc=254, inst=CALL(arg=1, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$const202.0.2', '$null$206.2', '$206load_method.3', '$240call.8']
DEBUG:numba.core.byteflow:dispatch pc=264, inst=FORMAT_VALUE(arg=0, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$const202.0.2', '$254call.9']
DEBUG:numba.core.byteflow:dispatch pc=266, inst=LOAD_CONST(arg=7, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$const202.0.2', '$264format_value.11']
DEBUG:numba.core.byteflow:dispatch pc=268, inst=BUILD_STRING(arg=3, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$const202.0.2', '$264format_value.11', '$const266.12.7']
DEBUG:numba.core.byteflow:dispatch pc=270, inst=STORE_FAST(arg=3, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$268build_string.14']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=272, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=272 nstack_initial=0), State(pc_initial=272 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=272 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_CONST(arg=9, lineno=1659)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=274, inst=LOAD_FAST(arg=2, lineno=1659)
DEBUG:numba.core.byteflow:stack ['$const272.0.9']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=FORMAT_VALUE(arg=0, lineno=1659)
DEBUG:numba.core.byteflow:stack ['$const272.0.9', '$shape_str274.1']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=LOAD_CONST(arg=10, lineno=1659)
DEBUG:numba.core.byteflow:stack ['$const272.0.9', '$276format_value.3']
DEBUG:numba.core.byteflow:dispatch pc=280, inst=LOAD_FAST(arg=3, lineno=1660)
DEBUG:numba.core.byteflow:stack ['$const272.0.9', '$276format_value.3', '$const278.4.10']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=FORMAT_VALUE(arg=0, lineno=1659)
DEBUG:numba.core.byteflow:stack ['$const272.0.9', '$276format_value.3', '$const278.4.10', '$index_str280.5']
DEBUG:numba.core.byteflow:dispatch pc=284, inst=BUILD_STRING(arg=4, lineno=1659)
DEBUG:numba.core.byteflow:stack ['$const272.0.9', '$276format_value.3', '$const278.4.10', '$282format_value.7']
DEBUG:numba.core.byteflow:dispatch pc=286, inst=STORE_FAST(arg=4, lineno=1659)
DEBUG:numba.core.byteflow:stack ['$284build_string.10']
DEBUG:numba.core.byteflow:dispatch pc=288, inst=LOAD_GLOBAL(arg=5, lineno=1661)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=300, inst=LOAD_FAST(arg=4, lineno=1661)
DEBUG:numba.core.byteflow:stack ['$null$288.12', '$288load_global.11']
DEBUG:numba.core.byteflow:dispatch pc=302, inst=PRECALL(arg=1, lineno=1661)
DEBUG:numba.core.byteflow:stack ['$null$288.12', '$288load_global.11', '$msg300.13']
DEBUG:numba.core.byteflow:dispatch pc=306, inst=CALL(arg=1, lineno=1661)
DEBUG:numba.core.byteflow:stack ['$null$288.12', '$288load_global.11', '$msg300.13']
DEBUG:numba.core.byteflow:dispatch pc=316, inst=RAISE_VARARGS(arg=1, lineno=1661)
DEBUG:numba.core.byteflow:stack ['$306call.14']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=272 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=42 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=272 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$src_shapes16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$src_shapes16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$const32.4.1'}), (34, {'lhs': '$22call.3', 'rhs': '$const32.4.1', 'res': '$34compare_op.5'}), (36, {}), (38, {}), (40, {'pred': '$34compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: (), 68: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=42 nstack_initial=0):
AdaptBlockInfo(insts=((42, {'res': '$const42.0.2'}), (44, {'res': '$src_shapes44.1'}), (46, {'res': '$const46.2.3'}), (48, {'index': '$const46.2.3', 'target': '$src_shapes44.1', 'res': '$48binary_subscr.3'}), (50, {}), (52, {}), (54, {}), (56, {}), (58, {'value': '$48binary_subscr.3', 'res': '$58format_value.5', 'strvar': '$58format_value.4'}), (60, {'res': '$const60.6.4'}), (62, {'strings': ['$const42.0.2', '$58format_value.5', '$const60.6.4'], 'tmps': ['$62build_string.7', '$62build_string.8']}), (64, {'value': '$62build_string.8'}), (66, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$const68.0.2'}), (70, {'res': '$const70.1.5'}), (72, {'item': '$const70.1.5', 'res': '$72load_method.3'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {'res': '$const94.4.6'}), (96, {'name': None, 'code': '$const94.4.6', 'closure': None, 'annotations': None, 'kwdefaults': None, 'defaults': None, 'res': '$96make_function.5'}), (98, {'res': '$src_shapes98.6'}), (100, {'value': '$src_shapes98.6', 'res': '$100get_iter.7'}), (102, {}), (104, {}), (106, {'func': '$96make_function.5', 'args': ['$100get_iter.7'], 'kw_names': None, 'res': '$106call.8'}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {}), (120, {'func': '$72load_method.3', 'args': ['$106call.8'], 'kw_names': None, 'res': '$120call.9'}), (122, {}), (124, {}), (126, {}), (128, {}), (130, {'value': '$120call.9', 'res': '$130format_value.11', 'strvar': '$130format_value.10'}), (132, {'res': '$const132.12.7'}), (134, {'strings': ['$const68.0.2', '$130format_value.11', '$const132.12.7'], 'tmps': ['$134build_string.13', '$134build_string.14']}), (136, {'value': '$134build_string.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'idx': 0, 'res': '$138load_global.0'}), (140, {}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {'res': '$index_shape150.2'}), (152, {}), (154, {}), (156, {'func': '$138load_global.0', 'args': ['$index_shape150.2'], 'kw_names': None, 'res': '$156call.3'}), (158, {}), (160, {}), (162, {}), (164, {}), (166, {'res': '$const166.4.1'}), (168, {'lhs': '$156call.3', 'rhs': '$const166.4.1', 'res': '$168compare_op.5'}), (170, {}), (172, {}), (174, {'pred': '$168compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 202: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0.2'}), (178, {'res': '$index_shape178.1'}), (180, {'res': '$const180.2.3'}), (182, {'index': '$const180.2.3', 'target': '$index_shape178.1', 'res': '$182binary_subscr.3'}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'value': '$182binary_subscr.3', 'res': '$192format_value.5', 'strvar': '$192format_value.4'}), (194, {'res': '$const194.6.4'}), (196, {'strings': ['$const176.0.2', '$192format_value.5', '$const194.6.4'], 'tmps': ['$196build_string.7', '$196build_string.8']}), (198, {'value': '$196build_string.8'}), (200, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={272: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'res': '$const202.0.2'}), (204, {'res': '$const204.1.5'}), (206, {'item': '$const204.1.5', 'res': '$206load_method.3'}), (208, {}), (210, {}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'res': '$const228.4.8'}), (230, {'name': None, 'code': '$const228.4.8', 'closure': None, 'annotations': None, 'kwdefaults': None, 'defaults': None, 'res': '$230make_function.5'}), (232, {'res': '$index_shape232.6'}), (234, {'value': '$index_shape232.6', 'res': '$234get_iter.7'}), (236, {}), (238, {}), (240, {'func': '$230make_function.5', 'args': ['$234get_iter.7'], 'kw_names': None, 'res': '$240call.8'}), (242, {}), (244, {}), (246, {}), (248, {}), (250, {}), (252, {}), (254, {'func': '$206load_method.3', 'args': ['$240call.8'], 'kw_names': None, 'res': '$254call.9'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {'value': '$254call.9', 'res': '$264format_value.11', 'strvar': '$264format_value.10'}), (266, {'res': '$const266.12.7'}), (268, {'strings': ['$const202.0.2', '$264format_value.11', '$const266.12.7'], 'tmps': ['$268build_string.13', '$268build_string.14']}), (270, {'value': '$268build_string.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={272: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=272 nstack_initial=0):
AdaptBlockInfo(insts=((272, {'res': '$const272.0.9'}), (274, {'res': '$shape_str274.1'}), (276, {'value': '$shape_str274.1', 'res': '$276format_value.3', 'strvar': '$276format_value.2'}), (278, {'res': '$const278.4.10'}), (280, {'res': '$index_str280.5'}), (282, {'value': '$index_str280.5', 'res': '$282format_value.7', 'strvar': '$282format_value.6'}), (284, {'strings': ['$const272.0.9', '$276format_value.3', '$const278.4.10', '$282format_value.7'], 'tmps': ['$284build_string.8', '$284build_string.9', '$284build_string.10']}), (286, {'value': '$284build_string.10'}), (288, {'idx': 2, 'res': '$288load_global.11'}), (290, {}), (292, {}), (294, {}), (296, {}), (298, {}), (300, {'res': '$msg300.13'}), (302, {}), (304, {}), (306, {'func': '$288load_global.11', 'args': ['$msg300.13'], 'kw_names': None, 'res': '$306call.14'}), (308, {}), (310, {}), (312, {}), (314, {}), (316, {'exc': '$306call.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    src_shapes = arg(0, name=src_shapes)     ['src_shapes']
    index_shape = arg(1, name=index_shape)   ['index_shape']
    $4load_global.0 = global(len: <built-in function len>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(src_shapes, func=$4load_global.0, args=[Var(src_shapes, arrayobj.py:1650)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'src_shapes']
    $const32.4.1 = const(int, 1)             ['$const32.4.1']
    $34compare_op.5 = $22call.3 == $const32.4.1 ['$22call.3', '$34compare_op.5', '$const32.4.1']
    bool40 = global(bool: <class 'bool'>)    ['bool40']
    $40pred = call bool40($34compare_op.5, func=bool40, args=(Var($34compare_op.5, arrayobj.py:1651),), kws=(), vararg=None, varkwarg=None, target=None) ['$34compare_op.5', '$40pred', 'bool40']
    branch $40pred, 42, 68                   ['$40pred']
label 42:
    $const42.0.2 = const(str, ()             ['$const42.0.2']
    $const46.2.3 = const(int, 0)             ['$const46.2.3']
    $48binary_subscr.3 = getitem(value=src_shapes, index=$const46.2.3, fn=<built-in function getitem>) ['$48binary_subscr.3', '$const46.2.3', 'src_shapes']
    $58format_value.4 = global(str: <class 'str'>) ['$58format_value.4']
    $58format_value.5 = call $58format_value.4($48binary_subscr.3, func=$58format_value.4, args=(Var($48binary_subscr.3, arrayobj.py:1652),), kws=(), vararg=None, varkwarg=None, target=None) ['$48binary_subscr.3', '$58format_value.4', '$58format_value.5']
    $const60.6.4 = const(str, ,))            ['$const60.6.4']
    $62build_string.7 = $const42.0.2 + $58format_value.5 ['$58format_value.5', '$62build_string.7', '$const42.0.2']
    shape_str = $62build_string.7 + $const60.6.4 ['$62build_string.7', '$const60.6.4', 'shape_str']
    jump 138                                 []
label 68:
    $const68.0.2 = const(str, ()             ['$const68.0.2']
    $const70.1.5 = const(str, , )            ['$const70.1.5']
    $72load_method.3 = getattr(value=$const70.1.5, attr=join) ['$72load_method.3', '$const70.1.5']
    $const94.4.6 = const(code, <code object <listcomp> at 0x0000019A15464120, file "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\np\arrayobj.py", line 1654>) ['$const94.4.6']
    $96make_function.5 = make_function(name=None, code=<code object <listcomp> at 0x0000019A15464120, file "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\np\arrayobj.py", line 1654>, closure=None, defaults=None) ['$96make_function.5']
    $100get_iter.7 = getiter(value=src_shapes) ['$100get_iter.7', 'src_shapes']
    $106call.8 = call $96make_function.5($100get_iter.7, func=$96make_function.5, args=[Var($100get_iter.7, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None) ['$100get_iter.7', '$106call.8', '$96make_function.5']
    $120call.9 = call $72load_method.3($106call.8, func=$72load_method.3, args=[Var($106call.8, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None) ['$106call.8', '$120call.9', '$72load_method.3']
    $130format_value.10 = global(str: <class 'str'>) ['$130format_value.10']
    $130format_value.11 = call $130format_value.10($120call.9, func=$130format_value.10, args=(Var($120call.9, arrayobj.py:1654),), kws=(), vararg=None, varkwarg=None, target=None) ['$120call.9', '$130format_value.10', '$130format_value.11']
    $const132.12.7 = const(str, ))           ['$const132.12.7']
    $134build_string.13 = $const68.0.2 + $130format_value.11 ['$130format_value.11', '$134build_string.13', '$const68.0.2']
    shape_str = $134build_string.13 + $const132.12.7 ['$134build_string.13', '$const132.12.7', 'shape_str']
    jump 138                                 []
label 138:
    $138load_global.0 = global(len: <built-in function len>) ['$138load_global.0']
    $156call.3 = call $138load_global.0(index_shape, func=$138load_global.0, args=[Var(index_shape, arrayobj.py:1650)], kws=(), vararg=None, varkwarg=None, target=None) ['$138load_global.0', '$156call.3', 'index_shape']
    $const166.4.1 = const(int, 1)            ['$const166.4.1']
    $168compare_op.5 = $156call.3 == $const166.4.1 ['$156call.3', '$168compare_op.5', '$const166.4.1']
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174($168compare_op.5, func=bool174, args=(Var($168compare_op.5, arrayobj.py:1655),), kws=(), vararg=None, varkwarg=None, target=None) ['$168compare_op.5', '$174pred', 'bool174']
    branch $174pred, 176, 202                ['$174pred']
label 176:
    $const176.0.2 = const(str, ()            ['$const176.0.2']
    $const180.2.3 = const(int, 0)            ['$const180.2.3']
    $182binary_subscr.3 = getitem(value=index_shape, index=$const180.2.3, fn=<built-in function getitem>) ['$182binary_subscr.3', '$const180.2.3', 'index_shape']
    $192format_value.4 = global(str: <class 'str'>) ['$192format_value.4']
    $192format_value.5 = call $192format_value.4($182binary_subscr.3, func=$192format_value.4, args=(Var($182binary_subscr.3, arrayobj.py:1656),), kws=(), vararg=None, varkwarg=None, target=None) ['$182binary_subscr.3', '$192format_value.4', '$192format_value.5']
    $const194.6.4 = const(str, ,))           ['$const194.6.4']
    $196build_string.7 = $const176.0.2 + $192format_value.5 ['$192format_value.5', '$196build_string.7', '$const176.0.2']
    index_str = $196build_string.7 + $const194.6.4 ['$196build_string.7', '$const194.6.4', 'index_str']
    jump 272                                 []
label 202:
    $const202.0.2 = const(str, ()            ['$const202.0.2']
    $const204.1.5 = const(str, , )           ['$const204.1.5']
    $206load_method.3 = getattr(value=$const204.1.5, attr=join) ['$206load_method.3', '$const204.1.5']
    $const228.4.8 = const(code, <code object <listcomp> at 0x0000019A15464210, file "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\np\arrayobj.py", line 1658>) ['$const228.4.8']
    $230make_function.5 = make_function(name=None, code=<code object <listcomp> at 0x0000019A15464210, file "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\np\arrayobj.py", line 1658>, closure=None, defaults=None) ['$230make_function.5']
    $234get_iter.7 = getiter(value=index_shape) ['$234get_iter.7', 'index_shape']
    $240call.8 = call $230make_function.5($234get_iter.7, func=$230make_function.5, args=[Var($234get_iter.7, arrayobj.py:1658)], kws=(), vararg=None, varkwarg=None, target=None) ['$230make_function.5', '$234get_iter.7', '$240call.8']
    $254call.9 = call $206load_method.3($240call.8, func=$206load_method.3, args=[Var($240call.8, arrayobj.py:1658)], kws=(), vararg=None, varkwarg=None, target=None) ['$206load_method.3', '$240call.8', '$254call.9']
    $264format_value.10 = global(str: <class 'str'>) ['$264format_value.10']
    $264format_value.11 = call $264format_value.10($254call.9, func=$264format_value.10, args=(Var($254call.9, arrayobj.py:1658),), kws=(), vararg=None, varkwarg=None, target=None) ['$254call.9', '$264format_value.10', '$264format_value.11']
    $const266.12.7 = const(str, ))           ['$const266.12.7']
    $268build_string.13 = $const202.0.2 + $264format_value.11 ['$264format_value.11', '$268build_string.13', '$const202.0.2']
    index_str = $268build_string.13 + $const266.12.7 ['$268build_string.13', '$const266.12.7', 'index_str']
    jump 272                                 []
label 272:
    $const272.0.9 = const(str, cannot assign slice of shape ) ['$const272.0.9']
    $276format_value.2 = global(str: <class 'str'>) ['$276format_value.2']
    $276format_value.3 = call $276format_value.2(shape_str, func=$276format_value.2, args=(Var(shape_str, arrayobj.py:1652),), kws=(), vararg=None, varkwarg=None, target=None) ['$276format_value.2', '$276format_value.3', 'shape_str']
    $const278.4.10 = const(str,  from input of shape ) ['$const278.4.10']
    $282format_value.6 = global(str: <class 'str'>) ['$282format_value.6']
    $282format_value.7 = call $282format_value.6(index_str, func=$282format_value.6, args=(Var(index_str, arrayobj.py:1656),), kws=(), vararg=None, varkwarg=None, target=None) ['$282format_value.6', '$282format_value.7', 'index_str']
    $284build_string.8 = $const272.0.9 + $276format_value.3 ['$276format_value.3', '$284build_string.8', '$const272.0.9']
    $284build_string.9 = $284build_string.8 + $const278.4.10 ['$284build_string.8', '$284build_string.9', '$const278.4.10']
    msg = $284build_string.9 + $282format_value.7 ['$282format_value.7', '$284build_string.9', 'msg']
    $288load_global.11 = global(ValueError: <class 'ValueError'>) ['$288load_global.11']
    $306call.14 = call $288load_global.11(msg, func=$288load_global.11, args=[Var(msg, arrayobj.py:1659)], kws=(), vararg=None, varkwarg=None, target=None) ['$288load_global.11', '$306call.14', 'msg']
    raise $306call.14                        ['$306call.14']

DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1658)
           2	RESUME(arg=0, lineno=1658)
           4	BUILD_LIST(arg=0, lineno=1658)
           6	LOAD_FAST(arg=0, lineno=1658)
>          8	FOR_ITER(arg=17, lineno=1658)
          10	STORE_FAST(arg=1, lineno=1658)
          12	LOAD_GLOBAL(arg=1, lineno=1658)
          24	LOAD_FAST(arg=1, lineno=1658)
          26	PRECALL(arg=1, lineno=1658)
          30	CALL(arg=1, lineno=1658)
          40	LIST_APPEND(arg=2, lineno=1658)
          42	JUMP_BACKWARD(arg=18, lineno=1658)
>         44	RETURN_VALUE(arg=None, lineno=1658)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1658)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1658)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=BUILD_LIST(arg=0, lineno=1658)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$4build_list.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=8, stack=('$4build_list.0', '$.06.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=8 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi8.0', '$phi8.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=8 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=8, inst=FOR_ITER(arg=17, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$phi8.0', '$phi8.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=('$phi8.0',), blockstack=(), npush=0), Edge(pc=10, stack=('$phi8.0', '$phi8.1', '$8for_iter.3'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=10 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi44.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=44 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=44, inst=RETURN_VALUE(arg=None, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$phi44.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=10 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi10.0', '$phi10.1', '$phi10.2']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=10 nstack_initial=3)
DEBUG:numba.core.byteflow:dispatch pc=10, inst=STORE_FAST(arg=1, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$phi10.0', '$phi10.1', '$phi10.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$phi10.0', '$phi10.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$phi10.0', '$phi10.1', '$null$12.4', '$12load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=PRECALL(arg=1, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$phi10.0', '$phi10.1', '$null$12.4', '$12load_global.3', '$x24.5']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=CALL(arg=1, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$phi10.0', '$phi10.1', '$null$12.4', '$12load_global.3', '$x24.5']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LIST_APPEND(arg=2, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$phi10.0', '$phi10.1', '$30call.6']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=JUMP_BACKWARD(arg=18, lineno=1658)
DEBUG:numba.core.byteflow:stack ['$phi10.0', '$phi10.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=8, stack=('$phi10.0', '$phi10.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=8 nstack_initial=2)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=8 nstack_initial=2): {'$phi8.1'},
             State(pc_initial=10 nstack_initial=3): {'$phi10.2', '$phi10.0'},
             State(pc_initial=44 nstack_initial=1): {'$phi44.0'}})
DEBUG:numba.core.byteflow:defmap: {'$phi10.2': State(pc_initial=8 nstack_initial=2),
 '$phi8.0': State(pc_initial=0 nstack_initial=0),
 '$phi8.1': State(pc_initial=0 nstack_initial=0)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi10.0': {('$phi8.0', State(pc_initial=8 nstack_initial=2))},
             '$phi10.1': {('$phi8.1', State(pc_initial=8 nstack_initial=2))},
             '$phi10.2': {('$8for_iter.3',
                           State(pc_initial=8 nstack_initial=2))},
             '$phi44.0': {('$phi8.0', State(pc_initial=8 nstack_initial=2))},
             '$phi8.0': {('$4build_list.0',
                          State(pc_initial=0 nstack_initial=0)),
                         ('$phi10.0', State(pc_initial=10 nstack_initial=3))},
             '$phi8.1': {('$.06.1', State(pc_initial=0 nstack_initial=0)),
                         ('$phi10.1', State(pc_initial=10 nstack_initial=3))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi10.0': {('$4build_list.0',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi10.0', State(pc_initial=10 nstack_initial=3))},
             '$phi10.1': {('$.06.1', State(pc_initial=0 nstack_initial=0)),
                          ('$phi10.1', State(pc_initial=10 nstack_initial=3))},
             '$phi10.2': {('$8for_iter.3',
                           State(pc_initial=8 nstack_initial=2))},
             '$phi44.0': {('$4build_list.0',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi10.0', State(pc_initial=10 nstack_initial=3))},
             '$phi8.0': {('$4build_list.0',
                          State(pc_initial=0 nstack_initial=0))},
             '$phi8.1': {('$.06.1', State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi10.0': {('$4build_list.0',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi10.1': {('$.06.1', State(pc_initial=0 nstack_initial=0))},
             '$phi10.2': {('$8for_iter.3',
                           State(pc_initial=8 nstack_initial=2))},
             '$phi44.0': {('$4build_list.0',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi8.0': {('$4build_list.0',
                          State(pc_initial=0 nstack_initial=0))},
             '$phi8.1': {('$.06.1', State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi10.0': {('$4build_list.0',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi10.1': {('$.06.1', State(pc_initial=0 nstack_initial=0))},
             '$phi10.2': {('$8for_iter.3',
                           State(pc_initial=8 nstack_initial=2))},
             '$phi44.0': {('$4build_list.0',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi8.0': {('$4build_list.0',
                          State(pc_initial=0 nstack_initial=0))},
             '$phi8.1': {('$.06.1', State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi10.0': {('$4build_list.0', State(pc_initial=0 nstack_initial=0))},
 '$phi10.2': {('$8for_iter.3', State(pc_initial=8 nstack_initial=2))},
 '$phi44.0': {('$4build_list.0', State(pc_initial=0 nstack_initial=0))},
 '$phi8.1': {('$.06.1', State(pc_initial=0 nstack_initial=0))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi10.0': '$4build_list.0',
                                                    '$phi44.0': '$4build_list.0',
                                                    '$phi8.1': '$.06.1'},
             State(pc_initial=8 nstack_initial=2): {'$phi10.2': '$8for_iter.3'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'items': [], 'res': '$4build_list.0'}), (6, {'res': '$.06.1'})), outgoing_phis={'$phi8.1': '$.06.1', '$phi44.0': '$4build_list.0', '$phi10.0': '$4build_list.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={8: ('$4build_list.0', '$.06.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=8 nstack_initial=2):
AdaptBlockInfo(insts=((8, {'iterator': '$phi8.1', 'pair': '$8for_iter.2', 'indval': '$8for_iter.3', 'pred': '$8for_iter.4'}),), outgoing_phis={'$phi10.2': '$8for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: ('$phi8.0',), 10: ('$phi8.0', '$phi8.1', '$8for_iter.3')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=10 nstack_initial=3):
AdaptBlockInfo(insts=((10, {'value': '$phi10.2'}), (12, {'idx': 0, 'res': '$12load_global.3'}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {'res': '$x24.5'}), (26, {}), (28, {}), (30, {'func': '$12load_global.3', 'args': ['$x24.5'], 'kw_names': None, 'res': '$30call.6'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'target': '$phi10.0', 'value': '$30call.6', 'appendvar': '$40list_append.7', 'res': '$40list_append.8'}), (42, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={8: ('$phi10.0', '$phi10.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((44, {'retval': '$phi44.0', 'castval': '$44return_value.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    implicit0 = arg(0, name=implicit0)       ['implicit0']
    $4build_list.0 = build_list(items=[])    ['$4build_list.0']
    $phi8.1 = implicit0                      ['$phi8.1', 'implicit0']
    $phi44.0 = $4build_list.0                ['$4build_list.0', '$phi44.0']
    $phi10.0 = $4build_list.0                ['$4build_list.0', '$phi10.0']
    jump 8                                   []
label 8:
    $8for_iter.2 = iternext(value=$phi8.1)   ['$8for_iter.2', '$phi8.1']
    $8for_iter.3 = pair_first(value=$8for_iter.2) ['$8for_iter.2', '$8for_iter.3']
    $8for_iter.4 = pair_second(value=$8for_iter.2) ['$8for_iter.2', '$8for_iter.4']
    $phi10.2 = $8for_iter.3                  ['$8for_iter.3', '$phi10.2']
    branch $8for_iter.4, 10, 44              ['$8for_iter.4']
label 10:
    x = $phi10.2                             ['$phi10.2', 'x']
    $12load_global.3 = global(str: <class 'str'>) ['$12load_global.3']
    $30call.6 = call $12load_global.3(x, func=$12load_global.3, args=[Var(x, arrayobj.py:1658)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.3', '$30call.6', 'x']
    $40list_append.7 = getattr(value=$phi10.0, attr=append) ['$40list_append.7', '$phi10.0']
    $40list_append.8 = call $40list_append.7($30call.6, func=$40list_append.7, args=(Var($30call.6, arrayobj.py:1658),), kws=(), vararg=None, varkwarg=None, target=None) ['$30call.6', '$40list_append.7', '$40list_append.8']
    jump 8                                   []
label 44:
    $44return_value.1 = cast(value=$phi44.0) ['$44return_value.1', '$phi44.0']
    return $44return_value.1                 ['$44return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A16120710>
DEBUG:numba.core.ssa:on stmt: implicit0 = arg(0, name=implicit0)
DEBUG:numba.core.ssa:on stmt: $4build_list.0 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: $phi8.1 = implicit0
DEBUG:numba.core.ssa:on stmt: $phi44.0 = $4build_list.0
DEBUG:numba.core.ssa:on stmt: $phi10.0 = $4build_list.0
DEBUG:numba.core.ssa:on stmt: jump 8
DEBUG:numba.core.ssa:==== SSA block analysis pass on 8
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A16120710>
DEBUG:numba.core.ssa:on stmt: $8for_iter.2 = iternext(value=$phi8.1)
DEBUG:numba.core.ssa:on stmt: $8for_iter.3 = pair_first(value=$8for_iter.2)
DEBUG:numba.core.ssa:on stmt: $8for_iter.4 = pair_second(value=$8for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi10.2 = $8for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $8for_iter.4, 10, 44
DEBUG:numba.core.ssa:==== SSA block analysis pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A16120710>
DEBUG:numba.core.ssa:on stmt: x = $phi10.2
DEBUG:numba.core.ssa:on stmt: $12load_global.3 = global(str: <class 'str'>)
DEBUG:numba.core.ssa:on stmt: $30call.6 = call $12load_global.3(x, func=$12load_global.3, args=[Var(x, arrayobj.py:1658)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $40list_append.7 = getattr(value=$phi10.0, attr=append)
DEBUG:numba.core.ssa:on stmt: $40list_append.8 = call $40list_append.7($30call.6, func=$40list_append.7, args=(Var($30call.6, arrayobj.py:1658),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 8
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A16120710>
DEBUG:numba.core.ssa:on stmt: $44return_value.1 = cast(value=$phi44.0)
DEBUG:numba.core.ssa:on stmt: return $44return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12load_global.3': [(<numba.core.ir.Assign object at 0x0000019A162D13D0>,
                                   10)],
             '$30call.6': [(<numba.core.ir.Assign object at 0x0000019A162D1790>,
                            10)],
             '$40list_append.7': [(<numba.core.ir.Assign object at 0x0000019A162D19D0>,
                                   10)],
             '$40list_append.8': [(<numba.core.ir.Assign object at 0x0000019A162D1B10>,
                                   10)],
             '$44return_value.1': [(<numba.core.ir.Assign object at 0x0000019A162D1E10>,
                                    44)],
             '$4build_list.0': [(<numba.core.ir.Assign object at 0x0000019A162C1250>,
                                 0)],
             '$8for_iter.2': [(<numba.core.ir.Assign object at 0x0000019A162D0D10>,
                               8)],
             '$8for_iter.3': [(<numba.core.ir.Assign object at 0x0000019A162D0DD0>,
                               8)],
             '$8for_iter.4': [(<numba.core.ir.Assign object at 0x0000019A162D0ED0>,
                               8)],
             '$phi10.0': [(<numba.core.ir.Assign object at 0x0000019A162D0B10>,
                           0)],
             '$phi10.2': [(<numba.core.ir.Assign object at 0x0000019A162D0F90>,
                           8)],
             '$phi44.0': [(<numba.core.ir.Assign object at 0x0000019A162D0190>,
                           0)],
             '$phi8.1': [(<numba.core.ir.Assign object at 0x0000019A162D01D0>,
                          0)],
             'implicit0': [(<numba.core.ir.Assign object at 0x0000019A16280510>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A162D1250>, 10)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A16120710>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1654)
           2	RESUME(arg=0, lineno=1654)
           4	BUILD_LIST(arg=0, lineno=1654)
           6	LOAD_FAST(arg=0, lineno=1654)
>          8	FOR_ITER(arg=17, lineno=1654)
          10	STORE_FAST(arg=1, lineno=1654)
          12	LOAD_GLOBAL(arg=1, lineno=1654)
          24	LOAD_FAST(arg=1, lineno=1654)
          26	PRECALL(arg=1, lineno=1654)
          30	CALL(arg=1, lineno=1654)
          40	LIST_APPEND(arg=2, lineno=1654)
          42	JUMP_BACKWARD(arg=18, lineno=1654)
>         44	RETURN_VALUE(arg=None, lineno=1654)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1654)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1654)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=BUILD_LIST(arg=0, lineno=1654)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$4build_list.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=8, stack=('$4build_list.0', '$.06.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=8 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi8.0', '$phi8.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=8 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=8, inst=FOR_ITER(arg=17, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$phi8.0', '$phi8.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=('$phi8.0',), blockstack=(), npush=0), Edge(pc=10, stack=('$phi8.0', '$phi8.1', '$8for_iter.3'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=1), State(pc_initial=10 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi44.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=44 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=44, inst=RETURN_VALUE(arg=None, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$phi44.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=10 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi10.0', '$phi10.1', '$phi10.2']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=10 nstack_initial=3)
DEBUG:numba.core.byteflow:dispatch pc=10, inst=STORE_FAST(arg=1, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$phi10.0', '$phi10.1', '$phi10.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$phi10.0', '$phi10.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$phi10.0', '$phi10.1', '$null$12.4', '$12load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=PRECALL(arg=1, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$phi10.0', '$phi10.1', '$null$12.4', '$12load_global.3', '$x24.5']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=CALL(arg=1, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$phi10.0', '$phi10.1', '$null$12.4', '$12load_global.3', '$x24.5']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LIST_APPEND(arg=2, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$phi10.0', '$phi10.1', '$30call.6']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=JUMP_BACKWARD(arg=18, lineno=1654)
DEBUG:numba.core.byteflow:stack ['$phi10.0', '$phi10.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=8, stack=('$phi10.0', '$phi10.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=8 nstack_initial=2)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=8 nstack_initial=2): {'$phi8.1'},
             State(pc_initial=10 nstack_initial=3): {'$phi10.2', '$phi10.0'},
             State(pc_initial=44 nstack_initial=1): {'$phi44.0'}})
DEBUG:numba.core.byteflow:defmap: {'$phi10.2': State(pc_initial=8 nstack_initial=2),
 '$phi8.0': State(pc_initial=0 nstack_initial=0),
 '$phi8.1': State(pc_initial=0 nstack_initial=0)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi10.0': {('$phi8.0', State(pc_initial=8 nstack_initial=2))},
             '$phi10.1': {('$phi8.1', State(pc_initial=8 nstack_initial=2))},
             '$phi10.2': {('$8for_iter.3',
                           State(pc_initial=8 nstack_initial=2))},
             '$phi44.0': {('$phi8.0', State(pc_initial=8 nstack_initial=2))},
             '$phi8.0': {('$4build_list.0',
                          State(pc_initial=0 nstack_initial=0)),
                         ('$phi10.0', State(pc_initial=10 nstack_initial=3))},
             '$phi8.1': {('$.06.1', State(pc_initial=0 nstack_initial=0)),
                         ('$phi10.1', State(pc_initial=10 nstack_initial=3))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi10.0': {('$4build_list.0',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi10.0', State(pc_initial=10 nstack_initial=3))},
             '$phi10.1': {('$.06.1', State(pc_initial=0 nstack_initial=0)),
                          ('$phi10.1', State(pc_initial=10 nstack_initial=3))},
             '$phi10.2': {('$8for_iter.3',
                           State(pc_initial=8 nstack_initial=2))},
             '$phi44.0': {('$4build_list.0',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi10.0', State(pc_initial=10 nstack_initial=3))},
             '$phi8.0': {('$4build_list.0',
                          State(pc_initial=0 nstack_initial=0))},
             '$phi8.1': {('$.06.1', State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi10.0': {('$4build_list.0',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi10.1': {('$.06.1', State(pc_initial=0 nstack_initial=0))},
             '$phi10.2': {('$8for_iter.3',
                           State(pc_initial=8 nstack_initial=2))},
             '$phi44.0': {('$4build_list.0',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi8.0': {('$4build_list.0',
                          State(pc_initial=0 nstack_initial=0))},
             '$phi8.1': {('$.06.1', State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi10.0': {('$4build_list.0',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi10.1': {('$.06.1', State(pc_initial=0 nstack_initial=0))},
             '$phi10.2': {('$8for_iter.3',
                           State(pc_initial=8 nstack_initial=2))},
             '$phi44.0': {('$4build_list.0',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi8.0': {('$4build_list.0',
                          State(pc_initial=0 nstack_initial=0))},
             '$phi8.1': {('$.06.1', State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi10.0': {('$4build_list.0', State(pc_initial=0 nstack_initial=0))},
 '$phi10.2': {('$8for_iter.3', State(pc_initial=8 nstack_initial=2))},
 '$phi44.0': {('$4build_list.0', State(pc_initial=0 nstack_initial=0))},
 '$phi8.1': {('$.06.1', State(pc_initial=0 nstack_initial=0))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi10.0': '$4build_list.0',
                                                    '$phi44.0': '$4build_list.0',
                                                    '$phi8.1': '$.06.1'},
             State(pc_initial=8 nstack_initial=2): {'$phi10.2': '$8for_iter.3'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'items': [], 'res': '$4build_list.0'}), (6, {'res': '$.06.1'})), outgoing_phis={'$phi8.1': '$.06.1', '$phi44.0': '$4build_list.0', '$phi10.0': '$4build_list.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={8: ('$4build_list.0', '$.06.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=8 nstack_initial=2):
AdaptBlockInfo(insts=((8, {'iterator': '$phi8.1', 'pair': '$8for_iter.2', 'indval': '$8for_iter.3', 'pred': '$8for_iter.4'}),), outgoing_phis={'$phi10.2': '$8for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: ('$phi8.0',), 10: ('$phi8.0', '$phi8.1', '$8for_iter.3')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=10 nstack_initial=3):
AdaptBlockInfo(insts=((10, {'value': '$phi10.2'}), (12, {'idx': 0, 'res': '$12load_global.3'}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {'res': '$x24.5'}), (26, {}), (28, {}), (30, {'func': '$12load_global.3', 'args': ['$x24.5'], 'kw_names': None, 'res': '$30call.6'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'target': '$phi10.0', 'value': '$30call.6', 'appendvar': '$40list_append.7', 'res': '$40list_append.8'}), (42, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={8: ('$phi10.0', '$phi10.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=1):
AdaptBlockInfo(insts=((44, {'retval': '$phi44.0', 'castval': '$44return_value.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    implicit0 = arg(0, name=implicit0)       ['implicit0']
    $4build_list.0 = build_list(items=[])    ['$4build_list.0']
    $phi8.1 = implicit0                      ['$phi8.1', 'implicit0']
    $phi44.0 = $4build_list.0                ['$4build_list.0', '$phi44.0']
    $phi10.0 = $4build_list.0                ['$4build_list.0', '$phi10.0']
    jump 8                                   []
label 8:
    $8for_iter.2 = iternext(value=$phi8.1)   ['$8for_iter.2', '$phi8.1']
    $8for_iter.3 = pair_first(value=$8for_iter.2) ['$8for_iter.2', '$8for_iter.3']
    $8for_iter.4 = pair_second(value=$8for_iter.2) ['$8for_iter.2', '$8for_iter.4']
    $phi10.2 = $8for_iter.3                  ['$8for_iter.3', '$phi10.2']
    branch $8for_iter.4, 10, 44              ['$8for_iter.4']
label 10:
    x = $phi10.2                             ['$phi10.2', 'x']
    $12load_global.3 = global(str: <class 'str'>) ['$12load_global.3']
    $30call.6 = call $12load_global.3(x, func=$12load_global.3, args=[Var(x, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.3', '$30call.6', 'x']
    $40list_append.7 = getattr(value=$phi10.0, attr=append) ['$40list_append.7', '$phi10.0']
    $40list_append.8 = call $40list_append.7($30call.6, func=$40list_append.7, args=(Var($30call.6, arrayobj.py:1654),), kws=(), vararg=None, varkwarg=None, target=None) ['$30call.6', '$40list_append.7', '$40list_append.8']
    jump 8                                   []
label 44:
    $44return_value.1 = cast(value=$phi44.0) ['$44return_value.1', '$phi44.0']
    return $44return_value.1                 ['$44return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A162DC450>
DEBUG:numba.core.ssa:on stmt: implicit0 = arg(0, name=implicit0)
DEBUG:numba.core.ssa:on stmt: $4build_list.0 = build_list(items=[])
DEBUG:numba.core.ssa:on stmt: $phi8.1 = implicit0
DEBUG:numba.core.ssa:on stmt: $phi44.0 = $4build_list.0
DEBUG:numba.core.ssa:on stmt: $phi10.0 = $4build_list.0
DEBUG:numba.core.ssa:on stmt: jump 8
DEBUG:numba.core.ssa:==== SSA block analysis pass on 8
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A162DC450>
DEBUG:numba.core.ssa:on stmt: $8for_iter.2 = iternext(value=$phi8.1)
DEBUG:numba.core.ssa:on stmt: $8for_iter.3 = pair_first(value=$8for_iter.2)
DEBUG:numba.core.ssa:on stmt: $8for_iter.4 = pair_second(value=$8for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi10.2 = $8for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $8for_iter.4, 10, 44
DEBUG:numba.core.ssa:==== SSA block analysis pass on 10
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A162DC450>
DEBUG:numba.core.ssa:on stmt: x = $phi10.2
DEBUG:numba.core.ssa:on stmt: $12load_global.3 = global(str: <class 'str'>)
DEBUG:numba.core.ssa:on stmt: $30call.6 = call $12load_global.3(x, func=$12load_global.3, args=[Var(x, arrayobj.py:1654)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $40list_append.7 = getattr(value=$phi10.0, attr=append)
DEBUG:numba.core.ssa:on stmt: $40list_append.8 = call $40list_append.7($30call.6, func=$40list_append.7, args=(Var($30call.6, arrayobj.py:1654),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 8
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A162DC450>
DEBUG:numba.core.ssa:on stmt: $44return_value.1 = cast(value=$phi44.0)
DEBUG:numba.core.ssa:on stmt: return $44return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$12load_global.3': [(<numba.core.ir.Assign object at 0x0000019A162D9DD0>,
                                   10)],
             '$30call.6': [(<numba.core.ir.Assign object at 0x0000019A162DA2D0>,
                            10)],
             '$40list_append.7': [(<numba.core.ir.Assign object at 0x0000019A162DA4D0>,
                                   10)],
             '$40list_append.8': [(<numba.core.ir.Assign object at 0x0000019A162DA610>,
                                   10)],
             '$44return_value.1': [(<numba.core.ir.Assign object at 0x0000019A162DA8D0>,
                                    44)],
             '$4build_list.0': [(<numba.core.ir.Assign object at 0x0000019A162D0690>,
                                 0)],
             '$8for_iter.2': [(<numba.core.ir.Assign object at 0x0000019A162D9690>,
                               8)],
             '$8for_iter.3': [(<numba.core.ir.Assign object at 0x0000019A162D9790>,
                               8)],
             '$8for_iter.4': [(<numba.core.ir.Assign object at 0x0000019A162D9890>,
                               8)],
             '$phi10.0': [(<numba.core.ir.Assign object at 0x0000019A162D9210>,
                           0)],
             '$phi10.2': [(<numba.core.ir.Assign object at 0x0000019A162D9950>,
                           8)],
             '$phi44.0': [(<numba.core.ir.Assign object at 0x0000019A162D8810>,
                           0)],
             '$phi8.1': [(<numba.core.ir.Assign object at 0x0000019A162CA250>,
                          0)],
             'implicit0': [(<numba.core.ir.Assign object at 0x0000019A162D33D0>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A162D9C10>, 10)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A162DBE90>
DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A162DB850>
DEBUG:numba.core.ssa:on stmt: src_shapes = arg(0, name=src_shapes)
DEBUG:numba.core.ssa:on stmt: index_shape = arg(1, name=index_shape)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $22call.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const32.4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $34compare_op.5 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: bool40 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $40pred = call bool40($34compare_op.5, func=bool40, args=(Var($34compare_op.5, arrayobj.py:1651),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block analysis pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A162DB850>
DEBUG:numba.core.ssa:on stmt: $const42.0.2 = const(str, ()
DEBUG:numba.core.ssa:on stmt: $const46.2.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $48binary_subscr.3 = static_getitem(value=src_shapes, index=0, index_var=$const46.2.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $58format_value.4 = global(str: <class 'str'>)
DEBUG:numba.core.ssa:on stmt: $58format_value.5 = call $58format_value.4($48binary_subscr.3, func=$58format_value.4, args=(Var($48binary_subscr.3, arrayobj.py:1652),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const60.6.4 = const(str, ,))
DEBUG:numba.core.ssa:on stmt: $62build_string.7 = $const42.0.2 + $58format_value.5
DEBUG:numba.core.ssa:on stmt: shape_str = $62build_string.7 + $const60.6.4
DEBUG:numba.core.ssa:on stmt: jump 272
DEBUG:numba.core.ssa:==== SSA block analysis pass on 272
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A162DB850>
DEBUG:numba.core.ssa:on stmt: $138load_global.0 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $156call.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $const166.4.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $168compare_op.5 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: bool174 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $174pred = call bool174($168compare_op.5, func=bool174, args=(Var($168compare_op.5, arrayobj.py:1655),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 281
DEBUG:numba.core.ssa:==== SSA block analysis pass on 281
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A162DB850>
DEBUG:numba.core.ssa:on stmt: $const176.0.2 = const(str, ()
DEBUG:numba.core.ssa:on stmt: $const180.2.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $182binary_subscr.3 = static_getitem(value=index_shape, index=0, index_var=$const180.2.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $192format_value.4 = global(str: <class 'str'>)
DEBUG:numba.core.ssa:on stmt: $192format_value.5 = call $192format_value.4($182binary_subscr.3, func=$192format_value.4, args=(Var($182binary_subscr.3, arrayobj.py:1656),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const194.6.4 = const(str, ,))
DEBUG:numba.core.ssa:on stmt: $196build_string.7 = $const176.0.2 + $192format_value.5
DEBUG:numba.core.ssa:on stmt: index_str = $196build_string.7 + $const194.6.4
DEBUG:numba.core.ssa:on stmt: jump 364
DEBUG:numba.core.ssa:==== SSA block analysis pass on 364
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A162DB850>
DEBUG:numba.core.ssa:on stmt: $const272.0.9 = const(str, cannot assign slice of shape )
DEBUG:numba.core.ssa:on stmt: $276format_value.2 = global(str: <class 'str'>)
DEBUG:numba.core.ssa:on stmt: $276format_value.3 = call $276format_value.2(shape_str, func=$276format_value.2, args=(Var(shape_str, arrayobj.py:1652),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const278.4.10 = const(str,  from input of shape )
DEBUG:numba.core.ssa:on stmt: $282format_value.6 = global(str: <class 'str'>)
DEBUG:numba.core.ssa:on stmt: $282format_value.7 = call $282format_value.6(index_str, func=$282format_value.6, args=(Var(index_str, arrayobj.py:1656),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $284build_string.8 = $const272.0.9 + $276format_value.3
DEBUG:numba.core.ssa:on stmt: $284build_string.9 = $284build_string.8 + $const278.4.10
DEBUG:numba.core.ssa:on stmt: msg = $284build_string.9 + $282format_value.7
DEBUG:numba.core.ssa:on stmt: $288load_global.11 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $306call.14 = call $288load_global.11(msg, func=$288load_global.11, args=[Var(msg, arrayobj.py:1659)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <dynamic> raise <class 'ValueError'>(Var(msg, arrayobj.py:1659))
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$138load_global.0': [(<numba.core.ir.Assign object at 0x0000019A162C8F90>,
                                    272)],
             '$156call.3': [(<numba.core.ir.Assign object at 0x0000019A162C94D0>,
                             272)],
             '$168compare_op.5': [(<numba.core.ir.Assign object at 0x0000019A162C98D0>,
                                   272)],
             '$174pred': [(<numba.core.ir.Assign object at 0x0000019A162C9D50>,
                           272)],
             '$182binary_subscr.3': [(<numba.core.ir.Assign object at 0x0000019A162DB7D0>,
                                      281)],
             '$192format_value.4': [(<numba.core.ir.Assign object at 0x0000019A162CA7D0>,
                                     281)],
             '$192format_value.5': [(<numba.core.ir.Assign object at 0x0000019A162CA990>,
                                     281)],
             '$196build_string.7': [(<numba.core.ir.Assign object at 0x0000019A162CADD0>,
                                     281)],
             '$22call.3': [(<numba.core.ir.Assign object at 0x0000019A162C53D0>,
                            0)],
             '$276format_value.2': [(<numba.core.ir.Assign object at 0x0000019A162CD4D0>,
                                     364)],
             '$276format_value.3': [(<numba.core.ir.Assign object at 0x0000019A162CD650>,
                                     364)],
             '$282format_value.6': [(<numba.core.ir.Assign object at 0x0000019A162CDB90>,
                                     364)],
             '$282format_value.7': [(<numba.core.ir.Assign object at 0x0000019A162CDD10>,
                                     364)],
             '$284build_string.8': [(<numba.core.ir.Assign object at 0x0000019A162CDF50>,
                                     364)],
             '$284build_string.9': [(<numba.core.ir.Assign object at 0x0000019A162CE090>,
                                     364)],
             '$288load_global.11': [(<numba.core.ir.Assign object at 0x0000019A162CE4D0>,
                                     364)],
             '$306call.14': [(<numba.core.ir.Assign object at 0x0000019A162CE990>,
                              364)],
             '$34compare_op.5': [(<numba.core.ir.Assign object at 0x0000019A162C5890>,
                                  0)],
             '$40pred': [(<numba.core.ir.Assign object at 0x0000019A162C5BD0>,
                          0)],
             '$48binary_subscr.3': [(<numba.core.ir.Assign object at 0x0000019A162DBE90>,
                                     42)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A162C3190>,
                                  0)],
             '$58format_value.4': [(<numba.core.ir.Assign object at 0x0000019A162C65D0>,
                                    42)],
             '$58format_value.5': [(<numba.core.ir.Assign object at 0x0000019A162C6790>,
                                    42)],
             '$62build_string.7': [(<numba.core.ir.Assign object at 0x0000019A162C6BD0>,
                                    42)],
             '$const166.4.1': [(<numba.core.ir.Assign object at 0x0000019A162C96D0>,
                                272)],
             '$const176.0.2': [(<numba.core.ir.Assign object at 0x0000019A162C9FD0>,
                                281)],
             '$const180.2.3': [(<numba.core.ir.Assign object at 0x0000019A162CA350>,
                                281)],
             '$const194.6.4': [(<numba.core.ir.Assign object at 0x0000019A162CAB50>,
                                281)],
             '$const272.0.9': [(<numba.core.ir.Assign object at 0x0000019A162CD150>,
                                364)],
             '$const278.4.10': [(<numba.core.ir.Assign object at 0x0000019A162CD810>,
                                 364)],
             '$const32.4.1': [(<numba.core.ir.Assign object at 0x0000019A162C56D0>,
                               0)],
             '$const42.0.2': [(<numba.core.ir.Assign object at 0x0000019A162C5E10>,
                               42)],
             '$const46.2.3': [(<numba.core.ir.Assign object at 0x0000019A162C6190>,
                               42)],
             '$const60.6.4': [(<numba.core.ir.Assign object at 0x0000019A162C6950>,
                               42)],
             'bool174': [(<numba.core.ir.Assign object at 0x0000019A162C9B90>,
                          272)],
             'bool40': [(<numba.core.ir.Assign object at 0x0000019A162C5A90>,
                         0)],
             'index_shape': [(<numba.core.ir.Assign object at 0x0000019A162C2FD0>,
                              0)],
             'index_str': [(<numba.core.ir.Assign object at 0x0000019A162CAF50>,
                            281)],
             'msg': [(<numba.core.ir.Assign object at 0x0000019A162CE210>,
                      364)],
             'shape_str': [(<numba.core.ir.Assign object at 0x0000019A162C6D50>,
                            42)],
             'src_shapes': [(<numba.core.ir.Assign object at 0x0000019A162C1FD0>,
                             0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A162DB850>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1019)
           2	RESUME(arg=0, lineno=1019)
           4	LOAD_CONST(arg=1, lineno=1020)
           6	STORE_FAST(arg=1, lineno=1020)
           8	LOAD_GLOBAL(arg=1, lineno=1021)
          20	LOAD_FAST(arg=0, lineno=1021)
          22	LOAD_FAST(arg=1, lineno=1021)
          24	PRECALL(arg=2, lineno=1021)
          28	CALL(arg=2, lineno=1021)
          38	LOAD_CONST(arg=2, lineno=1021)
          40	COMPARE_OP(arg=2, lineno=1021)
          46	POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=1021)
          48	PUSH_NULL(arg=None, lineno=1022)
          50	LOAD_GLOBAL(arg=3, lineno=1022)
          62	LOAD_FAST(arg=0, lineno=1022)
          64	LOAD_FAST(arg=1, lineno=1022)
          66	PRECALL(arg=2, lineno=1022)
          70	CALL(arg=2, lineno=1022)
          80	PRECALL(arg=0, lineno=1022)
          84	CALL(arg=0, lineno=1022)
          94	RETURN_VALUE(arg=None, lineno=1022)
>         96	LOAD_GLOBAL(arg=5, lineno=1024)
         108	LOAD_FAST(arg=0, lineno=1024)
         110	PRECALL(arg=1, lineno=1024)
         114	CALL(arg=1, lineno=1024)
         124	RETURN_VALUE(arg=None, lineno=1024)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1019)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1019)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1020)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=STORE_FAST(arg=1, lineno=1020)
DEBUG:numba.core.byteflow:stack ['$const4.0.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=1021)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=1021)
DEBUG:numba.core.byteflow:stack ['$null$8.2', '$8load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=1, lineno=1021)
DEBUG:numba.core.byteflow:stack ['$null$8.2', '$8load_global.1', '$object20.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=PRECALL(arg=2, lineno=1021)
DEBUG:numba.core.byteflow:stack ['$null$8.2', '$8load_global.1', '$object20.3', '$attr22.4']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL(arg=2, lineno=1021)
DEBUG:numba.core.byteflow:stack ['$null$8.2', '$8load_global.1', '$object20.3', '$attr22.4']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=1021)
DEBUG:numba.core.byteflow:stack ['$28call.5']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=2, lineno=1021)
DEBUG:numba.core.byteflow:stack ['$28call.5', '$const38.6.2']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=1021)
DEBUG:numba.core.byteflow:stack ['$40compare_op.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=48 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=48, inst=PUSH_NULL(arg=None, lineno=1022)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_GLOBAL(arg=3, lineno=1022)
DEBUG:numba.core.byteflow:stack ['$null$48.0']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=1022)
DEBUG:numba.core.byteflow:stack ['$null$48.0', '$null$50.2', '$50load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=1, lineno=1022)
DEBUG:numba.core.byteflow:stack ['$null$48.0', '$null$50.2', '$50load_global.1', '$object62.3']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=PRECALL(arg=2, lineno=1022)
DEBUG:numba.core.byteflow:stack ['$null$48.0', '$null$50.2', '$50load_global.1', '$object62.3', '$attr64.4']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=CALL(arg=2, lineno=1022)
DEBUG:numba.core.byteflow:stack ['$null$48.0', '$null$50.2', '$50load_global.1', '$object62.3', '$attr64.4']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=PRECALL(arg=0, lineno=1022)
DEBUG:numba.core.byteflow:stack ['$null$48.0', '$70call.5']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=CALL(arg=0, lineno=1022)
DEBUG:numba.core.byteflow:stack ['$null$48.0', '$70call.5']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=1022)
DEBUG:numba.core.byteflow:stack ['$84call.6']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=96 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=96 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_GLOBAL(arg=5, lineno=1024)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_FAST(arg=0, lineno=1024)
DEBUG:numba.core.byteflow:stack ['$null$96.1', '$96load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=PRECALL(arg=1, lineno=1024)
DEBUG:numba.core.byteflow:stack ['$null$96.1', '$96load_global.0', '$object108.2']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=CALL(arg=1, lineno=1024)
DEBUG:numba.core.byteflow:stack ['$null$96.1', '$96load_global.0', '$object108.2']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=RETURN_VALUE(arg=None, lineno=1024)
DEBUG:numba.core.byteflow:stack ['$114call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=96 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0.1'}), (6, {'value': '$const4.0.1'}), (8, {'idx': 0, 'res': '$8load_global.1'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {'res': '$object20.3'}), (22, {'res': '$attr22.4'}), (24, {}), (26, {}), (28, {'func': '$8load_global.1', 'args': ['$object20.3', '$attr22.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'res': '$const38.6.2'}), (40, {'lhs': '$28call.5', 'rhs': '$const38.6.2', 'res': '$40compare_op.7'}), (42, {}), (44, {}), (46, {'pred': '$40compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 96: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {}), (50, {'idx': 1, 'res': '$50load_global.1'}), (52, {}), (54, {}), (56, {}), (58, {}), (60, {}), (62, {'res': '$object62.3'}), (64, {'res': '$attr64.4'}), (66, {}), (68, {}), (70, {'func': '$50load_global.1', 'args': ['$object62.3', '$attr64.4'], 'kw_names': None, 'res': '$70call.5'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'func': '$70call.5', 'args': [], 'kw_names': None, 'res': '$84call.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {'retval': '$84call.6', 'castval': '$94return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'idx': 2, 'res': '$96load_global.0'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {'res': '$object108.2'}), (110, {}), (112, {}), (114, {'func': '$96load_global.0', 'args': ['$object108.2'], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'retval': '$114call.3', 'castval': '$124return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    object = arg(0, name=object)             ['object']
    attr = const(str, __str__)               ['attr']
    $8load_global.1 = global(hasattr: <built-in function hasattr>) ['$8load_global.1']
    $28call.5 = call $8load_global.1(object, attr, func=$8load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$28call.5', '$8load_global.1', 'attr', 'object']
    $const38.6.2 = const(bool, True)         ['$const38.6.2']
    $40compare_op.7 = $28call.5 == $const38.6.2 ['$28call.5', '$40compare_op.7', '$const38.6.2']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($40compare_op.7, func=bool46, args=(Var($40compare_op.7, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.7', '$46pred', 'bool46']
    branch $46pred, 48, 96                   ['$46pred']
label 48:
    $50load_global.1 = global(getattr: <built-in function getattr>) ['$50load_global.1']
    $70call.5 = call $50load_global.1(object, attr, func=$50load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.1', '$70call.5', 'attr', 'object']
    $84call.6 = call $70call.5(func=$70call.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$70call.5', '$84call.6']
    $94return_value.7 = cast(value=$84call.6) ['$84call.6', '$94return_value.7']
    return $94return_value.7                 ['$94return_value.7']
label 96:
    $96load_global.0 = global(repr: <built-in function repr>) ['$96load_global.0']
    $114call.3 = call $96load_global.0(object, func=$96load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$96load_global.0', 'object']
    $124return_value.4 = cast(value=$114call.3) ['$114call.3', '$124return_value.4']
    return $124return_value.4                ['$124return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A162C3490>
DEBUG:numba.core.ssa:on stmt: object = arg(0, name=object)
DEBUG:numba.core.ssa:on stmt: attr = const(str, __str__)
DEBUG:numba.core.ssa:on stmt: $8load_global.1 = global(hasattr: <built-in function hasattr>)
DEBUG:numba.core.ssa:on stmt: $28call.5 = call $8load_global.1(object, attr, func=$8load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const38.6.2 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: $40compare_op.7 = $28call.5 == $const38.6.2
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($40compare_op.7, func=bool46, args=(Var($40compare_op.7, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 48, 96
DEBUG:numba.core.ssa:==== SSA block analysis pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A162C3490>
DEBUG:numba.core.ssa:on stmt: $50load_global.1 = global(getattr: <built-in function getattr>)
DEBUG:numba.core.ssa:on stmt: $70call.5 = call $50load_global.1(object, attr, func=$50load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $84call.6 = call $70call.5(func=$70call.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $94return_value.7 = cast(value=$84call.6)
DEBUG:numba.core.ssa:on stmt: return $94return_value.7
DEBUG:numba.core.ssa:==== SSA block analysis pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A162C3490>
DEBUG:numba.core.ssa:on stmt: $96load_global.0 = global(repr: <built-in function repr>)
DEBUG:numba.core.ssa:on stmt: $114call.3 = call $96load_global.0(object, func=$96load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $124return_value.4 = cast(value=$114call.3)
DEBUG:numba.core.ssa:on stmt: return $124return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x0000019A162E5750>,
                             96)],
             '$124return_value.4': [(<numba.core.ir.Assign object at 0x0000019A162E5990>,
                                     96)],
             '$28call.5': [(<numba.core.ir.Assign object at 0x0000019A162D2C90>,
                            0)],
             '$40compare_op.7': [(<numba.core.ir.Assign object at 0x0000019A162D2FD0>,
                                  0)],
             '$46pred': [(<numba.core.ir.Assign object at 0x0000019A162DAA50>,
                          0)],
             '$50load_global.1': [(<numba.core.ir.Assign object at 0x0000019A162DBED0>,
                                   48)],
             '$70call.5': [(<numba.core.ir.Assign object at 0x0000019A162E4A90>,
                            48)],
             '$84call.6': [(<numba.core.ir.Assign object at 0x0000019A162E4DD0>,
                            48)],
             '$8load_global.1': [(<numba.core.ir.Assign object at 0x0000019A162CECD0>,
                                  0)],
             '$94return_value.7': [(<numba.core.ir.Assign object at 0x0000019A162E50D0>,
                                    48)],
             '$96load_global.0': [(<numba.core.ir.Assign object at 0x0000019A162E52D0>,
                                   96)],
             '$const38.6.2': [(<numba.core.ir.Assign object at 0x0000019A162D3950>,
                               0)],
             'attr': [(<numba.core.ir.Assign object at 0x0000019A162CFE90>, 0)],
             'bool46': [(<numba.core.ir.Assign object at 0x0000019A162D10D0>,
                         0)],
             'object': [(<numba.core.ir.Assign object at 0x0000019A162C9D90>,
                         0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A162C3490>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          16	LOAD_FAST(arg=0, lineno=999)
          18	LOAD_FAST(arg=1, lineno=999)
          20	PRECALL(arg=2, lineno=999)
          24	CALL(arg=2, lineno=999)
          34	RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=PRECALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:stack ['$24call.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$obj16.2'}), (18, {'res': '$name18.3'}), (20, {}), (22, {}), (24, {'func': '$4load_global.0', 'args': ['$obj16.2', '$name18.3'], 'kw_names': None, 'res': '$24call.4'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'retval': '$24call.4', 'castval': '$34return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$24call.4', '$4load_global.0', 'name', 'obj']
    $34return_value.5 = cast(value=$24call.4) ['$24call.4', '$34return_value.5']
    return $34return_value.5                 ['$34return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A162F7690>
DEBUG:numba.core.ssa:on stmt: obj = arg(0, name=obj)
DEBUG:numba.core.ssa:on stmt: name = arg(1, name=name)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
DEBUG:numba.core.ssa:on stmt: $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34return_value.5 = cast(value=$24call.4)
DEBUG:numba.core.ssa:on stmt: return $34return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$24call.4': [(<numba.core.ir.Assign object at 0x0000019A162F7010>,
                            0)],
             '$34return_value.5': [(<numba.core.ir.Assign object at 0x0000019A162F7190>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A162F6A10>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x0000019A162F6790>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x0000019A162F6690>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A162F7690>
DEBUG:numba.core.typeinfer:captured error
Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(bool, 1, 'A', False, aligned=True), slice<a:b>, Array(bool, 1, 'A', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(int64, unicode_type)
 
There are 2 candidate implementations:
[1m - Of which 2 did not match due to:
 Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
   With argument(s): '(int64, unicode_type)':[0m
[1m  Rejected as the implementation raised a specific error:
    RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
DEBUG:numba.core.typeinfer:captured error
Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(bool, 1, 'A', False, aligned=True), slice<a:b>, Array(bool, 1, 'A', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(int64, unicode_type)
 
There are 2 candidate implementations:
[1m  - Of which 2 did not match due to:
  Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
    With argument(s): '(int64, unicode_type)':[0m
[1m   Rejected as the implementation raised a specific error:
     RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          16	LOAD_FAST(arg=0, lineno=999)
          18	LOAD_FAST(arg=1, lineno=999)
          20	PRECALL(arg=2, lineno=999)
          24	CALL(arg=2, lineno=999)
          34	RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=PRECALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:stack ['$24call.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$obj16.2'}), (18, {'res': '$name18.3'}), (20, {}), (22, {}), (24, {'func': '$4load_global.0', 'args': ['$obj16.2', '$name18.3'], 'kw_names': None, 'res': '$24call.4'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'retval': '$24call.4', 'castval': '$34return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$24call.4', '$4load_global.0', 'name', 'obj']
    $34return_value.5 = cast(value=$24call.4) ['$24call.4', '$34return_value.5']
    return $34return_value.5                 ['$34return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17379050>
DEBUG:numba.core.ssa:on stmt: obj = arg(0, name=obj)
DEBUG:numba.core.ssa:on stmt: name = arg(1, name=name)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
DEBUG:numba.core.ssa:on stmt: $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34return_value.5 = cast(value=$24call.4)
DEBUG:numba.core.ssa:on stmt: return $34return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$24call.4': [(<numba.core.ir.Assign object at 0x0000019A17378D90>,
                            0)],
             '$34return_value.5': [(<numba.core.ir.Assign object at 0x0000019A17378F10>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17378790>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x0000019A17378510>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x0000019A17378410>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17379050>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=954)
           2	RESUME(arg=0, lineno=954)
           4	LOAD_GLOBAL(arg=1, lineno=955)
          16	LOAD_FAST(arg=0, lineno=955)
          18	LOAD_FAST(arg=1, lineno=955)
          20	LOAD_GLOBAL(arg=2, lineno=955)
          32	PRECALL(arg=3, lineno=955)
          36	CALL(arg=3, lineno=955)
          46	RETURN_VALUE(arg=None, lineno=955)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=954)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=954)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=955)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=2, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=PRECALL(arg=3, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3', '$20load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=CALL(arg=3, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3', '$20load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=955)
DEBUG:numba.core.byteflow:stack ['$36call.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$obj16.2'}), (18, {'res': '$name18.3'}), (20, {'idx': 1, 'res': '$20load_global.4'}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {}), (36, {'func': '$4load_global.0', 'args': ['$obj16.2', '$name18.3', '$20load_global.4'], 'kw_names': None, 'res': '$36call.5'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'retval': '$36call.5', 'castval': '$46return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$4load_global.0']
    $20load_global.4 = global(_getattr_default: _getattr_default_type()) ['$20load_global.4']
    $36call.5 = call $4load_global.0(obj, name, $20load_global.4, func=$4load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($20load_global.4, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.4', '$36call.5', '$4load_global.0', 'name', 'obj']
    $46return_value.6 = cast(value=$36call.5) ['$36call.5', '$46return_value.6']
    return $46return_value.6                 ['$46return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1739F210>
DEBUG:numba.core.ssa:on stmt: obj = arg(0, name=obj)
DEBUG:numba.core.ssa:on stmt: name = arg(1, name=name)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>)
DEBUG:numba.core.ssa:on stmt: $20load_global.4 = global(_getattr_default: _getattr_default_type())
DEBUG:numba.core.ssa:on stmt: $36call.5 = call $4load_global.0(obj, name, $20load_global.4, func=$4load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($20load_global.4, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $46return_value.6 = cast(value=$36call.5)
DEBUG:numba.core.ssa:on stmt: return $46return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$20load_global.4': [(<numba.core.ir.Assign object at 0x0000019A1739DE50>,
                                   0)],
             '$36call.5': [(<numba.core.ir.Assign object at 0x0000019A1739DFD0>,
                            0)],
             '$46return_value.6': [(<numba.core.ir.Assign object at 0x0000019A1739E1D0>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A1739D990>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x0000019A1739D6D0>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x0000019A1739D5D0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A16330190>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2572)
           2	COPY_FREE_VARS(arg=1, lineno=2572)
           4	RESUME(arg=0, lineno=2572)
           6	LOAD_CONST(arg=1, lineno=2573)
           8	STORE_FAST(arg=1, lineno=2573)
          10	LOAD_FAST(arg=0, lineno=2574)
          12	LOAD_CONST(arg=2, lineno=2574)
          14	COMPARE_OP(arg=0, lineno=2574)
          20	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=2574)
          22	LOAD_FAST(arg=0, lineno=2575)
          24	UNARY_NEGATIVE(arg=None, lineno=2575)
          26	STORE_FAST(arg=0, lineno=2575)
          28	LOAD_CONST(arg=3, lineno=2576)
          30	STORE_FAST(arg=1, lineno=2576)
>         32	LOAD_FAST(arg=0, lineno=2577)
          34	LOAD_CONST(arg=2, lineno=2577)
          36	COMPARE_OP(arg=2, lineno=2577)
          42	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=2577)
          44	LOAD_CONST(arg=4, lineno=2578)
          46	RETURN_VALUE(arg=None, lineno=2578)
>         48	LOAD_FAST(arg=1, lineno=2579)
          50	LOAD_CONST(arg=5, lineno=2579)
          52	BINARY_OP(arg=0, lineno=2579)
          56	LOAD_GLOBAL(arg=1, lineno=2579)
          68	LOAD_GLOBAL(arg=3, lineno=2579)
          80	LOAD_ATTR(arg=2, lineno=2579)
          90	LOAD_GLOBAL(arg=3, lineno=2579)
         102	LOAD_ATTR(arg=3, lineno=2579)
         112	LOAD_FAST(arg=0, lineno=2579)
         114	PRECALL(arg=1, lineno=2579)
         118	CALL(arg=1, lineno=2579)
         128	PRECALL(arg=1, lineno=2579)
         132	CALL(arg=1, lineno=2579)
         142	PRECALL(arg=1, lineno=2579)
         146	CALL(arg=1, lineno=2579)
         156	BINARY_OP(arg=0, lineno=2579)
         160	STORE_FAST(arg=2, lineno=2579)
         162	LOAD_GLOBAL(arg=8, lineno=2580)
         174	STORE_FAST(arg=3, lineno=2580)
         176	LOAD_GLOBAL(arg=11, lineno=2581)
         188	LOAD_FAST(arg=3, lineno=2581)
         190	PRECALL(arg=1, lineno=2581)
         194	CALL(arg=1, lineno=2581)
         204	STORE_FAST(arg=4, lineno=2581)
         206	LOAD_GLOBAL(arg=13, lineno=2582)
         218	LOAD_FAST(arg=3, lineno=2582)
         220	LOAD_FAST(arg=4, lineno=2582)
         222	LOAD_FAST(arg=2, lineno=2582)
         224	LOAD_CONST(arg=3, lineno=2582)
         226	PRECALL(arg=4, lineno=2582)
         230	CALL(arg=4, lineno=2582)
         240	STORE_FAST(arg=5, lineno=2582)
         242	LOAD_FAST(arg=1, lineno=2583)
         244	POP_JUMP_FORWARD_IF_FALSE(arg=30, lineno=2583)
         246	LOAD_GLOBAL(arg=15, lineno=2584)
         258	LOAD_FAST(arg=5, lineno=2584)
         260	LOAD_CONST(arg=2, lineno=2584)
         262	LOAD_GLOBAL(arg=17, lineno=2584)
         274	LOAD_CONST(arg=6, lineno=2584)
         276	PRECALL(arg=1, lineno=2584)
         280	CALL(arg=1, lineno=2584)
         290	PRECALL(arg=3, lineno=2584)
         294	CALL(arg=3, lineno=2584)
         304	POP_TOP(arg=None, lineno=2584)
>        306	LOAD_FAST(arg=2, lineno=2585)
         308	LOAD_CONST(arg=5, lineno=2585)
         310	BINARY_OP(arg=10, lineno=2585)
         314	STORE_FAST(arg=6, lineno=2585)
         316	LOAD_FAST(arg=0, lineno=2586)
         318	LOAD_CONST(arg=2, lineno=2586)
         320	COMPARE_OP(arg=4, lineno=2586)
         326	POP_JUMP_FORWARD_IF_FALSE(arg=65, lineno=2586)
>        328	LOAD_GLOBAL(arg=19, lineno=2587)
         340	LOAD_FAST(arg=0, lineno=2587)
         342	LOAD_DEREF(arg=9, lineno=2587)
         344	PRECALL(arg=2, lineno=2587)
         348	CALL(arg=2, lineno=2587)
         358	UNPACK_SEQUENCE(arg=2, lineno=2587)
         362	STORE_FAST(arg=0, lineno=2587)
         364	STORE_FAST(arg=7, lineno=2587)
         366	LOAD_GLOBAL(arg=17, lineno=2588)
         378	LOAD_CONST(arg=4, lineno=2588)
         380	PRECALL(arg=1, lineno=2588)
         384	CALL(arg=1, lineno=2588)
         394	LOAD_FAST(arg=7, lineno=2588)
         396	BINARY_OP(arg=0, lineno=2588)
         400	STORE_FAST(arg=8, lineno=2588)
         402	LOAD_GLOBAL(arg=15, lineno=2589)
         414	LOAD_FAST(arg=5, lineno=2589)
         416	LOAD_FAST(arg=6, lineno=2589)
         418	LOAD_FAST(arg=8, lineno=2589)
         420	PRECALL(arg=3, lineno=2589)
         424	CALL(arg=3, lineno=2589)
         434	POP_TOP(arg=None, lineno=2589)
         436	LOAD_FAST(arg=6, lineno=2590)
         438	LOAD_CONST(arg=5, lineno=2590)
         440	BINARY_OP(arg=23, lineno=2590)
         444	STORE_FAST(arg=6, lineno=2590)
         446	LOAD_FAST(arg=0, lineno=2586)
         448	LOAD_CONST(arg=2, lineno=2586)
         450	COMPARE_OP(arg=4, lineno=2586)
         456	POP_JUMP_BACKWARD_IF_TRUE(arg=65, lineno=2586)
>        458	LOAD_FAST(arg=5, lineno=2591)
         460	RETURN_VALUE(arg=None, lineno=2591)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2572)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=2572)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=RESUME(arg=0, lineno=2572)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2573)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=1, lineno=2573)
DEBUG:numba.core.byteflow:stack ['$const6.0.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2574)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=2, lineno=2574)
DEBUG:numba.core.byteflow:stack ['$n10.1']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=2574)
DEBUG:numba.core.byteflow:stack ['$n10.1', '$const12.2.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=2574)
DEBUG:numba.core.byteflow:stack ['$14compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=22, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=22 nstack_initial=0), State(pc_initial=32 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=22 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=2575)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=24, inst=UNARY_NEGATIVE(arg=None, lineno=2575)
DEBUG:numba.core.byteflow:stack ['$n22.0']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=STORE_FAST(arg=0, lineno=2575)
DEBUG:numba.core.byteflow:stack ['$24unary_negative.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_CONST(arg=3, lineno=2576)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=STORE_FAST(arg=1, lineno=2576)
DEBUG:numba.core.byteflow:stack ['$const28.2.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=32 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=2577)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=2, lineno=2577)
DEBUG:numba.core.byteflow:stack ['$n32.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=COMPARE_OP(arg=2, lineno=2577)
DEBUG:numba.core.byteflow:stack ['$n32.0', '$const34.1.2']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=2577)
DEBUG:numba.core.byteflow:stack ['$36compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=44 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=4, lineno=2578)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=2578)
DEBUG:numba.core.byteflow:stack ['$const44.0.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=48 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=2579)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_CONST(arg=5, lineno=2579)
DEBUG:numba.core.byteflow:stack ['$flag48.0']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=BINARY_OP(arg=0, lineno=2579)
DEBUG:numba.core.byteflow:stack ['$flag48.0', '$const50.1.5']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_GLOBAL(arg=1, lineno=2579)
DEBUG:numba.core.byteflow:stack ['$binop_add52.2']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_GLOBAL(arg=3, lineno=2579)
DEBUG:numba.core.byteflow:stack ['$binop_add52.2', '$null$56.4', '$56load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_ATTR(arg=2, lineno=2579)
DEBUG:numba.core.byteflow:stack ['$binop_add52.2', '$null$56.4', '$56load_global.3', '$null$68.6', '$68load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_GLOBAL(arg=3, lineno=2579)
DEBUG:numba.core.byteflow:stack ['$binop_add52.2', '$null$56.4', '$56load_global.3', '$null$68.6', '$80load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_ATTR(arg=3, lineno=2579)
DEBUG:numba.core.byteflow:stack ['$binop_add52.2', '$null$56.4', '$56load_global.3', '$null$68.6', '$80load_attr.7', '$null$90.9', '$90load_global.8']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_FAST(arg=0, lineno=2579)
DEBUG:numba.core.byteflow:stack ['$binop_add52.2', '$null$56.4', '$56load_global.3', '$null$68.6', '$80load_attr.7', '$null$90.9', '$102load_attr.10']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=PRECALL(arg=1, lineno=2579)
DEBUG:numba.core.byteflow:stack ['$binop_add52.2', '$null$56.4', '$56load_global.3', '$null$68.6', '$80load_attr.7', '$null$90.9', '$102load_attr.10', '$n112.11']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=CALL(arg=1, lineno=2579)
DEBUG:numba.core.byteflow:stack ['$binop_add52.2', '$null$56.4', '$56load_global.3', '$null$68.6', '$80load_attr.7', '$null$90.9', '$102load_attr.10', '$n112.11']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=PRECALL(arg=1, lineno=2579)
DEBUG:numba.core.byteflow:stack ['$binop_add52.2', '$null$56.4', '$56load_global.3', '$null$68.6', '$80load_attr.7', '$118call.12']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=CALL(arg=1, lineno=2579)
DEBUG:numba.core.byteflow:stack ['$binop_add52.2', '$null$56.4', '$56load_global.3', '$null$68.6', '$80load_attr.7', '$118call.12']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=PRECALL(arg=1, lineno=2579)
DEBUG:numba.core.byteflow:stack ['$binop_add52.2', '$null$56.4', '$56load_global.3', '$132call.13']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=CALL(arg=1, lineno=2579)
DEBUG:numba.core.byteflow:stack ['$binop_add52.2', '$null$56.4', '$56load_global.3', '$132call.13']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=BINARY_OP(arg=0, lineno=2579)
DEBUG:numba.core.byteflow:stack ['$binop_add52.2', '$146call.14']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=STORE_FAST(arg=2, lineno=2579)
DEBUG:numba.core.byteflow:stack ['$binop_add156.15']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_GLOBAL(arg=8, lineno=2580)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=174, inst=STORE_FAST(arg=3, lineno=2580)
DEBUG:numba.core.byteflow:stack ['$162load_global.16']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=LOAD_GLOBAL(arg=11, lineno=2581)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=3, lineno=2581)
DEBUG:numba.core.byteflow:stack ['$null$176.18', '$176load_global.17']
DEBUG:numba.core.byteflow:dispatch pc=190, inst=PRECALL(arg=1, lineno=2581)
DEBUG:numba.core.byteflow:stack ['$null$176.18', '$176load_global.17', '$kind188.19']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=CALL(arg=1, lineno=2581)
DEBUG:numba.core.byteflow:stack ['$null$176.18', '$176load_global.17', '$kind188.19']
DEBUG:numba.core.byteflow:dispatch pc=204, inst=STORE_FAST(arg=4, lineno=2581)
DEBUG:numba.core.byteflow:stack ['$194call.20']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=LOAD_GLOBAL(arg=13, lineno=2582)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=218, inst=LOAD_FAST(arg=3, lineno=2582)
DEBUG:numba.core.byteflow:stack ['$null$206.22', '$206load_global.21']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=4, lineno=2582)
DEBUG:numba.core.byteflow:stack ['$null$206.22', '$206load_global.21', '$kind218.23']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=LOAD_FAST(arg=2, lineno=2582)
DEBUG:numba.core.byteflow:stack ['$null$206.22', '$206load_global.21', '$kind218.23', '$char_width220.24']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=LOAD_CONST(arg=3, lineno=2582)
DEBUG:numba.core.byteflow:stack ['$null$206.22', '$206load_global.21', '$kind218.23', '$char_width220.24', '$length222.25']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=PRECALL(arg=4, lineno=2582)
DEBUG:numba.core.byteflow:stack ['$null$206.22', '$206load_global.21', '$kind218.23', '$char_width220.24', '$length222.25', '$const224.26.3']
DEBUG:numba.core.byteflow:dispatch pc=230, inst=CALL(arg=4, lineno=2582)
DEBUG:numba.core.byteflow:stack ['$null$206.22', '$206load_global.21', '$kind218.23', '$char_width220.24', '$length222.25', '$const224.26.3']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=STORE_FAST(arg=5, lineno=2582)
DEBUG:numba.core.byteflow:stack ['$230call.27']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=LOAD_FAST(arg=1, lineno=2583)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=244, inst=POP_JUMP_FORWARD_IF_FALSE(arg=30, lineno=2583)
DEBUG:numba.core.byteflow:stack ['$flag242.28']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=246, stack=(), blockstack=(), npush=0), Edge(pc=306, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=246 nstack_initial=0), State(pc_initial=306 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=246 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=246, inst=LOAD_GLOBAL(arg=15, lineno=2584)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=258, inst=LOAD_FAST(arg=5, lineno=2584)
DEBUG:numba.core.byteflow:stack ['$null$246.1', '$246load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=LOAD_CONST(arg=2, lineno=2584)
DEBUG:numba.core.byteflow:stack ['$null$246.1', '$246load_global.0', '$s258.2']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=LOAD_GLOBAL(arg=17, lineno=2584)
DEBUG:numba.core.byteflow:stack ['$null$246.1', '$246load_global.0', '$s258.2', '$const260.3.2']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=LOAD_CONST(arg=6, lineno=2584)
DEBUG:numba.core.byteflow:stack ['$null$246.1', '$246load_global.0', '$s258.2', '$const260.3.2', '$null$262.5', '$262load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=PRECALL(arg=1, lineno=2584)
DEBUG:numba.core.byteflow:stack ['$null$246.1', '$246load_global.0', '$s258.2', '$const260.3.2', '$null$262.5', '$262load_global.4', '$const274.6.6']
DEBUG:numba.core.byteflow:dispatch pc=280, inst=CALL(arg=1, lineno=2584)
DEBUG:numba.core.byteflow:stack ['$null$246.1', '$246load_global.0', '$s258.2', '$const260.3.2', '$null$262.5', '$262load_global.4', '$const274.6.6']
DEBUG:numba.core.byteflow:dispatch pc=290, inst=PRECALL(arg=3, lineno=2584)
DEBUG:numba.core.byteflow:stack ['$null$246.1', '$246load_global.0', '$s258.2', '$const260.3.2', '$280call.7']
DEBUG:numba.core.byteflow:dispatch pc=294, inst=CALL(arg=3, lineno=2584)
DEBUG:numba.core.byteflow:stack ['$null$246.1', '$246load_global.0', '$s258.2', '$const260.3.2', '$280call.7']
DEBUG:numba.core.byteflow:dispatch pc=304, inst=POP_TOP(arg=None, lineno=2584)
DEBUG:numba.core.byteflow:stack ['$294call.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=306, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=306 nstack_initial=0), State(pc_initial=306 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=306 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=306, inst=LOAD_FAST(arg=2, lineno=2585)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=308, inst=LOAD_CONST(arg=5, lineno=2585)
DEBUG:numba.core.byteflow:stack ['$length306.0']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=BINARY_OP(arg=10, lineno=2585)
DEBUG:numba.core.byteflow:stack ['$length306.0', '$const308.1.5']
DEBUG:numba.core.byteflow:dispatch pc=314, inst=STORE_FAST(arg=6, lineno=2585)
DEBUG:numba.core.byteflow:stack ['$binop_sub310.2']
DEBUG:numba.core.byteflow:dispatch pc=316, inst=LOAD_FAST(arg=0, lineno=2586)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=318, inst=LOAD_CONST(arg=2, lineno=2586)
DEBUG:numba.core.byteflow:stack ['$n316.3']
DEBUG:numba.core.byteflow:dispatch pc=320, inst=COMPARE_OP(arg=4, lineno=2586)
DEBUG:numba.core.byteflow:stack ['$n316.3', '$const318.4.2']
DEBUG:numba.core.byteflow:dispatch pc=326, inst=POP_JUMP_FORWARD_IF_FALSE(arg=65, lineno=2586)
DEBUG:numba.core.byteflow:stack ['$320compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0), Edge(pc=458, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=306 nstack_initial=0), State(pc_initial=328 nstack_initial=0), State(pc_initial=458 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=458 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=328 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=328, inst=LOAD_GLOBAL(arg=19, lineno=2587)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=340, inst=LOAD_FAST(arg=0, lineno=2587)
DEBUG:numba.core.byteflow:stack ['$null$328.1', '$328load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=342, inst=LOAD_DEREF(arg=9, lineno=2587)
DEBUG:numba.core.byteflow:stack ['$null$328.1', '$328load_global.0', '$n340.2']
DEBUG:numba.core.byteflow:dispatch pc=344, inst=PRECALL(arg=2, lineno=2587)
DEBUG:numba.core.byteflow:stack ['$null$328.1', '$328load_global.0', '$n340.2', '$342load_deref.3']
DEBUG:numba.core.byteflow:dispatch pc=348, inst=CALL(arg=2, lineno=2587)
DEBUG:numba.core.byteflow:stack ['$null$328.1', '$328load_global.0', '$n340.2', '$342load_deref.3']
DEBUG:numba.core.byteflow:dispatch pc=358, inst=UNPACK_SEQUENCE(arg=2, lineno=2587)
DEBUG:numba.core.byteflow:stack ['$348call.4']
DEBUG:numba.core.byteflow:dispatch pc=362, inst=STORE_FAST(arg=0, lineno=2587)
DEBUG:numba.core.byteflow:stack ['$358unpack_sequence.6', '$358unpack_sequence.5']
DEBUG:numba.core.byteflow:dispatch pc=364, inst=STORE_FAST(arg=7, lineno=2587)
DEBUG:numba.core.byteflow:stack ['$358unpack_sequence.6']
DEBUG:numba.core.byteflow:dispatch pc=366, inst=LOAD_GLOBAL(arg=17, lineno=2588)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=378, inst=LOAD_CONST(arg=4, lineno=2588)
DEBUG:numba.core.byteflow:stack ['$null$366.9', '$366load_global.8']
DEBUG:numba.core.byteflow:dispatch pc=380, inst=PRECALL(arg=1, lineno=2588)
DEBUG:numba.core.byteflow:stack ['$null$366.9', '$366load_global.8', '$const378.10.4']
DEBUG:numba.core.byteflow:dispatch pc=384, inst=CALL(arg=1, lineno=2588)
DEBUG:numba.core.byteflow:stack ['$null$366.9', '$366load_global.8', '$const378.10.4']
DEBUG:numba.core.byteflow:dispatch pc=394, inst=LOAD_FAST(arg=7, lineno=2588)
DEBUG:numba.core.byteflow:stack ['$384call.11']
DEBUG:numba.core.byteflow:dispatch pc=396, inst=BINARY_OP(arg=0, lineno=2588)
DEBUG:numba.core.byteflow:stack ['$384call.11', '$digit394.12']
DEBUG:numba.core.byteflow:dispatch pc=400, inst=STORE_FAST(arg=8, lineno=2588)
DEBUG:numba.core.byteflow:stack ['$binop_add396.13']
DEBUG:numba.core.byteflow:dispatch pc=402, inst=LOAD_GLOBAL(arg=15, lineno=2589)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=414, inst=LOAD_FAST(arg=5, lineno=2589)
DEBUG:numba.core.byteflow:stack ['$null$402.15', '$402load_global.14']
DEBUG:numba.core.byteflow:dispatch pc=416, inst=LOAD_FAST(arg=6, lineno=2589)
DEBUG:numba.core.byteflow:stack ['$null$402.15', '$402load_global.14', '$s414.16']
DEBUG:numba.core.byteflow:dispatch pc=418, inst=LOAD_FAST(arg=8, lineno=2589)
DEBUG:numba.core.byteflow:stack ['$null$402.15', '$402load_global.14', '$s414.16', '$idx416.17']
DEBUG:numba.core.byteflow:dispatch pc=420, inst=PRECALL(arg=3, lineno=2589)
DEBUG:numba.core.byteflow:stack ['$null$402.15', '$402load_global.14', '$s414.16', '$idx416.17', '$c418.18']
DEBUG:numba.core.byteflow:dispatch pc=424, inst=CALL(arg=3, lineno=2589)
DEBUG:numba.core.byteflow:stack ['$null$402.15', '$402load_global.14', '$s414.16', '$idx416.17', '$c418.18']
DEBUG:numba.core.byteflow:dispatch pc=434, inst=POP_TOP(arg=None, lineno=2589)
DEBUG:numba.core.byteflow:stack ['$424call.19']
DEBUG:numba.core.byteflow:dispatch pc=436, inst=LOAD_FAST(arg=6, lineno=2590)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=438, inst=LOAD_CONST(arg=5, lineno=2590)
DEBUG:numba.core.byteflow:stack ['$idx436.20']
DEBUG:numba.core.byteflow:dispatch pc=440, inst=BINARY_OP(arg=23, lineno=2590)
DEBUG:numba.core.byteflow:stack ['$idx436.20', '$const438.21.5']
DEBUG:numba.core.byteflow:dispatch pc=444, inst=STORE_FAST(arg=6, lineno=2590)
DEBUG:numba.core.byteflow:stack ['$binop_isub440.22']
DEBUG:numba.core.byteflow:dispatch pc=446, inst=LOAD_FAST(arg=0, lineno=2586)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=448, inst=LOAD_CONST(arg=2, lineno=2586)
DEBUG:numba.core.byteflow:stack ['$n446.23']
DEBUG:numba.core.byteflow:dispatch pc=450, inst=COMPARE_OP(arg=4, lineno=2586)
DEBUG:numba.core.byteflow:stack ['$n446.23', '$const448.24.2']
DEBUG:numba.core.byteflow:dispatch pc=456, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=65, lineno=2586)
DEBUG:numba.core.byteflow:stack ['$450compare_op.25']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=458, stack=(), blockstack=(), npush=0), Edge(pc=328, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=458 nstack_initial=0), State(pc_initial=458 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=458 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=458, inst=LOAD_FAST(arg=5, lineno=2591)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=460, inst=RETURN_VALUE(arg=None, lineno=2591)
DEBUG:numba.core.byteflow:stack ['$s458.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=458 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=328 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=22 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=246 nstack_initial=0): set(),
             State(pc_initial=306 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=458 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$const6.0.1'}), (8, {'value': '$const6.0.1'}), (10, {'res': '$n10.1'}), (12, {'res': '$const12.2.2'}), (14, {'lhs': '$n10.1', 'rhs': '$const12.2.2', 'res': '$14compare_op.3'}), (16, {}), (18, {}), (20, {'pred': '$14compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={22: (), 32: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=22 nstack_initial=0):
AdaptBlockInfo(insts=((22, {'res': '$n22.0'}), (24, {'value': '$n22.0', 'res': '$24unary_negative.1'}), (26, {'value': '$24unary_negative.1'}), (28, {'res': '$const28.2.3'}), (30, {'value': '$const28.2.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$n32.0'}), (34, {'res': '$const34.1.2'}), (36, {'lhs': '$n32.0', 'rhs': '$const34.1.2', 'res': '$36compare_op.2'}), (38, {}), (40, {}), (42, {'pred': '$36compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$const44.0.4'}), (46, {'retval': '$const44.0.4', 'castval': '$46return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$flag48.0'}), (50, {'res': '$const50.1.5'}), (52, {'op': '+', 'lhs': '$flag48.0', 'rhs': '$const50.1.5', 'res': '$binop_add52.2'}), (54, {}), (56, {'idx': 0, 'res': '$56load_global.3'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'idx': 1, 'res': '$68load_global.5'}), (70, {}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'item': '$68load_global.5', 'res': '$80load_attr.7'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'idx': 1, 'res': '$90load_global.8'}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {'item': '$90load_global.8', 'res': '$102load_attr.10'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'res': '$n112.11'}), (114, {}), (116, {}), (118, {'func': '$102load_attr.10', 'args': ['$n112.11'], 'kw_names': None, 'res': '$118call.12'}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'func': '$80load_attr.7', 'args': ['$118call.12'], 'kw_names': None, 'res': '$132call.13'}), (134, {}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'func': '$56load_global.3', 'args': ['$132call.13'], 'kw_names': None, 'res': '$146call.14'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {'op': '+', 'lhs': '$binop_add52.2', 'rhs': '$146call.14', 'res': '$binop_add156.15'}), (158, {}), (160, {'value': '$binop_add156.15'}), (162, {'idx': 4, 'res': '$162load_global.16'}), (164, {}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$162load_global.16'}), (176, {'idx': 5, 'res': '$176load_global.17'}), (178, {}), (180, {}), (182, {}), (184, {}), (186, {}), (188, {'res': '$kind188.19'}), (190, {}), (192, {}), (194, {'func': '$176load_global.17', 'args': ['$kind188.19'], 'kw_names': None, 'res': '$194call.20'}), (196, {}), (198, {}), (200, {}), (202, {}), (204, {'value': '$194call.20'}), (206, {'idx': 6, 'res': '$206load_global.21'}), (208, {}), (210, {}), (212, {}), (214, {}), (216, {}), (218, {'res': '$kind218.23'}), (220, {'res': '$char_width220.24'}), (222, {'res': '$length222.25'}), (224, {'res': '$const224.26.3'}), (226, {}), (228, {}), (230, {'func': '$206load_global.21', 'args': ['$kind218.23', '$char_width220.24', '$length222.25', '$const224.26.3'], 'kw_names': None, 'res': '$230call.27'}), (232, {}), (234, {}), (236, {}), (238, {}), (240, {'value': '$230call.27'}), (242, {'res': '$flag242.28'}), (244, {'pred': '$flag242.28'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={246: (), 306: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=246 nstack_initial=0):
AdaptBlockInfo(insts=((246, {'idx': 7, 'res': '$246load_global.0'}), (248, {}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {'res': '$s258.2'}), (260, {'res': '$const260.3.2'}), (262, {'idx': 8, 'res': '$262load_global.4'}), (264, {}), (266, {}), (268, {}), (270, {}), (272, {}), (274, {'res': '$const274.6.6'}), (276, {}), (278, {}), (280, {'func': '$262load_global.4', 'args': ['$const274.6.6'], 'kw_names': None, 'res': '$280call.7'}), (282, {}), (284, {}), (286, {}), (288, {}), (290, {}), (292, {}), (294, {'func': '$246load_global.0', 'args': ['$s258.2', '$const260.3.2', '$280call.7'], 'kw_names': None, 'res': '$294call.8'}), (296, {}), (298, {}), (300, {}), (302, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={306: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=306 nstack_initial=0):
AdaptBlockInfo(insts=((306, {'res': '$length306.0'}), (308, {'res': '$const308.1.5'}), (310, {'op': '-', 'lhs': '$length306.0', 'rhs': '$const308.1.5', 'res': '$binop_sub310.2'}), (312, {}), (314, {'value': '$binop_sub310.2'}), (316, {'res': '$n316.3'}), (318, {'res': '$const318.4.2'}), (320, {'lhs': '$n316.3', 'rhs': '$const318.4.2', 'res': '$320compare_op.5'}), (322, {}), (324, {}), (326, {'pred': '$320compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: (), 458: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'idx': 9, 'res': '$328load_global.0'}), (330, {}), (332, {}), (334, {}), (336, {}), (338, {}), (340, {'res': '$n340.2'}), (342, {'res': '$342load_deref.3'}), (344, {}), (346, {}), (348, {'func': '$328load_global.0', 'args': ['$n340.2', '$342load_deref.3'], 'kw_names': None, 'res': '$348call.4'}), (350, {}), (352, {}), (354, {}), (356, {}), (358, {'iterable': '$348call.4', 'stores': ['$358unpack_sequence.5', '$358unpack_sequence.6'], 'tupleobj': '$358unpack_sequence.7'}), (360, {}), (362, {'value': '$358unpack_sequence.5'}), (364, {'value': '$358unpack_sequence.6'}), (366, {'idx': 8, 'res': '$366load_global.8'}), (368, {}), (370, {}), (372, {}), (374, {}), (376, {}), (378, {'res': '$const378.10.4'}), (380, {}), (382, {}), (384, {'func': '$366load_global.8', 'args': ['$const378.10.4'], 'kw_names': None, 'res': '$384call.11'}), (386, {}), (388, {}), (390, {}), (392, {}), (394, {'res': '$digit394.12'}), (396, {'op': '+', 'lhs': '$384call.11', 'rhs': '$digit394.12', 'res': '$binop_add396.13'}), (398, {}), (400, {'value': '$binop_add396.13'}), (402, {'idx': 7, 'res': '$402load_global.14'}), (404, {}), (406, {}), (408, {}), (410, {}), (412, {}), (414, {'res': '$s414.16'}), (416, {'res': '$idx416.17'}), (418, {'res': '$c418.18'}), (420, {}), (422, {}), (424, {'func': '$402load_global.14', 'args': ['$s414.16', '$idx416.17', '$c418.18'], 'kw_names': None, 'res': '$424call.19'}), (426, {}), (428, {}), (430, {}), (432, {}), (436, {'res': '$idx436.20'}), (438, {'res': '$const438.21.5'}), (440, {'op': '-=', 'lhs': '$idx436.20', 'rhs': '$const438.21.5', 'res': '$binop_isub440.22'}), (442, {}), (444, {'value': '$binop_isub440.22'}), (446, {'res': '$n446.23'}), (448, {'res': '$const448.24.2'}), (450, {'lhs': '$n446.23', 'rhs': '$const448.24.2', 'res': '$450compare_op.25'}), (452, {}), (454, {}), (456, {'pred': '$450compare_op.25'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={458: (), 328: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=458 nstack_initial=0):
AdaptBlockInfo(insts=((458, {'res': '$s458.0'}), (460, {'retval': '$s458.0', 'castval': '$460return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    n = arg(0, name=n)                       ['n']
    flag = const(bool, False)                ['flag']
    $const12.2.2 = const(int, 0)             ['$const12.2.2']
    $14compare_op.3 = n < $const12.2.2       ['$14compare_op.3', '$const12.2.2', 'n']
    bool20 = global(bool: <class 'bool'>)    ['bool20']
    $20pred = call bool20($14compare_op.3, func=bool20, args=(Var($14compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None) ['$14compare_op.3', '$20pred', 'bool20']
    branch $20pred, 22, 32                   ['$20pred']
label 22:
    n = unary(fn=<built-in function neg>, value=n) ['n', 'n']
    flag = const(bool, True)                 ['flag']
    jump 32                                  []
label 32:
    $const34.1.2 = const(int, 0)             ['$const34.1.2']
    $36compare_op.2 = n == $const34.1.2      ['$36compare_op.2', '$const34.1.2', 'n']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($36compare_op.2, func=bool42, args=(Var($36compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None) ['$36compare_op.2', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $const44.0.4 = const(str, 0)             ['$const44.0.4']
    $46return_value.1 = cast(value=$const44.0.4) ['$46return_value.1', '$const44.0.4']
    return $46return_value.1                 ['$46return_value.1']
label 48:
    $const50.1.5 = const(int, 1)             ['$const50.1.5']
    $binop_add52.2 = flag + $const50.1.5     ['$binop_add52.2', '$const50.1.5', 'flag']
    $56load_global.3 = global(int: <class 'int'>) ['$56load_global.3']
    $68load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$68load_global.5']
    $80load_attr.7 = getattr(value=$68load_global.5, attr=floor) ['$68load_global.5', '$80load_attr.7']
    $90load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$90load_global.8']
    $102load_attr.10 = getattr(value=$90load_global.8, attr=log10) ['$102load_attr.10', '$90load_global.8']
    $118call.12 = call $102load_attr.10(n, func=$102load_attr.10, args=[Var(n, unicode.py:2572)], kws=(), vararg=None, varkwarg=None, target=None) ['$102load_attr.10', '$118call.12', 'n']
    $132call.13 = call $80load_attr.7($118call.12, func=$80load_attr.7, args=[Var($118call.12, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None) ['$118call.12', '$132call.13', '$80load_attr.7']
    $146call.14 = call $56load_global.3($132call.13, func=$56load_global.3, args=[Var($132call.13, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None) ['$132call.13', '$146call.14', '$56load_global.3']
    length = $binop_add52.2 + $146call.14    ['$146call.14', '$binop_add52.2', 'length']
    kind = global(PY_UNICODE_1BYTE_KIND: 1)  ['kind']
    $176load_global.17 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x0000019A15726A20>) ['$176load_global.17']
    char_width = call $176load_global.17(kind, func=$176load_global.17, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None) ['$176load_global.17', 'char_width', 'kind']
    $206load_global.21 = global(_malloc_string: <intrinsic _malloc_string>) ['$206load_global.21']
    $const224.26.3 = const(bool, True)       ['$const224.26.3']
    s = call $206load_global.21(kind, char_width, length, $const224.26.3, func=$206load_global.21, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const224.26.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None) ['$206load_global.21', '$const224.26.3', 'char_width', 'kind', 'length', 's']
    bool244 = global(bool: <class 'bool'>)   ['bool244']
    $244pred = call bool244(flag, func=bool244, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None) ['$244pred', 'bool244', 'flag']
    branch $244pred, 246, 306                ['$244pred']
label 246:
    $246load_global.0 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>) ['$246load_global.0']
    $const260.3.2 = const(int, 0)            ['$const260.3.2']
    $262load_global.4 = global(ord: <built-in function ord>) ['$262load_global.4']
    $const274.6.6 = const(str, -)            ['$const274.6.6']
    $280call.7 = call $262load_global.4($const274.6.6, func=$262load_global.4, args=[Var($const274.6.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None) ['$262load_global.4', '$280call.7', '$const274.6.6']
    $294call.8 = call $246load_global.0(s, $const260.3.2, $280call.7, func=$246load_global.0, args=[Var(s, unicode.py:2582), Var($const260.3.2, unicode.py:2584), Var($280call.7, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None) ['$246load_global.0', '$280call.7', '$294call.8', '$const260.3.2', 's']
    jump 306                                 []
label 306:
    $const308.1.5 = const(int, 1)            ['$const308.1.5']
    idx = length - $const308.1.5             ['$const308.1.5', 'idx', 'length']
    $const318.4.2 = const(int, 0)            ['$const318.4.2']
    $320compare_op.5 = n > $const318.4.2     ['$320compare_op.5', '$const318.4.2', 'n']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
    $326pred = call bool326($320compare_op.5, func=bool326, args=(Var($320compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None) ['$320compare_op.5', '$326pred', 'bool326']
    branch $326pred, 328, 458                ['$326pred']
label 328:
    $328load_global.0 = global(divmod: <built-in function divmod>) ['$328load_global.0']
    $342load_deref.3 = freevar(ten: 10)      ['$342load_deref.3']
    $348call.4 = call $328load_global.0(n, $342load_deref.3, func=$328load_global.0, args=[Var(n, unicode.py:2572), Var($342load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None) ['$328load_global.0', '$342load_deref.3', '$348call.4', 'n']
    $358unpack_sequence.7 = exhaust_iter(value=$348call.4, count=2) ['$348call.4', '$358unpack_sequence.7']
    $358unpack_sequence.5 = static_getitem(value=$358unpack_sequence.7, index=0, index_var=None, fn=<built-in function getitem>) ['$358unpack_sequence.5', '$358unpack_sequence.7']
    $358unpack_sequence.6 = static_getitem(value=$358unpack_sequence.7, index=1, index_var=None, fn=<built-in function getitem>) ['$358unpack_sequence.6', '$358unpack_sequence.7']
    n = $358unpack_sequence.5                ['$358unpack_sequence.5', 'n']
    digit = $358unpack_sequence.6            ['$358unpack_sequence.6', 'digit']
    $366load_global.8 = global(ord: <built-in function ord>) ['$366load_global.8']
    $const378.10.4 = const(str, 0)           ['$const378.10.4']
    $384call.11 = call $366load_global.8($const378.10.4, func=$366load_global.8, args=[Var($const378.10.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None) ['$366load_global.8', '$384call.11', '$const378.10.4']
    c = $384call.11 + digit                  ['$384call.11', 'c', 'digit']
    $402load_global.14 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>) ['$402load_global.14']
    $424call.19 = call $402load_global.14(s, idx, c, func=$402load_global.14, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None) ['$402load_global.14', '$424call.19', 'c', 'idx', 's']
    $const438.21.5 = const(int, 1)           ['$const438.21.5']
    $binop_isub440.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const438.21.5, static_lhs=Undefined, static_rhs=Undefined) ['$binop_isub440.22', '$const438.21.5', 'idx']
    idx = $binop_isub440.22                  ['$binop_isub440.22', 'idx']
    $const448.24.2 = const(int, 0)           ['$const448.24.2']
    $450compare_op.25 = n > $const448.24.2   ['$450compare_op.25', '$const448.24.2', 'n']
    bool456 = global(bool: <class 'bool'>)   ['bool456']
    $456pred = call bool456($450compare_op.25, func=bool456, args=(Var($450compare_op.25, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None) ['$450compare_op.25', '$456pred', 'bool456']
    branch $456pred, 328, 458                ['$456pred']
label 458:
    $460return_value.1 = cast(value=s)       ['$460return_value.1', 's']
    return $460return_value.1                ['$460return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A173B4E10>
DEBUG:numba.core.ssa:on stmt: n = arg(0, name=n)
DEBUG:numba.core.ssa:on stmt: flag = const(bool, False)
DEBUG:numba.core.ssa:on stmt: $const12.2.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $14compare_op.3 = n < $const12.2.2
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($14compare_op.3, func=bool20, args=(Var($14compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A173B4E10>
DEBUG:numba.core.ssa:on stmt: n = unary(fn=<built-in function neg>, value=n)
DEBUG:numba.core.ssa:on stmt: flag = const(bool, True)
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A173B4E10>
DEBUG:numba.core.ssa:on stmt: $const34.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $36compare_op.2 = n == $const34.1.2
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($36compare_op.2, func=bool42, args=(Var($36compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A173B4E10>
DEBUG:numba.core.ssa:on stmt: $const44.0.4 = const(str, 0)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0.4)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A173B4E10>
DEBUG:numba.core.ssa:on stmt: $const50.1.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add52.2 = flag + $const50.1.5
DEBUG:numba.core.ssa:on stmt: $56load_global.3 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $68load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $80load_attr.7 = getattr(value=$68load_global.5, attr=floor)
DEBUG:numba.core.ssa:on stmt: $90load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $102load_attr.10 = getattr(value=$90load_global.8, attr=log10)
DEBUG:numba.core.ssa:on stmt: $118call.12 = call $102load_attr.10(n, func=$102load_attr.10, args=[Var(n, unicode.py:2572)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $132call.13 = call $80load_attr.7($118call.12, func=$80load_attr.7, args=[Var($118call.12, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $146call.14 = call $56load_global.3($132call.13, func=$56load_global.3, args=[Var($132call.13, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: length = $binop_add52.2 + $146call.14
DEBUG:numba.core.ssa:on stmt: kind = global(PY_UNICODE_1BYTE_KIND: 1)
DEBUG:numba.core.ssa:on stmt: $176load_global.17 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x0000019A15726A20>)
DEBUG:numba.core.ssa:on stmt: char_width = call $176load_global.17(kind, func=$176load_global.17, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $206load_global.21 = global(_malloc_string: <intrinsic _malloc_string>)
DEBUG:numba.core.ssa:on stmt: $const224.26.3 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: s = call $206load_global.21(kind, char_width, length, $const224.26.3, func=$206load_global.21, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const224.26.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool244 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $244pred = call bool244(flag, func=bool244, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $244pred, 246, 306
DEBUG:numba.core.ssa:==== SSA block analysis pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A173B4E10>
DEBUG:numba.core.ssa:on stmt: $246load_global.0 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>)
DEBUG:numba.core.ssa:on stmt: $const260.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $262load_global.4 = global(ord: <built-in function ord>)
DEBUG:numba.core.ssa:on stmt: $const274.6.6 = const(str, -)
DEBUG:numba.core.ssa:on stmt: $280call.7 = call $262load_global.4($const274.6.6, func=$262load_global.4, args=[Var($const274.6.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $294call.8 = call $246load_global.0(s, $const260.3.2, $280call.7, func=$246load_global.0, args=[Var(s, unicode.py:2582), Var($const260.3.2, unicode.py:2584), Var($280call.7, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 306
DEBUG:numba.core.ssa:==== SSA block analysis pass on 306
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A173B4E10>
DEBUG:numba.core.ssa:on stmt: $const308.1.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: idx = length - $const308.1.5
DEBUG:numba.core.ssa:on stmt: $const318.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $320compare_op.5 = n > $const318.4.2
DEBUG:numba.core.ssa:on stmt: bool326 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $326pred = call bool326($320compare_op.5, func=bool326, args=(Var($320compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $326pred, 328, 458
DEBUG:numba.core.ssa:==== SSA block analysis pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A173B4E10>
DEBUG:numba.core.ssa:on stmt: $328load_global.0 = global(divmod: <built-in function divmod>)
DEBUG:numba.core.ssa:on stmt: $342load_deref.3 = freevar(ten: 10)
DEBUG:numba.core.ssa:on stmt: $348call.4 = call $328load_global.0(n, $342load_deref.3, func=$328load_global.0, args=[Var(n, unicode.py:2572), Var($342load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.7 = exhaust_iter(value=$348call.4, count=2)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.5 = static_getitem(value=$358unpack_sequence.7, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.6 = static_getitem(value=$358unpack_sequence.7, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: n = $358unpack_sequence.5
DEBUG:numba.core.ssa:on stmt: digit = $358unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: $366load_global.8 = global(ord: <built-in function ord>)
DEBUG:numba.core.ssa:on stmt: $const378.10.4 = const(str, 0)
DEBUG:numba.core.ssa:on stmt: $384call.11 = call $366load_global.8($const378.10.4, func=$366load_global.8, args=[Var($const378.10.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: c = $384call.11 + digit
DEBUG:numba.core.ssa:on stmt: $402load_global.14 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>)
DEBUG:numba.core.ssa:on stmt: $424call.19 = call $402load_global.14(s, idx, c, func=$402load_global.14, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const438.21.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_isub440.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const438.21.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: idx = $binop_isub440.22
DEBUG:numba.core.ssa:on stmt: $const448.24.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $450compare_op.25 = n > $const448.24.2
DEBUG:numba.core.ssa:on stmt: bool456 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $456pred = call bool456($450compare_op.25, func=bool456, args=(Var($450compare_op.25, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $456pred, 328, 458
DEBUG:numba.core.ssa:==== SSA block analysis pass on 458
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A173B4E10>
DEBUG:numba.core.ssa:on stmt: $460return_value.1 = cast(value=s)
DEBUG:numba.core.ssa:on stmt: return $460return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102load_attr.10': [(<numba.core.ir.Assign object at 0x0000019A173BAE50>,
                                   48)],
             '$118call.12': [(<numba.core.ir.Assign object at 0x0000019A173BB290>,
                              48)],
             '$132call.13': [(<numba.core.ir.Assign object at 0x0000019A173BB590>,
                              48)],
             '$146call.14': [(<numba.core.ir.Assign object at 0x0000019A173BB850>,
                              48)],
             '$14compare_op.3': [(<numba.core.ir.Assign object at 0x0000019A173B86D0>,
                                  0)],
             '$176load_global.17': [(<numba.core.ir.Assign object at 0x0000019A173BC110>,
                                     48)],
             '$206load_global.21': [(<numba.core.ir.Assign object at 0x0000019A173BC850>,
                                     48)],
             '$20pred': [(<numba.core.ir.Assign object at 0x0000019A173B8A10>,
                          0)],
             '$244pred': [(<numba.core.ir.Assign object at 0x0000019A173BD990>,
                           48)],
             '$246load_global.0': [(<numba.core.ir.Assign object at 0x0000019A173BCE50>,
                                    246)],
             '$262load_global.4': [(<numba.core.ir.Assign object at 0x0000019A173BDE90>,
                                    246)],
             '$280call.7': [(<numba.core.ir.Assign object at 0x0000019A173BE390>,
                             246)],
             '$294call.8': [(<numba.core.ir.Assign object at 0x0000019A173BE690>,
                             246)],
             '$320compare_op.5': [(<numba.core.ir.Assign object at 0x0000019A173BF550>,
                                   306)],
             '$326pred': [(<numba.core.ir.Assign object at 0x0000019A173BF910>,
                           306)],
             '$328load_global.0': [(<numba.core.ir.Assign object at 0x0000019A173BFAD0>,
                                    328)],
             '$342load_deref.3': [(<numba.core.ir.Assign object at 0x0000019A173BAA10>,
                                   328)],
             '$348call.4': [(<numba.core.ir.Assign object at 0x0000019A173C0090>,
                             328)],
             '$358unpack_sequence.5': [(<numba.core.ir.Assign object at 0x0000019A173C0550>,
                                        328)],
             '$358unpack_sequence.6': [(<numba.core.ir.Assign object at 0x0000019A173C06D0>,
                                        328)],
             '$358unpack_sequence.7': [(<numba.core.ir.Assign object at 0x0000019A173C0390>,
                                        328)],
             '$366load_global.8': [(<numba.core.ir.Assign object at 0x0000019A173C0A90>,
                                    328)],
             '$36compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A173B9590>,
                                  32)],
             '$384call.11': [(<numba.core.ir.Assign object at 0x0000019A173C0E10>,
                              328)],
             '$402load_global.14': [(<numba.core.ir.Assign object at 0x0000019A173C1550>,
                                     328)],
             '$424call.19': [(<numba.core.ir.Assign object at 0x0000019A173C1CD0>,
                              328)],
             '$42pred': [(<numba.core.ir.Assign object at 0x0000019A173B9910>,
                          32)],
             '$450compare_op.25': [(<numba.core.ir.Assign object at 0x0000019A173C2890>,
                                    328)],
             '$456pred': [(<numba.core.ir.Assign object at 0x0000019A173C2C10>,
                           328)],
             '$460return_value.1': [(<numba.core.ir.Assign object at 0x0000019A173C2ED0>,
                                     458)],
             '$46return_value.1': [(<numba.core.ir.Assign object at 0x0000019A173B9D90>,
                                    44)],
             '$56load_global.3': [(<numba.core.ir.Assign object at 0x0000019A173BA510>,
                                   48)],
             '$68load_global.5': [(<numba.core.ir.Assign object at 0x0000019A173BA690>,
                                   48)],
             '$80load_attr.7': [(<numba.core.ir.Assign object at 0x0000019A173BA950>,
                                 48)],
             '$90load_global.8': [(<numba.core.ir.Assign object at 0x0000019A173BAB90>,
                                   48)],
             '$binop_add52.2': [(<numba.core.ir.Assign object at 0x0000019A173BA390>,
                                 48)],
             '$binop_isub440.22': [(<numba.core.ir.Assign object at 0x0000019A173C2250>,
                                    328)],
             '$const12.2.2': [(<numba.core.ir.Assign object at 0x0000019A173B84D0>,
                               0)],
             '$const224.26.3': [(<numba.core.ir.Assign object at 0x0000019A173BD010>,
                                 48)],
             '$const260.3.2': [(<numba.core.ir.Assign object at 0x0000019A173BDCD0>,
                                246)],
             '$const274.6.6': [(<numba.core.ir.Assign object at 0x0000019A173BE110>,
                                246)],
             '$const308.1.5': [(<numba.core.ir.Assign object at 0x0000019A173BEB90>,
                                306)],
             '$const318.4.2': [(<numba.core.ir.Assign object at 0x0000019A173BF310>,
                                306)],
             '$const34.1.2': [(<numba.core.ir.Assign object at 0x0000019A173B93D0>,
                               32)],
             '$const378.10.4': [(<numba.core.ir.Assign object at 0x0000019A173C0C10>,
                                 328)],
             '$const438.21.5': [(<numba.core.ir.Assign object at 0x0000019A173C20D0>,
                                 328)],
             '$const44.0.4': [(<numba.core.ir.Assign object at 0x0000019A173B9B90>,
                               44)],
             '$const448.24.2': [(<numba.core.ir.Assign object at 0x0000019A173C2690>,
                                 328)],
             '$const50.1.5': [(<numba.core.ir.Assign object at 0x0000019A173BA150>,
                               48)],
             'bool20': [(<numba.core.ir.Assign object at 0x0000019A173B8910>,
                         0)],
             'bool244': [(<numba.core.ir.Assign object at 0x0000019A173BD7D0>,
                          48)],
             'bool326': [(<numba.core.ir.Assign object at 0x0000019A173BF750>,
                          306)],
             'bool42': [(<numba.core.ir.Assign object at 0x0000019A173B9790>,
                         32)],
             'bool456': [(<numba.core.ir.Assign object at 0x0000019A173C2A50>,
                          328)],
             'c': [(<numba.core.ir.Assign object at 0x0000019A173C11D0>, 328)],
             'char_width': [(<numba.core.ir.Assign object at 0x0000019A173BC550>,
                             48)],
             'digit': [(<numba.core.ir.Assign object at 0x0000019A173C0910>,
                        328)],
             'flag': [(<numba.core.ir.Assign object at 0x0000019A173B4990>, 0),
                      (<numba.core.ir.Assign object at 0x0000019A173B9010>,
                       22)],
             'idx': [(<numba.core.ir.Assign object at 0x0000019A173BEDD0>, 306),
                     (<numba.core.ir.Assign object at 0x0000019A173C22D0>,
                      328)],
             'kind': [(<numba.core.ir.Assign object at 0x0000019A173BBD10>,
                       48)],
             'length': [(<numba.core.ir.Assign object at 0x0000019A173BBA50>,
                         48)],
             'n': [(<numba.core.ir.Assign object at 0x0000019A162F5B50>, 0),
                   (<numba.core.ir.Assign object at 0x0000019A173B8D90>, 22),
                   (<numba.core.ir.Assign object at 0x0000019A173C0810>, 328)],
             's': [(<numba.core.ir.Assign object at 0x0000019A173BD2D0>, 48)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A173B4E10>
DEBUG:numba.core.ssa:Fix SSA violator on var n
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173B59D0>
DEBUG:numba.core.ssa:on stmt: n = arg(0, name=n)
DEBUG:numba.core.ssa:first assign: n
DEBUG:numba.core.ssa:replaced with: n = arg(0, name=n)
DEBUG:numba.core.ssa:on stmt: flag = const(bool, False)
DEBUG:numba.core.ssa:on stmt: $const12.2.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $14compare_op.3 = n < $const12.2.2
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($14compare_op.3, func=bool20, args=(Var($14compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173B59D0>
DEBUG:numba.core.ssa:on stmt: n = unary(fn=<built-in function neg>, value=n)
DEBUG:numba.core.ssa:replaced with: n.1 = unary(fn=<built-in function neg>, value=n)
DEBUG:numba.core.ssa:on stmt: flag = const(bool, True)
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173B59D0>
DEBUG:numba.core.ssa:on stmt: $const34.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $36compare_op.2 = n == $const34.1.2
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($36compare_op.2, func=bool42, args=(Var($36compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173B59D0>
DEBUG:numba.core.ssa:on stmt: $const44.0.4 = const(str, 0)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0.4)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173B59D0>
DEBUG:numba.core.ssa:on stmt: $const50.1.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add52.2 = flag + $const50.1.5
DEBUG:numba.core.ssa:on stmt: $56load_global.3 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $68load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $80load_attr.7 = getattr(value=$68load_global.5, attr=floor)
DEBUG:numba.core.ssa:on stmt: $90load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $102load_attr.10 = getattr(value=$90load_global.8, attr=log10)
DEBUG:numba.core.ssa:on stmt: $118call.12 = call $102load_attr.10(n, func=$102load_attr.10, args=[Var(n, unicode.py:2572)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $132call.13 = call $80load_attr.7($118call.12, func=$80load_attr.7, args=[Var($118call.12, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $146call.14 = call $56load_global.3($132call.13, func=$56load_global.3, args=[Var($132call.13, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: length = $binop_add52.2 + $146call.14
DEBUG:numba.core.ssa:on stmt: kind = global(PY_UNICODE_1BYTE_KIND: 1)
DEBUG:numba.core.ssa:on stmt: $176load_global.17 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x0000019A15726A20>)
DEBUG:numba.core.ssa:on stmt: char_width = call $176load_global.17(kind, func=$176load_global.17, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $206load_global.21 = global(_malloc_string: <intrinsic _malloc_string>)
DEBUG:numba.core.ssa:on stmt: $const224.26.3 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: s = call $206load_global.21(kind, char_width, length, $const224.26.3, func=$206load_global.21, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const224.26.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool244 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $244pred = call bool244(flag, func=bool244, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $244pred, 246, 306
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173B59D0>
DEBUG:numba.core.ssa:on stmt: $246load_global.0 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>)
DEBUG:numba.core.ssa:on stmt: $const260.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $262load_global.4 = global(ord: <built-in function ord>)
DEBUG:numba.core.ssa:on stmt: $const274.6.6 = const(str, -)
DEBUG:numba.core.ssa:on stmt: $280call.7 = call $262load_global.4($const274.6.6, func=$262load_global.4, args=[Var($const274.6.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $294call.8 = call $246load_global.0(s, $const260.3.2, $280call.7, func=$246load_global.0, args=[Var(s, unicode.py:2582), Var($const260.3.2, unicode.py:2584), Var($280call.7, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 306
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 306
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173B59D0>
DEBUG:numba.core.ssa:on stmt: $const308.1.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: idx = length - $const308.1.5
DEBUG:numba.core.ssa:on stmt: $const318.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $320compare_op.5 = n > $const318.4.2
DEBUG:numba.core.ssa:on stmt: bool326 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $326pred = call bool326($320compare_op.5, func=bool326, args=(Var($320compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $326pred, 328, 458
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173B59D0>
DEBUG:numba.core.ssa:on stmt: $328load_global.0 = global(divmod: <built-in function divmod>)
DEBUG:numba.core.ssa:on stmt: $342load_deref.3 = freevar(ten: 10)
DEBUG:numba.core.ssa:on stmt: $348call.4 = call $328load_global.0(n, $342load_deref.3, func=$328load_global.0, args=[Var(n, unicode.py:2572), Var($342load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.7 = exhaust_iter(value=$348call.4, count=2)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.5 = static_getitem(value=$358unpack_sequence.7, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.6 = static_getitem(value=$358unpack_sequence.7, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: n = $358unpack_sequence.5
DEBUG:numba.core.ssa:replaced with: n.2 = $358unpack_sequence.5
DEBUG:numba.core.ssa:on stmt: digit = $358unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: $366load_global.8 = global(ord: <built-in function ord>)
DEBUG:numba.core.ssa:on stmt: $const378.10.4 = const(str, 0)
DEBUG:numba.core.ssa:on stmt: $384call.11 = call $366load_global.8($const378.10.4, func=$366load_global.8, args=[Var($const378.10.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: c = $384call.11 + digit
DEBUG:numba.core.ssa:on stmt: $402load_global.14 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>)
DEBUG:numba.core.ssa:on stmt: $424call.19 = call $402load_global.14(s, idx, c, func=$402load_global.14, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const438.21.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_isub440.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const438.21.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: idx = $binop_isub440.22
DEBUG:numba.core.ssa:on stmt: $const448.24.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $450compare_op.25 = n > $const448.24.2
DEBUG:numba.core.ssa:on stmt: bool456 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $456pred = call bool456($450compare_op.25, func=bool456, args=(Var($450compare_op.25, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $456pred, 328, 458
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 458
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173B59D0>
DEBUG:numba.core.ssa:on stmt: $460return_value.1 = cast(value=s)
DEBUG:numba.core.ssa:on stmt: return $460return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000019A173B4690>],
             22: [<numba.core.ir.Assign object at 0x0000019A173C55D0>],
             328: [<numba.core.ir.Assign object at 0x0000019A173C5310>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C5150>
DEBUG:numba.core.ssa:on stmt: n = arg(0, name=n)
DEBUG:numba.core.ssa:on stmt: flag = const(bool, False)
DEBUG:numba.core.ssa:on stmt: $const12.2.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $14compare_op.3 = n < $const12.2.2
DEBUG:numba.core.ssa:find_def var='n' stmt=$14compare_op.3 = n < $const12.2.2
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($14compare_op.3, func=bool20, args=(Var($14compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C5150>
DEBUG:numba.core.ssa:on stmt: n.1 = unary(fn=<built-in function neg>, value=n)
DEBUG:numba.core.ssa:find_def var='n' stmt=n.1 = unary(fn=<built-in function neg>, value=n)
DEBUG:numba.core.ssa:find_def_from_top label 22
DEBUG:numba.core.ssa:idom 0 from label 22
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:on stmt: flag = const(bool, True)
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C5150>
DEBUG:numba.core.ssa:on stmt: $const34.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $36compare_op.2 = n == $const34.1.2
DEBUG:numba.core.ssa:find_def var='n' stmt=$36compare_op.2 = n == $const34.1.2
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node n.3 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def n = arg(0, name=n)
DEBUG:numba.core.ssa:find_def_from_bottom label 22
DEBUG:numba.core.ssa:incoming_def n.1 = unary(fn=<built-in function neg>, value=n)
DEBUG:numba.core.ssa:replaced with: $36compare_op.2 = n.3 == $const34.1.2
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($36compare_op.2, func=bool42, args=(Var($36compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C5150>
DEBUG:numba.core.ssa:on stmt: $const44.0.4 = const(str, 0)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0.4)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C5150>
DEBUG:numba.core.ssa:on stmt: $const50.1.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add52.2 = flag + $const50.1.5
DEBUG:numba.core.ssa:on stmt: $56load_global.3 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $68load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $80load_attr.7 = getattr(value=$68load_global.5, attr=floor)
DEBUG:numba.core.ssa:on stmt: $90load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $102load_attr.10 = getattr(value=$90load_global.8, attr=log10)
DEBUG:numba.core.ssa:on stmt: $118call.12 = call $102load_attr.10(n, func=$102load_attr.10, args=[Var(n, unicode.py:2572)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='n' stmt=$118call.12 = call $102load_attr.10(n, func=$102load_attr.10, args=[Var(n, unicode.py:2572)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 48
DEBUG:numba.core.ssa:idom 32 from label 48
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $118call.12 = call $102load_attr.10(n.3, func=$102load_attr.10, args=[Var(n.3, unicode.py:2577)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $132call.13 = call $80load_attr.7($118call.12, func=$80load_attr.7, args=[Var($118call.12, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $146call.14 = call $56load_global.3($132call.13, func=$56load_global.3, args=[Var($132call.13, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: length = $binop_add52.2 + $146call.14
DEBUG:numba.core.ssa:on stmt: kind = global(PY_UNICODE_1BYTE_KIND: 1)
DEBUG:numba.core.ssa:on stmt: $176load_global.17 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x0000019A15726A20>)
DEBUG:numba.core.ssa:on stmt: char_width = call $176load_global.17(kind, func=$176load_global.17, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $206load_global.21 = global(_malloc_string: <intrinsic _malloc_string>)
DEBUG:numba.core.ssa:on stmt: $const224.26.3 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: s = call $206load_global.21(kind, char_width, length, $const224.26.3, func=$206load_global.21, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const224.26.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool244 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $244pred = call bool244(flag, func=bool244, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $244pred, 246, 306
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C5150>
DEBUG:numba.core.ssa:on stmt: $246load_global.0 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>)
DEBUG:numba.core.ssa:on stmt: $const260.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $262load_global.4 = global(ord: <built-in function ord>)
DEBUG:numba.core.ssa:on stmt: $const274.6.6 = const(str, -)
DEBUG:numba.core.ssa:on stmt: $280call.7 = call $262load_global.4($const274.6.6, func=$262load_global.4, args=[Var($const274.6.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $294call.8 = call $246load_global.0(s, $const260.3.2, $280call.7, func=$246load_global.0, args=[Var(s, unicode.py:2582), Var($const260.3.2, unicode.py:2584), Var($280call.7, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 306
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 306
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C5150>
DEBUG:numba.core.ssa:on stmt: $const308.1.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: idx = length - $const308.1.5
DEBUG:numba.core.ssa:on stmt: $const318.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $320compare_op.5 = n > $const318.4.2
DEBUG:numba.core.ssa:find_def var='n' stmt=$320compare_op.5 = n > $const318.4.2
DEBUG:numba.core.ssa:find_def_from_top label 306
DEBUG:numba.core.ssa:idom 48 from label 306
DEBUG:numba.core.ssa:find_def_from_bottom label 48
DEBUG:numba.core.ssa:find_def_from_top label 48
DEBUG:numba.core.ssa:idom 32 from label 48
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $320compare_op.5 = n.3 > $const318.4.2
DEBUG:numba.core.ssa:on stmt: bool326 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $326pred = call bool326($320compare_op.5, func=bool326, args=(Var($320compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $326pred, 328, 458
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C5150>
DEBUG:numba.core.ssa:on stmt: $328load_global.0 = global(divmod: <built-in function divmod>)
DEBUG:numba.core.ssa:on stmt: $342load_deref.3 = freevar(ten: 10)
DEBUG:numba.core.ssa:on stmt: $348call.4 = call $328load_global.0(n, $342load_deref.3, func=$328load_global.0, args=[Var(n, unicode.py:2572), Var($342load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='n' stmt=$348call.4 = call $328load_global.0(n, $342load_deref.3, func=$328load_global.0, args=[Var(n, unicode.py:2572), Var($342load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 328
DEBUG:numba.core.ssa:insert phi node n.4 = phi(incoming_values=[], incoming_blocks=[]) at 328
DEBUG:numba.core.ssa:find_def_from_bottom label 328
DEBUG:numba.core.ssa:incoming_def n.2 = $358unpack_sequence.5
DEBUG:numba.core.ssa:find_def_from_bottom label 306
DEBUG:numba.core.ssa:find_def_from_top label 306
DEBUG:numba.core.ssa:idom 48 from label 306
DEBUG:numba.core.ssa:find_def_from_bottom label 48
DEBUG:numba.core.ssa:find_def_from_top label 48
DEBUG:numba.core.ssa:idom 32 from label 48
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:incoming_def n.3 = phi(incoming_values=[Var(n, unicode.py:2572), Var(n.1, unicode.py:2575)], incoming_blocks=[0, 22])
DEBUG:numba.core.ssa:replaced with: $348call.4 = call $328load_global.0(n.4, $342load_deref.3, func=$328load_global.0, args=[Var(n.4, unicode.py:2587), Var($342load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.7 = exhaust_iter(value=$348call.4, count=2)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.5 = static_getitem(value=$358unpack_sequence.7, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.6 = static_getitem(value=$358unpack_sequence.7, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: n.2 = $358unpack_sequence.5
DEBUG:numba.core.ssa:on stmt: digit = $358unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: $366load_global.8 = global(ord: <built-in function ord>)
DEBUG:numba.core.ssa:on stmt: $const378.10.4 = const(str, 0)
DEBUG:numba.core.ssa:on stmt: $384call.11 = call $366load_global.8($const378.10.4, func=$366load_global.8, args=[Var($const378.10.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: c = $384call.11 + digit
DEBUG:numba.core.ssa:on stmt: $402load_global.14 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>)
DEBUG:numba.core.ssa:on stmt: $424call.19 = call $402load_global.14(s, idx, c, func=$402load_global.14, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const438.21.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_isub440.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const438.21.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: idx = $binop_isub440.22
DEBUG:numba.core.ssa:on stmt: $const448.24.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $450compare_op.25 = n > $const448.24.2
DEBUG:numba.core.ssa:find_def var='n' stmt=$450compare_op.25 = n > $const448.24.2
DEBUG:numba.core.ssa:replaced with: $450compare_op.25 = n.2 > $const448.24.2
DEBUG:numba.core.ssa:on stmt: bool456 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $456pred = call bool456($450compare_op.25, func=bool456, args=(Var($450compare_op.25, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $456pred, 328, 458
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 458
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C5150>
DEBUG:numba.core.ssa:on stmt: $460return_value.1 = cast(value=s)
DEBUG:numba.core.ssa:on stmt: return $460return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var flag
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173B4D50>
DEBUG:numba.core.ssa:on stmt: n = arg(0, name=n)
DEBUG:numba.core.ssa:on stmt: flag = const(bool, False)
DEBUG:numba.core.ssa:first assign: flag
DEBUG:numba.core.ssa:replaced with: flag = const(bool, False)
DEBUG:numba.core.ssa:on stmt: $const12.2.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $14compare_op.3 = n < $const12.2.2
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($14compare_op.3, func=bool20, args=(Var($14compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173B4D50>
DEBUG:numba.core.ssa:on stmt: n.1 = unary(fn=<built-in function neg>, value=n)
DEBUG:numba.core.ssa:on stmt: flag = const(bool, True)
DEBUG:numba.core.ssa:replaced with: flag.1 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173B4D50>
DEBUG:numba.core.ssa:on stmt: n.3 = phi(incoming_values=[Var(n, unicode.py:2572), Var(n.1, unicode.py:2575)], incoming_blocks=[0, 22])
DEBUG:numba.core.ssa:on stmt: $const34.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $36compare_op.2 = n.3 == $const34.1.2
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($36compare_op.2, func=bool42, args=(Var($36compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173B4D50>
DEBUG:numba.core.ssa:on stmt: $const44.0.4 = const(str, 0)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0.4)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173B4D50>
DEBUG:numba.core.ssa:on stmt: $const50.1.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add52.2 = flag + $const50.1.5
DEBUG:numba.core.ssa:on stmt: $56load_global.3 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $68load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $80load_attr.7 = getattr(value=$68load_global.5, attr=floor)
DEBUG:numba.core.ssa:on stmt: $90load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $102load_attr.10 = getattr(value=$90load_global.8, attr=log10)
DEBUG:numba.core.ssa:on stmt: $118call.12 = call $102load_attr.10(n.3, func=$102load_attr.10, args=[Var(n.3, unicode.py:2577)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $132call.13 = call $80load_attr.7($118call.12, func=$80load_attr.7, args=[Var($118call.12, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $146call.14 = call $56load_global.3($132call.13, func=$56load_global.3, args=[Var($132call.13, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: length = $binop_add52.2 + $146call.14
DEBUG:numba.core.ssa:on stmt: kind = global(PY_UNICODE_1BYTE_KIND: 1)
DEBUG:numba.core.ssa:on stmt: $176load_global.17 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x0000019A15726A20>)
DEBUG:numba.core.ssa:on stmt: char_width = call $176load_global.17(kind, func=$176load_global.17, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $206load_global.21 = global(_malloc_string: <intrinsic _malloc_string>)
DEBUG:numba.core.ssa:on stmt: $const224.26.3 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: s = call $206load_global.21(kind, char_width, length, $const224.26.3, func=$206load_global.21, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const224.26.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool244 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $244pred = call bool244(flag, func=bool244, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $244pred, 246, 306
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173B4D50>
DEBUG:numba.core.ssa:on stmt: $246load_global.0 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>)
DEBUG:numba.core.ssa:on stmt: $const260.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $262load_global.4 = global(ord: <built-in function ord>)
DEBUG:numba.core.ssa:on stmt: $const274.6.6 = const(str, -)
DEBUG:numba.core.ssa:on stmt: $280call.7 = call $262load_global.4($const274.6.6, func=$262load_global.4, args=[Var($const274.6.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $294call.8 = call $246load_global.0(s, $const260.3.2, $280call.7, func=$246load_global.0, args=[Var(s, unicode.py:2582), Var($const260.3.2, unicode.py:2584), Var($280call.7, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 306
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 306
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173B4D50>
DEBUG:numba.core.ssa:on stmt: $const308.1.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: idx = length - $const308.1.5
DEBUG:numba.core.ssa:on stmt: $const318.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $320compare_op.5 = n.3 > $const318.4.2
DEBUG:numba.core.ssa:on stmt: bool326 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $326pred = call bool326($320compare_op.5, func=bool326, args=(Var($320compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $326pred, 328, 458
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173B4D50>
DEBUG:numba.core.ssa:on stmt: n.4 = phi(incoming_values=[Var(n.2, unicode.py:2587), Var(n.3, unicode.py:2577)], incoming_blocks=[328, 306])
DEBUG:numba.core.ssa:on stmt: $328load_global.0 = global(divmod: <built-in function divmod>)
DEBUG:numba.core.ssa:on stmt: $342load_deref.3 = freevar(ten: 10)
DEBUG:numba.core.ssa:on stmt: $348call.4 = call $328load_global.0(n.4, $342load_deref.3, func=$328load_global.0, args=[Var(n.4, unicode.py:2587), Var($342load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.7 = exhaust_iter(value=$348call.4, count=2)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.5 = static_getitem(value=$358unpack_sequence.7, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.6 = static_getitem(value=$358unpack_sequence.7, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: n.2 = $358unpack_sequence.5
DEBUG:numba.core.ssa:on stmt: digit = $358unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: $366load_global.8 = global(ord: <built-in function ord>)
DEBUG:numba.core.ssa:on stmt: $const378.10.4 = const(str, 0)
DEBUG:numba.core.ssa:on stmt: $384call.11 = call $366load_global.8($const378.10.4, func=$366load_global.8, args=[Var($const378.10.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: c = $384call.11 + digit
DEBUG:numba.core.ssa:on stmt: $402load_global.14 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>)
DEBUG:numba.core.ssa:on stmt: $424call.19 = call $402load_global.14(s, idx, c, func=$402load_global.14, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const438.21.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_isub440.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const438.21.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: idx = $binop_isub440.22
DEBUG:numba.core.ssa:on stmt: $const448.24.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $450compare_op.25 = n.2 > $const448.24.2
DEBUG:numba.core.ssa:on stmt: bool456 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $456pred = call bool456($450compare_op.25, func=bool456, args=(Var($450compare_op.25, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $456pred, 328, 458
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 458
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173B4D50>
DEBUG:numba.core.ssa:on stmt: $460return_value.1 = cast(value=s)
DEBUG:numba.core.ssa:on stmt: return $460return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000019A173C5410>],
             22: [<numba.core.ir.Assign object at 0x0000019A173C53D0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C5B10>
DEBUG:numba.core.ssa:on stmt: n = arg(0, name=n)
DEBUG:numba.core.ssa:on stmt: flag = const(bool, False)
DEBUG:numba.core.ssa:on stmt: $const12.2.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $14compare_op.3 = n < $const12.2.2
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($14compare_op.3, func=bool20, args=(Var($14compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C5B10>
DEBUG:numba.core.ssa:on stmt: n.1 = unary(fn=<built-in function neg>, value=n)
DEBUG:numba.core.ssa:on stmt: flag.1 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C5B10>
DEBUG:numba.core.ssa:on stmt: n.3 = phi(incoming_values=[Var(n, unicode.py:2572), Var(n.1, unicode.py:2575)], incoming_blocks=[0, 22])
DEBUG:numba.core.ssa:on stmt: $const34.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $36compare_op.2 = n.3 == $const34.1.2
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($36compare_op.2, func=bool42, args=(Var($36compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C5B10>
DEBUG:numba.core.ssa:on stmt: $const44.0.4 = const(str, 0)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0.4)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C5B10>
DEBUG:numba.core.ssa:on stmt: $const50.1.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add52.2 = flag + $const50.1.5
DEBUG:numba.core.ssa:find_def var='flag' stmt=$binop_add52.2 = flag + $const50.1.5
DEBUG:numba.core.ssa:find_def_from_top label 48
DEBUG:numba.core.ssa:idom 32 from label 48
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:find_def_from_top label 32
DEBUG:numba.core.ssa:insert phi node flag.2 = phi(incoming_values=[], incoming_blocks=[]) at 32
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def flag = const(bool, False)
DEBUG:numba.core.ssa:find_def_from_bottom label 22
DEBUG:numba.core.ssa:incoming_def flag.1 = const(bool, True)
DEBUG:numba.core.ssa:replaced with: $binop_add52.2 = flag.2 + $const50.1.5
DEBUG:numba.core.ssa:on stmt: $56load_global.3 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $68load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $80load_attr.7 = getattr(value=$68load_global.5, attr=floor)
DEBUG:numba.core.ssa:on stmt: $90load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $102load_attr.10 = getattr(value=$90load_global.8, attr=log10)
DEBUG:numba.core.ssa:on stmt: $118call.12 = call $102load_attr.10(n.3, func=$102load_attr.10, args=[Var(n.3, unicode.py:2577)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $132call.13 = call $80load_attr.7($118call.12, func=$80load_attr.7, args=[Var($118call.12, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $146call.14 = call $56load_global.3($132call.13, func=$56load_global.3, args=[Var($132call.13, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: length = $binop_add52.2 + $146call.14
DEBUG:numba.core.ssa:on stmt: kind = global(PY_UNICODE_1BYTE_KIND: 1)
DEBUG:numba.core.ssa:on stmt: $176load_global.17 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x0000019A15726A20>)
DEBUG:numba.core.ssa:on stmt: char_width = call $176load_global.17(kind, func=$176load_global.17, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $206load_global.21 = global(_malloc_string: <intrinsic _malloc_string>)
DEBUG:numba.core.ssa:on stmt: $const224.26.3 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: s = call $206load_global.21(kind, char_width, length, $const224.26.3, func=$206load_global.21, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const224.26.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool244 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $244pred = call bool244(flag, func=bool244, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='flag' stmt=$244pred = call bool244(flag, func=bool244, args=(Var(flag, unicode.py:2573),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 48
DEBUG:numba.core.ssa:idom 32 from label 48
DEBUG:numba.core.ssa:find_def_from_bottom label 32
DEBUG:numba.core.ssa:replaced with: $244pred = call bool244(flag.2, func=bool244, args=(Var(flag.2, unicode.py:2579),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $244pred, 246, 306
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C5B10>
DEBUG:numba.core.ssa:on stmt: $246load_global.0 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>)
DEBUG:numba.core.ssa:on stmt: $const260.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $262load_global.4 = global(ord: <built-in function ord>)
DEBUG:numba.core.ssa:on stmt: $const274.6.6 = const(str, -)
DEBUG:numba.core.ssa:on stmt: $280call.7 = call $262load_global.4($const274.6.6, func=$262load_global.4, args=[Var($const274.6.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $294call.8 = call $246load_global.0(s, $const260.3.2, $280call.7, func=$246load_global.0, args=[Var(s, unicode.py:2582), Var($const260.3.2, unicode.py:2584), Var($280call.7, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 306
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 306
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C5B10>
DEBUG:numba.core.ssa:on stmt: $const308.1.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: idx = length - $const308.1.5
DEBUG:numba.core.ssa:on stmt: $const318.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $320compare_op.5 = n.3 > $const318.4.2
DEBUG:numba.core.ssa:on stmt: bool326 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $326pred = call bool326($320compare_op.5, func=bool326, args=(Var($320compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $326pred, 328, 458
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C5B10>
DEBUG:numba.core.ssa:on stmt: n.4 = phi(incoming_values=[Var(n.2, unicode.py:2587), Var(n.3, unicode.py:2577)], incoming_blocks=[328, 306])
DEBUG:numba.core.ssa:on stmt: $328load_global.0 = global(divmod: <built-in function divmod>)
DEBUG:numba.core.ssa:on stmt: $342load_deref.3 = freevar(ten: 10)
DEBUG:numba.core.ssa:on stmt: $348call.4 = call $328load_global.0(n.4, $342load_deref.3, func=$328load_global.0, args=[Var(n.4, unicode.py:2587), Var($342load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.7 = exhaust_iter(value=$348call.4, count=2)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.5 = static_getitem(value=$358unpack_sequence.7, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.6 = static_getitem(value=$358unpack_sequence.7, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: n.2 = $358unpack_sequence.5
DEBUG:numba.core.ssa:on stmt: digit = $358unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: $366load_global.8 = global(ord: <built-in function ord>)
DEBUG:numba.core.ssa:on stmt: $const378.10.4 = const(str, 0)
DEBUG:numba.core.ssa:on stmt: $384call.11 = call $366load_global.8($const378.10.4, func=$366load_global.8, args=[Var($const378.10.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: c = $384call.11 + digit
DEBUG:numba.core.ssa:on stmt: $402load_global.14 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>)
DEBUG:numba.core.ssa:on stmt: $424call.19 = call $402load_global.14(s, idx, c, func=$402load_global.14, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const438.21.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_isub440.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const438.21.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: idx = $binop_isub440.22
DEBUG:numba.core.ssa:on stmt: $const448.24.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $450compare_op.25 = n.2 > $const448.24.2
DEBUG:numba.core.ssa:on stmt: bool456 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $456pred = call bool456($450compare_op.25, func=bool456, args=(Var($450compare_op.25, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $456pred, 328, 458
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 458
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C5B10>
DEBUG:numba.core.ssa:on stmt: $460return_value.1 = cast(value=s)
DEBUG:numba.core.ssa:on stmt: return $460return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var idx
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173C5B50>
DEBUG:numba.core.ssa:on stmt: n = arg(0, name=n)
DEBUG:numba.core.ssa:on stmt: flag = const(bool, False)
DEBUG:numba.core.ssa:on stmt: $const12.2.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $14compare_op.3 = n < $const12.2.2
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($14compare_op.3, func=bool20, args=(Var($14compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173C5B50>
DEBUG:numba.core.ssa:on stmt: n.1 = unary(fn=<built-in function neg>, value=n)
DEBUG:numba.core.ssa:on stmt: flag.1 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173C5B50>
DEBUG:numba.core.ssa:on stmt: flag.2 = phi(incoming_values=[Var(flag, unicode.py:2573), Var(flag.1, unicode.py:2576)], incoming_blocks=[0, 22])
DEBUG:numba.core.ssa:on stmt: n.3 = phi(incoming_values=[Var(n, unicode.py:2572), Var(n.1, unicode.py:2575)], incoming_blocks=[0, 22])
DEBUG:numba.core.ssa:on stmt: $const34.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $36compare_op.2 = n.3 == $const34.1.2
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($36compare_op.2, func=bool42, args=(Var($36compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173C5B50>
DEBUG:numba.core.ssa:on stmt: $const44.0.4 = const(str, 0)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0.4)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173C5B50>
DEBUG:numba.core.ssa:on stmt: $const50.1.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add52.2 = flag.2 + $const50.1.5
DEBUG:numba.core.ssa:on stmt: $56load_global.3 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $68load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $80load_attr.7 = getattr(value=$68load_global.5, attr=floor)
DEBUG:numba.core.ssa:on stmt: $90load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $102load_attr.10 = getattr(value=$90load_global.8, attr=log10)
DEBUG:numba.core.ssa:on stmt: $118call.12 = call $102load_attr.10(n.3, func=$102load_attr.10, args=[Var(n.3, unicode.py:2577)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $132call.13 = call $80load_attr.7($118call.12, func=$80load_attr.7, args=[Var($118call.12, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $146call.14 = call $56load_global.3($132call.13, func=$56load_global.3, args=[Var($132call.13, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: length = $binop_add52.2 + $146call.14
DEBUG:numba.core.ssa:on stmt: kind = global(PY_UNICODE_1BYTE_KIND: 1)
DEBUG:numba.core.ssa:on stmt: $176load_global.17 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x0000019A15726A20>)
DEBUG:numba.core.ssa:on stmt: char_width = call $176load_global.17(kind, func=$176load_global.17, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $206load_global.21 = global(_malloc_string: <intrinsic _malloc_string>)
DEBUG:numba.core.ssa:on stmt: $const224.26.3 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: s = call $206load_global.21(kind, char_width, length, $const224.26.3, func=$206load_global.21, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const224.26.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool244 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $244pred = call bool244(flag.2, func=bool244, args=(Var(flag.2, unicode.py:2579),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $244pred, 246, 306
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173C5B50>
DEBUG:numba.core.ssa:on stmt: $246load_global.0 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>)
DEBUG:numba.core.ssa:on stmt: $const260.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $262load_global.4 = global(ord: <built-in function ord>)
DEBUG:numba.core.ssa:on stmt: $const274.6.6 = const(str, -)
DEBUG:numba.core.ssa:on stmt: $280call.7 = call $262load_global.4($const274.6.6, func=$262load_global.4, args=[Var($const274.6.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $294call.8 = call $246load_global.0(s, $const260.3.2, $280call.7, func=$246load_global.0, args=[Var(s, unicode.py:2582), Var($const260.3.2, unicode.py:2584), Var($280call.7, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 306
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 306
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173C5B50>
DEBUG:numba.core.ssa:on stmt: $const308.1.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: idx = length - $const308.1.5
DEBUG:numba.core.ssa:first assign: idx
DEBUG:numba.core.ssa:replaced with: idx = length - $const308.1.5
DEBUG:numba.core.ssa:on stmt: $const318.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $320compare_op.5 = n.3 > $const318.4.2
DEBUG:numba.core.ssa:on stmt: bool326 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $326pred = call bool326($320compare_op.5, func=bool326, args=(Var($320compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $326pred, 328, 458
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173C5B50>
DEBUG:numba.core.ssa:on stmt: n.4 = phi(incoming_values=[Var(n.2, unicode.py:2587), Var(n.3, unicode.py:2577)], incoming_blocks=[328, 306])
DEBUG:numba.core.ssa:on stmt: $328load_global.0 = global(divmod: <built-in function divmod>)
DEBUG:numba.core.ssa:on stmt: $342load_deref.3 = freevar(ten: 10)
DEBUG:numba.core.ssa:on stmt: $348call.4 = call $328load_global.0(n.4, $342load_deref.3, func=$328load_global.0, args=[Var(n.4, unicode.py:2587), Var($342load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.7 = exhaust_iter(value=$348call.4, count=2)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.5 = static_getitem(value=$358unpack_sequence.7, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.6 = static_getitem(value=$358unpack_sequence.7, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: n.2 = $358unpack_sequence.5
DEBUG:numba.core.ssa:on stmt: digit = $358unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: $366load_global.8 = global(ord: <built-in function ord>)
DEBUG:numba.core.ssa:on stmt: $const378.10.4 = const(str, 0)
DEBUG:numba.core.ssa:on stmt: $384call.11 = call $366load_global.8($const378.10.4, func=$366load_global.8, args=[Var($const378.10.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: c = $384call.11 + digit
DEBUG:numba.core.ssa:on stmt: $402load_global.14 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>)
DEBUG:numba.core.ssa:on stmt: $424call.19 = call $402load_global.14(s, idx, c, func=$402load_global.14, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const438.21.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_isub440.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const438.21.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: idx = $binop_isub440.22
DEBUG:numba.core.ssa:replaced with: idx.1 = $binop_isub440.22
DEBUG:numba.core.ssa:on stmt: $const448.24.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $450compare_op.25 = n.2 > $const448.24.2
DEBUG:numba.core.ssa:on stmt: bool456 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $456pred = call bool456($450compare_op.25, func=bool456, args=(Var($450compare_op.25, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $456pred, 328, 458
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 458
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A173C5B50>
DEBUG:numba.core.ssa:on stmt: $460return_value.1 = cast(value=s)
DEBUG:numba.core.ssa:on stmt: return $460return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {306: [<numba.core.ir.Assign object at 0x0000019A173C61D0>],
             328: [<numba.core.ir.Assign object at 0x0000019A173C6190>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C6090>
DEBUG:numba.core.ssa:on stmt: n = arg(0, name=n)
DEBUG:numba.core.ssa:on stmt: flag = const(bool, False)
DEBUG:numba.core.ssa:on stmt: $const12.2.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $14compare_op.3 = n < $const12.2.2
DEBUG:numba.core.ssa:on stmt: bool20 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $20pred = call bool20($14compare_op.3, func=bool20, args=(Var($14compare_op.3, unicode.py:2574),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $20pred, 22, 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 22
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C6090>
DEBUG:numba.core.ssa:on stmt: n.1 = unary(fn=<built-in function neg>, value=n)
DEBUG:numba.core.ssa:on stmt: flag.1 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: jump 32
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C6090>
DEBUG:numba.core.ssa:on stmt: flag.2 = phi(incoming_values=[Var(flag, unicode.py:2573), Var(flag.1, unicode.py:2576)], incoming_blocks=[0, 22])
DEBUG:numba.core.ssa:on stmt: n.3 = phi(incoming_values=[Var(n, unicode.py:2572), Var(n.1, unicode.py:2575)], incoming_blocks=[0, 22])
DEBUG:numba.core.ssa:on stmt: $const34.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $36compare_op.2 = n.3 == $const34.1.2
DEBUG:numba.core.ssa:on stmt: bool42 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $42pred = call bool42($36compare_op.2, func=bool42, args=(Var($36compare_op.2, unicode.py:2577),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $42pred, 44, 48
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C6090>
DEBUG:numba.core.ssa:on stmt: $const44.0.4 = const(str, 0)
DEBUG:numba.core.ssa:on stmt: $46return_value.1 = cast(value=$const44.0.4)
DEBUG:numba.core.ssa:on stmt: return $46return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C6090>
DEBUG:numba.core.ssa:on stmt: $const50.1.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add52.2 = flag.2 + $const50.1.5
DEBUG:numba.core.ssa:on stmt: $56load_global.3 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $68load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $80load_attr.7 = getattr(value=$68load_global.5, attr=floor)
DEBUG:numba.core.ssa:on stmt: $90load_global.8 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $102load_attr.10 = getattr(value=$90load_global.8, attr=log10)
DEBUG:numba.core.ssa:on stmt: $118call.12 = call $102load_attr.10(n.3, func=$102load_attr.10, args=[Var(n.3, unicode.py:2577)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $132call.13 = call $80load_attr.7($118call.12, func=$80load_attr.7, args=[Var($118call.12, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $146call.14 = call $56load_global.3($132call.13, func=$56load_global.3, args=[Var($132call.13, unicode.py:2579)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: length = $binop_add52.2 + $146call.14
DEBUG:numba.core.ssa:on stmt: kind = global(PY_UNICODE_1BYTE_KIND: 1)
DEBUG:numba.core.ssa:on stmt: $176load_global.17 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x0000019A15726A20>)
DEBUG:numba.core.ssa:on stmt: char_width = call $176load_global.17(kind, func=$176load_global.17, args=[Var(kind, unicode.py:2580)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $206load_global.21 = global(_malloc_string: <intrinsic _malloc_string>)
DEBUG:numba.core.ssa:on stmt: $const224.26.3 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: s = call $206load_global.21(kind, char_width, length, $const224.26.3, func=$206load_global.21, args=[Var(kind, unicode.py:2580), Var(char_width, unicode.py:2581), Var(length, unicode.py:2579), Var($const224.26.3, unicode.py:2582)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool244 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $244pred = call bool244(flag.2, func=bool244, args=(Var(flag.2, unicode.py:2579),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $244pred, 246, 306
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 246
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C6090>
DEBUG:numba.core.ssa:on stmt: $246load_global.0 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>)
DEBUG:numba.core.ssa:on stmt: $const260.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $262load_global.4 = global(ord: <built-in function ord>)
DEBUG:numba.core.ssa:on stmt: $const274.6.6 = const(str, -)
DEBUG:numba.core.ssa:on stmt: $280call.7 = call $262load_global.4($const274.6.6, func=$262load_global.4, args=[Var($const274.6.6, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $294call.8 = call $246load_global.0(s, $const260.3.2, $280call.7, func=$246load_global.0, args=[Var(s, unicode.py:2582), Var($const260.3.2, unicode.py:2584), Var($280call.7, unicode.py:2584)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 306
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 306
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C6090>
DEBUG:numba.core.ssa:on stmt: $const308.1.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: idx = length - $const308.1.5
DEBUG:numba.core.ssa:on stmt: $const318.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $320compare_op.5 = n.3 > $const318.4.2
DEBUG:numba.core.ssa:on stmt: bool326 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $326pred = call bool326($320compare_op.5, func=bool326, args=(Var($320compare_op.5, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $326pred, 328, 458
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C6090>
DEBUG:numba.core.ssa:on stmt: n.4 = phi(incoming_values=[Var(n.2, unicode.py:2587), Var(n.3, unicode.py:2577)], incoming_blocks=[328, 306])
DEBUG:numba.core.ssa:on stmt: $328load_global.0 = global(divmod: <built-in function divmod>)
DEBUG:numba.core.ssa:on stmt: $342load_deref.3 = freevar(ten: 10)
DEBUG:numba.core.ssa:on stmt: $348call.4 = call $328load_global.0(n.4, $342load_deref.3, func=$328load_global.0, args=[Var(n.4, unicode.py:2587), Var($342load_deref.3, unicode.py:2587)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.7 = exhaust_iter(value=$348call.4, count=2)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.5 = static_getitem(value=$358unpack_sequence.7, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $358unpack_sequence.6 = static_getitem(value=$358unpack_sequence.7, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: n.2 = $358unpack_sequence.5
DEBUG:numba.core.ssa:on stmt: digit = $358unpack_sequence.6
DEBUG:numba.core.ssa:on stmt: $366load_global.8 = global(ord: <built-in function ord>)
DEBUG:numba.core.ssa:on stmt: $const378.10.4 = const(str, 0)
DEBUG:numba.core.ssa:on stmt: $384call.11 = call $366load_global.8($const378.10.4, func=$366load_global.8, args=[Var($const378.10.4, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: c = $384call.11 + digit
DEBUG:numba.core.ssa:on stmt: $402load_global.14 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>)
DEBUG:numba.core.ssa:on stmt: $424call.19 = call $402load_global.14(s, idx, c, func=$402load_global.14, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='idx' stmt=$424call.19 = call $402load_global.14(s, idx, c, func=$402load_global.14, args=[Var(s, unicode.py:2582), Var(idx, unicode.py:2585), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 328
DEBUG:numba.core.ssa:insert phi node idx.2 = phi(incoming_values=[], incoming_blocks=[]) at 328
DEBUG:numba.core.ssa:find_def_from_bottom label 328
DEBUG:numba.core.ssa:incoming_def idx.1 = $binop_isub440.22
DEBUG:numba.core.ssa:find_def_from_bottom label 306
DEBUG:numba.core.ssa:incoming_def idx = length - $const308.1.5
DEBUG:numba.core.ssa:replaced with: $424call.19 = call $402load_global.14(s, idx.2, c, func=$402load_global.14, args=[Var(s, unicode.py:2582), Var(idx.2, unicode.py:2587), Var(c, unicode.py:2588)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const438.21.5 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_isub440.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const438.21.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='idx' stmt=$binop_isub440.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx, rhs=$const438.21.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:replaced with: $binop_isub440.22 = inplace_binop(fn=<built-in function isub>, immutable_fn=<built-in function sub>, lhs=idx.2, rhs=$const438.21.5, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: idx.1 = $binop_isub440.22
DEBUG:numba.core.ssa:on stmt: $const448.24.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $450compare_op.25 = n.2 > $const448.24.2
DEBUG:numba.core.ssa:on stmt: bool456 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $456pred = call bool456($450compare_op.25, func=bool456, args=(Var($450compare_op.25, unicode.py:2586),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $456pred, 328, 458
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 458
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A173C6090>
DEBUG:numba.core.ssa:on stmt: $460return_value.1 = cast(value=s)
DEBUG:numba.core.ssa:on stmt: return $460return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=411)
           2	RESUME(arg=0, lineno=411)
           4	LOAD_FAST(arg=0, lineno=413)
           6	LOAD_GLOBAL(arg=0, lineno=413)
          18	COMPARE_OP(arg=2, lineno=413)
          24	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=413)
          26	LOAD_CONST(arg=1, lineno=414)
          28	RETURN_VALUE(arg=None, lineno=414)
>         30	LOAD_FAST(arg=0, lineno=415)
          32	LOAD_GLOBAL(arg=2, lineno=415)
          44	COMPARE_OP(arg=2, lineno=415)
          50	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=415)
          52	LOAD_CONST(arg=2, lineno=416)
          54	RETURN_VALUE(arg=None, lineno=416)
>         56	LOAD_FAST(arg=0, lineno=417)
          58	LOAD_GLOBAL(arg=4, lineno=417)
          70	COMPARE_OP(arg=2, lineno=417)
          76	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=417)
          78	LOAD_CONST(arg=3, lineno=418)
          80	RETURN_VALUE(arg=None, lineno=418)
>         82	LOAD_FAST(arg=0, lineno=419)
          84	LOAD_GLOBAL(arg=6, lineno=419)
          96	COMPARE_OP(arg=2, lineno=419)
         102	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=419)
         104	LOAD_GLOBAL(arg=9, lineno=420)
         116	LOAD_CONST(arg=4, lineno=420)
         118	PRECALL(arg=1, lineno=420)
         122	CALL(arg=1, lineno=420)
         132	RAISE_VARARGS(arg=1, lineno=420)
>        134	LOAD_GLOBAL(arg=9, lineno=422)
         146	LOAD_CONST(arg=5, lineno=422)
         148	PRECALL(arg=1, lineno=422)
         152	CALL(arg=1, lineno=422)
         162	RAISE_VARARGS(arg=1, lineno=422)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=411)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=411)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=413)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=413)
DEBUG:numba.core.byteflow:stack ['$kind4.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=COMPARE_OP(arg=2, lineno=413)
DEBUG:numba.core.byteflow:stack ['$kind4.0', '$6load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=413)
DEBUG:numba.core.byteflow:stack ['$18compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=30 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=26 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=414)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=RETURN_VALUE(arg=None, lineno=414)
DEBUG:numba.core.byteflow:stack ['$const26.0.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=30 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=415)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_GLOBAL(arg=2, lineno=415)
DEBUG:numba.core.byteflow:stack ['$kind30.0']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=COMPARE_OP(arg=2, lineno=415)
DEBUG:numba.core.byteflow:stack ['$kind30.0', '$32load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=415)
DEBUG:numba.core.byteflow:stack ['$44compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=52 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=416)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=416)
DEBUG:numba.core.byteflow:stack ['$const52.0.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=56 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=0, lineno=417)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_GLOBAL(arg=4, lineno=417)
DEBUG:numba.core.byteflow:stack ['$kind56.0']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=COMPARE_OP(arg=2, lineno=417)
DEBUG:numba.core.byteflow:stack ['$kind56.0', '$58load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=417)
DEBUG:numba.core.byteflow:stack ['$70compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=82 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=78 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_CONST(arg=3, lineno=418)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=80, inst=RETURN_VALUE(arg=None, lineno=418)
DEBUG:numba.core.byteflow:stack ['$const78.0.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=82 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=82 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_FAST(arg=0, lineno=419)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_GLOBAL(arg=6, lineno=419)
DEBUG:numba.core.byteflow:stack ['$kind82.0']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=COMPARE_OP(arg=2, lineno=419)
DEBUG:numba.core.byteflow:stack ['$kind82.0', '$84load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=419)
DEBUG:numba.core.byteflow:stack ['$96compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=134, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=104 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_GLOBAL(arg=9, lineno=420)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_CONST(arg=4, lineno=420)
DEBUG:numba.core.byteflow:stack ['$null$104.1', '$104load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=PRECALL(arg=1, lineno=420)
DEBUG:numba.core.byteflow:stack ['$null$104.1', '$104load_global.0', '$const116.2.4']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=CALL(arg=1, lineno=420)
DEBUG:numba.core.byteflow:stack ['$null$104.1', '$104load_global.0', '$const116.2.4']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=RAISE_VARARGS(arg=1, lineno=420)
DEBUG:numba.core.byteflow:stack ['$122call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=134 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=134 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_GLOBAL(arg=9, lineno=422)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_CONST(arg=5, lineno=422)
DEBUG:numba.core.byteflow:stack ['$null$134.1', '$134load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=PRECALL(arg=1, lineno=422)
DEBUG:numba.core.byteflow:stack ['$null$134.1', '$134load_global.0', '$const146.2.5']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=CALL(arg=1, lineno=422)
DEBUG:numba.core.byteflow:stack ['$null$134.1', '$134load_global.0', '$const146.2.5']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=RAISE_VARARGS(arg=1, lineno=422)
DEBUG:numba.core.byteflow:stack ['$152call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$kind4.0'}), (6, {'idx': 0, 'res': '$6load_global.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'lhs': '$kind4.0', 'rhs': '$6load_global.1', 'res': '$18compare_op.2'}), (20, {}), (22, {}), (24, {'pred': '$18compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 30: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0.1'}), (28, {'retval': '$const26.0.1', 'castval': '$28return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {'res': '$kind30.0'}), (32, {'idx': 1, 'res': '$32load_global.1'}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {'lhs': '$kind30.0', 'rhs': '$32load_global.1', 'res': '$44compare_op.2'}), (46, {}), (48, {}), (50, {'pred': '$44compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 56: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$const52.0.2'}), (54, {'retval': '$const52.0.2', 'castval': '$54return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'res': '$kind56.0'}), (58, {'idx': 2, 'res': '$58load_global.1'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'lhs': '$kind56.0', 'rhs': '$58load_global.1', 'res': '$70compare_op.2'}), (72, {}), (74, {}), (76, {'pred': '$70compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: (), 82: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$const78.0.3'}), (80, {'retval': '$const78.0.3', 'castval': '$80return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$kind82.0'}), (84, {'idx': 3, 'res': '$84load_global.1'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'lhs': '$kind82.0', 'rhs': '$84load_global.1', 'res': '$96compare_op.2'}), (98, {}), (100, {}), (102, {'pred': '$96compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 134: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'idx': 4, 'res': '$104load_global.0'}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {'res': '$const116.2.4'}), (118, {}), (120, {}), (122, {'func': '$104load_global.0', 'args': ['$const116.2.4'], 'kw_names': None, 'res': '$122call.3'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'exc': '$122call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {'idx': 4, 'res': '$134load_global.0'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.2.5'}), (148, {}), (150, {}), (152, {'func': '$134load_global.0', 'args': ['$const146.2.5'], 'kw_names': None, 'res': '$152call.3'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'exc': '$152call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    kind = arg(0, name=kind)                 ['kind']
    $6load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.1']
    $18compare_op.2 = kind == $6load_global.1 ['$18compare_op.2', '$6load_global.1', 'kind']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($18compare_op.2, func=bool24, args=(Var($18compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$24pred', 'bool24']
    branch $24pred, 26, 30                   ['$24pred']
label 26:
    $const26.0.1 = const(int, 1)             ['$const26.0.1']
    $28return_value.1 = cast(value=$const26.0.1) ['$28return_value.1', '$const26.0.1']
    return $28return_value.1                 ['$28return_value.1']
label 30:
    $32load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$32load_global.1']
    $44compare_op.2 = kind == $32load_global.1 ['$32load_global.1', '$44compare_op.2', 'kind']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($44compare_op.2, func=bool50, args=(Var($44compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$44compare_op.2', '$50pred', 'bool50']
    branch $50pred, 52, 56                   ['$50pred']
label 52:
    $const52.0.2 = const(int, 2)             ['$const52.0.2']
    $54return_value.1 = cast(value=$const52.0.2) ['$54return_value.1', '$const52.0.2']
    return $54return_value.1                 ['$54return_value.1']
label 56:
    $58load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$58load_global.1']
    $70compare_op.2 = kind == $58load_global.1 ['$58load_global.1', '$70compare_op.2', 'kind']
    bool76 = global(bool: <class 'bool'>)    ['bool76']
    $76pred = call bool76($70compare_op.2, func=bool76, args=(Var($70compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.2', '$76pred', 'bool76']
    branch $76pred, 78, 82                   ['$76pred']
label 78:
    $const78.0.3 = const(int, 4)             ['$const78.0.3']
    $80return_value.1 = cast(value=$const78.0.3) ['$80return_value.1', '$const78.0.3']
    return $80return_value.1                 ['$80return_value.1']
label 82:
    $84load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$84load_global.1']
    $96compare_op.2 = kind == $84load_global.1 ['$84load_global.1', '$96compare_op.2', 'kind']
    bool102 = global(bool: <class 'bool'>)   ['bool102']
    $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$102pred', '$96compare_op.2', 'bool102']
    branch $102pred, 104, 134                ['$102pred']
label 104:
    $104load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$104load_global.0']
    $const116.2.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const116.2.4']
    $122call.3 = call $104load_global.0($const116.2.4, func=$104load_global.0, args=[Var($const116.2.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_global.0', '$122call.3', '$const116.2.4']
    raise $122call.3                         ['$122call.3']
label 134:
    $134load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$134load_global.0']
    $const146.2.5 = const(str, Unexpected unicode encoding encountered) ['$const146.2.5']
    $152call.3 = call $134load_global.0($const146.2.5, func=$134load_global.0, args=[Var($const146.2.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.0', '$152call.3', '$const146.2.5']
    raise $152call.3                         ['$152call.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A173B8E90>
DEBUG:numba.core.ssa:on stmt: kind = arg(0, name=kind)
DEBUG:numba.core.ssa:on stmt: $6load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1)
DEBUG:numba.core.ssa:on stmt: $18compare_op.2 = kind == $6load_global.1
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($18compare_op.2, func=bool24, args=(Var($18compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 30
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A173B8E90>
DEBUG:numba.core.ssa:on stmt: $const26.0.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $28return_value.1 = cast(value=$const26.0.1)
DEBUG:numba.core.ssa:on stmt: return $28return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A173B8E90>
DEBUG:numba.core.ssa:on stmt: $32load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2)
DEBUG:numba.core.ssa:on stmt: $44compare_op.2 = kind == $32load_global.1
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($44compare_op.2, func=bool50, args=(Var($44compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $50pred, 52, 56
DEBUG:numba.core.ssa:==== SSA block analysis pass on 52
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A173B8E90>
DEBUG:numba.core.ssa:on stmt: $const52.0.2 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $54return_value.1 = cast(value=$const52.0.2)
DEBUG:numba.core.ssa:on stmt: return $54return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A173B8E90>
DEBUG:numba.core.ssa:on stmt: $58load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4)
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = kind == $58load_global.1
DEBUG:numba.core.ssa:on stmt: bool76 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $76pred = call bool76($70compare_op.2, func=bool76, args=(Var($70compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $76pred, 78, 82
DEBUG:numba.core.ssa:==== SSA block analysis pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A173B8E90>
DEBUG:numba.core.ssa:on stmt: $const78.0.3 = const(int, 4)
DEBUG:numba.core.ssa:on stmt: $80return_value.1 = cast(value=$const78.0.3)
DEBUG:numba.core.ssa:on stmt: return $80return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A173B8E90>
DEBUG:numba.core.ssa:on stmt: $84load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0)
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = kind == $84load_global.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 134
DEBUG:numba.core.ssa:==== SSA block analysis pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A173B8E90>
DEBUG:numba.core.ssa:on stmt: $104load_global.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: $const116.2.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported)
DEBUG:numba.core.ssa:on stmt: $122call.3 = call $104load_global.0($const116.2.4, func=$104load_global.0, args=[Var($const116.2.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>('PY_UNICODE_WCHAR_KIND unsupported')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A173B8E90>
DEBUG:numba.core.ssa:on stmt: $134load_global.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: $const146.2.5 = const(str, Unexpected unicode encoding encountered)
DEBUG:numba.core.ssa:on stmt: $152call.3 = call $134load_global.0($const146.2.5, func=$134load_global.0, args=[Var($const146.2.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>('Unexpected unicode encoding encountered')
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102pred': [(<numba.core.ir.Assign object at 0x0000019A17429B90>,
                           82)],
             '$104load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17429E10>,
                                    104)],
             '$122call.3': [(<numba.core.ir.Assign object at 0x0000019A1742A190>,
                             104)],
             '$134load_global.0': [(<numba.core.ir.Assign object at 0x0000019A1742A490>,
                                    134)],
             '$152call.3': [(<numba.core.ir.Assign object at 0x0000019A1742A890>,
                             134)],
             '$18compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A1740EA90>,
                                  0)],
             '$24pred': [(<numba.core.ir.Assign object at 0x0000019A1740EE50>,
                          0)],
             '$28return_value.1': [(<numba.core.ir.Assign object at 0x0000019A1740F250>,
                                    26)],
             '$32load_global.1': [(<numba.core.ir.Assign object at 0x0000019A1740F690>,
                                   30)],
             '$44compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A1740F990>,
                                  30)],
             '$50pred': [(<numba.core.ir.Assign object at 0x0000019A1740FD50>,
                          30)],
             '$54return_value.1': [(<numba.core.ir.Assign object at 0x0000019A17428210>,
                                    52)],
             '$58load_global.1': [(<numba.core.ir.Assign object at 0x0000019A17428650>,
                                   56)],
             '$6load_global.1': [(<numba.core.ir.Assign object at 0x0000019A1740E5D0>,
                                  0)],
             '$70compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A17428910>,
                                  56)],
             '$76pred': [(<numba.core.ir.Assign object at 0x0000019A17428CD0>,
                          56)],
             '$80return_value.1': [(<numba.core.ir.Assign object at 0x0000019A17429190>,
                                    78)],
             '$84load_global.1': [(<numba.core.ir.Assign object at 0x0000019A174295D0>,
                                   82)],
             '$96compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A17429810>,
                                  82)],
             '$const116.2.4': [(<numba.core.ir.Assign object at 0x0000019A17429FD0>,
                                104)],
             '$const146.2.5': [(<numba.core.ir.Assign object at 0x0000019A1742A690>,
                                134)],
             '$const26.0.1': [(<numba.core.ir.Assign object at 0x0000019A1740F090>,
                               26)],
             '$const52.0.2': [(<numba.core.ir.Assign object at 0x0000019A1740FFD0>,
                               52)],
             '$const78.0.3': [(<numba.core.ir.Assign object at 0x0000019A17428F90>,
                               78)],
             'bool102': [(<numba.core.ir.Assign object at 0x0000019A174299D0>,
                          82)],
             'bool24': [(<numba.core.ir.Assign object at 0x0000019A1740ECD0>,
                         0)],
             'bool50': [(<numba.core.ir.Assign object at 0x0000019A1740FB90>,
                         30)],
             'bool76': [(<numba.core.ir.Assign object at 0x0000019A17428B10>,
                         56)],
             'kind': [(<numba.core.ir.Assign object at 0x0000019A1740CE10>,
                       0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A173B8E90>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2510)
           2	RESUME(arg=0, lineno=2510)
           4	LOAD_GLOBAL(arg=1, lineno=2511)
          16	LOAD_FAST(arg=0, lineno=2511)
          18	PRECALL(arg=1, lineno=2511)
          22	CALL(arg=1, lineno=2511)
          32	STORE_FAST(arg=1, lineno=2511)
          34	LOAD_FAST(arg=1, lineno=2512)
          36	LOAD_CONST(arg=1, lineno=2512)
          38	COMPARE_OP(arg=3, lineno=2512)
          44	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=2512)
          46	LOAD_GLOBAL(arg=3, lineno=2514)
          58	LOAD_CONST(arg=2, lineno=2514)
          60	PRECALL(arg=1, lineno=2514)
          64	CALL(arg=1, lineno=2514)
          74	RAISE_VARARGS(arg=1, lineno=2514)
>         76	LOAD_GLOBAL(arg=5, lineno=2515)
          88	LOAD_FAST(arg=0, lineno=2515)
          90	LOAD_CONST(arg=3, lineno=2515)
          92	PRECALL(arg=2, lineno=2515)
          96	CALL(arg=2, lineno=2515)
         106	RETURN_VALUE(arg=None, lineno=2515)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2510)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=2510)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=2511)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=2511)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=PRECALL(arg=1, lineno=2511)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$c16.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL(arg=1, lineno=2511)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$c16.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=STORE_FAST(arg=1, lineno=2511)
DEBUG:numba.core.byteflow:stack ['$22call.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=2512)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=2512)
DEBUG:numba.core.byteflow:stack ['$lc34.4']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=COMPARE_OP(arg=3, lineno=2512)
DEBUG:numba.core.byteflow:stack ['$lc34.4', '$const36.5.1']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=2512)
DEBUG:numba.core.byteflow:stack ['$38compare_op.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=46, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=46 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=46 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_GLOBAL(arg=3, lineno=2514)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_CONST(arg=2, lineno=2514)
DEBUG:numba.core.byteflow:stack ['$null$46.1', '$46load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=PRECALL(arg=1, lineno=2514)
DEBUG:numba.core.byteflow:stack ['$null$46.1', '$46load_global.0', '$const58.2.2']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=CALL(arg=1, lineno=2514)
DEBUG:numba.core.byteflow:stack ['$null$46.1', '$46load_global.0', '$const58.2.2']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=2514)
DEBUG:numba.core.byteflow:stack ['$64call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=76 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=76 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=76, inst=LOAD_GLOBAL(arg=5, lineno=2515)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_FAST(arg=0, lineno=2515)
DEBUG:numba.core.byteflow:stack ['$null$76.1', '$76load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_CONST(arg=3, lineno=2515)
DEBUG:numba.core.byteflow:stack ['$null$76.1', '$76load_global.0', '$c88.2']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=PRECALL(arg=2, lineno=2515)
DEBUG:numba.core.byteflow:stack ['$null$76.1', '$76load_global.0', '$c88.2', '$const90.3.3']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=CALL(arg=2, lineno=2515)
DEBUG:numba.core.byteflow:stack ['$null$76.1', '$76load_global.0', '$c88.2', '$const90.3.3']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=RETURN_VALUE(arg=None, lineno=2515)
DEBUG:numba.core.byteflow:stack ['$96call.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=46 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$c16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$c16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'value': '$22call.3'}), (34, {'res': '$lc34.4'}), (36, {'res': '$const36.5.1'}), (38, {'lhs': '$lc34.4', 'rhs': '$const36.5.1', 'res': '$38compare_op.6'}), (40, {}), (42, {}), (44, {'pred': '$38compare_op.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={46: (), 76: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=46 nstack_initial=0):
AdaptBlockInfo(insts=((46, {'idx': 1, 'res': '$46load_global.0'}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {}), (58, {'res': '$const58.2.2'}), (60, {}), (62, {}), (64, {'func': '$46load_global.0', 'args': ['$const58.2.2'], 'kw_names': None, 'res': '$64call.3'}), (66, {}), (68, {}), (70, {}), (72, {}), (74, {'exc': '$64call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'idx': 2, 'res': '$76load_global.0'}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {}), (88, {'res': '$c88.2'}), (90, {'res': '$const90.3.3'}), (92, {}), (94, {}), (96, {'func': '$76load_global.0', 'args': ['$c88.2', '$const90.3.3'], 'kw_names': None, 'res': '$96call.4'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'retval': '$96call.4', 'castval': '$106return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    c = arg(0, name=c)                       ['c']
    $4load_global.0 = global(len: <built-in function len>) ['$4load_global.0']
    lc = call $4load_global.0(c, func=$4load_global.0, args=[Var(c, unicode.py:2510)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', 'c', 'lc']
    $const36.5.1 = const(int, 1)             ['$const36.5.1']
    $38compare_op.6 = lc != $const36.5.1     ['$38compare_op.6', '$const36.5.1', 'lc']
    bool44 = global(bool: <class 'bool'>)    ['bool44']
    $44pred = call bool44($38compare_op.6, func=bool44, args=(Var($38compare_op.6, unicode.py:2512),), kws=(), vararg=None, varkwarg=None, target=None) ['$38compare_op.6', '$44pred', 'bool44']
    branch $44pred, 46, 76                   ['$44pred']
label 46:
    $46load_global.0 = global(TypeError: <class 'TypeError'>) ['$46load_global.0']
    $const58.2.2 = const(str, ord() expected a character) ['$const58.2.2']
    $64call.3 = call $46load_global.0($const58.2.2, func=$46load_global.0, args=[Var($const58.2.2, unicode.py:2514)], kws=(), vararg=None, varkwarg=None, target=None) ['$46load_global.0', '$64call.3', '$const58.2.2']
    raise $64call.3                          ['$64call.3']
label 76:
    $76load_global.0 = global(_get_code_point: <function _get_code_point at 0x0000019A157263E0>) ['$76load_global.0']
    $const90.3.3 = const(int, 0)             ['$const90.3.3']
    $96call.4 = call $76load_global.0(c, $const90.3.3, func=$76load_global.0, args=[Var(c, unicode.py:2510), Var($const90.3.3, unicode.py:2515)], kws=(), vararg=None, varkwarg=None, target=None) ['$76load_global.0', '$96call.4', '$const90.3.3', 'c']
    $106return_value.5 = cast(value=$96call.4) ['$106return_value.5', '$96call.4']
    return $106return_value.5                ['$106return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17466210>
DEBUG:numba.core.ssa:on stmt: c = arg(0, name=c)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: lc = call $4load_global.0(c, func=$4load_global.0, args=[Var(c, unicode.py:2510)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const36.5.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $38compare_op.6 = lc != $const36.5.1
DEBUG:numba.core.ssa:on stmt: bool44 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $44pred = call bool44($38compare_op.6, func=bool44, args=(Var($38compare_op.6, unicode.py:2512),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $44pred, 46, 76
DEBUG:numba.core.ssa:==== SSA block analysis pass on 46
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17466210>
DEBUG:numba.core.ssa:on stmt: $46load_global.0 = global(TypeError: <class 'TypeError'>)
DEBUG:numba.core.ssa:on stmt: $const58.2.2 = const(str, ord() expected a character)
DEBUG:numba.core.ssa:on stmt: $64call.3 = call $46load_global.0($const58.2.2, func=$46load_global.0, args=[Var($const58.2.2, unicode.py:2514)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'TypeError'>('ord() expected a character')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 76
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17466210>
DEBUG:numba.core.ssa:on stmt: $76load_global.0 = global(_get_code_point: <function _get_code_point at 0x0000019A157263E0>)
DEBUG:numba.core.ssa:on stmt: $const90.3.3 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $96call.4 = call $76load_global.0(c, $const90.3.3, func=$76load_global.0, args=[Var(c, unicode.py:2510), Var($const90.3.3, unicode.py:2515)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106return_value.5 = cast(value=$96call.4)
DEBUG:numba.core.ssa:on stmt: return $106return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$106return_value.5': [(<numba.core.ir.Assign object at 0x0000019A17467E50>,
                                     76)],
             '$38compare_op.6': [(<numba.core.ir.Assign object at 0x0000019A174666D0>,
                                  0)],
             '$44pred': [(<numba.core.ir.Assign object at 0x0000019A17466AD0>,
                          0)],
             '$46load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17466D10>,
                                   46)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17465AD0>,
                                  0)],
             '$64call.3': [(<numba.core.ir.Assign object at 0x0000019A17467290>,
                            46)],
             '$76load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17467610>,
                                   76)],
             '$96call.4': [(<numba.core.ir.Assign object at 0x0000019A17467BD0>,
                            76)],
             '$const36.5.1': [(<numba.core.ir.Assign object at 0x0000019A174664D0>,
                               0)],
             '$const58.2.2': [(<numba.core.ir.Assign object at 0x0000019A17467010>,
                               46)],
             '$const90.3.3': [(<numba.core.ir.Assign object at 0x0000019A17467990>,
                               76)],
             'bool44': [(<numba.core.ir.Assign object at 0x0000019A17466950>,
                         0)],
             'c': [(<numba.core.ir.Assign object at 0x0000019A17465750>, 0)],
             'lc': [(<numba.core.ir.Assign object at 0x0000019A17465F90>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17466210>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=479)
           2	RESUME(arg=0, lineno=479)
           4	LOAD_FAST(arg=0, lineno=480)
           6	LOAD_ATTR(arg=0, lineno=480)
          16	RETURN_VALUE(arg=None, lineno=480)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=479)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=479)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=480)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=480)
DEBUG:numba.core.byteflow:stack ['$s4.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=RETURN_VALUE(arg=None, lineno=480)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$s4.0'}), (6, {'item': '$s4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'retval': '$6load_attr.1', 'castval': '$16return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    s = arg(0, name=s)                       ['s']
    $6load_attr.1 = getattr(value=s, attr=_length) ['$6load_attr.1', 's']
    $16return_value.2 = cast(value=$6load_attr.1) ['$16return_value.2', '$6load_attr.1']
    return $16return_value.2                 ['$16return_value.2']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17473D50>
DEBUG:numba.core.ssa:on stmt: s = arg(0, name=s)
DEBUG:numba.core.ssa:on stmt: $6load_attr.1 = getattr(value=s, attr=_length)
DEBUG:numba.core.ssa:on stmt: $16return_value.2 = cast(value=$6load_attr.1)
DEBUG:numba.core.ssa:on stmt: return $16return_value.2
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$16return_value.2': [(<numba.core.ir.Assign object at 0x0000019A17474D90>,
                                    0)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x0000019A17474BD0>,
                                0)],
             's': [(<numba.core.ir.Assign object at 0x0000019A17474810>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17473D50>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=290)
           2	RESUME(arg=0, lineno=290)
           4	LOAD_FAST(arg=0, lineno=292)
           6	LOAD_ATTR(arg=0, lineno=292)
          16	LOAD_GLOBAL(arg=2, lineno=292)
          28	COMPARE_OP(arg=2, lineno=292)
          34	POP_JUMP_FORWARD_IF_FALSE(arg=21, lineno=292)
          36	LOAD_GLOBAL(arg=5, lineno=293)
          48	LOAD_FAST(arg=0, lineno=293)
          50	LOAD_ATTR(arg=3, lineno=293)
          60	LOAD_FAST(arg=1, lineno=293)
          62	PRECALL(arg=2, lineno=293)
          66	CALL(arg=2, lineno=293)
          76	RETURN_VALUE(arg=None, lineno=293)
>         78	LOAD_FAST(arg=0, lineno=294)
          80	LOAD_ATTR(arg=0, lineno=294)
          90	LOAD_GLOBAL(arg=8, lineno=294)
         102	COMPARE_OP(arg=2, lineno=294)
         108	POP_JUMP_FORWARD_IF_FALSE(arg=21, lineno=294)
         110	LOAD_GLOBAL(arg=11, lineno=295)
         122	LOAD_FAST(arg=0, lineno=295)
         124	LOAD_ATTR(arg=3, lineno=295)
         134	LOAD_FAST(arg=1, lineno=295)
         136	PRECALL(arg=2, lineno=295)
         140	CALL(arg=2, lineno=295)
         150	RETURN_VALUE(arg=None, lineno=295)
>        152	LOAD_FAST(arg=0, lineno=296)
         154	LOAD_ATTR(arg=0, lineno=296)
         164	LOAD_GLOBAL(arg=12, lineno=296)
         176	COMPARE_OP(arg=2, lineno=296)
         182	POP_JUMP_FORWARD_IF_FALSE(arg=21, lineno=296)
         184	LOAD_GLOBAL(arg=15, lineno=297)
         196	LOAD_FAST(arg=0, lineno=297)
         198	LOAD_ATTR(arg=3, lineno=297)
         208	LOAD_FAST(arg=1, lineno=297)
         210	PRECALL(arg=2, lineno=297)
         214	CALL(arg=2, lineno=297)
         224	RETURN_VALUE(arg=None, lineno=297)
>        226	LOAD_CONST(arg=1, lineno=301)
         228	RETURN_VALUE(arg=None, lineno=301)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=290)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=290)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=292)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=292)
DEBUG:numba.core.byteflow:stack ['$a4.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=2, lineno=292)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=COMPARE_OP(arg=2, lineno=292)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1', '$16load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=POP_JUMP_FORWARD_IF_FALSE(arg=21, lineno=292)
DEBUG:numba.core.byteflow:stack ['$28compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=36 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_GLOBAL(arg=5, lineno=293)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=0, lineno=293)
DEBUG:numba.core.byteflow:stack ['$null$36.1', '$36load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_ATTR(arg=3, lineno=293)
DEBUG:numba.core.byteflow:stack ['$null$36.1', '$36load_global.0', '$a48.2']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=293)
DEBUG:numba.core.byteflow:stack ['$null$36.1', '$36load_global.0', '$50load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=PRECALL(arg=2, lineno=293)
DEBUG:numba.core.byteflow:stack ['$null$36.1', '$36load_global.0', '$50load_attr.3', '$i60.4']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=CALL(arg=2, lineno=293)
DEBUG:numba.core.byteflow:stack ['$null$36.1', '$36load_global.0', '$50load_attr.3', '$i60.4']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=293)
DEBUG:numba.core.byteflow:stack ['$66call.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=78 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=78 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=0, lineno=294)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_ATTR(arg=0, lineno=294)
DEBUG:numba.core.byteflow:stack ['$a78.0']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_GLOBAL(arg=8, lineno=294)
DEBUG:numba.core.byteflow:stack ['$80load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=COMPARE_OP(arg=2, lineno=294)
DEBUG:numba.core.byteflow:stack ['$80load_attr.1', '$90load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=POP_JUMP_FORWARD_IF_FALSE(arg=21, lineno=294)
DEBUG:numba.core.byteflow:stack ['$102compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=110, stack=(), blockstack=(), npush=0), Edge(pc=152, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=110 nstack_initial=0), State(pc_initial=152 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=110 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_GLOBAL(arg=11, lineno=295)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_FAST(arg=0, lineno=295)
DEBUG:numba.core.byteflow:stack ['$null$110.1', '$110load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_ATTR(arg=3, lineno=295)
DEBUG:numba.core.byteflow:stack ['$null$110.1', '$110load_global.0', '$a122.2']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_FAST(arg=1, lineno=295)
DEBUG:numba.core.byteflow:stack ['$null$110.1', '$110load_global.0', '$124load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=PRECALL(arg=2, lineno=295)
DEBUG:numba.core.byteflow:stack ['$null$110.1', '$110load_global.0', '$124load_attr.3', '$i134.4']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=CALL(arg=2, lineno=295)
DEBUG:numba.core.byteflow:stack ['$null$110.1', '$110load_global.0', '$124load_attr.3', '$i134.4']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=RETURN_VALUE(arg=None, lineno=295)
DEBUG:numba.core.byteflow:stack ['$140call.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=152 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=152 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_FAST(arg=0, lineno=296)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_ATTR(arg=0, lineno=296)
DEBUG:numba.core.byteflow:stack ['$a152.0']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=LOAD_GLOBAL(arg=12, lineno=296)
DEBUG:numba.core.byteflow:stack ['$154load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=COMPARE_OP(arg=2, lineno=296)
DEBUG:numba.core.byteflow:stack ['$154load_attr.1', '$164load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=182, inst=POP_JUMP_FORWARD_IF_FALSE(arg=21, lineno=296)
DEBUG:numba.core.byteflow:stack ['$176compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=184, stack=(), blockstack=(), npush=0), Edge(pc=226, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=184 nstack_initial=0), State(pc_initial=226 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=184 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=184, inst=LOAD_GLOBAL(arg=15, lineno=297)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=196, inst=LOAD_FAST(arg=0, lineno=297)
DEBUG:numba.core.byteflow:stack ['$null$184.1', '$184load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=LOAD_ATTR(arg=3, lineno=297)
DEBUG:numba.core.byteflow:stack ['$null$184.1', '$184load_global.0', '$a196.2']
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_FAST(arg=1, lineno=297)
DEBUG:numba.core.byteflow:stack ['$null$184.1', '$184load_global.0', '$198load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=PRECALL(arg=2, lineno=297)
DEBUG:numba.core.byteflow:stack ['$null$184.1', '$184load_global.0', '$198load_attr.3', '$i208.4']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=CALL(arg=2, lineno=297)
DEBUG:numba.core.byteflow:stack ['$null$184.1', '$184load_global.0', '$198load_attr.3', '$i208.4']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=RETURN_VALUE(arg=None, lineno=297)
DEBUG:numba.core.byteflow:stack ['$214call.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=226 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=226 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=226, inst=LOAD_CONST(arg=1, lineno=301)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=228, inst=RETURN_VALUE(arg=None, lineno=301)
DEBUG:numba.core.byteflow:stack ['$const226.0.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=110 nstack_initial=0): set(),
             State(pc_initial=152 nstack_initial=0): set(),
             State(pc_initial=184 nstack_initial=0): set(),
             State(pc_initial=226 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'item': '$a4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'idx': 1, 'res': '$16load_global.2'}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'lhs': '$6load_attr.1', 'rhs': '$16load_global.2', 'res': '$28compare_op.3'}), (30, {}), (32, {}), (34, {'pred': '$28compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: (), 78: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'idx': 2, 'res': '$36load_global.0'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'res': '$a48.2'}), (50, {'item': '$a48.2', 'res': '$50load_attr.3'}), (52, {}), (54, {}), (56, {}), (58, {}), (60, {'res': '$i60.4'}), (62, {}), (64, {}), (66, {'func': '$36load_global.0', 'args': ['$50load_attr.3', '$i60.4'], 'kw_names': None, 'res': '$66call.5'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'retval': '$66call.5', 'castval': '$76return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$a78.0'}), (80, {'item': '$a78.0', 'res': '$80load_attr.1'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'idx': 4, 'res': '$90load_global.2'}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {'lhs': '$80load_attr.1', 'rhs': '$90load_global.2', 'res': '$102compare_op.3'}), (104, {}), (106, {}), (108, {'pred': '$102compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={110: (), 152: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=110 nstack_initial=0):
AdaptBlockInfo(insts=((110, {'idx': 5, 'res': '$110load_global.0'}), (112, {}), (114, {}), (116, {}), (118, {}), (120, {}), (122, {'res': '$a122.2'}), (124, {'item': '$a122.2', 'res': '$124load_attr.3'}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'res': '$i134.4'}), (136, {}), (138, {}), (140, {'func': '$110load_global.0', 'args': ['$124load_attr.3', '$i134.4'], 'kw_names': None, 'res': '$140call.5'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {'retval': '$140call.5', 'castval': '$150return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=152 nstack_initial=0):
AdaptBlockInfo(insts=((152, {'res': '$a152.0'}), (154, {'item': '$a152.0', 'res': '$154load_attr.1'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'idx': 6, 'res': '$164load_global.2'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {}), (176, {'lhs': '$154load_attr.1', 'rhs': '$164load_global.2', 'res': '$176compare_op.3'}), (178, {}), (180, {}), (182, {'pred': '$176compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={184: (), 226: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=184 nstack_initial=0):
AdaptBlockInfo(insts=((184, {'idx': 7, 'res': '$184load_global.0'}), (186, {}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'res': '$a196.2'}), (198, {'item': '$a196.2', 'res': '$198load_attr.3'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {'res': '$i208.4'}), (210, {}), (212, {}), (214, {'func': '$184load_global.0', 'args': ['$198load_attr.3', '$i208.4'], 'kw_names': None, 'res': '$214call.5'}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {'retval': '$214call.5', 'castval': '$224return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=226 nstack_initial=0):
AdaptBlockInfo(insts=((226, {'res': '$const226.0.1'}), (228, {'retval': '$const226.0.1', 'castval': '$228return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    i = arg(1, name=i)                       ['i']
    $6load_attr.1 = getattr(value=a, attr=_kind) ['$6load_attr.1', 'a']
    $16load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$16load_global.2']
    $28compare_op.3 = $6load_attr.1 == $16load_global.2 ['$16load_global.2', '$28compare_op.3', '$6load_attr.1']
    bool34 = global(bool: <class 'bool'>)    ['bool34']
    $34pred = call bool34($28compare_op.3, func=bool34, args=(Var($28compare_op.3, unicode.py:292),), kws=(), vararg=None, varkwarg=None, target=None) ['$28compare_op.3', '$34pred', 'bool34']
    branch $34pred, 36, 78                   ['$34pred']
label 36:
    $36load_global.0 = global(deref_uint8: <intrinsic deref_uint8>) ['$36load_global.0']
    $50load_attr.3 = getattr(value=a, attr=_data) ['$50load_attr.3', 'a']
    $66call.5 = call $36load_global.0($50load_attr.3, i, func=$36load_global.0, args=[Var($50load_attr.3, unicode.py:293), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_global.0', '$50load_attr.3', '$66call.5', 'i']
    $76return_value.6 = cast(value=$66call.5) ['$66call.5', '$76return_value.6']
    return $76return_value.6                 ['$76return_value.6']
label 78:
    $80load_attr.1 = getattr(value=a, attr=_kind) ['$80load_attr.1', 'a']
    $90load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$90load_global.2']
    $102compare_op.3 = $80load_attr.1 == $90load_global.2 ['$102compare_op.3', '$80load_attr.1', '$90load_global.2']
    bool108 = global(bool: <class 'bool'>)   ['bool108']
    $108pred = call bool108($102compare_op.3, func=bool108, args=(Var($102compare_op.3, unicode.py:294),), kws=(), vararg=None, varkwarg=None, target=None) ['$102compare_op.3', '$108pred', 'bool108']
    branch $108pred, 110, 152                ['$108pred']
label 110:
    $110load_global.0 = global(deref_uint16: <intrinsic deref_uint16>) ['$110load_global.0']
    $124load_attr.3 = getattr(value=a, attr=_data) ['$124load_attr.3', 'a']
    $140call.5 = call $110load_global.0($124load_attr.3, i, func=$110load_global.0, args=[Var($124load_attr.3, unicode.py:295), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$110load_global.0', '$124load_attr.3', '$140call.5', 'i']
    $150return_value.6 = cast(value=$140call.5) ['$140call.5', '$150return_value.6']
    return $150return_value.6                ['$150return_value.6']
label 152:
    $154load_attr.1 = getattr(value=a, attr=_kind) ['$154load_attr.1', 'a']
    $164load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$164load_global.2']
    $176compare_op.3 = $154load_attr.1 == $164load_global.2 ['$154load_attr.1', '$164load_global.2', '$176compare_op.3']
    bool182 = global(bool: <class 'bool'>)   ['bool182']
    $182pred = call bool182($176compare_op.3, func=bool182, args=(Var($176compare_op.3, unicode.py:296),), kws=(), vararg=None, varkwarg=None, target=None) ['$176compare_op.3', '$182pred', 'bool182']
    branch $182pred, 184, 226                ['$182pred']
label 184:
    $184load_global.0 = global(deref_uint32: <intrinsic deref_uint32>) ['$184load_global.0']
    $198load_attr.3 = getattr(value=a, attr=_data) ['$198load_attr.3', 'a']
    $214call.5 = call $184load_global.0($198load_attr.3, i, func=$184load_global.0, args=[Var($198load_attr.3, unicode.py:297), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None) ['$184load_global.0', '$198load_attr.3', '$214call.5', 'i']
    $224return_value.6 = cast(value=$214call.5) ['$214call.5', '$224return_value.6']
    return $224return_value.6                ['$224return_value.6']
label 226:
    $const226.0.1 = const(int, 0)            ['$const226.0.1']
    $228return_value.1 = cast(value=$const226.0.1) ['$228return_value.1', '$const226.0.1']
    return $228return_value.1                ['$228return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A161D6D90>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: i = arg(1, name=i)
DEBUG:numba.core.ssa:on stmt: $6load_attr.1 = getattr(value=a, attr=_kind)
DEBUG:numba.core.ssa:on stmt: $16load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1)
DEBUG:numba.core.ssa:on stmt: $28compare_op.3 = $6load_attr.1 == $16load_global.2
DEBUG:numba.core.ssa:on stmt: bool34 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $34pred = call bool34($28compare_op.3, func=bool34, args=(Var($28compare_op.3, unicode.py:292),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $34pred, 36, 78
DEBUG:numba.core.ssa:==== SSA block analysis pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A161D6D90>
DEBUG:numba.core.ssa:on stmt: $36load_global.0 = global(deref_uint8: <intrinsic deref_uint8>)
DEBUG:numba.core.ssa:on stmt: $50load_attr.3 = getattr(value=a, attr=_data)
DEBUG:numba.core.ssa:on stmt: $66call.5 = call $36load_global.0($50load_attr.3, i, func=$36load_global.0, args=[Var($50load_attr.3, unicode.py:293), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $76return_value.6 = cast(value=$66call.5)
DEBUG:numba.core.ssa:on stmt: return $76return_value.6
DEBUG:numba.core.ssa:==== SSA block analysis pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A161D6D90>
DEBUG:numba.core.ssa:on stmt: $80load_attr.1 = getattr(value=a, attr=_kind)
DEBUG:numba.core.ssa:on stmt: $90load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2)
DEBUG:numba.core.ssa:on stmt: $102compare_op.3 = $80load_attr.1 == $90load_global.2
DEBUG:numba.core.ssa:on stmt: bool108 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $108pred = call bool108($102compare_op.3, func=bool108, args=(Var($102compare_op.3, unicode.py:294),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $108pred, 110, 152
DEBUG:numba.core.ssa:==== SSA block analysis pass on 110
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A161D6D90>
DEBUG:numba.core.ssa:on stmt: $110load_global.0 = global(deref_uint16: <intrinsic deref_uint16>)
DEBUG:numba.core.ssa:on stmt: $124load_attr.3 = getattr(value=a, attr=_data)
DEBUG:numba.core.ssa:on stmt: $140call.5 = call $110load_global.0($124load_attr.3, i, func=$110load_global.0, args=[Var($124load_attr.3, unicode.py:295), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $150return_value.6 = cast(value=$140call.5)
DEBUG:numba.core.ssa:on stmt: return $150return_value.6
DEBUG:numba.core.ssa:==== SSA block analysis pass on 152
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A161D6D90>
DEBUG:numba.core.ssa:on stmt: $154load_attr.1 = getattr(value=a, attr=_kind)
DEBUG:numba.core.ssa:on stmt: $164load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4)
DEBUG:numba.core.ssa:on stmt: $176compare_op.3 = $154load_attr.1 == $164load_global.2
DEBUG:numba.core.ssa:on stmt: bool182 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $182pred = call bool182($176compare_op.3, func=bool182, args=(Var($176compare_op.3, unicode.py:296),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $182pred, 184, 226
DEBUG:numba.core.ssa:==== SSA block analysis pass on 184
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A161D6D90>
DEBUG:numba.core.ssa:on stmt: $184load_global.0 = global(deref_uint32: <intrinsic deref_uint32>)
DEBUG:numba.core.ssa:on stmt: $198load_attr.3 = getattr(value=a, attr=_data)
DEBUG:numba.core.ssa:on stmt: $214call.5 = call $184load_global.0($198load_attr.3, i, func=$184load_global.0, args=[Var($198load_attr.3, unicode.py:297), Var(i, unicode.py:290)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $224return_value.6 = cast(value=$214call.5)
DEBUG:numba.core.ssa:on stmt: return $224return_value.6
DEBUG:numba.core.ssa:==== SSA block analysis pass on 226
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A161D6D90>
DEBUG:numba.core.ssa:on stmt: $const226.0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $228return_value.1 = cast(value=$const226.0.1)
DEBUG:numba.core.ssa:on stmt: return $228return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102compare_op.3': [(<numba.core.ir.Assign object at 0x0000019A1743BB50>,
                                   78)],
             '$108pred': [(<numba.core.ir.Assign object at 0x0000019A1742DB10>,
                           78)],
             '$110load_global.0': [(<numba.core.ir.Assign object at 0x0000019A1742DE10>,
                                    110)],
             '$124load_attr.3': [(<numba.core.ir.Assign object at 0x0000019A1742D310>,
                                  110)],
             '$140call.5': [(<numba.core.ir.Assign object at 0x0000019A1742D810>,
                             110)],
             '$150return_value.6': [(<numba.core.ir.Assign object at 0x0000019A1742CF10>,
                                     110)],
             '$154load_attr.1': [(<numba.core.ir.Assign object at 0x0000019A1742C250>,
                                  152)],
             '$164load_global.2': [(<numba.core.ir.Assign object at 0x0000019A1742C590>,
                                    152)],
             '$16load_global.2': [(<numba.core.ir.Assign object at 0x0000019A17438D50>,
                                   0)],
             '$176compare_op.3': [(<numba.core.ir.Assign object at 0x0000019A1742E210>,
                                   152)],
             '$182pred': [(<numba.core.ir.Assign object at 0x0000019A1742FAD0>,
                           152)],
             '$184load_global.0': [(<numba.core.ir.Assign object at 0x0000019A1742FCD0>,
                                    184)],
             '$198load_attr.3': [(<numba.core.ir.Assign object at 0x0000019A15FDDB50>,
                                  184)],
             '$214call.5': [(<numba.core.ir.Assign object at 0x0000019A162DA190>,
                             184)],
             '$224return_value.6': [(<numba.core.ir.Assign object at 0x0000019A162F6490>,
                                     184)],
             '$228return_value.1': [(<numba.core.ir.Assign object at 0x0000019A161D7410>,
                                     226)],
             '$28compare_op.3': [(<numba.core.ir.Assign object at 0x0000019A1743AA90>,
                                  0)],
             '$34pred': [(<numba.core.ir.Assign object at 0x0000019A1743AF90>,
                          0)],
             '$36load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17438D10>,
                                   36)],
             '$50load_attr.3': [(<numba.core.ir.Assign object at 0x0000019A17439790>,
                                 36)],
             '$66call.5': [(<numba.core.ir.Assign object at 0x0000019A17438190>,
                            36)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x0000019A1743BF50>,
                                0)],
             '$76return_value.6': [(<numba.core.ir.Assign object at 0x0000019A17438550>,
                                    36)],
             '$80load_attr.1': [(<numba.core.ir.Assign object at 0x0000019A17438590>,
                                 78)],
             '$90load_global.2': [(<numba.core.ir.Assign object at 0x0000019A1743B910>,
                                   78)],
             '$const226.0.1': [(<numba.core.ir.Assign object at 0x0000019A162F7690>,
                                226)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A17439390>, 0)],
             'bool108': [(<numba.core.ir.Assign object at 0x0000019A1743AA10>,
                          78)],
             'bool182': [(<numba.core.ir.Assign object at 0x0000019A1742E750>,
                          152)],
             'bool34': [(<numba.core.ir.Assign object at 0x0000019A1743AE90>,
                         0)],
             'i': [(<numba.core.ir.Assign object at 0x0000019A1743BAD0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A161D6D90>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=336)
           2	RESUME(arg=0, lineno=336)
           4	LOAD_FAST(arg=0, lineno=344)
           6	LOAD_ATTR(arg=0, lineno=344)
          16	LOAD_GLOBAL(arg=2, lineno=344)
          28	COMPARE_OP(arg=2, lineno=344)
          34	POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=344)
          36	LOAD_GLOBAL(arg=5, lineno=345)
          48	LOAD_FAST(arg=0, lineno=345)
          50	LOAD_ATTR(arg=3, lineno=345)
          60	LOAD_FAST(arg=1, lineno=345)
          62	LOAD_FAST(arg=2, lineno=345)
          64	PRECALL(arg=3, lineno=345)
          68	CALL(arg=3, lineno=345)
          78	POP_TOP(arg=None, lineno=345)
          80	LOAD_CONST(arg=0, lineno=345)
          82	RETURN_VALUE(arg=None, lineno=345)
>         84	LOAD_FAST(arg=0, lineno=346)
          86	LOAD_ATTR(arg=0, lineno=346)
          96	LOAD_GLOBAL(arg=8, lineno=346)
         108	COMPARE_OP(arg=2, lineno=346)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=346)
         116	LOAD_GLOBAL(arg=11, lineno=347)
         128	LOAD_FAST(arg=0, lineno=347)
         130	LOAD_ATTR(arg=3, lineno=347)
         140	LOAD_FAST(arg=1, lineno=347)
         142	LOAD_FAST(arg=2, lineno=347)
         144	PRECALL(arg=3, lineno=347)
         148	CALL(arg=3, lineno=347)
         158	POP_TOP(arg=None, lineno=347)
         160	LOAD_CONST(arg=0, lineno=347)
         162	RETURN_VALUE(arg=None, lineno=347)
>        164	LOAD_FAST(arg=0, lineno=348)
         166	LOAD_ATTR(arg=0, lineno=348)
         176	LOAD_GLOBAL(arg=12, lineno=348)
         188	COMPARE_OP(arg=2, lineno=348)
         194	POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=348)
         196	LOAD_GLOBAL(arg=15, lineno=349)
         208	LOAD_FAST(arg=0, lineno=349)
         210	LOAD_ATTR(arg=3, lineno=349)
         220	LOAD_FAST(arg=1, lineno=349)
         222	LOAD_FAST(arg=2, lineno=349)
         224	PRECALL(arg=3, lineno=349)
         228	CALL(arg=3, lineno=349)
         238	POP_TOP(arg=None, lineno=349)
         240	LOAD_CONST(arg=0, lineno=349)
         242	RETURN_VALUE(arg=None, lineno=349)
>        244	LOAD_GLOBAL(arg=17, lineno=351)
         256	LOAD_CONST(arg=1, lineno=352)
         258	PRECALL(arg=1, lineno=351)
         262	CALL(arg=1, lineno=351)
         272	RAISE_VARARGS(arg=1, lineno=351)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=336)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=336)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=344)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=344)
DEBUG:numba.core.byteflow:stack ['$a4.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=2, lineno=344)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=COMPARE_OP(arg=2, lineno=344)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1', '$16load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=344)
DEBUG:numba.core.byteflow:stack ['$28compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0), Edge(pc=84, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=84 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=36 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_GLOBAL(arg=5, lineno=345)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=0, lineno=345)
DEBUG:numba.core.byteflow:stack ['$null$36.1', '$36load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_ATTR(arg=3, lineno=345)
DEBUG:numba.core.byteflow:stack ['$null$36.1', '$36load_global.0', '$a48.2']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=345)
DEBUG:numba.core.byteflow:stack ['$null$36.1', '$36load_global.0', '$50load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=2, lineno=345)
DEBUG:numba.core.byteflow:stack ['$null$36.1', '$36load_global.0', '$50load_attr.3', '$i60.4']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=PRECALL(arg=3, lineno=345)
DEBUG:numba.core.byteflow:stack ['$null$36.1', '$36load_global.0', '$50load_attr.3', '$i60.4', '$ch62.5']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=CALL(arg=3, lineno=345)
DEBUG:numba.core.byteflow:stack ['$null$36.1', '$36load_global.0', '$50load_attr.3', '$i60.4', '$ch62.5']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=POP_TOP(arg=None, lineno=345)
DEBUG:numba.core.byteflow:stack ['$68call.6']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_CONST(arg=0, lineno=345)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=345)
DEBUG:numba.core.byteflow:stack ['$const80.7.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=84 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=84 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=346)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_ATTR(arg=0, lineno=346)
DEBUG:numba.core.byteflow:stack ['$a84.0']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_GLOBAL(arg=8, lineno=346)
DEBUG:numba.core.byteflow:stack ['$86load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=COMPARE_OP(arg=2, lineno=346)
DEBUG:numba.core.byteflow:stack ['$86load_attr.1', '$96load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=346)
DEBUG:numba.core.byteflow:stack ['$108compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=164, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=164 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=116 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_GLOBAL(arg=11, lineno=347)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=0, lineno=347)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$116load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_ATTR(arg=3, lineno=347)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$116load_global.0', '$a128.2']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=1, lineno=347)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$116load_global.0', '$130load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_FAST(arg=2, lineno=347)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$116load_global.0', '$130load_attr.3', '$i140.4']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=PRECALL(arg=3, lineno=347)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$116load_global.0', '$130load_attr.3', '$i140.4', '$ch142.5']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=CALL(arg=3, lineno=347)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$116load_global.0', '$130load_attr.3', '$i140.4', '$ch142.5']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=POP_TOP(arg=None, lineno=347)
DEBUG:numba.core.byteflow:stack ['$148call.6']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=LOAD_CONST(arg=0, lineno=347)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=162, inst=RETURN_VALUE(arg=None, lineno=347)
DEBUG:numba.core.byteflow:stack ['$const160.7.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=164 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=164 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=348)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_ATTR(arg=0, lineno=348)
DEBUG:numba.core.byteflow:stack ['$a164.0']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=LOAD_GLOBAL(arg=12, lineno=348)
DEBUG:numba.core.byteflow:stack ['$166load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=188, inst=COMPARE_OP(arg=2, lineno=348)
DEBUG:numba.core.byteflow:stack ['$166load_attr.1', '$176load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=348)
DEBUG:numba.core.byteflow:stack ['$188compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=196, stack=(), blockstack=(), npush=0), Edge(pc=244, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=196 nstack_initial=0), State(pc_initial=244 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=196 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=196, inst=LOAD_GLOBAL(arg=15, lineno=349)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=349)
DEBUG:numba.core.byteflow:stack ['$null$196.1', '$196load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=LOAD_ATTR(arg=3, lineno=349)
DEBUG:numba.core.byteflow:stack ['$null$196.1', '$196load_global.0', '$a208.2']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=1, lineno=349)
DEBUG:numba.core.byteflow:stack ['$null$196.1', '$196load_global.0', '$210load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=LOAD_FAST(arg=2, lineno=349)
DEBUG:numba.core.byteflow:stack ['$null$196.1', '$196load_global.0', '$210load_attr.3', '$i220.4']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=PRECALL(arg=3, lineno=349)
DEBUG:numba.core.byteflow:stack ['$null$196.1', '$196load_global.0', '$210load_attr.3', '$i220.4', '$ch222.5']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=CALL(arg=3, lineno=349)
DEBUG:numba.core.byteflow:stack ['$null$196.1', '$196load_global.0', '$210load_attr.3', '$i220.4', '$ch222.5']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=POP_TOP(arg=None, lineno=349)
DEBUG:numba.core.byteflow:stack ['$228call.6']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=LOAD_CONST(arg=0, lineno=349)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=349)
DEBUG:numba.core.byteflow:stack ['$const240.7.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=244 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=244 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=244, inst=LOAD_GLOBAL(arg=17, lineno=351)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=256, inst=LOAD_CONST(arg=1, lineno=352)
DEBUG:numba.core.byteflow:stack ['$null$244.1', '$244load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=PRECALL(arg=1, lineno=351)
DEBUG:numba.core.byteflow:stack ['$null$244.1', '$244load_global.0', '$const256.2.1']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=CALL(arg=1, lineno=351)
DEBUG:numba.core.byteflow:stack ['$null$244.1', '$244load_global.0', '$const256.2.1']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=RAISE_VARARGS(arg=1, lineno=351)
DEBUG:numba.core.byteflow:stack ['$262call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=164 nstack_initial=0): set(),
             State(pc_initial=196 nstack_initial=0): set(),
             State(pc_initial=244 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'item': '$a4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'idx': 1, 'res': '$16load_global.2'}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'lhs': '$6load_attr.1', 'rhs': '$16load_global.2', 'res': '$28compare_op.3'}), (30, {}), (32, {}), (34, {'pred': '$28compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: (), 84: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'idx': 2, 'res': '$36load_global.0'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'res': '$a48.2'}), (50, {'item': '$a48.2', 'res': '$50load_attr.3'}), (52, {}), (54, {}), (56, {}), (58, {}), (60, {'res': '$i60.4'}), (62, {'res': '$ch62.5'}), (64, {}), (66, {}), (68, {'func': '$36load_global.0', 'args': ['$50load_attr.3', '$i60.4', '$ch62.5'], 'kw_names': None, 'res': '$68call.6'}), (70, {}), (72, {}), (74, {}), (76, {}), (80, {'res': '$const80.7.0'}), (82, {'retval': '$const80.7.0', 'castval': '$82return_value.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'item': '$a84.0', 'res': '$86load_attr.1'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'idx': 4, 'res': '$96load_global.2'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {'lhs': '$86load_attr.1', 'rhs': '$96load_global.2', 'res': '$108compare_op.3'}), (110, {}), (112, {}), (114, {'pred': '$108compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 164: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 5, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'res': '$a128.2'}), (130, {'item': '$a128.2', 'res': '$130load_attr.3'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'res': '$i140.4'}), (142, {'res': '$ch142.5'}), (144, {}), (146, {}), (148, {'func': '$116load_global.0', 'args': ['$130load_attr.3', '$i140.4', '$ch142.5'], 'kw_names': None, 'res': '$148call.6'}), (150, {}), (152, {}), (154, {}), (156, {}), (160, {'res': '$const160.7.0'}), (162, {'retval': '$const160.7.0', 'castval': '$162return_value.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=164 nstack_initial=0):
AdaptBlockInfo(insts=((164, {'res': '$a164.0'}), (166, {'item': '$a164.0', 'res': '$166load_attr.1'}), (168, {}), (170, {}), (172, {}), (174, {}), (176, {'idx': 6, 'res': '$176load_global.2'}), (178, {}), (180, {}), (182, {}), (184, {}), (186, {}), (188, {'lhs': '$166load_attr.1', 'rhs': '$176load_global.2', 'res': '$188compare_op.3'}), (190, {}), (192, {}), (194, {'pred': '$188compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: (), 244: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=196 nstack_initial=0):
AdaptBlockInfo(insts=((196, {'idx': 7, 'res': '$196load_global.0'}), (198, {}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {'res': '$a208.2'}), (210, {'item': '$a208.2', 'res': '$210load_attr.3'}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {'res': '$i220.4'}), (222, {'res': '$ch222.5'}), (224, {}), (226, {}), (228, {'func': '$196load_global.0', 'args': ['$210load_attr.3', '$i220.4', '$ch222.5'], 'kw_names': None, 'res': '$228call.6'}), (230, {}), (232, {}), (234, {}), (236, {}), (240, {'res': '$const240.7.0'}), (242, {'retval': '$const240.7.0', 'castval': '$242return_value.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=244 nstack_initial=0):
AdaptBlockInfo(insts=((244, {'idx': 8, 'res': '$244load_global.0'}), (246, {}), (248, {}), (250, {}), (252, {}), (254, {}), (256, {'res': '$const256.2.1'}), (258, {}), (260, {}), (262, {'func': '$244load_global.0', 'args': ['$const256.2.1'], 'kw_names': None, 'res': '$262call.3'}), (264, {}), (266, {}), (268, {}), (270, {}), (272, {'exc': '$262call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    i = arg(1, name=i)                       ['i']
    ch = arg(2, name=ch)                     ['ch']
    $6load_attr.1 = getattr(value=a, attr=_kind) ['$6load_attr.1', 'a']
    $16load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$16load_global.2']
    $28compare_op.3 = $6load_attr.1 == $16load_global.2 ['$16load_global.2', '$28compare_op.3', '$6load_attr.1']
    bool34 = global(bool: <class 'bool'>)    ['bool34']
    $34pred = call bool34($28compare_op.3, func=bool34, args=(Var($28compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$28compare_op.3', '$34pred', 'bool34']
    branch $34pred, 36, 84                   ['$34pred']
label 36:
    $36load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$36load_global.0']
    $50load_attr.3 = getattr(value=a, attr=_data) ['$50load_attr.3', 'a']
    $68call.6 = call $36load_global.0($50load_attr.3, i, ch, func=$36load_global.0, args=[Var($50load_attr.3, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_global.0', '$50load_attr.3', '$68call.6', 'ch', 'i']
    $const80.7.0 = const(NoneType, None)     ['$const80.7.0']
    $82return_value.8 = cast(value=$const80.7.0) ['$82return_value.8', '$const80.7.0']
    return $82return_value.8                 ['$82return_value.8']
label 84:
    $86load_attr.1 = getattr(value=a, attr=_kind) ['$86load_attr.1', 'a']
    $96load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$96load_global.2']
    $108compare_op.3 = $86load_attr.1 == $96load_global.2 ['$108compare_op.3', '$86load_attr.1', '$96load_global.2']
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114($108compare_op.3, func=bool114, args=(Var($108compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$108compare_op.3', '$114pred', 'bool114']
    branch $114pred, 116, 164                ['$114pred']
label 116:
    $116load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$116load_global.0']
    $130load_attr.3 = getattr(value=a, attr=_data) ['$130load_attr.3', 'a']
    $148call.6 = call $116load_global.0($130load_attr.3, i, ch, func=$116load_global.0, args=[Var($130load_attr.3, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.0', '$130load_attr.3', '$148call.6', 'ch', 'i']
    $const160.7.0 = const(NoneType, None)    ['$const160.7.0']
    $162return_value.8 = cast(value=$const160.7.0) ['$162return_value.8', '$const160.7.0']
    return $162return_value.8                ['$162return_value.8']
label 164:
    $166load_attr.1 = getattr(value=a, attr=_kind) ['$166load_attr.1', 'a']
    $176load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$176load_global.2']
    $188compare_op.3 = $166load_attr.1 == $176load_global.2 ['$166load_attr.1', '$176load_global.2', '$188compare_op.3']
    bool194 = global(bool: <class 'bool'>)   ['bool194']
    $194pred = call bool194($188compare_op.3, func=bool194, args=(Var($188compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$188compare_op.3', '$194pred', 'bool194']
    branch $194pred, 196, 244                ['$194pred']
label 196:
    $196load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$196load_global.0']
    $210load_attr.3 = getattr(value=a, attr=_data) ['$210load_attr.3', 'a']
    $228call.6 = call $196load_global.0($210load_attr.3, i, ch, func=$196load_global.0, args=[Var($210load_attr.3, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$196load_global.0', '$210load_attr.3', '$228call.6', 'ch', 'i']
    $const240.7.0 = const(NoneType, None)    ['$const240.7.0']
    $242return_value.8 = cast(value=$const240.7.0) ['$242return_value.8', '$const240.7.0']
    return $242return_value.8                ['$242return_value.8']
label 244:
    $244load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$244load_global.0']
    $const256.2.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const256.2.1']
    $262call.3 = call $244load_global.0($const256.2.1, func=$244load_global.0, args=[Var($const256.2.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$244load_global.0', '$262call.3', '$const256.2.1']
    raise $262call.3                         ['$262call.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A174DFA10>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: i = arg(1, name=i)
DEBUG:numba.core.ssa:on stmt: ch = arg(2, name=ch)
DEBUG:numba.core.ssa:on stmt: $6load_attr.1 = getattr(value=a, attr=_kind)
DEBUG:numba.core.ssa:on stmt: $16load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1)
DEBUG:numba.core.ssa:on stmt: $28compare_op.3 = $6load_attr.1 == $16load_global.2
DEBUG:numba.core.ssa:on stmt: bool34 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $34pred = call bool34($28compare_op.3, func=bool34, args=(Var($28compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $34pred, 36, 84
DEBUG:numba.core.ssa:==== SSA block analysis pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A174DFA10>
DEBUG:numba.core.ssa:on stmt: $36load_global.0 = global(set_uint8: <intrinsic set_uint8>)
DEBUG:numba.core.ssa:on stmt: $50load_attr.3 = getattr(value=a, attr=_data)
DEBUG:numba.core.ssa:on stmt: $68call.6 = call $36load_global.0($50load_attr.3, i, ch, func=$36load_global.0, args=[Var($50load_attr.3, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const80.7.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $82return_value.8 = cast(value=$const80.7.0)
DEBUG:numba.core.ssa:on stmt: return $82return_value.8
DEBUG:numba.core.ssa:==== SSA block analysis pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A174DFA10>
DEBUG:numba.core.ssa:on stmt: $86load_attr.1 = getattr(value=a, attr=_kind)
DEBUG:numba.core.ssa:on stmt: $96load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2)
DEBUG:numba.core.ssa:on stmt: $108compare_op.3 = $86load_attr.1 == $96load_global.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($108compare_op.3, func=bool114, args=(Var($108compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 164
DEBUG:numba.core.ssa:==== SSA block analysis pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A174DFA10>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(set_uint16: <intrinsic set_uint16>)
DEBUG:numba.core.ssa:on stmt: $130load_attr.3 = getattr(value=a, attr=_data)
DEBUG:numba.core.ssa:on stmt: $148call.6 = call $116load_global.0($130load_attr.3, i, ch, func=$116load_global.0, args=[Var($130load_attr.3, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const160.7.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $162return_value.8 = cast(value=$const160.7.0)
DEBUG:numba.core.ssa:on stmt: return $162return_value.8
DEBUG:numba.core.ssa:==== SSA block analysis pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A174DFA10>
DEBUG:numba.core.ssa:on stmt: $166load_attr.1 = getattr(value=a, attr=_kind)
DEBUG:numba.core.ssa:on stmt: $176load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4)
DEBUG:numba.core.ssa:on stmt: $188compare_op.3 = $166load_attr.1 == $176load_global.2
DEBUG:numba.core.ssa:on stmt: bool194 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $194pred = call bool194($188compare_op.3, func=bool194, args=(Var($188compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $194pred, 196, 244
DEBUG:numba.core.ssa:==== SSA block analysis pass on 196
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A174DFA10>
DEBUG:numba.core.ssa:on stmt: $196load_global.0 = global(set_uint32: <intrinsic set_uint32>)
DEBUG:numba.core.ssa:on stmt: $210load_attr.3 = getattr(value=a, attr=_data)
DEBUG:numba.core.ssa:on stmt: $228call.6 = call $196load_global.0($210load_attr.3, i, ch, func=$196load_global.0, args=[Var($210load_attr.3, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const240.7.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $242return_value.8 = cast(value=$const240.7.0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.8
DEBUG:numba.core.ssa:==== SSA block analysis pass on 244
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A174DFA10>
DEBUG:numba.core.ssa:on stmt: $244load_global.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: $const256.2.1 = const(str, Unexpected unicode representation in _set_code_point)
DEBUG:numba.core.ssa:on stmt: $262call.3 = call $244load_global.0($const256.2.1, func=$244load_global.0, args=[Var($const256.2.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>('Unexpected unicode representation in _set_code_point')
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$108compare_op.3': [(<numba.core.ir.Assign object at 0x0000019A174F04D0>,
                                   84)],
             '$114pred': [(<numba.core.ir.Assign object at 0x0000019A174F08D0>,
                           84)],
             '$116load_global.0': [(<numba.core.ir.Assign object at 0x0000019A174F0B50>,
                                    116)],
             '$130load_attr.3': [(<numba.core.ir.Assign object at 0x0000019A174F0FD0>,
                                  116)],
             '$148call.6': [(<numba.core.ir.Assign object at 0x0000019A174F1610>,
                             116)],
             '$162return_value.8': [(<numba.core.ir.Assign object at 0x0000019A174F19D0>,
                                     116)],
             '$166load_attr.1': [(<numba.core.ir.Assign object at 0x0000019A174F1D90>,
                                  164)],
             '$16load_global.2': [(<numba.core.ir.Assign object at 0x0000019A174EE510>,
                                   0)],
             '$176load_global.2': [(<numba.core.ir.Assign object at 0x0000019A174F1FD0>,
                                    164)],
             '$188compare_op.3': [(<numba.core.ir.Assign object at 0x0000019A174F21D0>,
                                   164)],
             '$194pred': [(<numba.core.ir.Assign object at 0x0000019A174F25D0>,
                           164)],
             '$196load_global.0': [(<numba.core.ir.Assign object at 0x0000019A174F2850>,
                                    196)],
             '$210load_attr.3': [(<numba.core.ir.Assign object at 0x0000019A174F2C10>,
                                  196)],
             '$228call.6': [(<numba.core.ir.Assign object at 0x0000019A174F3310>,
                             196)],
             '$242return_value.8': [(<numba.core.ir.Assign object at 0x0000019A174F37D0>,
                                     196)],
             '$244load_global.0': [(<numba.core.ir.Assign object at 0x0000019A174F3990>,
                                    244)],
             '$262call.3': [(<numba.core.ir.Assign object at 0x0000019A174F3DD0>,
                             244)],
             '$28compare_op.3': [(<numba.core.ir.Assign object at 0x0000019A174EE750>,
                                  0)],
             '$34pred': [(<numba.core.ir.Assign object at 0x0000019A174EEA90>,
                          0)],
             '$36load_global.0': [(<numba.core.ir.Assign object at 0x0000019A174EECD0>,
                                   36)],
             '$50load_attr.3': [(<numba.core.ir.Assign object at 0x0000019A174EF0D0>,
                                 36)],
             '$68call.6': [(<numba.core.ir.Assign object at 0x0000019A174EF7D0>,
                            36)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x0000019A174EE2D0>,
                                0)],
             '$82return_value.8': [(<numba.core.ir.Assign object at 0x0000019A174EFB90>,
                                    36)],
             '$86load_attr.1': [(<numba.core.ir.Assign object at 0x0000019A174EFF90>,
                                 84)],
             '$96load_global.2': [(<numba.core.ir.Assign object at 0x0000019A174F0210>,
                                   84)],
             '$const160.7.0': [(<numba.core.ir.Assign object at 0x0000019A174F1790>,
                                116)],
             '$const240.7.0': [(<numba.core.ir.Assign object at 0x0000019A174F3590>,
                                196)],
             '$const256.2.1': [(<numba.core.ir.Assign object at 0x0000019A174F3BD0>,
                                244)],
             '$const80.7.0': [(<numba.core.ir.Assign object at 0x0000019A174EF950>,
                               36)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A174EDB90>, 0)],
             'bool114': [(<numba.core.ir.Assign object at 0x0000019A174F06D0>,
                          84)],
             'bool194': [(<numba.core.ir.Assign object at 0x0000019A174F23D0>,
                          164)],
             'bool34': [(<numba.core.ir.Assign object at 0x0000019A174EE950>,
                         0)],
             'ch': [(<numba.core.ir.Assign object at 0x0000019A174EDF50>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x0000019A174EDE50>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A174DFA10>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1006)
           2	COPY_FREE_VARS(arg=1, lineno=1006)
           4	RESUME(arg=0, lineno=1006)
           6	LOAD_CONST(arg=1, lineno=1007)
           8	STORE_FAST(arg=1, lineno=1007)
          10	LOAD_GLOBAL(arg=1, lineno=1008)
          22	LOAD_FAST(arg=0, lineno=1008)
          24	LOAD_FAST(arg=1, lineno=1008)
          26	PRECALL(arg=2, lineno=1008)
          30	CALL(arg=2, lineno=1008)
          40	LOAD_CONST(arg=2, lineno=1008)
          42	COMPARE_OP(arg=2, lineno=1008)
          48	POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=1008)
          50	PUSH_NULL(arg=None, lineno=1009)
          52	LOAD_GLOBAL(arg=3, lineno=1009)
          64	LOAD_FAST(arg=0, lineno=1009)
          66	LOAD_FAST(arg=1, lineno=1009)
          68	PRECALL(arg=2, lineno=1009)
          72	CALL(arg=2, lineno=1009)
          82	PRECALL(arg=0, lineno=1009)
          86	CALL(arg=0, lineno=1009)
          96	RETURN_VALUE(arg=None, lineno=1009)
>         98	LOAD_DEREF(arg=2, lineno=1013)
         100	RETURN_VALUE(arg=None, lineno=1013)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1006)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=1006)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=RESUME(arg=0, lineno=1006)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1007)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=1, lineno=1007)
DEBUG:numba.core.byteflow:stack ['$const6.0.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=1008)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1008)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$10load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1008)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$10load_global.1', '$obj22.3']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=PRECALL(arg=2, lineno=1008)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$10load_global.1', '$obj22.3', '$attr24.4']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=CALL(arg=2, lineno=1008)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$10load_global.1', '$obj22.3', '$attr24.4']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=1008)
DEBUG:numba.core.byteflow:stack ['$30call.5']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=COMPARE_OP(arg=2, lineno=1008)
DEBUG:numba.core.byteflow:stack ['$30call.5', '$const40.6.2']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=1008)
DEBUG:numba.core.byteflow:stack ['$42compare_op.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=50, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=50 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=50, inst=PUSH_NULL(arg=None, lineno=1009)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_GLOBAL(arg=3, lineno=1009)
DEBUG:numba.core.byteflow:stack ['$null$50.0']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=0, lineno=1009)
DEBUG:numba.core.byteflow:stack ['$null$50.0', '$null$52.2', '$52load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=1, lineno=1009)
DEBUG:numba.core.byteflow:stack ['$null$50.0', '$null$52.2', '$52load_global.1', '$obj64.3']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=PRECALL(arg=2, lineno=1009)
DEBUG:numba.core.byteflow:stack ['$null$50.0', '$null$52.2', '$52load_global.1', '$obj64.3', '$attr66.4']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=CALL(arg=2, lineno=1009)
DEBUG:numba.core.byteflow:stack ['$null$50.0', '$null$52.2', '$52load_global.1', '$obj64.3', '$attr66.4']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=PRECALL(arg=0, lineno=1009)
DEBUG:numba.core.byteflow:stack ['$null$50.0', '$72call.5']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=CALL(arg=0, lineno=1009)
DEBUG:numba.core.byteflow:stack ['$null$50.0', '$72call.5']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=RETURN_VALUE(arg=None, lineno=1009)
DEBUG:numba.core.byteflow:stack ['$86call.6']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=98 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=98 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_DEREF(arg=2, lineno=1013)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1013)
DEBUG:numba.core.byteflow:stack ['$98load_deref.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$const6.0.1'}), (8, {'value': '$const6.0.1'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {'res': '$obj22.3'}), (24, {'res': '$attr24.4'}), (26, {}), (28, {}), (30, {'func': '$10load_global.1', 'args': ['$obj22.3', '$attr24.4'], 'kw_names': None, 'res': '$30call.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$const40.6.2'}), (42, {'lhs': '$30call.5', 'rhs': '$const40.6.2', 'res': '$42compare_op.7'}), (44, {}), (46, {}), (48, {'pred': '$42compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: (), 98: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=50 nstack_initial=0):
AdaptBlockInfo(insts=((50, {}), (52, {'idx': 1, 'res': '$52load_global.1'}), (54, {}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {'res': '$obj64.3'}), (66, {'res': '$attr66.4'}), (68, {}), (70, {}), (72, {'func': '$52load_global.1', 'args': ['$obj64.3', '$attr66.4'], 'kw_names': None, 'res': '$72call.5'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {'func': '$72call.5', 'args': [], 'kw_names': None, 'res': '$86call.6'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'retval': '$86call.6', 'castval': '$96return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$98load_deref.0'}), (100, {'retval': '$98load_deref.0', 'castval': '$100return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    obj = arg(0, name=obj)                   ['obj']
    attr = const(str, __repr__)              ['attr']
    $10load_global.1 = global(hasattr: <built-in function hasattr>) ['$10load_global.1']
    $30call.5 = call $10load_global.1(obj, attr, func=$10load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.1', '$30call.5', 'attr', 'obj']
    $const40.6.2 = const(bool, True)         ['$const40.6.2']
    $42compare_op.7 = $30call.5 == $const40.6.2 ['$30call.5', '$42compare_op.7', '$const40.6.2']
    bool48 = global(bool: <class 'bool'>)    ['bool48']
    $48pred = call bool48($42compare_op.7, func=bool48, args=(Var($42compare_op.7, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.7', '$48pred', 'bool48']
    branch $48pred, 50, 98                   ['$48pred']
label 50:
    $52load_global.1 = global(getattr: <built-in function getattr>) ['$52load_global.1']
    $72call.5 = call $52load_global.1(obj, attr, func=$52load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_global.1', '$72call.5', 'attr', 'obj']
    $86call.6 = call $72call.5(func=$72call.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$72call.5', '$86call.6']
    $96return_value.7 = cast(value=$86call.6) ['$86call.6', '$96return_value.7']
    return $96return_value.7                 ['$96return_value.7']
label 98:
    $98load_deref.0 = freevar(missing_repr_format: <object type:int64>) ['$98load_deref.0']
    $100return_value.1 = cast(value=$98load_deref.0) ['$100return_value.1', '$98load_deref.0']
    return $100return_value.1                ['$100return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17543B50>
DEBUG:numba.core.ssa:on stmt: obj = arg(0, name=obj)
DEBUG:numba.core.ssa:on stmt: attr = const(str, __repr__)
DEBUG:numba.core.ssa:on stmt: $10load_global.1 = global(hasattr: <built-in function hasattr>)
DEBUG:numba.core.ssa:on stmt: $30call.5 = call $10load_global.1(obj, attr, func=$10load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const40.6.2 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: $42compare_op.7 = $30call.5 == $const40.6.2
DEBUG:numba.core.ssa:on stmt: bool48 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $48pred = call bool48($42compare_op.7, func=bool48, args=(Var($42compare_op.7, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $48pred, 50, 98
DEBUG:numba.core.ssa:==== SSA block analysis pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17543B50>
DEBUG:numba.core.ssa:on stmt: $52load_global.1 = global(getattr: <built-in function getattr>)
DEBUG:numba.core.ssa:on stmt: $72call.5 = call $52load_global.1(obj, attr, func=$52load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $86call.6 = call $72call.5(func=$72call.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $96return_value.7 = cast(value=$86call.6)
DEBUG:numba.core.ssa:on stmt: return $96return_value.7
DEBUG:numba.core.ssa:==== SSA block analysis pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17543B50>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(missing_repr_format: <object type:int64>)
DEBUG:numba.core.ssa:on stmt: $100return_value.1 = cast(value=$98load_deref.0)
DEBUG:numba.core.ssa:on stmt: return $100return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100return_value.1': [(<numba.core.ir.Assign object at 0x0000019A175433D0>,
                                     98)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x0000019A173B5350>,
                                   0)],
             '$30call.5': [(<numba.core.ir.Assign object at 0x0000019A1753D9D0>,
                            0)],
             '$42compare_op.7': [(<numba.core.ir.Assign object at 0x0000019A1753D950>,
                                  0)],
             '$48pred': [(<numba.core.ir.Assign object at 0x0000019A1753E250>,
                          0)],
             '$52load_global.1': [(<numba.core.ir.Assign object at 0x0000019A162C1190>,
                                   50)],
             '$72call.5': [(<numba.core.ir.Assign object at 0x0000019A17542A50>,
                            50)],
             '$86call.6': [(<numba.core.ir.Assign object at 0x0000019A17542D10>,
                            50)],
             '$96return_value.7': [(<numba.core.ir.Assign object at 0x0000019A17543010>,
                                    50)],
             '$98load_deref.0': [(<numba.core.ir.Assign object at 0x0000019A17542690>,
                                  98)],
             '$const40.6.2': [(<numba.core.ir.Assign object at 0x0000019A1753CC90>,
                               0)],
             'attr': [(<numba.core.ir.Assign object at 0x0000019A16300590>, 0)],
             'bool48': [(<numba.core.ir.Assign object at 0x0000019A1753F2D0>,
                         0)],
             'obj': [(<numba.core.ir.Assign object at 0x0000019A162F5B50>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A162E4090>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          16	LOAD_FAST(arg=0, lineno=999)
          18	LOAD_FAST(arg=1, lineno=999)
          20	PRECALL(arg=2, lineno=999)
          24	CALL(arg=2, lineno=999)
          34	RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=PRECALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:stack ['$24call.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$obj16.2'}), (18, {'res': '$name18.3'}), (20, {}), (22, {}), (24, {'func': '$4load_global.0', 'args': ['$obj16.2', '$name18.3'], 'kw_names': None, 'res': '$24call.4'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'retval': '$24call.4', 'castval': '$34return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$24call.4', '$4load_global.0', 'name', 'obj']
    $34return_value.5 = cast(value=$24call.4) ['$24call.4', '$34return_value.5']
    return $34return_value.5                 ['$34return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A174A1990>
DEBUG:numba.core.ssa:on stmt: obj = arg(0, name=obj)
DEBUG:numba.core.ssa:on stmt: name = arg(1, name=name)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
DEBUG:numba.core.ssa:on stmt: $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34return_value.5 = cast(value=$24call.4)
DEBUG:numba.core.ssa:on stmt: return $34return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$24call.4': [(<numba.core.ir.Assign object at 0x0000019A174DAD10>,
                            0)],
             '$34return_value.5': [(<numba.core.ir.Assign object at 0x0000019A174A2A90>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A174DB090>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x0000019A174D9DD0>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x0000019A174D8C10>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A174D93D0>
DEBUG:numba.core.typeinfer:captured error
Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(bool, 1, 'A', False, aligned=True), slice<a:b>, Array(bool, 1, 'A', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(int64, unicode_type)
 
There are 2 candidate implementations:
[1m   - Of which 2 did not match due to:
   Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
     With argument(s): '(int64, unicode_type)':[0m
[1m    Rejected as the implementation raised a specific error:
      RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
DEBUG:numba.core.typeinfer:captured error
Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(bool, 1, 'A', False, aligned=True), slice<a:b>, Array(bool, 1, 'A', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(int64, unicode_type)
 
There are 2 candidate implementations:
[1m    - Of which 2 did not match due to:
    Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
      With argument(s): '(int64, unicode_type)':[0m
[1m     Rejected as the implementation raised a specific error:
       RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          16	LOAD_FAST(arg=0, lineno=999)
          18	LOAD_FAST(arg=1, lineno=999)
          20	PRECALL(arg=2, lineno=999)
          24	CALL(arg=2, lineno=999)
          34	RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=PRECALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:stack ['$24call.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$obj16.2'}), (18, {'res': '$name18.3'}), (20, {}), (22, {}), (24, {'func': '$4load_global.0', 'args': ['$obj16.2', '$name18.3'], 'kw_names': None, 'res': '$24call.4'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'retval': '$24call.4', 'castval': '$34return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$24call.4', '$4load_global.0', 'name', 'obj']
    $34return_value.5 = cast(value=$24call.4) ['$24call.4', '$34return_value.5']
    return $34return_value.5                 ['$34return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A174A20D0>
DEBUG:numba.core.ssa:on stmt: obj = arg(0, name=obj)
DEBUG:numba.core.ssa:on stmt: name = arg(1, name=name)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
DEBUG:numba.core.ssa:on stmt: $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34return_value.5 = cast(value=$24call.4)
DEBUG:numba.core.ssa:on stmt: return $34return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$24call.4': [(<numba.core.ir.Assign object at 0x0000019A1749CC90>,
                            0)],
             '$34return_value.5': [(<numba.core.ir.Assign object at 0x0000019A1749CB50>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A1749D5D0>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x0000019A1749C610>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x0000019A1749DC50>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A174A20D0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=954)
           2	RESUME(arg=0, lineno=954)
           4	LOAD_GLOBAL(arg=1, lineno=955)
          16	LOAD_FAST(arg=0, lineno=955)
          18	LOAD_FAST(arg=1, lineno=955)
          20	LOAD_GLOBAL(arg=2, lineno=955)
          32	PRECALL(arg=3, lineno=955)
          36	CALL(arg=3, lineno=955)
          46	RETURN_VALUE(arg=None, lineno=955)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=954)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=954)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=955)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=2, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=PRECALL(arg=3, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3', '$20load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=CALL(arg=3, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3', '$20load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=955)
DEBUG:numba.core.byteflow:stack ['$36call.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$obj16.2'}), (18, {'res': '$name18.3'}), (20, {'idx': 1, 'res': '$20load_global.4'}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {}), (36, {'func': '$4load_global.0', 'args': ['$obj16.2', '$name18.3', '$20load_global.4'], 'kw_names': None, 'res': '$36call.5'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'retval': '$36call.5', 'castval': '$46return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$4load_global.0']
    $20load_global.4 = global(_getattr_default: _getattr_default_type()) ['$20load_global.4']
    $36call.5 = call $4load_global.0(obj, name, $20load_global.4, func=$4load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($20load_global.4, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.4', '$36call.5', '$4load_global.0', 'name', 'obj']
    $46return_value.6 = cast(value=$36call.5) ['$36call.5', '$46return_value.6']
    return $46return_value.6                 ['$46return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1754DAD0>
DEBUG:numba.core.ssa:on stmt: obj = arg(0, name=obj)
DEBUG:numba.core.ssa:on stmt: name = arg(1, name=name)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>)
DEBUG:numba.core.ssa:on stmt: $20load_global.4 = global(_getattr_default: _getattr_default_type())
DEBUG:numba.core.ssa:on stmt: $36call.5 = call $4load_global.0(obj, name, $20load_global.4, func=$4load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($20load_global.4, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $46return_value.6 = cast(value=$36call.5)
DEBUG:numba.core.ssa:on stmt: return $46return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$20load_global.4': [(<numba.core.ir.Assign object at 0x0000019A1754C7D0>,
                                   0)],
             '$36call.5': [(<numba.core.ir.Assign object at 0x0000019A1754CA10>,
                            0)],
             '$46return_value.6': [(<numba.core.ir.Assign object at 0x0000019A1754CBD0>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A1754C290>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x0000019A1754C0D0>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x0000019A1754BF90>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A1754DAD0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2597)
           2	RESUME(arg=0, lineno=2597)
           4	LOAD_FAST(arg=0, lineno=2597)
           6	LOAD_METHOD(arg=0, lineno=2597)
          28	PRECALL(arg=0, lineno=2597)
          32	CALL(arg=0, lineno=2597)
          42	RETURN_VALUE(arg=None, lineno=2597)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2597)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=2597)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2597)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=2597)
DEBUG:numba.core.byteflow:stack ['$n4.0']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=PRECALL(arg=0, lineno=2597)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=CALL(arg=0, lineno=2597)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=2597)
DEBUG:numba.core.byteflow:stack ['$32call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$n4.0'}), (6, {'item': '$n4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'func': '$6load_method.2', 'args': [], 'kw_names': None, 'res': '$32call.3'}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {'retval': '$32call.3', 'castval': '$42return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    n = arg(0, name=n)                       ['n']
    $6load_method.2 = getattr(value=n, attr=__str__) ['$6load_method.2', 'n']
    $32call.3 = call $6load_method.2(func=$6load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$32call.3', '$6load_method.2']
    $42return_value.4 = cast(value=$32call.3) ['$32call.3', '$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A174D9110>
DEBUG:numba.core.ssa:on stmt: n = arg(0, name=n)
DEBUG:numba.core.ssa:on stmt: $6load_method.2 = getattr(value=n, attr=__str__)
DEBUG:numba.core.ssa:on stmt: $32call.3 = call $6load_method.2(func=$6load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $42return_value.4 = cast(value=$32call.3)
DEBUG:numba.core.ssa:on stmt: return $42return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$32call.3': [(<numba.core.ir.Assign object at 0x0000019A174A3610>,
                            0)],
             '$42return_value.4': [(<numba.core.ir.Assign object at 0x0000019A174A0F90>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x0000019A174A1C90>,
                                  0)],
             'n': [(<numba.core.ir.Assign object at 0x0000019A174A1750>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A174D9110>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          16	LOAD_FAST(arg=0, lineno=999)
          18	LOAD_FAST(arg=1, lineno=999)
          20	PRECALL(arg=2, lineno=999)
          24	CALL(arg=2, lineno=999)
          34	RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=PRECALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:stack ['$24call.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$obj16.2'}), (18, {'res': '$name18.3'}), (20, {}), (22, {}), (24, {'func': '$4load_global.0', 'args': ['$obj16.2', '$name18.3'], 'kw_names': None, 'res': '$24call.4'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'retval': '$24call.4', 'castval': '$34return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$24call.4', '$4load_global.0', 'name', 'obj']
    $34return_value.5 = cast(value=$24call.4) ['$24call.4', '$34return_value.5']
    return $34return_value.5                 ['$34return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1756ADD0>
DEBUG:numba.core.ssa:on stmt: obj = arg(0, name=obj)
DEBUG:numba.core.ssa:on stmt: name = arg(1, name=name)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
DEBUG:numba.core.ssa:on stmt: $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34return_value.5 = cast(value=$24call.4)
DEBUG:numba.core.ssa:on stmt: return $34return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$24call.4': [(<numba.core.ir.Assign object at 0x0000019A1756A090>,
                            0)],
             '$34return_value.5': [(<numba.core.ir.Assign object at 0x0000019A1756A2D0>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17569A90>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x0000019A175698D0>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x0000019A175697D0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A1756ADD0>
DEBUG:numba.core.typeinfer:captured error
Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(bool, 1, 'A', False, aligned=True), slice<a:b>, Array(bool, 1, 'A', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(int64, unicode_type)
 
There are 2 candidate implementations:
[1m     - Of which 2 did not match due to:
     Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
       With argument(s): '(int64, unicode_type)':[0m
[1m      Rejected as the implementation raised a specific error:
        RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
DEBUG:numba.core.typeinfer:captured error
Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(bool, 1, 'A', False, aligned=True), slice<a:b>, Array(bool, 1, 'A', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(int64, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(int64, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          16	LOAD_FAST(arg=0, lineno=999)
          18	LOAD_FAST(arg=1, lineno=999)
          20	PRECALL(arg=2, lineno=999)
          24	CALL(arg=2, lineno=999)
          34	RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=PRECALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:stack ['$24call.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$obj16.2'}), (18, {'res': '$name18.3'}), (20, {}), (22, {}), (24, {'func': '$4load_global.0', 'args': ['$obj16.2', '$name18.3'], 'kw_names': None, 'res': '$24call.4'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'retval': '$24call.4', 'castval': '$34return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$24call.4', '$4load_global.0', 'name', 'obj']
    $34return_value.5 = cast(value=$24call.4) ['$24call.4', '$34return_value.5']
    return $34return_value.5                 ['$34return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175AD110>
DEBUG:numba.core.ssa:on stmt: obj = arg(0, name=obj)
DEBUG:numba.core.ssa:on stmt: name = arg(1, name=name)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
DEBUG:numba.core.ssa:on stmt: $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34return_value.5 = cast(value=$24call.4)
DEBUG:numba.core.ssa:on stmt: return $34return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$24call.4': [(<numba.core.ir.Assign object at 0x0000019A175AC150>,
                            0)],
             '$34return_value.5': [(<numba.core.ir.Assign object at 0x0000019A175AC350>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A175A7A10>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x0000019A175A7790>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x0000019A175A7690>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A175AD110>
DEBUG:numba.core.typeinfer:captured error
Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(bool, 1, 'A', False, aligned=True), slice<a:b>, Array(bool, 1, 'A', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(int64, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(int64, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
DEBUG:numba.core.typeinfer:captured error
Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(bool, 1, 'A', False, aligned=True), slice<a:b>, Array(bool, 1, 'A', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(int64, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(int64, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1885)
           2	RESUME(arg=0, lineno=1885)
           4	LOAD_FAST(arg=0, lineno=1886)
           6	LOAD_ATTR(arg=0, lineno=1886)
          16	LOAD_FAST(arg=1, lineno=1886)
          18	LOAD_ATTR(arg=0, lineno=1886)
          28	BINARY_OP(arg=0, lineno=1886)
          32	STORE_FAST(arg=2, lineno=1886)
          34	LOAD_GLOBAL(arg=3, lineno=1887)
          46	LOAD_FAST(arg=0, lineno=1887)
          48	LOAD_ATTR(arg=2, lineno=1887)
          58	LOAD_FAST(arg=1, lineno=1887)
          60	LOAD_ATTR(arg=2, lineno=1887)
          70	PRECALL(arg=2, lineno=1887)
          74	CALL(arg=2, lineno=1887)
          84	STORE_FAST(arg=3, lineno=1887)
          86	LOAD_GLOBAL(arg=7, lineno=1888)
          98	LOAD_FAST(arg=0, lineno=1888)
         100	LOAD_ATTR(arg=4, lineno=1888)
         110	LOAD_FAST(arg=1, lineno=1888)
         112	LOAD_ATTR(arg=4, lineno=1888)
         122	PRECALL(arg=2, lineno=1888)
         126	CALL(arg=2, lineno=1888)
         136	STORE_FAST(arg=4, lineno=1888)
         138	LOAD_GLOBAL(arg=11, lineno=1889)
         150	LOAD_FAST(arg=3, lineno=1889)
         152	LOAD_FAST(arg=2, lineno=1889)
         154	LOAD_FAST(arg=4, lineno=1889)
         156	PRECALL(arg=3, lineno=1889)
         160	CALL(arg=3, lineno=1889)
         170	STORE_FAST(arg=5, lineno=1889)
         172	LOAD_GLOBAL(arg=13, lineno=1890)
         184	LOAD_GLOBAL(arg=15, lineno=1890)
         196	LOAD_FAST(arg=0, lineno=1890)
         198	PRECALL(arg=1, lineno=1890)
         202	CALL(arg=1, lineno=1890)
         212	PRECALL(arg=1, lineno=1890)
         216	CALL(arg=1, lineno=1890)
         226	GET_ITER(arg=None, lineno=1890)
>        228	FOR_ITER(arg=33, lineno=1890)
         230	STORE_FAST(arg=6, lineno=1890)
         232	LOAD_GLOBAL(arg=17, lineno=1891)
         244	LOAD_FAST(arg=5, lineno=1891)
         246	LOAD_FAST(arg=6, lineno=1891)
         248	LOAD_GLOBAL(arg=19, lineno=1891)
         260	LOAD_FAST(arg=0, lineno=1891)
         262	LOAD_FAST(arg=6, lineno=1891)
         264	PRECALL(arg=2, lineno=1891)
         268	CALL(arg=2, lineno=1891)
         278	PRECALL(arg=3, lineno=1891)
         282	CALL(arg=3, lineno=1891)
         292	POP_TOP(arg=None, lineno=1891)
         294	JUMP_BACKWARD(arg=34, lineno=1891)
>        296	LOAD_GLOBAL(arg=13, lineno=1892)
         308	LOAD_GLOBAL(arg=15, lineno=1892)
         320	LOAD_FAST(arg=1, lineno=1892)
         322	PRECALL(arg=1, lineno=1892)
         326	CALL(arg=1, lineno=1892)
         336	PRECALL(arg=1, lineno=1892)
         340	CALL(arg=1, lineno=1892)
         350	GET_ITER(arg=None, lineno=1892)
>        352	FOR_ITER(arg=49, lineno=1892)
         354	STORE_FAST(arg=7, lineno=1892)
         356	LOAD_GLOBAL(arg=17, lineno=1893)
         368	LOAD_FAST(arg=5, lineno=1893)
         370	LOAD_GLOBAL(arg=15, lineno=1893)
         382	LOAD_FAST(arg=0, lineno=1893)
         384	PRECALL(arg=1, lineno=1893)
         388	CALL(arg=1, lineno=1893)
         398	LOAD_FAST(arg=7, lineno=1893)
         400	BINARY_OP(arg=0, lineno=1893)
         404	LOAD_GLOBAL(arg=19, lineno=1893)
         416	LOAD_FAST(arg=1, lineno=1893)
         418	LOAD_FAST(arg=7, lineno=1893)
         420	PRECALL(arg=2, lineno=1893)
         424	CALL(arg=2, lineno=1893)
         434	PRECALL(arg=3, lineno=1893)
         438	CALL(arg=3, lineno=1893)
         448	POP_TOP(arg=None, lineno=1893)
         450	JUMP_BACKWARD(arg=50, lineno=1893)
>        452	LOAD_FAST(arg=5, lineno=1894)
         454	RETURN_VALUE(arg=None, lineno=1894)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1885)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1885)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1886)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=1886)
DEBUG:numba.core.byteflow:stack ['$a4.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=1886)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_ATTR(arg=0, lineno=1886)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1', '$b16.2']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=BINARY_OP(arg=0, lineno=1886)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1', '$18load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=STORE_FAST(arg=2, lineno=1886)
DEBUG:numba.core.byteflow:stack ['$binop_add28.4']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_GLOBAL(arg=3, lineno=1887)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=0, lineno=1887)
DEBUG:numba.core.byteflow:stack ['$null$34.6', '$34load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_ATTR(arg=2, lineno=1887)
DEBUG:numba.core.byteflow:stack ['$null$34.6', '$34load_global.5', '$a46.7']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=1, lineno=1887)
DEBUG:numba.core.byteflow:stack ['$null$34.6', '$34load_global.5', '$48load_attr.8']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_ATTR(arg=2, lineno=1887)
DEBUG:numba.core.byteflow:stack ['$null$34.6', '$34load_global.5', '$48load_attr.8', '$b58.9']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=PRECALL(arg=2, lineno=1887)
DEBUG:numba.core.byteflow:stack ['$null$34.6', '$34load_global.5', '$48load_attr.8', '$60load_attr.10']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=CALL(arg=2, lineno=1887)
DEBUG:numba.core.byteflow:stack ['$null$34.6', '$34load_global.5', '$48load_attr.8', '$60load_attr.10']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=STORE_FAST(arg=3, lineno=1887)
DEBUG:numba.core.byteflow:stack ['$74call.11']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_GLOBAL(arg=7, lineno=1888)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_FAST(arg=0, lineno=1888)
DEBUG:numba.core.byteflow:stack ['$null$86.13', '$86load_global.12']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_ATTR(arg=4, lineno=1888)
DEBUG:numba.core.byteflow:stack ['$null$86.13', '$86load_global.12', '$a98.14']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=1888)
DEBUG:numba.core.byteflow:stack ['$null$86.13', '$86load_global.12', '$100load_attr.15']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_ATTR(arg=4, lineno=1888)
DEBUG:numba.core.byteflow:stack ['$null$86.13', '$86load_global.12', '$100load_attr.15', '$b110.16']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=PRECALL(arg=2, lineno=1888)
DEBUG:numba.core.byteflow:stack ['$null$86.13', '$86load_global.12', '$100load_attr.15', '$112load_attr.17']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=CALL(arg=2, lineno=1888)
DEBUG:numba.core.byteflow:stack ['$null$86.13', '$86load_global.12', '$100load_attr.15', '$112load_attr.17']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=STORE_FAST(arg=4, lineno=1888)
DEBUG:numba.core.byteflow:stack ['$126call.18']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_GLOBAL(arg=11, lineno=1889)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_FAST(arg=3, lineno=1889)
DEBUG:numba.core.byteflow:stack ['$null$138.20', '$138load_global.19']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_FAST(arg=2, lineno=1889)
DEBUG:numba.core.byteflow:stack ['$null$138.20', '$138load_global.19', '$new_kind150.21']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=1889)
DEBUG:numba.core.byteflow:stack ['$null$138.20', '$138load_global.19', '$new_kind150.21', '$new_length152.22']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=PRECALL(arg=3, lineno=1889)
DEBUG:numba.core.byteflow:stack ['$null$138.20', '$138load_global.19', '$new_kind150.21', '$new_length152.22', '$new_ascii154.23']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=CALL(arg=3, lineno=1889)
DEBUG:numba.core.byteflow:stack ['$null$138.20', '$138load_global.19', '$new_kind150.21', '$new_length152.22', '$new_ascii154.23']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=STORE_FAST(arg=5, lineno=1889)
DEBUG:numba.core.byteflow:stack ['$160call.24']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=LOAD_GLOBAL(arg=13, lineno=1890)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=184, inst=LOAD_GLOBAL(arg=15, lineno=1890)
DEBUG:numba.core.byteflow:stack ['$null$172.26', '$172load_global.25']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=LOAD_FAST(arg=0, lineno=1890)
DEBUG:numba.core.byteflow:stack ['$null$172.26', '$172load_global.25', '$null$184.28', '$184load_global.27']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=PRECALL(arg=1, lineno=1890)
DEBUG:numba.core.byteflow:stack ['$null$172.26', '$172load_global.25', '$null$184.28', '$184load_global.27', '$a196.29']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=CALL(arg=1, lineno=1890)
DEBUG:numba.core.byteflow:stack ['$null$172.26', '$172load_global.25', '$null$184.28', '$184load_global.27', '$a196.29']
DEBUG:numba.core.byteflow:dispatch pc=212, inst=PRECALL(arg=1, lineno=1890)
DEBUG:numba.core.byteflow:stack ['$null$172.26', '$172load_global.25', '$202call.30']
DEBUG:numba.core.byteflow:dispatch pc=216, inst=CALL(arg=1, lineno=1890)
DEBUG:numba.core.byteflow:stack ['$null$172.26', '$172load_global.25', '$202call.30']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=GET_ITER(arg=None, lineno=1890)
DEBUG:numba.core.byteflow:stack ['$216call.31']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=228, stack=('$226get_iter.32',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=228 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi228.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=228 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=228, inst=FOR_ITER(arg=33, lineno=1890)
DEBUG:numba.core.byteflow:stack ['$phi228.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=296, stack=(), blockstack=(), npush=0), Edge(pc=230, stack=('$phi228.0', '$228for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=296 nstack_initial=0), State(pc_initial=230 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=296 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=296, inst=LOAD_GLOBAL(arg=13, lineno=1892)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=308, inst=LOAD_GLOBAL(arg=15, lineno=1892)
DEBUG:numba.core.byteflow:stack ['$null$296.1', '$296load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=320, inst=LOAD_FAST(arg=1, lineno=1892)
DEBUG:numba.core.byteflow:stack ['$null$296.1', '$296load_global.0', '$null$308.3', '$308load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=322, inst=PRECALL(arg=1, lineno=1892)
DEBUG:numba.core.byteflow:stack ['$null$296.1', '$296load_global.0', '$null$308.3', '$308load_global.2', '$b320.4']
DEBUG:numba.core.byteflow:dispatch pc=326, inst=CALL(arg=1, lineno=1892)
DEBUG:numba.core.byteflow:stack ['$null$296.1', '$296load_global.0', '$null$308.3', '$308load_global.2', '$b320.4']
DEBUG:numba.core.byteflow:dispatch pc=336, inst=PRECALL(arg=1, lineno=1892)
DEBUG:numba.core.byteflow:stack ['$null$296.1', '$296load_global.0', '$326call.5']
DEBUG:numba.core.byteflow:dispatch pc=340, inst=CALL(arg=1, lineno=1892)
DEBUG:numba.core.byteflow:stack ['$null$296.1', '$296load_global.0', '$326call.5']
DEBUG:numba.core.byteflow:dispatch pc=350, inst=GET_ITER(arg=None, lineno=1892)
DEBUG:numba.core.byteflow:stack ['$340call.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=352, stack=('$350get_iter.7',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=2), State(pc_initial=352 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi230.0', '$phi230.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=230 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=230, inst=STORE_FAST(arg=6, lineno=1890)
DEBUG:numba.core.byteflow:stack ['$phi230.0', '$phi230.1']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=LOAD_GLOBAL(arg=17, lineno=1891)
DEBUG:numba.core.byteflow:stack ['$phi230.0']
DEBUG:numba.core.byteflow:dispatch pc=244, inst=LOAD_FAST(arg=5, lineno=1891)
DEBUG:numba.core.byteflow:stack ['$phi230.0', '$null$232.3', '$232load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=LOAD_FAST(arg=6, lineno=1891)
DEBUG:numba.core.byteflow:stack ['$phi230.0', '$null$232.3', '$232load_global.2', '$result244.4']
DEBUG:numba.core.byteflow:dispatch pc=248, inst=LOAD_GLOBAL(arg=19, lineno=1891)
DEBUG:numba.core.byteflow:stack ['$phi230.0', '$null$232.3', '$232load_global.2', '$result244.4', '$i246.5']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=LOAD_FAST(arg=0, lineno=1891)
DEBUG:numba.core.byteflow:stack ['$phi230.0', '$null$232.3', '$232load_global.2', '$result244.4', '$i246.5', '$null$248.7', '$248load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=6, lineno=1891)
DEBUG:numba.core.byteflow:stack ['$phi230.0', '$null$232.3', '$232load_global.2', '$result244.4', '$i246.5', '$null$248.7', '$248load_global.6', '$a260.8']
DEBUG:numba.core.byteflow:dispatch pc=264, inst=PRECALL(arg=2, lineno=1891)
DEBUG:numba.core.byteflow:stack ['$phi230.0', '$null$232.3', '$232load_global.2', '$result244.4', '$i246.5', '$null$248.7', '$248load_global.6', '$a260.8', '$i262.9']
DEBUG:numba.core.byteflow:dispatch pc=268, inst=CALL(arg=2, lineno=1891)
DEBUG:numba.core.byteflow:stack ['$phi230.0', '$null$232.3', '$232load_global.2', '$result244.4', '$i246.5', '$null$248.7', '$248load_global.6', '$a260.8', '$i262.9']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=PRECALL(arg=3, lineno=1891)
DEBUG:numba.core.byteflow:stack ['$phi230.0', '$null$232.3', '$232load_global.2', '$result244.4', '$i246.5', '$268call.10']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=CALL(arg=3, lineno=1891)
DEBUG:numba.core.byteflow:stack ['$phi230.0', '$null$232.3', '$232load_global.2', '$result244.4', '$i246.5', '$268call.10']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=POP_TOP(arg=None, lineno=1891)
DEBUG:numba.core.byteflow:stack ['$phi230.0', '$282call.11']
DEBUG:numba.core.byteflow:dispatch pc=294, inst=JUMP_BACKWARD(arg=34, lineno=1891)
DEBUG:numba.core.byteflow:stack ['$phi230.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=228, stack=('$phi230.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=352 nstack_initial=1), State(pc_initial=228 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi352.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=352 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=352, inst=FOR_ITER(arg=49, lineno=1892)
DEBUG:numba.core.byteflow:stack ['$phi352.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=452, stack=(), blockstack=(), npush=0), Edge(pc=354, stack=('$phi352.0', '$352for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=228 nstack_initial=1), State(pc_initial=452 nstack_initial=0), State(pc_initial=354 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=452 nstack_initial=0), State(pc_initial=354 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=452 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=452, inst=LOAD_FAST(arg=5, lineno=1894)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=454, inst=RETURN_VALUE(arg=None, lineno=1894)
DEBUG:numba.core.byteflow:stack ['$result452.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=354 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi354.0', '$phi354.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=354 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=354, inst=STORE_FAST(arg=7, lineno=1892)
DEBUG:numba.core.byteflow:stack ['$phi354.0', '$phi354.1']
DEBUG:numba.core.byteflow:dispatch pc=356, inst=LOAD_GLOBAL(arg=17, lineno=1893)
DEBUG:numba.core.byteflow:stack ['$phi354.0']
DEBUG:numba.core.byteflow:dispatch pc=368, inst=LOAD_FAST(arg=5, lineno=1893)
DEBUG:numba.core.byteflow:stack ['$phi354.0', '$null$356.3', '$356load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=370, inst=LOAD_GLOBAL(arg=15, lineno=1893)
DEBUG:numba.core.byteflow:stack ['$phi354.0', '$null$356.3', '$356load_global.2', '$result368.4']
DEBUG:numba.core.byteflow:dispatch pc=382, inst=LOAD_FAST(arg=0, lineno=1893)
DEBUG:numba.core.byteflow:stack ['$phi354.0', '$null$356.3', '$356load_global.2', '$result368.4', '$null$370.6', '$370load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=384, inst=PRECALL(arg=1, lineno=1893)
DEBUG:numba.core.byteflow:stack ['$phi354.0', '$null$356.3', '$356load_global.2', '$result368.4', '$null$370.6', '$370load_global.5', '$a382.7']
DEBUG:numba.core.byteflow:dispatch pc=388, inst=CALL(arg=1, lineno=1893)
DEBUG:numba.core.byteflow:stack ['$phi354.0', '$null$356.3', '$356load_global.2', '$result368.4', '$null$370.6', '$370load_global.5', '$a382.7']
DEBUG:numba.core.byteflow:dispatch pc=398, inst=LOAD_FAST(arg=7, lineno=1893)
DEBUG:numba.core.byteflow:stack ['$phi354.0', '$null$356.3', '$356load_global.2', '$result368.4', '$388call.8']
DEBUG:numba.core.byteflow:dispatch pc=400, inst=BINARY_OP(arg=0, lineno=1893)
DEBUG:numba.core.byteflow:stack ['$phi354.0', '$null$356.3', '$356load_global.2', '$result368.4', '$388call.8', '$j398.9']
DEBUG:numba.core.byteflow:dispatch pc=404, inst=LOAD_GLOBAL(arg=19, lineno=1893)
DEBUG:numba.core.byteflow:stack ['$phi354.0', '$null$356.3', '$356load_global.2', '$result368.4', '$binop_add400.10']
DEBUG:numba.core.byteflow:dispatch pc=416, inst=LOAD_FAST(arg=1, lineno=1893)
DEBUG:numba.core.byteflow:stack ['$phi354.0', '$null$356.3', '$356load_global.2', '$result368.4', '$binop_add400.10', '$null$404.12', '$404load_global.11']
DEBUG:numba.core.byteflow:dispatch pc=418, inst=LOAD_FAST(arg=7, lineno=1893)
DEBUG:numba.core.byteflow:stack ['$phi354.0', '$null$356.3', '$356load_global.2', '$result368.4', '$binop_add400.10', '$null$404.12', '$404load_global.11', '$b416.13']
DEBUG:numba.core.byteflow:dispatch pc=420, inst=PRECALL(arg=2, lineno=1893)
DEBUG:numba.core.byteflow:stack ['$phi354.0', '$null$356.3', '$356load_global.2', '$result368.4', '$binop_add400.10', '$null$404.12', '$404load_global.11', '$b416.13', '$j418.14']
DEBUG:numba.core.byteflow:dispatch pc=424, inst=CALL(arg=2, lineno=1893)
DEBUG:numba.core.byteflow:stack ['$phi354.0', '$null$356.3', '$356load_global.2', '$result368.4', '$binop_add400.10', '$null$404.12', '$404load_global.11', '$b416.13', '$j418.14']
DEBUG:numba.core.byteflow:dispatch pc=434, inst=PRECALL(arg=3, lineno=1893)
DEBUG:numba.core.byteflow:stack ['$phi354.0', '$null$356.3', '$356load_global.2', '$result368.4', '$binop_add400.10', '$424call.15']
DEBUG:numba.core.byteflow:dispatch pc=438, inst=CALL(arg=3, lineno=1893)
DEBUG:numba.core.byteflow:stack ['$phi354.0', '$null$356.3', '$356load_global.2', '$result368.4', '$binop_add400.10', '$424call.15']
DEBUG:numba.core.byteflow:dispatch pc=448, inst=POP_TOP(arg=None, lineno=1893)
DEBUG:numba.core.byteflow:stack ['$phi354.0', '$438call.16']
DEBUG:numba.core.byteflow:dispatch pc=450, inst=JUMP_BACKWARD(arg=50, lineno=1893)
DEBUG:numba.core.byteflow:stack ['$phi354.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=352, stack=('$phi354.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=352 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=228 nstack_initial=1): {'$phi228.0'},
             State(pc_initial=230 nstack_initial=2): {'$phi230.1'},
             State(pc_initial=296 nstack_initial=0): set(),
             State(pc_initial=352 nstack_initial=1): {'$phi352.0'},
             State(pc_initial=354 nstack_initial=2): {'$phi354.1'},
             State(pc_initial=452 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi228.0': State(pc_initial=0 nstack_initial=0),
 '$phi230.1': State(pc_initial=228 nstack_initial=1),
 '$phi352.0': State(pc_initial=296 nstack_initial=0),
 '$phi354.1': State(pc_initial=352 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi228.0': {('$226get_iter.32',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=2))},
             '$phi230.0': {('$phi228.0',
                            State(pc_initial=228 nstack_initial=1))},
             '$phi230.1': {('$228for_iter.2',
                            State(pc_initial=228 nstack_initial=1))},
             '$phi352.0': {('$350get_iter.7',
                            State(pc_initial=296 nstack_initial=0)),
                           ('$phi354.0',
                            State(pc_initial=354 nstack_initial=2))},
             '$phi354.0': {('$phi352.0',
                            State(pc_initial=352 nstack_initial=1))},
             '$phi354.1': {('$352for_iter.2',
                            State(pc_initial=352 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi228.0': {('$226get_iter.32',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi228.0',
                            State(pc_initial=228 nstack_initial=1))},
             '$phi230.0': {('$226get_iter.32',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi230.1': {('$228for_iter.2',
                            State(pc_initial=228 nstack_initial=1))},
             '$phi352.0': {('$350get_iter.7',
                            State(pc_initial=296 nstack_initial=0)),
                           ('$phi352.0',
                            State(pc_initial=352 nstack_initial=1))},
             '$phi354.0': {('$350get_iter.7',
                            State(pc_initial=296 nstack_initial=0))},
             '$phi354.1': {('$352for_iter.2',
                            State(pc_initial=352 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi228.0': {('$226get_iter.32',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi230.0': {('$226get_iter.32',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi230.1': {('$228for_iter.2',
                            State(pc_initial=228 nstack_initial=1))},
             '$phi352.0': {('$350get_iter.7',
                            State(pc_initial=296 nstack_initial=0))},
             '$phi354.0': {('$350get_iter.7',
                            State(pc_initial=296 nstack_initial=0))},
             '$phi354.1': {('$352for_iter.2',
                            State(pc_initial=352 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi228.0': {('$226get_iter.32',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi230.0': {('$226get_iter.32',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi230.1': {('$228for_iter.2',
                            State(pc_initial=228 nstack_initial=1))},
             '$phi352.0': {('$350get_iter.7',
                            State(pc_initial=296 nstack_initial=0))},
             '$phi354.0': {('$350get_iter.7',
                            State(pc_initial=296 nstack_initial=0))},
             '$phi354.1': {('$352for_iter.2',
                            State(pc_initial=352 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi228.0': {('$226get_iter.32', State(pc_initial=0 nstack_initial=0))},
 '$phi230.1': {('$228for_iter.2', State(pc_initial=228 nstack_initial=1))},
 '$phi352.0': {('$350get_iter.7', State(pc_initial=296 nstack_initial=0))},
 '$phi354.1': {('$352for_iter.2', State(pc_initial=352 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi228.0': '$226get_iter.32'},
             State(pc_initial=228 nstack_initial=1): {'$phi230.1': '$228for_iter.2'},
             State(pc_initial=296 nstack_initial=0): {'$phi352.0': '$350get_iter.7'},
             State(pc_initial=352 nstack_initial=1): {'$phi354.1': '$352for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'item': '$a4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$b16.2'}), (18, {'item': '$b16.2', 'res': '$18load_attr.3'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'op': '+', 'lhs': '$6load_attr.1', 'rhs': '$18load_attr.3', 'res': '$binop_add28.4'}), (30, {}), (32, {'value': '$binop_add28.4'}), (34, {'idx': 1, 'res': '$34load_global.5'}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'res': '$a46.7'}), (48, {'item': '$a46.7', 'res': '$48load_attr.8'}), (50, {}), (52, {}), (54, {}), (56, {}), (58, {'res': '$b58.9'}), (60, {'item': '$b58.9', 'res': '$60load_attr.10'}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {}), (74, {'func': '$34load_global.5', 'args': ['$48load_attr.8', '$60load_attr.10'], 'kw_names': None, 'res': '$74call.11'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'value': '$74call.11'}), (86, {'idx': 3, 'res': '$86load_global.12'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {'res': '$a98.14'}), (100, {'item': '$a98.14', 'res': '$100load_attr.15'}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {'res': '$b110.16'}), (112, {'item': '$b110.16', 'res': '$112load_attr.17'}), (114, {}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {'func': '$86load_global.12', 'args': ['$100load_attr.15', '$112load_attr.17'], 'kw_names': None, 'res': '$126call.18'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'value': '$126call.18'}), (138, {'idx': 5, 'res': '$138load_global.19'}), (140, {}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {'res': '$new_kind150.21'}), (152, {'res': '$new_length152.22'}), (154, {'res': '$new_ascii154.23'}), (156, {}), (158, {}), (160, {'func': '$138load_global.19', 'args': ['$new_kind150.21', '$new_length152.22', '$new_ascii154.23'], 'kw_names': None, 'res': '$160call.24'}), (162, {}), (164, {}), (166, {}), (168, {}), (170, {'value': '$160call.24'}), (172, {'idx': 6, 'res': '$172load_global.25'}), (174, {}), (176, {}), (178, {}), (180, {}), (182, {}), (184, {'idx': 7, 'res': '$184load_global.27'}), (186, {}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'res': '$a196.29'}), (198, {}), (200, {}), (202, {'func': '$184load_global.27', 'args': ['$a196.29'], 'kw_names': None, 'res': '$202call.30'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {}), (216, {'func': '$172load_global.25', 'args': ['$202call.30'], 'kw_names': None, 'res': '$216call.31'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.31', 'res': '$226get_iter.32'})), outgoing_phis={'$phi228.0': '$226get_iter.32'}, blockstack=(), active_try_block=None, outgoing_edgepushed={228: ('$226get_iter.32',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=228 nstack_initial=1):
AdaptBlockInfo(insts=((228, {'iterator': '$phi228.0', 'pair': '$228for_iter.1', 'indval': '$228for_iter.2', 'pred': '$228for_iter.3'}),), outgoing_phis={'$phi230.1': '$228for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={296: (), 230: ('$phi228.0', '$228for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=230 nstack_initial=2):
AdaptBlockInfo(insts=((230, {'value': '$phi230.1'}), (232, {'idx': 8, 'res': '$232load_global.2'}), (234, {}), (236, {}), (238, {}), (240, {}), (242, {}), (244, {'res': '$result244.4'}), (246, {'res': '$i246.5'}), (248, {'idx': 9, 'res': '$248load_global.6'}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'res': '$a260.8'}), (262, {'res': '$i262.9'}), (264, {}), (266, {}), (268, {'func': '$248load_global.6', 'args': ['$a260.8', '$i262.9'], 'kw_names': None, 'res': '$268call.10'}), (270, {}), (272, {}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'func': '$232load_global.2', 'args': ['$result244.4', '$i246.5', '$268call.10'], 'kw_names': None, 'res': '$282call.11'}), (284, {}), (286, {}), (288, {}), (290, {}), (294, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={228: ('$phi230.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=296 nstack_initial=0):
AdaptBlockInfo(insts=((296, {'idx': 6, 'res': '$296load_global.0'}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {}), (308, {'idx': 7, 'res': '$308load_global.2'}), (310, {}), (312, {}), (314, {}), (316, {}), (318, {}), (320, {'res': '$b320.4'}), (322, {}), (324, {}), (326, {'func': '$308load_global.2', 'args': ['$b320.4'], 'kw_names': None, 'res': '$326call.5'}), (328, {}), (330, {}), (332, {}), (334, {}), (336, {}), (338, {}), (340, {'func': '$296load_global.0', 'args': ['$326call.5'], 'kw_names': None, 'res': '$340call.6'}), (342, {}), (344, {}), (346, {}), (348, {}), (350, {'value': '$340call.6', 'res': '$350get_iter.7'})), outgoing_phis={'$phi352.0': '$350get_iter.7'}, blockstack=(), active_try_block=None, outgoing_edgepushed={352: ('$350get_iter.7',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=352 nstack_initial=1):
AdaptBlockInfo(insts=((352, {'iterator': '$phi352.0', 'pair': '$352for_iter.1', 'indval': '$352for_iter.2', 'pred': '$352for_iter.3'}),), outgoing_phis={'$phi354.1': '$352for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={452: (), 354: ('$phi352.0', '$352for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=354 nstack_initial=2):
AdaptBlockInfo(insts=((354, {'value': '$phi354.1'}), (356, {'idx': 8, 'res': '$356load_global.2'}), (358, {}), (360, {}), (362, {}), (364, {}), (366, {}), (368, {'res': '$result368.4'}), (370, {'idx': 7, 'res': '$370load_global.5'}), (372, {}), (374, {}), (376, {}), (378, {}), (380, {}), (382, {'res': '$a382.7'}), (384, {}), (386, {}), (388, {'func': '$370load_global.5', 'args': ['$a382.7'], 'kw_names': None, 'res': '$388call.8'}), (390, {}), (392, {}), (394, {}), (396, {}), (398, {'res': '$j398.9'}), (400, {'op': '+', 'lhs': '$388call.8', 'rhs': '$j398.9', 'res': '$binop_add400.10'}), (402, {}), (404, {'idx': 9, 'res': '$404load_global.11'}), (406, {}), (408, {}), (410, {}), (412, {}), (414, {}), (416, {'res': '$b416.13'}), (418, {'res': '$j418.14'}), (420, {}), (422, {}), (424, {'func': '$404load_global.11', 'args': ['$b416.13', '$j418.14'], 'kw_names': None, 'res': '$424call.15'}), (426, {}), (428, {}), (430, {}), (432, {}), (434, {}), (436, {}), (438, {'func': '$356load_global.2', 'args': ['$result368.4', '$binop_add400.10', '$424call.15'], 'kw_names': None, 'res': '$438call.16'}), (440, {}), (442, {}), (444, {}), (446, {}), (450, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={352: ('$phi354.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=452 nstack_initial=0):
AdaptBlockInfo(insts=((452, {'res': '$result452.0'}), (454, {'retval': '$result452.0', 'castval': '$454return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $6load_attr.1 = getattr(value=a, attr=_length) ['$6load_attr.1', 'a']
    $18load_attr.3 = getattr(value=b, attr=_length) ['$18load_attr.3', 'b']
    new_length = $6load_attr.1 + $18load_attr.3 ['$18load_attr.3', '$6load_attr.1', 'new_length']
    $34load_global.5 = global(_pick_kind: <function _pick_kind at 0x0000019A157267A0>) ['$34load_global.5']
    $48load_attr.8 = getattr(value=a, attr=_kind) ['$48load_attr.8', 'a']
    $60load_attr.10 = getattr(value=b, attr=_kind) ['$60load_attr.10', 'b']
    new_kind = call $34load_global.5($48load_attr.8, $60load_attr.10, func=$34load_global.5, args=[Var($48load_attr.8, unicode.py:1887), Var($60load_attr.10, unicode.py:1887)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.5', '$48load_attr.8', '$60load_attr.10', 'new_kind']
    $86load_global.12 = global(_pick_ascii: <function _pick_ascii at 0x0000019A157268E0>) ['$86load_global.12']
    $100load_attr.15 = getattr(value=a, attr=_is_ascii) ['$100load_attr.15', 'a']
    $112load_attr.17 = getattr(value=b, attr=_is_ascii) ['$112load_attr.17', 'b']
    new_ascii = call $86load_global.12($100load_attr.15, $112load_attr.17, func=$86load_global.12, args=[Var($100load_attr.15, unicode.py:1888), Var($112load_attr.17, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$100load_attr.15', '$112load_attr.17', '$86load_global.12', 'new_ascii']
    $138load_global.19 = global(_empty_string: <function _empty_string at 0x0000019A157262A0>) ['$138load_global.19']
    result = call $138load_global.19(new_kind, new_length, new_ascii, func=$138load_global.19, args=[Var(new_kind, unicode.py:1887), Var(new_length, unicode.py:1886), Var(new_ascii, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None) ['$138load_global.19', 'new_ascii', 'new_kind', 'new_length', 'result']
    $172load_global.25 = global(range: <class 'range'>) ['$172load_global.25']
    $184load_global.27 = global(len: <built-in function len>) ['$184load_global.27']
    $202call.30 = call $184load_global.27(a, func=$184load_global.27, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$184load_global.27', '$202call.30', 'a']
    $216call.31 = call $172load_global.25($202call.30, func=$172load_global.25, args=[Var($202call.30, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$172load_global.25', '$202call.30', '$216call.31']
    $226get_iter.32 = getiter(value=$216call.31) ['$216call.31', '$226get_iter.32']
    $phi228.0 = $226get_iter.32              ['$226get_iter.32', '$phi228.0']
    jump 228                                 []
label 228:
    $228for_iter.1 = iternext(value=$phi228.0) ['$228for_iter.1', '$phi228.0']
    $228for_iter.2 = pair_first(value=$228for_iter.1) ['$228for_iter.1', '$228for_iter.2']
    $228for_iter.3 = pair_second(value=$228for_iter.1) ['$228for_iter.1', '$228for_iter.3']
    $phi230.1 = $228for_iter.2               ['$228for_iter.2', '$phi230.1']
    branch $228for_iter.3, 230, 296          ['$228for_iter.3']
label 230:
    i = $phi230.1                            ['$phi230.1', 'i']
    $232load_global.2 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>) ['$232load_global.2']
    $248load_global.6 = global(_get_code_point: <function _get_code_point at 0x0000019A157263E0>) ['$248load_global.6']
    $268call.10 = call $248load_global.6(a, i, func=$248load_global.6, args=[Var(a, unicode.py:1885), Var(i, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None) ['$248load_global.6', '$268call.10', 'a', 'i']
    $282call.11 = call $232load_global.2(result, i, $268call.10, func=$232load_global.2, args=[Var(result, unicode.py:1889), Var(i, unicode.py:1890), Var($268call.10, unicode.py:1891)], kws=(), vararg=None, varkwarg=None, target=None) ['$232load_global.2', '$268call.10', '$282call.11', 'i', 'result']
    jump 228                                 []
label 296:
    $296load_global.0 = global(range: <class 'range'>) ['$296load_global.0']
    $308load_global.2 = global(len: <built-in function len>) ['$308load_global.2']
    $326call.5 = call $308load_global.2(b, func=$308load_global.2, args=[Var(b, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$308load_global.2', '$326call.5', 'b']
    $340call.6 = call $296load_global.0($326call.5, func=$296load_global.0, args=[Var($326call.5, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$296load_global.0', '$326call.5', '$340call.6']
    $350get_iter.7 = getiter(value=$340call.6) ['$340call.6', '$350get_iter.7']
    $phi352.0 = $350get_iter.7               ['$350get_iter.7', '$phi352.0']
    jump 352                                 []
label 352:
    $352for_iter.1 = iternext(value=$phi352.0) ['$352for_iter.1', '$phi352.0']
    $352for_iter.2 = pair_first(value=$352for_iter.1) ['$352for_iter.1', '$352for_iter.2']
    $352for_iter.3 = pair_second(value=$352for_iter.1) ['$352for_iter.1', '$352for_iter.3']
    $phi354.1 = $352for_iter.2               ['$352for_iter.2', '$phi354.1']
    branch $352for_iter.3, 354, 452          ['$352for_iter.3']
label 354:
    j = $phi354.1                            ['$phi354.1', 'j']
    $356load_global.2 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>) ['$356load_global.2']
    $370load_global.5 = global(len: <built-in function len>) ['$370load_global.5']
    $388call.8 = call $370load_global.5(a, func=$370load_global.5, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None) ['$370load_global.5', '$388call.8', 'a']
    $binop_add400.10 = $388call.8 + j        ['$388call.8', '$binop_add400.10', 'j']
    $404load_global.11 = global(_get_code_point: <function _get_code_point at 0x0000019A157263E0>) ['$404load_global.11']
    $424call.15 = call $404load_global.11(b, j, func=$404load_global.11, args=[Var(b, unicode.py:1885), Var(j, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None) ['$404load_global.11', '$424call.15', 'b', 'j']
    $438call.16 = call $356load_global.2(result, $binop_add400.10, $424call.15, func=$356load_global.2, args=[Var(result, unicode.py:1889), Var($binop_add400.10, unicode.py:1893), Var($424call.15, unicode.py:1893)], kws=(), vararg=None, varkwarg=None, target=None) ['$356load_global.2', '$424call.15', '$438call.16', '$binop_add400.10', 'result']
    jump 352                                 []
label 452:
    $454return_value.1 = cast(value=result)  ['$454return_value.1', 'result']
    return $454return_value.1                ['$454return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175EC910>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $6load_attr.1 = getattr(value=a, attr=_length)
DEBUG:numba.core.ssa:on stmt: $18load_attr.3 = getattr(value=b, attr=_length)
DEBUG:numba.core.ssa:on stmt: new_length = $6load_attr.1 + $18load_attr.3
DEBUG:numba.core.ssa:on stmt: $34load_global.5 = global(_pick_kind: <function _pick_kind at 0x0000019A157267A0>)
DEBUG:numba.core.ssa:on stmt: $48load_attr.8 = getattr(value=a, attr=_kind)
DEBUG:numba.core.ssa:on stmt: $60load_attr.10 = getattr(value=b, attr=_kind)
DEBUG:numba.core.ssa:on stmt: new_kind = call $34load_global.5($48load_attr.8, $60load_attr.10, func=$34load_global.5, args=[Var($48load_attr.8, unicode.py:1887), Var($60load_attr.10, unicode.py:1887)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $86load_global.12 = global(_pick_ascii: <function _pick_ascii at 0x0000019A157268E0>)
DEBUG:numba.core.ssa:on stmt: $100load_attr.15 = getattr(value=a, attr=_is_ascii)
DEBUG:numba.core.ssa:on stmt: $112load_attr.17 = getattr(value=b, attr=_is_ascii)
DEBUG:numba.core.ssa:on stmt: new_ascii = call $86load_global.12($100load_attr.15, $112load_attr.17, func=$86load_global.12, args=[Var($100load_attr.15, unicode.py:1888), Var($112load_attr.17, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $138load_global.19 = global(_empty_string: <function _empty_string at 0x0000019A157262A0>)
DEBUG:numba.core.ssa:on stmt: result = call $138load_global.19(new_kind, new_length, new_ascii, func=$138load_global.19, args=[Var(new_kind, unicode.py:1887), Var(new_length, unicode.py:1886), Var(new_ascii, unicode.py:1888)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $172load_global.25 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $184load_global.27 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $202call.30 = call $184load_global.27(a, func=$184load_global.27, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $216call.31 = call $172load_global.25($202call.30, func=$172load_global.25, args=[Var($202call.30, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $226get_iter.32 = getiter(value=$216call.31)
DEBUG:numba.core.ssa:on stmt: $phi228.0 = $226get_iter.32
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block analysis pass on 228
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175EC910>
DEBUG:numba.core.ssa:on stmt: $228for_iter.1 = iternext(value=$phi228.0)
DEBUG:numba.core.ssa:on stmt: $228for_iter.2 = pair_first(value=$228for_iter.1)
DEBUG:numba.core.ssa:on stmt: $228for_iter.3 = pair_second(value=$228for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi230.1 = $228for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $228for_iter.3, 230, 296
DEBUG:numba.core.ssa:==== SSA block analysis pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175EC910>
DEBUG:numba.core.ssa:on stmt: i = $phi230.1
DEBUG:numba.core.ssa:on stmt: $232load_global.2 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>)
DEBUG:numba.core.ssa:on stmt: $248load_global.6 = global(_get_code_point: <function _get_code_point at 0x0000019A157263E0>)
DEBUG:numba.core.ssa:on stmt: $268call.10 = call $248load_global.6(a, i, func=$248load_global.6, args=[Var(a, unicode.py:1885), Var(i, unicode.py:1890)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $282call.11 = call $232load_global.2(result, i, $268call.10, func=$232load_global.2, args=[Var(result, unicode.py:1889), Var(i, unicode.py:1890), Var($268call.10, unicode.py:1891)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 228
DEBUG:numba.core.ssa:==== SSA block analysis pass on 296
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175EC910>
DEBUG:numba.core.ssa:on stmt: $296load_global.0 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $308load_global.2 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $326call.5 = call $308load_global.2(b, func=$308load_global.2, args=[Var(b, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $340call.6 = call $296load_global.0($326call.5, func=$296load_global.0, args=[Var($326call.5, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $350get_iter.7 = getiter(value=$340call.6)
DEBUG:numba.core.ssa:on stmt: $phi352.0 = $350get_iter.7
DEBUG:numba.core.ssa:on stmt: jump 352
DEBUG:numba.core.ssa:==== SSA block analysis pass on 352
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175EC910>
DEBUG:numba.core.ssa:on stmt: $352for_iter.1 = iternext(value=$phi352.0)
DEBUG:numba.core.ssa:on stmt: $352for_iter.2 = pair_first(value=$352for_iter.1)
DEBUG:numba.core.ssa:on stmt: $352for_iter.3 = pair_second(value=$352for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi354.1 = $352for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $352for_iter.3, 354, 452
DEBUG:numba.core.ssa:==== SSA block analysis pass on 354
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175EC910>
DEBUG:numba.core.ssa:on stmt: j = $phi354.1
DEBUG:numba.core.ssa:on stmt: $356load_global.2 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>)
DEBUG:numba.core.ssa:on stmt: $370load_global.5 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $388call.8 = call $370load_global.5(a, func=$370load_global.5, args=[Var(a, unicode.py:1885)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_add400.10 = $388call.8 + j
DEBUG:numba.core.ssa:on stmt: $404load_global.11 = global(_get_code_point: <function _get_code_point at 0x0000019A157263E0>)
DEBUG:numba.core.ssa:on stmt: $424call.15 = call $404load_global.11(b, j, func=$404load_global.11, args=[Var(b, unicode.py:1885), Var(j, unicode.py:1892)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $438call.16 = call $356load_global.2(result, $binop_add400.10, $424call.15, func=$356load_global.2, args=[Var(result, unicode.py:1889), Var($binop_add400.10, unicode.py:1893), Var($424call.15, unicode.py:1893)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 352
DEBUG:numba.core.ssa:==== SSA block analysis pass on 452
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175EC910>
DEBUG:numba.core.ssa:on stmt: $454return_value.1 = cast(value=result)
DEBUG:numba.core.ssa:on stmt: return $454return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100load_attr.15': [(<numba.core.ir.Assign object at 0x0000019A175CF810>,
                                   0)],
             '$112load_attr.17': [(<numba.core.ir.Assign object at 0x0000019A175CF550>,
                                   0)],
             '$138load_global.19': [(<numba.core.ir.Assign object at 0x0000019A175CEE10>,
                                     0)],
             '$172load_global.25': [(<numba.core.ir.Assign object at 0x0000019A175CD0D0>,
                                     0)],
             '$184load_global.27': [(<numba.core.ir.Assign object at 0x0000019A175CD610>,
                                     0)],
             '$18load_attr.3': [(<numba.core.ir.Assign object at 0x0000019A175EF090>,
                                 0)],
             '$202call.30': [(<numba.core.ir.Assign object at 0x0000019A175CE410>,
                              0)],
             '$216call.31': [(<numba.core.ir.Assign object at 0x0000019A175CDB50>,
                              0)],
             '$226get_iter.32': [(<numba.core.ir.Assign object at 0x0000019A175CD2D0>,
                                  0)],
             '$228for_iter.1': [(<numba.core.ir.Assign object at 0x0000019A175CDED0>,
                                 228)],
             '$228for_iter.2': [(<numba.core.ir.Assign object at 0x0000019A175CCFD0>,
                                 228)],
             '$228for_iter.3': [(<numba.core.ir.Assign object at 0x0000019A175CCDD0>,
                                 228)],
             '$232load_global.2': [(<numba.core.ir.Assign object at 0x0000019A175CCC10>,
                                    230)],
             '$248load_global.6': [(<numba.core.ir.Assign object at 0x0000019A175CC2D0>,
                                    230)],
             '$268call.10': [(<numba.core.ir.Assign object at 0x0000019A175BD010>,
                              230)],
             '$282call.11': [(<numba.core.ir.Assign object at 0x0000019A175BD450>,
                              230)],
             '$296load_global.0': [(<numba.core.ir.Assign object at 0x0000019A175BD250>,
                                    296)],
             '$308load_global.2': [(<numba.core.ir.Assign object at 0x0000019A175BD190>,
                                    296)],
             '$326call.5': [(<numba.core.ir.Assign object at 0x0000019A175BFD10>,
                             296)],
             '$340call.6': [(<numba.core.ir.Assign object at 0x0000019A175BFCD0>,
                             296)],
             '$34load_global.5': [(<numba.core.ir.Assign object at 0x0000019A175EE810>,
                                   0)],
             '$350get_iter.7': [(<numba.core.ir.Assign object at 0x0000019A175BFB50>,
                                 296)],
             '$352for_iter.1': [(<numba.core.ir.Assign object at 0x0000019A175BEE10>,
                                 352)],
             '$352for_iter.2': [(<numba.core.ir.Assign object at 0x0000019A175BF550>,
                                 352)],
             '$352for_iter.3': [(<numba.core.ir.Assign object at 0x0000019A175BF310>,
                                 352)],
             '$356load_global.2': [(<numba.core.ir.Assign object at 0x0000019A175BEE50>,
                                    354)],
             '$370load_global.5': [(<numba.core.ir.Assign object at 0x0000019A175BD710>,
                                    354)],
             '$388call.8': [(<numba.core.ir.Assign object at 0x0000019A175BD410>,
                             354)],
             '$404load_global.11': [(<numba.core.ir.Assign object at 0x0000019A175BC4D0>,
                                     354)],
             '$424call.15': [(<numba.core.ir.Assign object at 0x0000019A175BE650>,
                              354)],
             '$438call.16': [(<numba.core.ir.Assign object at 0x0000019A175BE7D0>,
                              354)],
             '$454return_value.1': [(<numba.core.ir.Assign object at 0x0000019A175BDC10>,
                                     452)],
             '$48load_attr.8': [(<numba.core.ir.Assign object at 0x0000019A175ECB50>,
                                 0)],
             '$60load_attr.10': [(<numba.core.ir.Assign object at 0x0000019A175CC690>,
                                  0)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x0000019A175ECED0>,
                                0)],
             '$86load_global.12': [(<numba.core.ir.Assign object at 0x0000019A175CFE90>,
                                    0)],
             '$binop_add400.10': [(<numba.core.ir.Assign object at 0x0000019A175BD6D0>,
                                   354)],
             '$phi228.0': [(<numba.core.ir.Assign object at 0x0000019A175EF390>,
                            0)],
             '$phi230.1': [(<numba.core.ir.Assign object at 0x0000019A175CDA90>,
                            228)],
             '$phi352.0': [(<numba.core.ir.Assign object at 0x0000019A175BDA50>,
                            296)],
             '$phi354.1': [(<numba.core.ir.Assign object at 0x0000019A175BF210>,
                            352)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A175E7F90>, 0)],
             'b': [(<numba.core.ir.Assign object at 0x0000019A175E6D50>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x0000019A175CCD90>, 230)],
             'j': [(<numba.core.ir.Assign object at 0x0000019A175BEF10>, 354)],
             'new_ascii': [(<numba.core.ir.Assign object at 0x0000019A175CF2D0>,
                            0)],
             'new_kind': [(<numba.core.ir.Assign object at 0x0000019A175CD910>,
                           0)],
             'new_length': [(<numba.core.ir.Assign object at 0x0000019A175EE790>,
                             0)],
             'result': [(<numba.core.ir.Assign object at 0x0000019A175CE290>,
                         0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A175EC910>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=371)
           2	RESUME(arg=0, lineno=371)
           4	LOAD_FAST(arg=0, lineno=373)
           6	LOAD_GLOBAL(arg=0, lineno=373)
          18	COMPARE_OP(arg=2, lineno=373)
          24	POP_JUMP_FORWARD_IF_TRUE(arg=11, lineno=373)
          26	LOAD_FAST(arg=1, lineno=373)
          28	LOAD_GLOBAL(arg=0, lineno=373)
          40	COMPARE_OP(arg=2, lineno=373)
          46	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=373)
>         48	LOAD_GLOBAL(arg=3, lineno=374)
          60	LOAD_CONST(arg=1, lineno=374)
          62	PRECALL(arg=1, lineno=374)
          66	CALL(arg=1, lineno=374)
          76	RAISE_VARARGS(arg=1, lineno=374)
>         78	LOAD_FAST(arg=0, lineno=376)
          80	LOAD_GLOBAL(arg=4, lineno=376)
          92	COMPARE_OP(arg=2, lineno=376)
          98	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=376)
         100	LOAD_FAST(arg=1, lineno=377)
         102	RETURN_VALUE(arg=None, lineno=377)
>        104	LOAD_FAST(arg=0, lineno=378)
         106	LOAD_GLOBAL(arg=6, lineno=378)
         118	COMPARE_OP(arg=2, lineno=378)
         124	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=378)
         126	LOAD_FAST(arg=1, lineno=379)
         128	LOAD_GLOBAL(arg=8, lineno=379)
         140	COMPARE_OP(arg=2, lineno=379)
         146	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=379)
         148	LOAD_FAST(arg=1, lineno=380)
         150	RETURN_VALUE(arg=None, lineno=380)
>        152	LOAD_FAST(arg=0, lineno=382)
         154	RETURN_VALUE(arg=None, lineno=382)
>        156	LOAD_FAST(arg=0, lineno=383)
         158	LOAD_GLOBAL(arg=8, lineno=383)
         170	COMPARE_OP(arg=2, lineno=383)
         176	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=383)
         178	LOAD_FAST(arg=0, lineno=384)
         180	RETURN_VALUE(arg=None, lineno=384)
>        182	LOAD_GLOBAL(arg=3, lineno=386)
         194	LOAD_CONST(arg=2, lineno=387)
         196	PRECALL(arg=1, lineno=386)
         200	CALL(arg=1, lineno=386)
         210	RAISE_VARARGS(arg=1, lineno=386)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=371)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=371)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=373)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=373)
DEBUG:numba.core.byteflow:stack ['$kind14.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=COMPARE_OP(arg=2, lineno=373)
DEBUG:numba.core.byteflow:stack ['$kind14.0', '$6load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=POP_JUMP_FORWARD_IF_TRUE(arg=11, lineno=373)
DEBUG:numba.core.byteflow:stack ['$18compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=26 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=1, lineno=373)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_GLOBAL(arg=0, lineno=373)
DEBUG:numba.core.byteflow:stack ['$kind226.0']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=2, lineno=373)
DEBUG:numba.core.byteflow:stack ['$kind226.0', '$28load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=373)
DEBUG:numba.core.byteflow:stack ['$40compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=48 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_GLOBAL(arg=3, lineno=374)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=374)
DEBUG:numba.core.byteflow:stack ['$null$48.1', '$48load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=PRECALL(arg=1, lineno=374)
DEBUG:numba.core.byteflow:stack ['$null$48.1', '$48load_global.0', '$const60.2.1']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=CALL(arg=1, lineno=374)
DEBUG:numba.core.byteflow:stack ['$null$48.1', '$48load_global.0', '$const60.2.1']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=RAISE_VARARGS(arg=1, lineno=374)
DEBUG:numba.core.byteflow:stack ['$66call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=78 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=78 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=0, lineno=376)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_GLOBAL(arg=4, lineno=376)
DEBUG:numba.core.byteflow:stack ['$kind178.0']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=COMPARE_OP(arg=2, lineno=376)
DEBUG:numba.core.byteflow:stack ['$kind178.0', '$80load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=376)
DEBUG:numba.core.byteflow:stack ['$92compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=100, stack=(), blockstack=(), npush=0), Edge(pc=104, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=100 nstack_initial=0), State(pc_initial=104 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=100 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_FAST(arg=1, lineno=377)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=102, inst=RETURN_VALUE(arg=None, lineno=377)
DEBUG:numba.core.byteflow:stack ['$kind2100.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=104 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=378)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_GLOBAL(arg=6, lineno=378)
DEBUG:numba.core.byteflow:stack ['$kind1104.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=COMPARE_OP(arg=2, lineno=378)
DEBUG:numba.core.byteflow:stack ['$kind1104.0', '$106load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=378)
DEBUG:numba.core.byteflow:stack ['$118compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=126, stack=(), blockstack=(), npush=0), Edge(pc=156, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=126 nstack_initial=0), State(pc_initial=156 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=126 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_FAST(arg=1, lineno=379)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_GLOBAL(arg=8, lineno=379)
DEBUG:numba.core.byteflow:stack ['$kind2126.0']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=COMPARE_OP(arg=2, lineno=379)
DEBUG:numba.core.byteflow:stack ['$kind2126.0', '$128load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=379)
DEBUG:numba.core.byteflow:stack ['$140compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=148, stack=(), blockstack=(), npush=0), Edge(pc=152, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=156 nstack_initial=0), State(pc_initial=148 nstack_initial=0), State(pc_initial=152 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=156 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_FAST(arg=0, lineno=383)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_GLOBAL(arg=8, lineno=383)
DEBUG:numba.core.byteflow:stack ['$kind1156.0']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=COMPARE_OP(arg=2, lineno=383)
DEBUG:numba.core.byteflow:stack ['$kind1156.0', '$158load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=383)
DEBUG:numba.core.byteflow:stack ['$170compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=178, stack=(), blockstack=(), npush=0), Edge(pc=182, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=148 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=182 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=148 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_FAST(arg=1, lineno=380)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=150, inst=RETURN_VALUE(arg=None, lineno=380)
DEBUG:numba.core.byteflow:stack ['$kind2148.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=152 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=182 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=152 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_FAST(arg=0, lineno=382)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=154, inst=RETURN_VALUE(arg=None, lineno=382)
DEBUG:numba.core.byteflow:stack ['$kind1152.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=182 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=178 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=178, inst=LOAD_FAST(arg=0, lineno=384)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=180, inst=RETURN_VALUE(arg=None, lineno=384)
DEBUG:numba.core.byteflow:stack ['$kind1178.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=182 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=182 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=182, inst=LOAD_GLOBAL(arg=3, lineno=386)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_CONST(arg=2, lineno=387)
DEBUG:numba.core.byteflow:stack ['$null$182.1', '$182load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=PRECALL(arg=1, lineno=386)
DEBUG:numba.core.byteflow:stack ['$null$182.1', '$182load_global.0', '$const194.2.2']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=CALL(arg=1, lineno=386)
DEBUG:numba.core.byteflow:stack ['$null$182.1', '$182load_global.0', '$const194.2.2']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=RAISE_VARARGS(arg=1, lineno=386)
DEBUG:numba.core.byteflow:stack ['$200call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=100 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=0): set(),
             State(pc_initial=126 nstack_initial=0): set(),
             State(pc_initial=148 nstack_initial=0): set(),
             State(pc_initial=152 nstack_initial=0): set(),
             State(pc_initial=156 nstack_initial=0): set(),
             State(pc_initial=178 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$kind14.0'}), (6, {'idx': 0, 'res': '$6load_global.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'lhs': '$kind14.0', 'rhs': '$6load_global.1', 'res': '$18compare_op.2'}), (20, {}), (22, {}), (24, {'pred': '$18compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 48: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$kind226.0'}), (28, {'idx': 0, 'res': '$28load_global.1'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'lhs': '$kind226.0', 'rhs': '$28load_global.1', 'res': '$40compare_op.2'}), (42, {}), (44, {}), (46, {'pred': '$40compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 78: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'idx': 1, 'res': '$48load_global.0'}), (50, {}), (52, {}), (54, {}), (56, {}), (58, {}), (60, {'res': '$const60.2.1'}), (62, {}), (64, {}), (66, {'func': '$48load_global.0', 'args': ['$const60.2.1'], 'kw_names': None, 'res': '$66call.3'}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {'exc': '$66call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$kind178.0'}), (80, {'idx': 2, 'res': '$80load_global.1'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'lhs': '$kind178.0', 'rhs': '$80load_global.1', 'res': '$92compare_op.2'}), (94, {}), (96, {}), (98, {'pred': '$92compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={100: (), 104: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=100 nstack_initial=0):
AdaptBlockInfo(insts=((100, {'res': '$kind2100.0'}), (102, {'retval': '$kind2100.0', 'castval': '$102return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$kind1104.0'}), (106, {'idx': 3, 'res': '$106load_global.1'}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'lhs': '$kind1104.0', 'rhs': '$106load_global.1', 'res': '$118compare_op.2'}), (120, {}), (122, {}), (124, {'pred': '$118compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={126: (), 156: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=126 nstack_initial=0):
AdaptBlockInfo(insts=((126, {'res': '$kind2126.0'}), (128, {'idx': 4, 'res': '$128load_global.1'}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'lhs': '$kind2126.0', 'rhs': '$128load_global.1', 'res': '$140compare_op.2'}), (142, {}), (144, {}), (146, {'pred': '$140compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={148: (), 152: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=148 nstack_initial=0):
AdaptBlockInfo(insts=((148, {'res': '$kind2148.0'}), (150, {'retval': '$kind2148.0', 'castval': '$150return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=152 nstack_initial=0):
AdaptBlockInfo(insts=((152, {'res': '$kind1152.0'}), (154, {'retval': '$kind1152.0', 'castval': '$154return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=156 nstack_initial=0):
AdaptBlockInfo(insts=((156, {'res': '$kind1156.0'}), (158, {'idx': 4, 'res': '$158load_global.1'}), (160, {}), (162, {}), (164, {}), (166, {}), (168, {}), (170, {'lhs': '$kind1156.0', 'rhs': '$158load_global.1', 'res': '$170compare_op.2'}), (172, {}), (174, {}), (176, {'pred': '$170compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: (), 182: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=178 nstack_initial=0):
AdaptBlockInfo(insts=((178, {'res': '$kind1178.0'}), (180, {'retval': '$kind1178.0', 'castval': '$180return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'idx': 1, 'res': '$182load_global.0'}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {}), (194, {'res': '$const194.2.2'}), (196, {}), (198, {}), (200, {'func': '$182load_global.0', 'args': ['$const194.2.2'], 'kw_names': None, 'res': '$200call.3'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'exc': '$200call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    kind1 = arg(0, name=kind1)               ['kind1']
    kind2 = arg(1, name=kind2)               ['kind2']
    $6load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$6load_global.1']
    $18compare_op.2 = kind1 == $6load_global.1 ['$18compare_op.2', '$6load_global.1', 'kind1']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($18compare_op.2, func=bool24, args=(Var($18compare_op.2, unicode.py:373),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$24pred', 'bool24']
    branch $24pred, 48, 26                   ['$24pred']
label 26:
    $28load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$28load_global.1']
    $40compare_op.2 = kind2 == $28load_global.1 ['$28load_global.1', '$40compare_op.2', 'kind2']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, unicode.py:373),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.2', '$46pred', 'bool46']
    branch $46pred, 48, 78                   ['$46pred']
label 48:
    $48load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$48load_global.0']
    $const60.2.1 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const60.2.1']
    $66call.3 = call $48load_global.0($const60.2.1, func=$48load_global.0, args=[Var($const60.2.1, unicode.py:374)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.0', '$66call.3', '$const60.2.1']
    raise $66call.3                          ['$66call.3']
label 78:
    $80load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$80load_global.1']
    $92compare_op.2 = kind1 == $80load_global.1 ['$80load_global.1', '$92compare_op.2', 'kind1']
    bool98 = global(bool: <class 'bool'>)    ['bool98']
    $98pred = call bool98($92compare_op.2, func=bool98, args=(Var($92compare_op.2, unicode.py:376),), kws=(), vararg=None, varkwarg=None, target=None) ['$92compare_op.2', '$98pred', 'bool98']
    branch $98pred, 100, 104                 ['$98pred']
label 100:
    $102return_value.1 = cast(value=kind2)   ['$102return_value.1', 'kind2']
    return $102return_value.1                ['$102return_value.1']
label 104:
    $106load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$106load_global.1']
    $118compare_op.2 = kind1 == $106load_global.1 ['$106load_global.1', '$118compare_op.2', 'kind1']
    bool124 = global(bool: <class 'bool'>)   ['bool124']
    $124pred = call bool124($118compare_op.2, func=bool124, args=(Var($118compare_op.2, unicode.py:378),), kws=(), vararg=None, varkwarg=None, target=None) ['$118compare_op.2', '$124pred', 'bool124']
    branch $124pred, 126, 156                ['$124pred']
label 126:
    $128load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$128load_global.1']
    $140compare_op.2 = kind2 == $128load_global.1 ['$128load_global.1', '$140compare_op.2', 'kind2']
    bool146 = global(bool: <class 'bool'>)   ['bool146']
    $146pred = call bool146($140compare_op.2, func=bool146, args=(Var($140compare_op.2, unicode.py:379),), kws=(), vararg=None, varkwarg=None, target=None) ['$140compare_op.2', '$146pred', 'bool146']
    branch $146pred, 148, 152                ['$146pred']
label 148:
    $150return_value.1 = cast(value=kind2)   ['$150return_value.1', 'kind2']
    return $150return_value.1                ['$150return_value.1']
label 152:
    $154return_value.1 = cast(value=kind1)   ['$154return_value.1', 'kind1']
    return $154return_value.1                ['$154return_value.1']
label 156:
    $158load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$158load_global.1']
    $170compare_op.2 = kind1 == $158load_global.1 ['$158load_global.1', '$170compare_op.2', 'kind1']
    bool176 = global(bool: <class 'bool'>)   ['bool176']
    $176pred = call bool176($170compare_op.2, func=bool176, args=(Var($170compare_op.2, unicode.py:383),), kws=(), vararg=None, varkwarg=None, target=None) ['$170compare_op.2', '$176pred', 'bool176']
    branch $176pred, 178, 182                ['$176pred']
label 178:
    $180return_value.1 = cast(value=kind1)   ['$180return_value.1', 'kind1']
    return $180return_value.1                ['$180return_value.1']
label 182:
    $182load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$182load_global.0']
    $const194.2.2 = const(str, Unexpected unicode representation in _pick_kind) ['$const194.2.2']
    $200call.3 = call $182load_global.0($const194.2.2, func=$182load_global.0, args=[Var($const194.2.2, unicode.py:387)], kws=(), vararg=None, varkwarg=None, target=None) ['$182load_global.0', '$200call.3', '$const194.2.2']
    raise $200call.3                         ['$200call.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175EC210>
DEBUG:numba.core.ssa:on stmt: kind1 = arg(0, name=kind1)
DEBUG:numba.core.ssa:on stmt: kind2 = arg(1, name=kind2)
DEBUG:numba.core.ssa:on stmt: $6load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0)
DEBUG:numba.core.ssa:on stmt: $18compare_op.2 = kind1 == $6load_global.1
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($18compare_op.2, func=bool24, args=(Var($18compare_op.2, unicode.py:373),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 48, 26
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175EC210>
DEBUG:numba.core.ssa:on stmt: $28load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0)
DEBUG:numba.core.ssa:on stmt: $40compare_op.2 = kind2 == $28load_global.1
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, unicode.py:373),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 48, 78
DEBUG:numba.core.ssa:==== SSA block analysis pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175EC210>
DEBUG:numba.core.ssa:on stmt: $48load_global.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: $const60.2.1 = const(str, PY_UNICODE_WCHAR_KIND unsupported)
DEBUG:numba.core.ssa:on stmt: $66call.3 = call $48load_global.0($const60.2.1, func=$48load_global.0, args=[Var($const60.2.1, unicode.py:374)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>('PY_UNICODE_WCHAR_KIND unsupported')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175EC210>
DEBUG:numba.core.ssa:on stmt: $80load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1)
DEBUG:numba.core.ssa:on stmt: $92compare_op.2 = kind1 == $80load_global.1
DEBUG:numba.core.ssa:on stmt: bool98 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $98pred = call bool98($92compare_op.2, func=bool98, args=(Var($92compare_op.2, unicode.py:376),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $98pred, 100, 104
DEBUG:numba.core.ssa:==== SSA block analysis pass on 100
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175EC210>
DEBUG:numba.core.ssa:on stmt: $102return_value.1 = cast(value=kind2)
DEBUG:numba.core.ssa:on stmt: return $102return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175EC210>
DEBUG:numba.core.ssa:on stmt: $106load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2)
DEBUG:numba.core.ssa:on stmt: $118compare_op.2 = kind1 == $106load_global.1
DEBUG:numba.core.ssa:on stmt: bool124 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $124pred = call bool124($118compare_op.2, func=bool124, args=(Var($118compare_op.2, unicode.py:378),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $124pred, 126, 156
DEBUG:numba.core.ssa:==== SSA block analysis pass on 126
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175EC210>
DEBUG:numba.core.ssa:on stmt: $128load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4)
DEBUG:numba.core.ssa:on stmt: $140compare_op.2 = kind2 == $128load_global.1
DEBUG:numba.core.ssa:on stmt: bool146 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $146pred = call bool146($140compare_op.2, func=bool146, args=(Var($140compare_op.2, unicode.py:379),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $146pred, 148, 152
DEBUG:numba.core.ssa:==== SSA block analysis pass on 148
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175EC210>
DEBUG:numba.core.ssa:on stmt: $150return_value.1 = cast(value=kind2)
DEBUG:numba.core.ssa:on stmt: return $150return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 152
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175EC210>
DEBUG:numba.core.ssa:on stmt: $154return_value.1 = cast(value=kind1)
DEBUG:numba.core.ssa:on stmt: return $154return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 156
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175EC210>
DEBUG:numba.core.ssa:on stmt: $158load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4)
DEBUG:numba.core.ssa:on stmt: $170compare_op.2 = kind1 == $158load_global.1
DEBUG:numba.core.ssa:on stmt: bool176 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $176pred = call bool176($170compare_op.2, func=bool176, args=(Var($170compare_op.2, unicode.py:383),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $176pred, 178, 182
DEBUG:numba.core.ssa:==== SSA block analysis pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175EC210>
DEBUG:numba.core.ssa:on stmt: $180return_value.1 = cast(value=kind1)
DEBUG:numba.core.ssa:on stmt: return $180return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175EC210>
DEBUG:numba.core.ssa:on stmt: $182load_global.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: $const194.2.2 = const(str, Unexpected unicode representation in _pick_kind)
DEBUG:numba.core.ssa:on stmt: $200call.3 = call $182load_global.0($const194.2.2, func=$182load_global.0, args=[Var($const194.2.2, unicode.py:387)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>('Unexpected unicode representation in _pick_kind')
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102return_value.1': [(<numba.core.ir.Assign object at 0x0000019A175AE050>,
                                     100)],
             '$106load_global.1': [(<numba.core.ir.Assign object at 0x0000019A175AC610>,
                                    104)],
             '$118compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A175ACD50>,
                                   104)],
             '$124pred': [(<numba.core.ir.Assign object at 0x0000019A162E4290>,
                           104)],
             '$128load_global.1': [(<numba.core.ir.Assign object at 0x0000019A162E5650>,
                                    126)],
             '$140compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A162E6390>,
                                   126)],
             '$146pred': [(<numba.core.ir.Assign object at 0x0000019A175A7B10>,
                           126)],
             '$150return_value.1': [(<numba.core.ir.Assign object at 0x0000019A175A72D0>,
                                     148)],
             '$154return_value.1': [(<numba.core.ir.Assign object at 0x0000019A175A7350>,
                                     152)],
             '$158load_global.1': [(<numba.core.ir.Assign object at 0x0000019A175A77D0>,
                                    156)],
             '$170compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A175A6250>,
                                   156)],
             '$176pred': [(<numba.core.ir.Assign object at 0x0000019A175A7FD0>,
                           156)],
             '$180return_value.1': [(<numba.core.ir.Assign object at 0x0000019A175A58D0>,
                                     178)],
             '$182load_global.0': [(<numba.core.ir.Assign object at 0x0000019A175A69D0>,
                                    182)],
             '$18compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A175AED90>,
                                  0)],
             '$200call.3': [(<numba.core.ir.Assign object at 0x0000019A175A7ED0>,
                             182)],
             '$24pred': [(<numba.core.ir.Assign object at 0x0000019A175AF5D0>,
                          0)],
             '$28load_global.1': [(<numba.core.ir.Assign object at 0x0000019A175ADAD0>,
                                   26)],
             '$40compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A175AFDD0>,
                                  26)],
             '$46pred': [(<numba.core.ir.Assign object at 0x0000019A175AF090>,
                          26)],
             '$48load_global.0': [(<numba.core.ir.Assign object at 0x0000019A175AE8D0>,
                                   48)],
             '$66call.3': [(<numba.core.ir.Assign object at 0x0000019A175AF550>,
                            48)],
             '$6load_global.1': [(<numba.core.ir.Assign object at 0x0000019A175AE950>,
                                  0)],
             '$80load_global.1': [(<numba.core.ir.Assign object at 0x0000019A175AD410>,
                                   78)],
             '$92compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A175AD4D0>,
                                  78)],
             '$98pred': [(<numba.core.ir.Assign object at 0x0000019A175AC1D0>,
                          78)],
             '$const194.2.2': [(<numba.core.ir.Assign object at 0x0000019A175A7090>,
                                182)],
             '$const60.2.1': [(<numba.core.ir.Assign object at 0x0000019A175AEF10>,
                               48)],
             'bool124': [(<numba.core.ir.Assign object at 0x0000019A162E4850>,
                          104)],
             'bool146': [(<numba.core.ir.Assign object at 0x0000019A162E5210>,
                          126)],
             'bool176': [(<numba.core.ir.Assign object at 0x0000019A175A6B50>,
                          156)],
             'bool24': [(<numba.core.ir.Assign object at 0x0000019A175AE750>,
                         0)],
             'bool46': [(<numba.core.ir.Assign object at 0x0000019A175ACB50>,
                         26)],
             'bool98': [(<numba.core.ir.Assign object at 0x0000019A175AFD50>,
                         78)],
             'kind1': [(<numba.core.ir.Assign object at 0x0000019A175B4ED0>,
                        0)],
             'kind2': [(<numba.core.ir.Assign object at 0x0000019A175CFDD0>,
                        0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A175EC210>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=392)
           2	RESUME(arg=0, lineno=392)
           4	LOAD_FAST(arg=0, lineno=394)
           6	LOAD_CONST(arg=1, lineno=394)
           8	COMPARE_OP(arg=2, lineno=394)
          14	POP_JUMP_FORWARD_IF_FALSE(arg=26, lineno=394)
          16	LOAD_FAST(arg=1, lineno=394)
          18	LOAD_CONST(arg=1, lineno=394)
          20	COMPARE_OP(arg=2, lineno=394)
          26	POP_JUMP_FORWARD_IF_FALSE(arg=20, lineno=394)
          28	LOAD_GLOBAL(arg=1, lineno=395)
          40	LOAD_ATTR(arg=1, lineno=395)
          50	LOAD_CONST(arg=1, lineno=395)
          52	PRECALL(arg=1, lineno=395)
          56	CALL(arg=1, lineno=395)
          66	RETURN_VALUE(arg=None, lineno=395)
>         68	LOAD_GLOBAL(arg=1, lineno=396)
          80	LOAD_ATTR(arg=1, lineno=396)
          90	LOAD_CONST(arg=2, lineno=396)
          92	PRECALL(arg=1, lineno=396)
          96	CALL(arg=1, lineno=396)
         106	RETURN_VALUE(arg=None, lineno=396)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=392)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=392)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=394)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=394)
DEBUG:numba.core.byteflow:stack ['$is_ascii14.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=COMPARE_OP(arg=2, lineno=394)
DEBUG:numba.core.byteflow:stack ['$is_ascii14.0', '$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=POP_JUMP_FORWARD_IF_FALSE(arg=26, lineno=394)
DEBUG:numba.core.byteflow:stack ['$8compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=16, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=16 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=16 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=394)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=394)
DEBUG:numba.core.byteflow:stack ['$is_ascii216.0']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=394)
DEBUG:numba.core.byteflow:stack ['$is_ascii216.0', '$const18.1.1']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=POP_JUMP_FORWARD_IF_FALSE(arg=20, lineno=394)
DEBUG:numba.core.byteflow:stack ['$20compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=28 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=68 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=396)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_ATTR(arg=1, lineno=396)
DEBUG:numba.core.byteflow:stack ['$null$68.1', '$68load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=LOAD_CONST(arg=2, lineno=396)
DEBUG:numba.core.byteflow:stack ['$null$68.1', '$80load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=PRECALL(arg=1, lineno=396)
DEBUG:numba.core.byteflow:stack ['$null$68.1', '$80load_attr.2', '$const90.3.2']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=CALL(arg=1, lineno=396)
DEBUG:numba.core.byteflow:stack ['$null$68.1', '$80load_attr.2', '$const90.3.2']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=RETURN_VALUE(arg=None, lineno=396)
DEBUG:numba.core.byteflow:stack ['$96call.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=28 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_GLOBAL(arg=1, lineno=395)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_ATTR(arg=1, lineno=395)
DEBUG:numba.core.byteflow:stack ['$null$28.1', '$28load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_CONST(arg=1, lineno=395)
DEBUG:numba.core.byteflow:stack ['$null$28.1', '$40load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=PRECALL(arg=1, lineno=395)
DEBUG:numba.core.byteflow:stack ['$null$28.1', '$40load_attr.2', '$const50.3.1']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=CALL(arg=1, lineno=395)
DEBUG:numba.core.byteflow:stack ['$null$28.1', '$40load_attr.2', '$const50.3.1']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=395)
DEBUG:numba.core.byteflow:stack ['$56call.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=68 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$is_ascii14.0'}), (6, {'res': '$const6.1.1'}), (8, {'lhs': '$is_ascii14.0', 'rhs': '$const6.1.1', 'res': '$8compare_op.2'}), (10, {}), (12, {}), (14, {'pred': '$8compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: (), 68: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=16 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$is_ascii216.0'}), (18, {'res': '$const18.1.1'}), (20, {'lhs': '$is_ascii216.0', 'rhs': '$const18.1.1', 'res': '$20compare_op.2'}), (22, {}), (24, {}), (26, {'pred': '$20compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 68: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'idx': 0, 'res': '$28load_global.0'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'item': '$28load_global.0', 'res': '$40load_attr.2'}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {'res': '$const50.3.1'}), (52, {}), (54, {}), (56, {'func': '$40load_attr.2', 'args': ['$const50.3.1'], 'kw_names': None, 'res': '$56call.4'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'retval': '$56call.4', 'castval': '$66return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'idx': 0, 'res': '$68load_global.0'}), (70, {}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'item': '$68load_global.0', 'res': '$80load_attr.2'}), (82, {}), (84, {}), (86, {}), (88, {}), (90, {'res': '$const90.3.2'}), (92, {}), (94, {}), (96, {'func': '$80load_attr.2', 'args': ['$const90.3.2'], 'kw_names': None, 'res': '$96call.4'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'retval': '$96call.4', 'castval': '$106return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    is_ascii1 = arg(0, name=is_ascii1)       ['is_ascii1']
    is_ascii2 = arg(1, name=is_ascii2)       ['is_ascii2']
    $const6.1.1 = const(int, 1)              ['$const6.1.1']
    $8compare_op.2 = is_ascii1 == $const6.1.1 ['$8compare_op.2', '$const6.1.1', 'is_ascii1']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($8compare_op.2, func=bool14, args=(Var($8compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None) ['$14pred', '$8compare_op.2', 'bool14']
    branch $14pred, 16, 68                   ['$14pred']
label 16:
    $const18.1.1 = const(int, 1)             ['$const18.1.1']
    $20compare_op.2 = is_ascii2 == $const18.1.1 ['$20compare_op.2', '$const18.1.1', 'is_ascii2']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($20compare_op.2, func=bool26, args=(Var($20compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.2', '$26pred', 'bool26']
    branch $26pred, 28, 68                   ['$26pred']
label 28:
    $28load_global.0 = global(types: <module 'numba.core.types' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numba\\core\\types\\__init__.py'>) ['$28load_global.0']
    $40load_attr.2 = getattr(value=$28load_global.0, attr=uint32) ['$28load_global.0', '$40load_attr.2']
    $const50.3.1 = const(int, 1)             ['$const50.3.1']
    $56call.4 = call $40load_attr.2($const50.3.1, func=$40load_attr.2, args=[Var($const50.3.1, unicode.py:395)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_attr.2', '$56call.4', '$const50.3.1']
    $66return_value.5 = cast(value=$56call.4) ['$56call.4', '$66return_value.5']
    return $66return_value.5                 ['$66return_value.5']
label 68:
    $68load_global.0 = global(types: <module 'numba.core.types' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numba\\core\\types\\__init__.py'>) ['$68load_global.0']
    $80load_attr.2 = getattr(value=$68load_global.0, attr=uint32) ['$68load_global.0', '$80load_attr.2']
    $const90.3.2 = const(int, 0)             ['$const90.3.2']
    $96call.4 = call $80load_attr.2($const90.3.2, func=$80load_attr.2, args=[Var($const90.3.2, unicode.py:396)], kws=(), vararg=None, varkwarg=None, target=None) ['$80load_attr.2', '$96call.4', '$const90.3.2']
    $106return_value.5 = cast(value=$96call.4) ['$106return_value.5', '$96call.4']
    return $106return_value.5                ['$106return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1759DC90>
DEBUG:numba.core.ssa:on stmt: is_ascii1 = arg(0, name=is_ascii1)
DEBUG:numba.core.ssa:on stmt: is_ascii2 = arg(1, name=is_ascii2)
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $8compare_op.2 = is_ascii1 == $const6.1.1
DEBUG:numba.core.ssa:on stmt: bool14 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $14pred = call bool14($8compare_op.2, func=bool14, args=(Var($8compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $14pred, 16, 68
DEBUG:numba.core.ssa:==== SSA block analysis pass on 16
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1759DC90>
DEBUG:numba.core.ssa:on stmt: $const18.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $20compare_op.2 = is_ascii2 == $const18.1.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($20compare_op.2, func=bool26, args=(Var($20compare_op.2, unicode.py:394),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 68
DEBUG:numba.core.ssa:==== SSA block analysis pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1759DC90>
DEBUG:numba.core.ssa:on stmt: $28load_global.0 = global(types: <module 'numba.core.types' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numba\\core\\types\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $40load_attr.2 = getattr(value=$28load_global.0, attr=uint32)
DEBUG:numba.core.ssa:on stmt: $const50.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $56call.4 = call $40load_attr.2($const50.3.1, func=$40load_attr.2, args=[Var($const50.3.1, unicode.py:395)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $66return_value.5 = cast(value=$56call.4)
DEBUG:numba.core.ssa:on stmt: return $66return_value.5
DEBUG:numba.core.ssa:==== SSA block analysis pass on 68
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1759DC90>
DEBUG:numba.core.ssa:on stmt: $68load_global.0 = global(types: <module 'numba.core.types' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numba\\core\\types\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $80load_attr.2 = getattr(value=$68load_global.0, attr=uint32)
DEBUG:numba.core.ssa:on stmt: $const90.3.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $96call.4 = call $80load_attr.2($const90.3.2, func=$80load_attr.2, args=[Var($const90.3.2, unicode.py:396)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $106return_value.5 = cast(value=$96call.4)
DEBUG:numba.core.ssa:on stmt: return $106return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$106return_value.5': [(<numba.core.ir.Assign object at 0x0000019A1738A7D0>,
                                     68)],
             '$14pred': [(<numba.core.ir.Assign object at 0x0000019A17386090>,
                          0)],
             '$20compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A1738BE90>,
                                  16)],
             '$26pred': [(<numba.core.ir.Assign object at 0x0000019A173891D0>,
                          16)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x0000019A1738B0D0>,
                                   28)],
             '$40load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A17388E90>,
                                 28)],
             '$56call.4': [(<numba.core.ir.Assign object at 0x0000019A17388F90>,
                            28)],
             '$66return_value.5': [(<numba.core.ir.Assign object at 0x0000019A17389D10>,
                                    28)],
             '$68load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17389CD0>,
                                   68)],
             '$80load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A17388050>,
                                 68)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A17384090>,
                                 0)],
             '$96call.4': [(<numba.core.ir.Assign object at 0x0000019A17389B10>,
                            68)],
             '$const18.1.1': [(<numba.core.ir.Assign object at 0x0000019A17389FD0>,
                               16)],
             '$const50.3.1': [(<numba.core.ir.Assign object at 0x0000019A1738A590>,
                               28)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x0000019A17384710>,
                              0)],
             '$const90.3.2': [(<numba.core.ir.Assign object at 0x0000019A1738A290>,
                               68)],
             'bool14': [(<numba.core.ir.Assign object at 0x0000019A173846D0>,
                         0)],
             'bool26': [(<numba.core.ir.Assign object at 0x0000019A17389450>,
                         16)],
             'is_ascii1': [(<numba.core.ir.Assign object at 0x0000019A17385BD0>,
                            0)],
             'is_ascii2': [(<numba.core.ir.Assign object at 0x0000019A17385750>,
                            0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A1759DC90>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=281)
           2	RESUME(arg=0, lineno=281)
           4	LOAD_GLOBAL(arg=1, lineno=283)
          16	LOAD_FAST(arg=0, lineno=283)
          18	PRECALL(arg=1, lineno=283)
          22	CALL(arg=1, lineno=283)
          32	STORE_FAST(arg=3, lineno=283)
          34	LOAD_GLOBAL(arg=3, lineno=284)
          46	LOAD_FAST(arg=0, lineno=284)
          48	LOAD_FAST(arg=3, lineno=284)
          50	LOAD_FAST(arg=1, lineno=284)
          52	LOAD_FAST(arg=2, lineno=284)
          54	PRECALL(arg=4, lineno=284)
          58	CALL(arg=4, lineno=284)
          68	STORE_FAST(arg=4, lineno=284)
          70	LOAD_GLOBAL(arg=5, lineno=285)
          82	LOAD_FAST(arg=4, lineno=285)
          84	LOAD_FAST(arg=1, lineno=285)
          86	LOAD_GLOBAL(arg=7, lineno=285)
          98	LOAD_ATTR(arg=4, lineno=285)
         108	LOAD_CONST(arg=1, lineno=285)
         110	PRECALL(arg=1, lineno=285)
         114	CALL(arg=1, lineno=285)
         124	PRECALL(arg=3, lineno=285)
         128	CALL(arg=3, lineno=285)
         138	POP_TOP(arg=None, lineno=285)
         140	LOAD_FAST(arg=4, lineno=286)
         142	RETURN_VALUE(arg=None, lineno=286)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=281)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=281)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=283)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=283)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=PRECALL(arg=1, lineno=283)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$kind16.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL(arg=1, lineno=283)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$kind16.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=STORE_FAST(arg=3, lineno=283)
DEBUG:numba.core.byteflow:stack ['$22call.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_GLOBAL(arg=3, lineno=284)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=0, lineno=284)
DEBUG:numba.core.byteflow:stack ['$null$34.5', '$34load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=3, lineno=284)
DEBUG:numba.core.byteflow:stack ['$null$34.5', '$34load_global.4', '$kind46.6']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=1, lineno=284)
DEBUG:numba.core.byteflow:stack ['$null$34.5', '$34load_global.4', '$kind46.6', '$char_width48.7']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=2, lineno=284)
DEBUG:numba.core.byteflow:stack ['$null$34.5', '$34load_global.4', '$kind46.6', '$char_width48.7', '$length50.8']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=PRECALL(arg=4, lineno=284)
DEBUG:numba.core.byteflow:stack ['$null$34.5', '$34load_global.4', '$kind46.6', '$char_width48.7', '$length50.8', '$is_ascii52.9']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=CALL(arg=4, lineno=284)
DEBUG:numba.core.byteflow:stack ['$null$34.5', '$34load_global.4', '$kind46.6', '$char_width48.7', '$length50.8', '$is_ascii52.9']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=STORE_FAST(arg=4, lineno=284)
DEBUG:numba.core.byteflow:stack ['$58call.10']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_GLOBAL(arg=5, lineno=285)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_FAST(arg=4, lineno=285)
DEBUG:numba.core.byteflow:stack ['$null$70.12', '$70load_global.11']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_FAST(arg=1, lineno=285)
DEBUG:numba.core.byteflow:stack ['$null$70.12', '$70load_global.11', '$s82.13']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_GLOBAL(arg=7, lineno=285)
DEBUG:numba.core.byteflow:stack ['$null$70.12', '$70load_global.11', '$s82.13', '$length84.14']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_ATTR(arg=4, lineno=285)
DEBUG:numba.core.byteflow:stack ['$null$70.12', '$70load_global.11', '$s82.13', '$length84.14', '$null$86.16', '$86load_global.15']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=285)
DEBUG:numba.core.byteflow:stack ['$null$70.12', '$70load_global.11', '$s82.13', '$length84.14', '$null$86.16', '$98load_attr.17']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=PRECALL(arg=1, lineno=285)
DEBUG:numba.core.byteflow:stack ['$null$70.12', '$70load_global.11', '$s82.13', '$length84.14', '$null$86.16', '$98load_attr.17', '$const108.18.1']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=CALL(arg=1, lineno=285)
DEBUG:numba.core.byteflow:stack ['$null$70.12', '$70load_global.11', '$s82.13', '$length84.14', '$null$86.16', '$98load_attr.17', '$const108.18.1']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=PRECALL(arg=3, lineno=285)
DEBUG:numba.core.byteflow:stack ['$null$70.12', '$70load_global.11', '$s82.13', '$length84.14', '$114call.19']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=CALL(arg=3, lineno=285)
DEBUG:numba.core.byteflow:stack ['$null$70.12', '$70load_global.11', '$s82.13', '$length84.14', '$114call.19']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=POP_TOP(arg=None, lineno=285)
DEBUG:numba.core.byteflow:stack ['$128call.20']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=4, lineno=286)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=142, inst=RETURN_VALUE(arg=None, lineno=286)
DEBUG:numba.core.byteflow:stack ['$s140.21']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$kind16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$kind16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'value': '$22call.3'}), (34, {'idx': 1, 'res': '$34load_global.4'}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'res': '$kind46.6'}), (48, {'res': '$char_width48.7'}), (50, {'res': '$length50.8'}), (52, {'res': '$is_ascii52.9'}), (54, {}), (56, {}), (58, {'func': '$34load_global.4', 'args': ['$kind46.6', '$char_width48.7', '$length50.8', '$is_ascii52.9'], 'kw_names': None, 'res': '$58call.10'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'value': '$58call.10'}), (70, {'idx': 2, 'res': '$70load_global.11'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {'res': '$s82.13'}), (84, {'res': '$length84.14'}), (86, {'idx': 3, 'res': '$86load_global.15'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {'item': '$86load_global.15', 'res': '$98load_attr.17'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {'res': '$const108.18.1'}), (110, {}), (112, {}), (114, {'func': '$98load_attr.17', 'args': ['$const108.18.1'], 'kw_names': None, 'res': '$114call.19'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'func': '$70load_global.11', 'args': ['$s82.13', '$length84.14', '$114call.19'], 'kw_names': None, 'res': '$128call.20'}), (130, {}), (132, {}), (134, {}), (136, {}), (140, {'res': '$s140.21'}), (142, {'retval': '$s140.21', 'castval': '$142return_value.22'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    kind = arg(0, name=kind)                 ['kind']
    length = arg(1, name=length)             ['length']
    is_ascii = arg(2, name=is_ascii)         ['is_ascii']
    $4load_global.0 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x0000019A15726A20>) ['$4load_global.0']
    char_width = call $4load_global.0(kind, func=$4load_global.0, args=[Var(kind, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', 'char_width', 'kind']
    $34load_global.4 = global(_malloc_string: <intrinsic _malloc_string>) ['$34load_global.4']
    s = call $34load_global.4(kind, char_width, length, is_ascii, func=$34load_global.4, args=[Var(kind, unicode.py:281), Var(char_width, unicode.py:283), Var(length, unicode.py:281), Var(is_ascii, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.4', 'char_width', 'is_ascii', 'kind', 'length', 's']
    $70load_global.11 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>) ['$70load_global.11']
    $86load_global.15 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$86load_global.15']
    $98load_attr.17 = getattr(value=$86load_global.15, attr=uint32) ['$86load_global.15', '$98load_attr.17']
    $const108.18.1 = const(int, 0)           ['$const108.18.1']
    $114call.19 = call $98load_attr.17($const108.18.1, func=$98load_attr.17, args=[Var($const108.18.1, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.19', '$98load_attr.17', '$const108.18.1']
    $128call.20 = call $70load_global.11(s, length, $114call.19, func=$70load_global.11, args=[Var(s, unicode.py:284), Var(length, unicode.py:281), Var($114call.19, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.19', '$128call.20', '$70load_global.11', 'length', 's']
    $142return_value.22 = cast(value=s)      ['$142return_value.22', 's']
    return $142return_value.22               ['$142return_value.22']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A174A1950>
DEBUG:numba.core.ssa:on stmt: kind = arg(0, name=kind)
DEBUG:numba.core.ssa:on stmt: length = arg(1, name=length)
DEBUG:numba.core.ssa:on stmt: is_ascii = arg(2, name=is_ascii)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(_kind_to_byte_width: <function _kind_to_byte_width at 0x0000019A15726A20>)
DEBUG:numba.core.ssa:on stmt: char_width = call $4load_global.0(kind, func=$4load_global.0, args=[Var(kind, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34load_global.4 = global(_malloc_string: <intrinsic _malloc_string>)
DEBUG:numba.core.ssa:on stmt: s = call $34load_global.4(kind, char_width, length, is_ascii, func=$34load_global.4, args=[Var(kind, unicode.py:281), Var(char_width, unicode.py:283), Var(length, unicode.py:281), Var(is_ascii, unicode.py:281)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $70load_global.11 = global(_set_code_point: <function _set_code_point at 0x0000019A15726840>)
DEBUG:numba.core.ssa:on stmt: $86load_global.15 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $98load_attr.17 = getattr(value=$86load_global.15, attr=uint32)
DEBUG:numba.core.ssa:on stmt: $const108.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $114call.19 = call $98load_attr.17($const108.18.1, func=$98load_attr.17, args=[Var($const108.18.1, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $128call.20 = call $70load_global.11(s, length, $114call.19, func=$70load_global.11, args=[Var(s, unicode.py:284), Var(length, unicode.py:281), Var($114call.19, unicode.py:285)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $142return_value.22 = cast(value=s)
DEBUG:numba.core.ssa:on stmt: return $142return_value.22
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$114call.19': [(<numba.core.ir.Assign object at 0x0000019A17428710>,
                              0)],
             '$128call.20': [(<numba.core.ir.Assign object at 0x0000019A1742BE90>,
                              0)],
             '$142return_value.22': [(<numba.core.ir.Assign object at 0x0000019A17429390>,
                                      0)],
             '$34load_global.4': [(<numba.core.ir.Assign object at 0x0000019A175A7E50>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A174A0A90>,
                                  0)],
             '$70load_global.11': [(<numba.core.ir.Assign object at 0x0000019A175CC8D0>,
                                    0)],
             '$86load_global.15': [(<numba.core.ir.Assign object at 0x0000019A1738BC10>,
                                    0)],
             '$98load_attr.17': [(<numba.core.ir.Assign object at 0x0000019A173B4FD0>,
                                  0)],
             '$const108.18.1': [(<numba.core.ir.Assign object at 0x0000019A173B5F50>,
                                 0)],
             'char_width': [(<numba.core.ir.Assign object at 0x0000019A174A1C50>,
                             0)],
             'is_ascii': [(<numba.core.ir.Assign object at 0x0000019A174A1E50>,
                           0)],
             'kind': [(<numba.core.ir.Assign object at 0x0000019A174A2190>, 0)],
             'length': [(<numba.core.ir.Assign object at 0x0000019A174A0A10>,
                         0)],
             's': [(<numba.core.ir.Assign object at 0x0000019A1749EE10>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A174A1950>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=411)
           2	RESUME(arg=0, lineno=411)
           4	LOAD_FAST(arg=0, lineno=413)
           6	LOAD_GLOBAL(arg=0, lineno=413)
          18	COMPARE_OP(arg=2, lineno=413)
          24	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=413)
          26	LOAD_CONST(arg=1, lineno=414)
          28	RETURN_VALUE(arg=None, lineno=414)
>         30	LOAD_FAST(arg=0, lineno=415)
          32	LOAD_GLOBAL(arg=2, lineno=415)
          44	COMPARE_OP(arg=2, lineno=415)
          50	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=415)
          52	LOAD_CONST(arg=2, lineno=416)
          54	RETURN_VALUE(arg=None, lineno=416)
>         56	LOAD_FAST(arg=0, lineno=417)
          58	LOAD_GLOBAL(arg=4, lineno=417)
          70	COMPARE_OP(arg=2, lineno=417)
          76	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=417)
          78	LOAD_CONST(arg=3, lineno=418)
          80	RETURN_VALUE(arg=None, lineno=418)
>         82	LOAD_FAST(arg=0, lineno=419)
          84	LOAD_GLOBAL(arg=6, lineno=419)
          96	COMPARE_OP(arg=2, lineno=419)
         102	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=419)
         104	LOAD_GLOBAL(arg=9, lineno=420)
         116	LOAD_CONST(arg=4, lineno=420)
         118	PRECALL(arg=1, lineno=420)
         122	CALL(arg=1, lineno=420)
         132	RAISE_VARARGS(arg=1, lineno=420)
>        134	LOAD_GLOBAL(arg=9, lineno=422)
         146	LOAD_CONST(arg=5, lineno=422)
         148	PRECALL(arg=1, lineno=422)
         152	CALL(arg=1, lineno=422)
         162	RAISE_VARARGS(arg=1, lineno=422)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=411)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=411)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=413)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=413)
DEBUG:numba.core.byteflow:stack ['$kind4.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=COMPARE_OP(arg=2, lineno=413)
DEBUG:numba.core.byteflow:stack ['$kind4.0', '$6load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=413)
DEBUG:numba.core.byteflow:stack ['$18compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=30, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=30 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=26 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=414)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=28, inst=RETURN_VALUE(arg=None, lineno=414)
DEBUG:numba.core.byteflow:stack ['$const26.0.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=30 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=30 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=415)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_GLOBAL(arg=2, lineno=415)
DEBUG:numba.core.byteflow:stack ['$kind30.0']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=COMPARE_OP(arg=2, lineno=415)
DEBUG:numba.core.byteflow:stack ['$kind30.0', '$32load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=415)
DEBUG:numba.core.byteflow:stack ['$44compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=52 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=416)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=416)
DEBUG:numba.core.byteflow:stack ['$const52.0.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=56 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=0, lineno=417)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_GLOBAL(arg=4, lineno=417)
DEBUG:numba.core.byteflow:stack ['$kind56.0']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=COMPARE_OP(arg=2, lineno=417)
DEBUG:numba.core.byteflow:stack ['$kind56.0', '$58load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=417)
DEBUG:numba.core.byteflow:stack ['$70compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=82 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=78 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_CONST(arg=3, lineno=418)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=80, inst=RETURN_VALUE(arg=None, lineno=418)
DEBUG:numba.core.byteflow:stack ['$const78.0.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=82 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=82 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_FAST(arg=0, lineno=419)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_GLOBAL(arg=6, lineno=419)
DEBUG:numba.core.byteflow:stack ['$kind82.0']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=COMPARE_OP(arg=2, lineno=419)
DEBUG:numba.core.byteflow:stack ['$kind82.0', '$84load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=419)
DEBUG:numba.core.byteflow:stack ['$96compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=134, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=104 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_GLOBAL(arg=9, lineno=420)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_CONST(arg=4, lineno=420)
DEBUG:numba.core.byteflow:stack ['$null$104.1', '$104load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=PRECALL(arg=1, lineno=420)
DEBUG:numba.core.byteflow:stack ['$null$104.1', '$104load_global.0', '$const116.2.4']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=CALL(arg=1, lineno=420)
DEBUG:numba.core.byteflow:stack ['$null$104.1', '$104load_global.0', '$const116.2.4']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=RAISE_VARARGS(arg=1, lineno=420)
DEBUG:numba.core.byteflow:stack ['$122call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=134 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=134 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_GLOBAL(arg=9, lineno=422)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_CONST(arg=5, lineno=422)
DEBUG:numba.core.byteflow:stack ['$null$134.1', '$134load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=PRECALL(arg=1, lineno=422)
DEBUG:numba.core.byteflow:stack ['$null$134.1', '$134load_global.0', '$const146.2.5']
DEBUG:numba.core.byteflow:dispatch pc=152, inst=CALL(arg=1, lineno=422)
DEBUG:numba.core.byteflow:stack ['$null$134.1', '$134load_global.0', '$const146.2.5']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=RAISE_VARARGS(arg=1, lineno=422)
DEBUG:numba.core.byteflow:stack ['$152call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$kind4.0'}), (6, {'idx': 0, 'res': '$6load_global.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'lhs': '$kind4.0', 'rhs': '$6load_global.1', 'res': '$18compare_op.2'}), (20, {}), (22, {}), (24, {'pred': '$18compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 30: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0.1'}), (28, {'retval': '$const26.0.1', 'castval': '$28return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {'res': '$kind30.0'}), (32, {'idx': 1, 'res': '$32load_global.1'}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {'lhs': '$kind30.0', 'rhs': '$32load_global.1', 'res': '$44compare_op.2'}), (46, {}), (48, {}), (50, {'pred': '$44compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 56: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$const52.0.2'}), (54, {'retval': '$const52.0.2', 'castval': '$54return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'res': '$kind56.0'}), (58, {'idx': 2, 'res': '$58load_global.1'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'lhs': '$kind56.0', 'rhs': '$58load_global.1', 'res': '$70compare_op.2'}), (72, {}), (74, {}), (76, {'pred': '$70compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: (), 82: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$const78.0.3'}), (80, {'retval': '$const78.0.3', 'castval': '$80return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$kind82.0'}), (84, {'idx': 3, 'res': '$84load_global.1'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'lhs': '$kind82.0', 'rhs': '$84load_global.1', 'res': '$96compare_op.2'}), (98, {}), (100, {}), (102, {'pred': '$96compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 134: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'idx': 4, 'res': '$104load_global.0'}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {'res': '$const116.2.4'}), (118, {}), (120, {}), (122, {'func': '$104load_global.0', 'args': ['$const116.2.4'], 'kw_names': None, 'res': '$122call.3'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'exc': '$122call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {'idx': 4, 'res': '$134load_global.0'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.2.5'}), (148, {}), (150, {}), (152, {'func': '$134load_global.0', 'args': ['$const146.2.5'], 'kw_names': None, 'res': '$152call.3'}), (154, {}), (156, {}), (158, {}), (160, {}), (162, {'exc': '$152call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    kind = arg(0, name=kind)                 ['kind']
    $6load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1) ['$6load_global.1']
    $18compare_op.2 = kind == $6load_global.1 ['$18compare_op.2', '$6load_global.1', 'kind']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($18compare_op.2, func=bool24, args=(Var($18compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None) ['$18compare_op.2', '$24pred', 'bool24']
    branch $24pred, 26, 30                   ['$24pred']
label 26:
    $const26.0.1 = const(int, 1)             ['$const26.0.1']
    $28return_value.1 = cast(value=$const26.0.1) ['$28return_value.1', '$const26.0.1']
    return $28return_value.1                 ['$28return_value.1']
label 30:
    $32load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2) ['$32load_global.1']
    $44compare_op.2 = kind == $32load_global.1 ['$32load_global.1', '$44compare_op.2', 'kind']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($44compare_op.2, func=bool50, args=(Var($44compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None) ['$44compare_op.2', '$50pred', 'bool50']
    branch $50pred, 52, 56                   ['$50pred']
label 52:
    $const52.0.2 = const(int, 2)             ['$const52.0.2']
    $54return_value.1 = cast(value=$const52.0.2) ['$54return_value.1', '$const52.0.2']
    return $54return_value.1                 ['$54return_value.1']
label 56:
    $58load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4) ['$58load_global.1']
    $70compare_op.2 = kind == $58load_global.1 ['$58load_global.1', '$70compare_op.2', 'kind']
    bool76 = global(bool: <class 'bool'>)    ['bool76']
    $76pred = call bool76($70compare_op.2, func=bool76, args=(Var($70compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.2', '$76pred', 'bool76']
    branch $76pred, 78, 82                   ['$76pred']
label 78:
    $const78.0.3 = const(int, 4)             ['$const78.0.3']
    $80return_value.1 = cast(value=$const78.0.3) ['$80return_value.1', '$const78.0.3']
    return $80return_value.1                 ['$80return_value.1']
label 82:
    $84load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0) ['$84load_global.1']
    $96compare_op.2 = kind == $84load_global.1 ['$84load_global.1', '$96compare_op.2', 'kind']
    bool102 = global(bool: <class 'bool'>)   ['bool102']
    $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None) ['$102pred', '$96compare_op.2', 'bool102']
    branch $102pred, 104, 134                ['$102pred']
label 104:
    $104load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$104load_global.0']
    $const116.2.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported) ['$const116.2.4']
    $122call.3 = call $104load_global.0($const116.2.4, func=$104load_global.0, args=[Var($const116.2.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_global.0', '$122call.3', '$const116.2.4']
    raise $122call.3                         ['$122call.3']
label 134:
    $134load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$134load_global.0']
    $const146.2.5 = const(str, Unexpected unicode encoding encountered) ['$const146.2.5']
    $152call.3 = call $134load_global.0($const146.2.5, func=$134load_global.0, args=[Var($const146.2.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.0', '$152call.3', '$const146.2.5']
    raise $152call.3                         ['$152call.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17523510>
DEBUG:numba.core.ssa:on stmt: kind = arg(0, name=kind)
DEBUG:numba.core.ssa:on stmt: $6load_global.1 = global(PY_UNICODE_1BYTE_KIND: 1)
DEBUG:numba.core.ssa:on stmt: $18compare_op.2 = kind == $6load_global.1
DEBUG:numba.core.ssa:on stmt: bool24 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $24pred = call bool24($18compare_op.2, func=bool24, args=(Var($18compare_op.2, unicode.py:413),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $24pred, 26, 30
DEBUG:numba.core.ssa:==== SSA block analysis pass on 26
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17523510>
DEBUG:numba.core.ssa:on stmt: $const26.0.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $28return_value.1 = cast(value=$const26.0.1)
DEBUG:numba.core.ssa:on stmt: return $28return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 30
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17523510>
DEBUG:numba.core.ssa:on stmt: $32load_global.1 = global(PY_UNICODE_2BYTE_KIND: 2)
DEBUG:numba.core.ssa:on stmt: $44compare_op.2 = kind == $32load_global.1
DEBUG:numba.core.ssa:on stmt: bool50 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $50pred = call bool50($44compare_op.2, func=bool50, args=(Var($44compare_op.2, unicode.py:415),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $50pred, 52, 56
DEBUG:numba.core.ssa:==== SSA block analysis pass on 52
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17523510>
DEBUG:numba.core.ssa:on stmt: $const52.0.2 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $54return_value.1 = cast(value=$const52.0.2)
DEBUG:numba.core.ssa:on stmt: return $54return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17523510>
DEBUG:numba.core.ssa:on stmt: $58load_global.1 = global(PY_UNICODE_4BYTE_KIND: 4)
DEBUG:numba.core.ssa:on stmt: $70compare_op.2 = kind == $58load_global.1
DEBUG:numba.core.ssa:on stmt: bool76 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $76pred = call bool76($70compare_op.2, func=bool76, args=(Var($70compare_op.2, unicode.py:417),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $76pred, 78, 82
DEBUG:numba.core.ssa:==== SSA block analysis pass on 78
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17523510>
DEBUG:numba.core.ssa:on stmt: $const78.0.3 = const(int, 4)
DEBUG:numba.core.ssa:on stmt: $80return_value.1 = cast(value=$const78.0.3)
DEBUG:numba.core.ssa:on stmt: return $80return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 82
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17523510>
DEBUG:numba.core.ssa:on stmt: $84load_global.1 = global(PY_UNICODE_WCHAR_KIND: 0)
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = kind == $84load_global.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, unicode.py:419),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 134
DEBUG:numba.core.ssa:==== SSA block analysis pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17523510>
DEBUG:numba.core.ssa:on stmt: $104load_global.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: $const116.2.4 = const(str, PY_UNICODE_WCHAR_KIND unsupported)
DEBUG:numba.core.ssa:on stmt: $122call.3 = call $104load_global.0($const116.2.4, func=$104load_global.0, args=[Var($const116.2.4, unicode.py:420)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>('PY_UNICODE_WCHAR_KIND unsupported')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 134
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17523510>
DEBUG:numba.core.ssa:on stmt: $134load_global.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: $const146.2.5 = const(str, Unexpected unicode encoding encountered)
DEBUG:numba.core.ssa:on stmt: $152call.3 = call $134load_global.0($const146.2.5, func=$134load_global.0, args=[Var($const146.2.5, unicode.py:422)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>('Unexpected unicode encoding encountered')
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102pred': [(<numba.core.ir.Assign object at 0x0000019A17541B90>,
                           82)],
             '$104load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17541510>,
                                    104)],
             '$122call.3': [(<numba.core.ir.Assign object at 0x0000019A17542A90>,
                             104)],
             '$134load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17543350>,
                                    134)],
             '$152call.3': [(<numba.core.ir.Assign object at 0x0000019A17543A90>,
                             134)],
             '$18compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A1743CFD0>,
                                  0)],
             '$24pred': [(<numba.core.ir.Assign object at 0x0000019A1743D010>,
                          0)],
             '$28return_value.1': [(<numba.core.ir.Assign object at 0x0000019A1743C290>,
                                    26)],
             '$32load_global.1': [(<numba.core.ir.Assign object at 0x0000019A1743BED0>,
                                   30)],
             '$44compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A1743BE90>,
                                  30)],
             '$50pred': [(<numba.core.ir.Assign object at 0x0000019A1743BA10>,
                          30)],
             '$54return_value.1': [(<numba.core.ir.Assign object at 0x0000019A1743BD10>,
                                    52)],
             '$58load_global.1': [(<numba.core.ir.Assign object at 0x0000019A174EF810>,
                                   56)],
             '$6load_global.1': [(<numba.core.ir.Assign object at 0x0000019A1743D5D0>,
                                  0)],
             '$70compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A174EFFD0>,
                                  56)],
             '$76pred': [(<numba.core.ir.Assign object at 0x0000019A173C5790>,
                          56)],
             '$80return_value.1': [(<numba.core.ir.Assign object at 0x0000019A17543590>,
                                    78)],
             '$84load_global.1': [(<numba.core.ir.Assign object at 0x0000019A17541710>,
                                   82)],
             '$96compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A17542190>,
                                  82)],
             '$const116.2.4': [(<numba.core.ir.Assign object at 0x0000019A17541850>,
                                104)],
             '$const146.2.5': [(<numba.core.ir.Assign object at 0x0000019A17541290>,
                                134)],
             '$const26.0.1': [(<numba.core.ir.Assign object at 0x0000019A1743DDD0>,
                               26)],
             '$const52.0.2': [(<numba.core.ir.Assign object at 0x0000019A17438FD0>,
                               52)],
             '$const78.0.3': [(<numba.core.ir.Assign object at 0x0000019A17542750>,
                               78)],
             'bool102': [(<numba.core.ir.Assign object at 0x0000019A17541FD0>,
                          82)],
             'bool24': [(<numba.core.ir.Assign object at 0x0000019A1743D610>,
                         0)],
             'bool50': [(<numba.core.ir.Assign object at 0x0000019A174383D0>,
                         30)],
             'bool76': [(<numba.core.ir.Assign object at 0x0000019A173C5CD0>,
                         56)],
             'kind': [(<numba.core.ir.Assign object at 0x0000019A1755B1D0>,
                       0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17523510>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=336)
           2	RESUME(arg=0, lineno=336)
           4	LOAD_FAST(arg=0, lineno=344)
           6	LOAD_ATTR(arg=0, lineno=344)
          16	LOAD_GLOBAL(arg=2, lineno=344)
          28	COMPARE_OP(arg=2, lineno=344)
          34	POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=344)
          36	LOAD_GLOBAL(arg=5, lineno=345)
          48	LOAD_FAST(arg=0, lineno=345)
          50	LOAD_ATTR(arg=3, lineno=345)
          60	LOAD_FAST(arg=1, lineno=345)
          62	LOAD_FAST(arg=2, lineno=345)
          64	PRECALL(arg=3, lineno=345)
          68	CALL(arg=3, lineno=345)
          78	POP_TOP(arg=None, lineno=345)
          80	LOAD_CONST(arg=0, lineno=345)
          82	RETURN_VALUE(arg=None, lineno=345)
>         84	LOAD_FAST(arg=0, lineno=346)
          86	LOAD_ATTR(arg=0, lineno=346)
          96	LOAD_GLOBAL(arg=8, lineno=346)
         108	COMPARE_OP(arg=2, lineno=346)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=346)
         116	LOAD_GLOBAL(arg=11, lineno=347)
         128	LOAD_FAST(arg=0, lineno=347)
         130	LOAD_ATTR(arg=3, lineno=347)
         140	LOAD_FAST(arg=1, lineno=347)
         142	LOAD_FAST(arg=2, lineno=347)
         144	PRECALL(arg=3, lineno=347)
         148	CALL(arg=3, lineno=347)
         158	POP_TOP(arg=None, lineno=347)
         160	LOAD_CONST(arg=0, lineno=347)
         162	RETURN_VALUE(arg=None, lineno=347)
>        164	LOAD_FAST(arg=0, lineno=348)
         166	LOAD_ATTR(arg=0, lineno=348)
         176	LOAD_GLOBAL(arg=12, lineno=348)
         188	COMPARE_OP(arg=2, lineno=348)
         194	POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=348)
         196	LOAD_GLOBAL(arg=15, lineno=349)
         208	LOAD_FAST(arg=0, lineno=349)
         210	LOAD_ATTR(arg=3, lineno=349)
         220	LOAD_FAST(arg=1, lineno=349)
         222	LOAD_FAST(arg=2, lineno=349)
         224	PRECALL(arg=3, lineno=349)
         228	CALL(arg=3, lineno=349)
         238	POP_TOP(arg=None, lineno=349)
         240	LOAD_CONST(arg=0, lineno=349)
         242	RETURN_VALUE(arg=None, lineno=349)
>        244	LOAD_GLOBAL(arg=17, lineno=351)
         256	LOAD_CONST(arg=1, lineno=352)
         258	PRECALL(arg=1, lineno=351)
         262	CALL(arg=1, lineno=351)
         272	RAISE_VARARGS(arg=1, lineno=351)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=336)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=336)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=344)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=344)
DEBUG:numba.core.byteflow:stack ['$a4.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_GLOBAL(arg=2, lineno=344)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=COMPARE_OP(arg=2, lineno=344)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1', '$16load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=344)
DEBUG:numba.core.byteflow:stack ['$28compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0), Edge(pc=84, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=84 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=36 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_GLOBAL(arg=5, lineno=345)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_FAST(arg=0, lineno=345)
DEBUG:numba.core.byteflow:stack ['$null$36.1', '$36load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_ATTR(arg=3, lineno=345)
DEBUG:numba.core.byteflow:stack ['$null$36.1', '$36load_global.0', '$a48.2']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=345)
DEBUG:numba.core.byteflow:stack ['$null$36.1', '$36load_global.0', '$50load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=2, lineno=345)
DEBUG:numba.core.byteflow:stack ['$null$36.1', '$36load_global.0', '$50load_attr.3', '$i60.4']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=PRECALL(arg=3, lineno=345)
DEBUG:numba.core.byteflow:stack ['$null$36.1', '$36load_global.0', '$50load_attr.3', '$i60.4', '$ch62.5']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=CALL(arg=3, lineno=345)
DEBUG:numba.core.byteflow:stack ['$null$36.1', '$36load_global.0', '$50load_attr.3', '$i60.4', '$ch62.5']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=POP_TOP(arg=None, lineno=345)
DEBUG:numba.core.byteflow:stack ['$68call.6']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_CONST(arg=0, lineno=345)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=345)
DEBUG:numba.core.byteflow:stack ['$const80.7.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=84 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=84 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=346)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_ATTR(arg=0, lineno=346)
DEBUG:numba.core.byteflow:stack ['$a84.0']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_GLOBAL(arg=8, lineno=346)
DEBUG:numba.core.byteflow:stack ['$86load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=COMPARE_OP(arg=2, lineno=346)
DEBUG:numba.core.byteflow:stack ['$86load_attr.1', '$96load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=346)
DEBUG:numba.core.byteflow:stack ['$108compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=164, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=164 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=116 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_GLOBAL(arg=11, lineno=347)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=0, lineno=347)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$116load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_ATTR(arg=3, lineno=347)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$116load_global.0', '$a128.2']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=LOAD_FAST(arg=1, lineno=347)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$116load_global.0', '$130load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_FAST(arg=2, lineno=347)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$116load_global.0', '$130load_attr.3', '$i140.4']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=PRECALL(arg=3, lineno=347)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$116load_global.0', '$130load_attr.3', '$i140.4', '$ch142.5']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=CALL(arg=3, lineno=347)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$116load_global.0', '$130load_attr.3', '$i140.4', '$ch142.5']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=POP_TOP(arg=None, lineno=347)
DEBUG:numba.core.byteflow:stack ['$148call.6']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=LOAD_CONST(arg=0, lineno=347)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=162, inst=RETURN_VALUE(arg=None, lineno=347)
DEBUG:numba.core.byteflow:stack ['$const160.7.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=164 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=164 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=348)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_ATTR(arg=0, lineno=348)
DEBUG:numba.core.byteflow:stack ['$a164.0']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=LOAD_GLOBAL(arg=12, lineno=348)
DEBUG:numba.core.byteflow:stack ['$166load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=188, inst=COMPARE_OP(arg=2, lineno=348)
DEBUG:numba.core.byteflow:stack ['$166load_attr.1', '$176load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=348)
DEBUG:numba.core.byteflow:stack ['$188compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=196, stack=(), blockstack=(), npush=0), Edge(pc=244, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=196 nstack_initial=0), State(pc_initial=244 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=196 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=196, inst=LOAD_GLOBAL(arg=15, lineno=349)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=349)
DEBUG:numba.core.byteflow:stack ['$null$196.1', '$196load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=LOAD_ATTR(arg=3, lineno=349)
DEBUG:numba.core.byteflow:stack ['$null$196.1', '$196load_global.0', '$a208.2']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=1, lineno=349)
DEBUG:numba.core.byteflow:stack ['$null$196.1', '$196load_global.0', '$210load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=LOAD_FAST(arg=2, lineno=349)
DEBUG:numba.core.byteflow:stack ['$null$196.1', '$196load_global.0', '$210load_attr.3', '$i220.4']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=PRECALL(arg=3, lineno=349)
DEBUG:numba.core.byteflow:stack ['$null$196.1', '$196load_global.0', '$210load_attr.3', '$i220.4', '$ch222.5']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=CALL(arg=3, lineno=349)
DEBUG:numba.core.byteflow:stack ['$null$196.1', '$196load_global.0', '$210load_attr.3', '$i220.4', '$ch222.5']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=POP_TOP(arg=None, lineno=349)
DEBUG:numba.core.byteflow:stack ['$228call.6']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=LOAD_CONST(arg=0, lineno=349)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=349)
DEBUG:numba.core.byteflow:stack ['$const240.7.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=244 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=244 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=244, inst=LOAD_GLOBAL(arg=17, lineno=351)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=256, inst=LOAD_CONST(arg=1, lineno=352)
DEBUG:numba.core.byteflow:stack ['$null$244.1', '$244load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=PRECALL(arg=1, lineno=351)
DEBUG:numba.core.byteflow:stack ['$null$244.1', '$244load_global.0', '$const256.2.1']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=CALL(arg=1, lineno=351)
DEBUG:numba.core.byteflow:stack ['$null$244.1', '$244load_global.0', '$const256.2.1']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=RAISE_VARARGS(arg=1, lineno=351)
DEBUG:numba.core.byteflow:stack ['$262call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=164 nstack_initial=0): set(),
             State(pc_initial=196 nstack_initial=0): set(),
             State(pc_initial=244 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'item': '$a4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'idx': 1, 'res': '$16load_global.2'}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'lhs': '$6load_attr.1', 'rhs': '$16load_global.2', 'res': '$28compare_op.3'}), (30, {}), (32, {}), (34, {'pred': '$28compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: (), 84: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'idx': 2, 'res': '$36load_global.0'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'res': '$a48.2'}), (50, {'item': '$a48.2', 'res': '$50load_attr.3'}), (52, {}), (54, {}), (56, {}), (58, {}), (60, {'res': '$i60.4'}), (62, {'res': '$ch62.5'}), (64, {}), (66, {}), (68, {'func': '$36load_global.0', 'args': ['$50load_attr.3', '$i60.4', '$ch62.5'], 'kw_names': None, 'res': '$68call.6'}), (70, {}), (72, {}), (74, {}), (76, {}), (80, {'res': '$const80.7.0'}), (82, {'retval': '$const80.7.0', 'castval': '$82return_value.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'item': '$a84.0', 'res': '$86load_attr.1'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'idx': 4, 'res': '$96load_global.2'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {'lhs': '$86load_attr.1', 'rhs': '$96load_global.2', 'res': '$108compare_op.3'}), (110, {}), (112, {}), (114, {'pred': '$108compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 164: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 5, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'res': '$a128.2'}), (130, {'item': '$a128.2', 'res': '$130load_attr.3'}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {'res': '$i140.4'}), (142, {'res': '$ch142.5'}), (144, {}), (146, {}), (148, {'func': '$116load_global.0', 'args': ['$130load_attr.3', '$i140.4', '$ch142.5'], 'kw_names': None, 'res': '$148call.6'}), (150, {}), (152, {}), (154, {}), (156, {}), (160, {'res': '$const160.7.0'}), (162, {'retval': '$const160.7.0', 'castval': '$162return_value.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=164 nstack_initial=0):
AdaptBlockInfo(insts=((164, {'res': '$a164.0'}), (166, {'item': '$a164.0', 'res': '$166load_attr.1'}), (168, {}), (170, {}), (172, {}), (174, {}), (176, {'idx': 6, 'res': '$176load_global.2'}), (178, {}), (180, {}), (182, {}), (184, {}), (186, {}), (188, {'lhs': '$166load_attr.1', 'rhs': '$176load_global.2', 'res': '$188compare_op.3'}), (190, {}), (192, {}), (194, {'pred': '$188compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: (), 244: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=196 nstack_initial=0):
AdaptBlockInfo(insts=((196, {'idx': 7, 'res': '$196load_global.0'}), (198, {}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {'res': '$a208.2'}), (210, {'item': '$a208.2', 'res': '$210load_attr.3'}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {'res': '$i220.4'}), (222, {'res': '$ch222.5'}), (224, {}), (226, {}), (228, {'func': '$196load_global.0', 'args': ['$210load_attr.3', '$i220.4', '$ch222.5'], 'kw_names': None, 'res': '$228call.6'}), (230, {}), (232, {}), (234, {}), (236, {}), (240, {'res': '$const240.7.0'}), (242, {'retval': '$const240.7.0', 'castval': '$242return_value.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=244 nstack_initial=0):
AdaptBlockInfo(insts=((244, {'idx': 8, 'res': '$244load_global.0'}), (246, {}), (248, {}), (250, {}), (252, {}), (254, {}), (256, {'res': '$const256.2.1'}), (258, {}), (260, {}), (262, {'func': '$244load_global.0', 'args': ['$const256.2.1'], 'kw_names': None, 'res': '$262call.3'}), (264, {}), (266, {}), (268, {}), (270, {}), (272, {'exc': '$262call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    i = arg(1, name=i)                       ['i']
    ch = arg(2, name=ch)                     ['ch']
    $6load_attr.1 = getattr(value=a, attr=_kind) ['$6load_attr.1', 'a']
    $16load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1) ['$16load_global.2']
    $28compare_op.3 = $6load_attr.1 == $16load_global.2 ['$16load_global.2', '$28compare_op.3', '$6load_attr.1']
    bool34 = global(bool: <class 'bool'>)    ['bool34']
    $34pred = call bool34($28compare_op.3, func=bool34, args=(Var($28compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None) ['$28compare_op.3', '$34pred', 'bool34']
    branch $34pred, 36, 84                   ['$34pred']
label 36:
    $36load_global.0 = global(set_uint8: <intrinsic set_uint8>) ['$36load_global.0']
    $50load_attr.3 = getattr(value=a, attr=_data) ['$50load_attr.3', 'a']
    $68call.6 = call $36load_global.0($50load_attr.3, i, ch, func=$36load_global.0, args=[Var($50load_attr.3, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_global.0', '$50load_attr.3', '$68call.6', 'ch', 'i']
    $const80.7.0 = const(NoneType, None)     ['$const80.7.0']
    $82return_value.8 = cast(value=$const80.7.0) ['$82return_value.8', '$const80.7.0']
    return $82return_value.8                 ['$82return_value.8']
label 84:
    $86load_attr.1 = getattr(value=a, attr=_kind) ['$86load_attr.1', 'a']
    $96load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2) ['$96load_global.2']
    $108compare_op.3 = $86load_attr.1 == $96load_global.2 ['$108compare_op.3', '$86load_attr.1', '$96load_global.2']
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114($108compare_op.3, func=bool114, args=(Var($108compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None) ['$108compare_op.3', '$114pred', 'bool114']
    branch $114pred, 116, 164                ['$114pred']
label 116:
    $116load_global.0 = global(set_uint16: <intrinsic set_uint16>) ['$116load_global.0']
    $130load_attr.3 = getattr(value=a, attr=_data) ['$130load_attr.3', 'a']
    $148call.6 = call $116load_global.0($130load_attr.3, i, ch, func=$116load_global.0, args=[Var($130load_attr.3, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.0', '$130load_attr.3', '$148call.6', 'ch', 'i']
    $const160.7.0 = const(NoneType, None)    ['$const160.7.0']
    $162return_value.8 = cast(value=$const160.7.0) ['$162return_value.8', '$const160.7.0']
    return $162return_value.8                ['$162return_value.8']
label 164:
    $166load_attr.1 = getattr(value=a, attr=_kind) ['$166load_attr.1', 'a']
    $176load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4) ['$176load_global.2']
    $188compare_op.3 = $166load_attr.1 == $176load_global.2 ['$166load_attr.1', '$176load_global.2', '$188compare_op.3']
    bool194 = global(bool: <class 'bool'>)   ['bool194']
    $194pred = call bool194($188compare_op.3, func=bool194, args=(Var($188compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None) ['$188compare_op.3', '$194pred', 'bool194']
    branch $194pred, 196, 244                ['$194pred']
label 196:
    $196load_global.0 = global(set_uint32: <intrinsic set_uint32>) ['$196load_global.0']
    $210load_attr.3 = getattr(value=a, attr=_data) ['$210load_attr.3', 'a']
    $228call.6 = call $196load_global.0($210load_attr.3, i, ch, func=$196load_global.0, args=[Var($210load_attr.3, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None) ['$196load_global.0', '$210load_attr.3', '$228call.6', 'ch', 'i']
    $const240.7.0 = const(NoneType, None)    ['$const240.7.0']
    $242return_value.8 = cast(value=$const240.7.0) ['$242return_value.8', '$const240.7.0']
    return $242return_value.8                ['$242return_value.8']
label 244:
    $244load_global.0 = global(AssertionError: <class 'AssertionError'>) ['$244load_global.0']
    $const256.2.1 = const(str, Unexpected unicode representation in _set_code_point) ['$const256.2.1']
    $262call.3 = call $244load_global.0($const256.2.1, func=$244load_global.0, args=[Var($const256.2.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None) ['$244load_global.0', '$262call.3', '$const256.2.1']
    raise $262call.3                         ['$262call.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175AEA50>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: i = arg(1, name=i)
DEBUG:numba.core.ssa:on stmt: ch = arg(2, name=ch)
DEBUG:numba.core.ssa:on stmt: $6load_attr.1 = getattr(value=a, attr=_kind)
DEBUG:numba.core.ssa:on stmt: $16load_global.2 = global(PY_UNICODE_1BYTE_KIND: 1)
DEBUG:numba.core.ssa:on stmt: $28compare_op.3 = $6load_attr.1 == $16load_global.2
DEBUG:numba.core.ssa:on stmt: bool34 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $34pred = call bool34($28compare_op.3, func=bool34, args=(Var($28compare_op.3, unicode.py:344),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $34pred, 36, 84
DEBUG:numba.core.ssa:==== SSA block analysis pass on 36
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175AEA50>
DEBUG:numba.core.ssa:on stmt: $36load_global.0 = global(set_uint8: <intrinsic set_uint8>)
DEBUG:numba.core.ssa:on stmt: $50load_attr.3 = getattr(value=a, attr=_data)
DEBUG:numba.core.ssa:on stmt: $68call.6 = call $36load_global.0($50load_attr.3, i, ch, func=$36load_global.0, args=[Var($50load_attr.3, unicode.py:345), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const80.7.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $82return_value.8 = cast(value=$const80.7.0)
DEBUG:numba.core.ssa:on stmt: return $82return_value.8
DEBUG:numba.core.ssa:==== SSA block analysis pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175AEA50>
DEBUG:numba.core.ssa:on stmt: $86load_attr.1 = getattr(value=a, attr=_kind)
DEBUG:numba.core.ssa:on stmt: $96load_global.2 = global(PY_UNICODE_2BYTE_KIND: 2)
DEBUG:numba.core.ssa:on stmt: $108compare_op.3 = $86load_attr.1 == $96load_global.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($108compare_op.3, func=bool114, args=(Var($108compare_op.3, unicode.py:346),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 164
DEBUG:numba.core.ssa:==== SSA block analysis pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175AEA50>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(set_uint16: <intrinsic set_uint16>)
DEBUG:numba.core.ssa:on stmt: $130load_attr.3 = getattr(value=a, attr=_data)
DEBUG:numba.core.ssa:on stmt: $148call.6 = call $116load_global.0($130load_attr.3, i, ch, func=$116load_global.0, args=[Var($130load_attr.3, unicode.py:347), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const160.7.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $162return_value.8 = cast(value=$const160.7.0)
DEBUG:numba.core.ssa:on stmt: return $162return_value.8
DEBUG:numba.core.ssa:==== SSA block analysis pass on 164
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175AEA50>
DEBUG:numba.core.ssa:on stmt: $166load_attr.1 = getattr(value=a, attr=_kind)
DEBUG:numba.core.ssa:on stmt: $176load_global.2 = global(PY_UNICODE_4BYTE_KIND: 4)
DEBUG:numba.core.ssa:on stmt: $188compare_op.3 = $166load_attr.1 == $176load_global.2
DEBUG:numba.core.ssa:on stmt: bool194 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $194pred = call bool194($188compare_op.3, func=bool194, args=(Var($188compare_op.3, unicode.py:348),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $194pred, 196, 244
DEBUG:numba.core.ssa:==== SSA block analysis pass on 196
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175AEA50>
DEBUG:numba.core.ssa:on stmt: $196load_global.0 = global(set_uint32: <intrinsic set_uint32>)
DEBUG:numba.core.ssa:on stmt: $210load_attr.3 = getattr(value=a, attr=_data)
DEBUG:numba.core.ssa:on stmt: $228call.6 = call $196load_global.0($210load_attr.3, i, ch, func=$196load_global.0, args=[Var($210load_attr.3, unicode.py:349), Var(i, unicode.py:336), Var(ch, unicode.py:336)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const240.7.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $242return_value.8 = cast(value=$const240.7.0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.8
DEBUG:numba.core.ssa:==== SSA block analysis pass on 244
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175AEA50>
DEBUG:numba.core.ssa:on stmt: $244load_global.0 = global(AssertionError: <class 'AssertionError'>)
DEBUG:numba.core.ssa:on stmt: $const256.2.1 = const(str, Unexpected unicode representation in _set_code_point)
DEBUG:numba.core.ssa:on stmt: $262call.3 = call $244load_global.0($const256.2.1, func=$244load_global.0, args=[Var($const256.2.1, unicode.py:352)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'AssertionError'>('Unexpected unicode representation in _set_code_point')
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$108compare_op.3': [(<numba.core.ir.Assign object at 0x0000019A17577750>,
                                   84)],
             '$114pred': [(<numba.core.ir.Assign object at 0x0000019A17575810>,
                           84)],
             '$116load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17574FD0>,
                                    116)],
             '$130load_attr.3': [(<numba.core.ir.Assign object at 0x0000019A17574350>,
                                  116)],
             '$148call.6': [(<numba.core.ir.Assign object at 0x0000019A17576C50>,
                             116)],
             '$162return_value.8': [(<numba.core.ir.Assign object at 0x0000019A17574910>,
                                     116)],
             '$166load_attr.1': [(<numba.core.ir.Assign object at 0x0000019A17575E90>,
                                  164)],
             '$16load_global.2': [(<numba.core.ir.Assign object at 0x0000019A175A4750>,
                                   0)],
             '$176load_global.2': [(<numba.core.ir.Assign object at 0x0000019A17575750>,
                                    164)],
             '$188compare_op.3': [(<numba.core.ir.Assign object at 0x0000019A17576F50>,
                                   164)],
             '$194pred': [(<numba.core.ir.Assign object at 0x0000019A17577710>,
                           164)],
             '$196load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17577610>,
                                    196)],
             '$210load_attr.3': [(<numba.core.ir.Assign object at 0x0000019A175751D0>,
                                  196)],
             '$228call.6': [(<numba.core.ir.Assign object at 0x0000019A17577150>,
                             196)],
             '$242return_value.8': [(<numba.core.ir.Assign object at 0x0000019A17576850>,
                                     196)],
             '$244load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17576D10>,
                                    244)],
             '$262call.3': [(<numba.core.ir.Assign object at 0x0000019A1758B050>,
                             244)],
             '$28compare_op.3': [(<numba.core.ir.Assign object at 0x0000019A174D9810>,
                                  0)],
             '$34pred': [(<numba.core.ir.Assign object at 0x0000019A175A5750>,
                          0)],
             '$36load_global.0': [(<numba.core.ir.Assign object at 0x0000019A175A7490>,
                                   36)],
             '$50load_attr.3': [(<numba.core.ir.Assign object at 0x0000019A175EE7D0>,
                                 36)],
             '$68call.6': [(<numba.core.ir.Assign object at 0x0000019A175ED2D0>,
                            36)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x0000019A175A4490>,
                                0)],
             '$82return_value.8': [(<numba.core.ir.Assign object at 0x0000019A17575790>,
                                    36)],
             '$86load_attr.1': [(<numba.core.ir.Assign object at 0x0000019A17574050>,
                                 84)],
             '$96load_global.2': [(<numba.core.ir.Assign object at 0x0000019A175756D0>,
                                   84)],
             '$const160.7.0': [(<numba.core.ir.Assign object at 0x0000019A17576ED0>,
                                116)],
             '$const240.7.0': [(<numba.core.ir.Assign object at 0x0000019A17577350>,
                                196)],
             '$const256.2.1': [(<numba.core.ir.Assign object at 0x0000019A1758B150>,
                                244)],
             '$const80.7.0': [(<numba.core.ir.Assign object at 0x0000019A175EFDD0>,
                               36)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A174DA950>, 0)],
             'bool114': [(<numba.core.ir.Assign object at 0x0000019A17576F10>,
                          84)],
             'bool194': [(<numba.core.ir.Assign object at 0x0000019A175749D0>,
                          164)],
             'bool34': [(<numba.core.ir.Assign object at 0x0000019A175A4690>,
                         0)],
             'ch': [(<numba.core.ir.Assign object at 0x0000019A175A7F90>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x0000019A175E7C50>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A175AEA50>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1019)
           2	RESUME(arg=0, lineno=1019)
           4	LOAD_CONST(arg=1, lineno=1020)
           6	STORE_FAST(arg=1, lineno=1020)
           8	LOAD_GLOBAL(arg=1, lineno=1021)
          20	LOAD_FAST(arg=0, lineno=1021)
          22	LOAD_FAST(arg=1, lineno=1021)
          24	PRECALL(arg=2, lineno=1021)
          28	CALL(arg=2, lineno=1021)
          38	LOAD_CONST(arg=2, lineno=1021)
          40	COMPARE_OP(arg=2, lineno=1021)
          46	POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=1021)
          48	PUSH_NULL(arg=None, lineno=1022)
          50	LOAD_GLOBAL(arg=3, lineno=1022)
          62	LOAD_FAST(arg=0, lineno=1022)
          64	LOAD_FAST(arg=1, lineno=1022)
          66	PRECALL(arg=2, lineno=1022)
          70	CALL(arg=2, lineno=1022)
          80	PRECALL(arg=0, lineno=1022)
          84	CALL(arg=0, lineno=1022)
          94	RETURN_VALUE(arg=None, lineno=1022)
>         96	LOAD_GLOBAL(arg=5, lineno=1024)
         108	LOAD_FAST(arg=0, lineno=1024)
         110	PRECALL(arg=1, lineno=1024)
         114	CALL(arg=1, lineno=1024)
         124	RETURN_VALUE(arg=None, lineno=1024)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1019)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1019)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1020)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=STORE_FAST(arg=1, lineno=1020)
DEBUG:numba.core.byteflow:stack ['$const4.0.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=1021)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=1021)
DEBUG:numba.core.byteflow:stack ['$null$8.2', '$8load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=1, lineno=1021)
DEBUG:numba.core.byteflow:stack ['$null$8.2', '$8load_global.1', '$object20.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=PRECALL(arg=2, lineno=1021)
DEBUG:numba.core.byteflow:stack ['$null$8.2', '$8load_global.1', '$object20.3', '$attr22.4']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL(arg=2, lineno=1021)
DEBUG:numba.core.byteflow:stack ['$null$8.2', '$8load_global.1', '$object20.3', '$attr22.4']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=1021)
DEBUG:numba.core.byteflow:stack ['$28call.5']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=2, lineno=1021)
DEBUG:numba.core.byteflow:stack ['$28call.5', '$const38.6.2']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=1021)
DEBUG:numba.core.byteflow:stack ['$40compare_op.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=48 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=48, inst=PUSH_NULL(arg=None, lineno=1022)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_GLOBAL(arg=3, lineno=1022)
DEBUG:numba.core.byteflow:stack ['$null$48.0']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=1022)
DEBUG:numba.core.byteflow:stack ['$null$48.0', '$null$50.2', '$50load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=1, lineno=1022)
DEBUG:numba.core.byteflow:stack ['$null$48.0', '$null$50.2', '$50load_global.1', '$object62.3']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=PRECALL(arg=2, lineno=1022)
DEBUG:numba.core.byteflow:stack ['$null$48.0', '$null$50.2', '$50load_global.1', '$object62.3', '$attr64.4']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=CALL(arg=2, lineno=1022)
DEBUG:numba.core.byteflow:stack ['$null$48.0', '$null$50.2', '$50load_global.1', '$object62.3', '$attr64.4']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=PRECALL(arg=0, lineno=1022)
DEBUG:numba.core.byteflow:stack ['$null$48.0', '$70call.5']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=CALL(arg=0, lineno=1022)
DEBUG:numba.core.byteflow:stack ['$null$48.0', '$70call.5']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=1022)
DEBUG:numba.core.byteflow:stack ['$84call.6']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=96 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=96 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_GLOBAL(arg=5, lineno=1024)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_FAST(arg=0, lineno=1024)
DEBUG:numba.core.byteflow:stack ['$null$96.1', '$96load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=PRECALL(arg=1, lineno=1024)
DEBUG:numba.core.byteflow:stack ['$null$96.1', '$96load_global.0', '$object108.2']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=CALL(arg=1, lineno=1024)
DEBUG:numba.core.byteflow:stack ['$null$96.1', '$96load_global.0', '$object108.2']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=RETURN_VALUE(arg=None, lineno=1024)
DEBUG:numba.core.byteflow:stack ['$114call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=96 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0.1'}), (6, {'value': '$const4.0.1'}), (8, {'idx': 0, 'res': '$8load_global.1'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {'res': '$object20.3'}), (22, {'res': '$attr22.4'}), (24, {}), (26, {}), (28, {'func': '$8load_global.1', 'args': ['$object20.3', '$attr22.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'res': '$const38.6.2'}), (40, {'lhs': '$28call.5', 'rhs': '$const38.6.2', 'res': '$40compare_op.7'}), (42, {}), (44, {}), (46, {'pred': '$40compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 96: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {}), (50, {'idx': 1, 'res': '$50load_global.1'}), (52, {}), (54, {}), (56, {}), (58, {}), (60, {}), (62, {'res': '$object62.3'}), (64, {'res': '$attr64.4'}), (66, {}), (68, {}), (70, {'func': '$50load_global.1', 'args': ['$object62.3', '$attr64.4'], 'kw_names': None, 'res': '$70call.5'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'func': '$70call.5', 'args': [], 'kw_names': None, 'res': '$84call.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {'retval': '$84call.6', 'castval': '$94return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {'idx': 2, 'res': '$96load_global.0'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {'res': '$object108.2'}), (110, {}), (112, {}), (114, {'func': '$96load_global.0', 'args': ['$object108.2'], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'retval': '$114call.3', 'castval': '$124return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    object = arg(0, name=object)             ['object']
    attr = const(str, __str__)               ['attr']
    $8load_global.1 = global(hasattr: <built-in function hasattr>) ['$8load_global.1']
    $28call.5 = call $8load_global.1(object, attr, func=$8load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$28call.5', '$8load_global.1', 'attr', 'object']
    $const38.6.2 = const(bool, True)         ['$const38.6.2']
    $40compare_op.7 = $28call.5 == $const38.6.2 ['$28call.5', '$40compare_op.7', '$const38.6.2']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($40compare_op.7, func=bool46, args=(Var($40compare_op.7, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.7', '$46pred', 'bool46']
    branch $46pred, 48, 96                   ['$46pred']
label 48:
    $50load_global.1 = global(getattr: <built-in function getattr>) ['$50load_global.1']
    $70call.5 = call $50load_global.1(object, attr, func=$50load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.1', '$70call.5', 'attr', 'object']
    $84call.6 = call $70call.5(func=$70call.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$70call.5', '$84call.6']
    $94return_value.7 = cast(value=$84call.6) ['$84call.6', '$94return_value.7']
    return $94return_value.7                 ['$94return_value.7']
label 96:
    $96load_global.0 = global(repr: <built-in function repr>) ['$96load_global.0']
    $114call.3 = call $96load_global.0(object, func=$96load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$96load_global.0', 'object']
    $124return_value.4 = cast(value=$114call.3) ['$114call.3', '$124return_value.4']
    return $124return_value.4                ['$124return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1753D9D0>
DEBUG:numba.core.ssa:on stmt: object = arg(0, name=object)
DEBUG:numba.core.ssa:on stmt: attr = const(str, __str__)
DEBUG:numba.core.ssa:on stmt: $8load_global.1 = global(hasattr: <built-in function hasattr>)
DEBUG:numba.core.ssa:on stmt: $28call.5 = call $8load_global.1(object, attr, func=$8load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const38.6.2 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: $40compare_op.7 = $28call.5 == $const38.6.2
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($40compare_op.7, func=bool46, args=(Var($40compare_op.7, old_builtins.py:1021),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 48, 96
DEBUG:numba.core.ssa:==== SSA block analysis pass on 48
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1753D9D0>
DEBUG:numba.core.ssa:on stmt: $50load_global.1 = global(getattr: <built-in function getattr>)
DEBUG:numba.core.ssa:on stmt: $70call.5 = call $50load_global.1(object, attr, func=$50load_global.1, args=[Var(object, old_builtins.py:1019), Var(attr, old_builtins.py:1020)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $84call.6 = call $70call.5(func=$70call.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $94return_value.7 = cast(value=$84call.6)
DEBUG:numba.core.ssa:on stmt: return $94return_value.7
DEBUG:numba.core.ssa:==== SSA block analysis pass on 96
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1753D9D0>
DEBUG:numba.core.ssa:on stmt: $96load_global.0 = global(repr: <built-in function repr>)
DEBUG:numba.core.ssa:on stmt: $114call.3 = call $96load_global.0(object, func=$96load_global.0, args=[Var(object, old_builtins.py:1019)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $124return_value.4 = cast(value=$114call.3)
DEBUG:numba.core.ssa:on stmt: return $124return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x0000019A176BA7D0>,
                             96)],
             '$124return_value.4': [(<numba.core.ir.Assign object at 0x0000019A17384A90>,
                                     96)],
             '$28call.5': [(<numba.core.ir.Assign object at 0x0000019A176B89D0>,
                            0)],
             '$40compare_op.7': [(<numba.core.ir.Assign object at 0x0000019A176B8E90>,
                                  0)],
             '$46pred': [(<numba.core.ir.Assign object at 0x0000019A176B9290>,
                          0)],
             '$50load_global.1': [(<numba.core.ir.Assign object at 0x0000019A176B94D0>,
                                   48)],
             '$70call.5': [(<numba.core.ir.Assign object at 0x0000019A176B9A90>,
                            48)],
             '$84call.6': [(<numba.core.ir.Assign object at 0x0000019A176B9D10>,
                            48)],
             '$8load_global.1': [(<numba.core.ir.Assign object at 0x0000019A176B8450>,
                                  0)],
             '$94return_value.7': [(<numba.core.ir.Assign object at 0x0000019A176BA010>,
                                    48)],
             '$96load_global.0': [(<numba.core.ir.Assign object at 0x0000019A176BA250>,
                                   96)],
             '$const38.6.2': [(<numba.core.ir.Assign object at 0x0000019A176B8C90>,
                               0)],
             'attr': [(<numba.core.ir.Assign object at 0x0000019A176B8110>, 0)],
             'bool46': [(<numba.core.ir.Assign object at 0x0000019A176B90D0>,
                         0)],
             'object': [(<numba.core.ir.Assign object at 0x0000019A176B3C10>,
                         0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A1753D9D0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          16	LOAD_FAST(arg=0, lineno=999)
          18	LOAD_FAST(arg=1, lineno=999)
          20	PRECALL(arg=2, lineno=999)
          24	CALL(arg=2, lineno=999)
          34	RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=PRECALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:stack ['$24call.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$obj16.2'}), (18, {'res': '$name18.3'}), (20, {}), (22, {}), (24, {'func': '$4load_global.0', 'args': ['$obj16.2', '$name18.3'], 'kw_names': None, 'res': '$24call.4'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'retval': '$24call.4', 'castval': '$34return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$24call.4', '$4load_global.0', 'name', 'obj']
    $34return_value.5 = cast(value=$24call.4) ['$24call.4', '$34return_value.5']
    return $34return_value.5                 ['$34return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A176BDE90>
DEBUG:numba.core.ssa:on stmt: obj = arg(0, name=obj)
DEBUG:numba.core.ssa:on stmt: name = arg(1, name=name)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
DEBUG:numba.core.ssa:on stmt: $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34return_value.5 = cast(value=$24call.4)
DEBUG:numba.core.ssa:on stmt: return $34return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$24call.4': [(<numba.core.ir.Assign object at 0x0000019A176BD890>,
                            0)],
             '$34return_value.5': [(<numba.core.ir.Assign object at 0x0000019A176BD6D0>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A176B27D0>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x0000019A176B38D0>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x0000019A176B3790>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A176BDE90>
DEBUG:numba.core.typeinfer:captured error
Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(bool, 1, 'A', False, aligned=True), slice<a:b>, Array(bool, 1, 'A', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(unicode_type, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(unicode_type, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
DEBUG:numba.core.typeinfer:captured error
Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(bool, 1, 'A', False, aligned=True), slice<a:b>, Array(bool, 1, 'A', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(unicode_type, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(unicode_type, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          16	LOAD_FAST(arg=0, lineno=999)
          18	LOAD_FAST(arg=1, lineno=999)
          20	PRECALL(arg=2, lineno=999)
          24	CALL(arg=2, lineno=999)
          34	RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=PRECALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:stack ['$24call.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$obj16.2'}), (18, {'res': '$name18.3'}), (20, {}), (22, {}), (24, {'func': '$4load_global.0', 'args': ['$obj16.2', '$name18.3'], 'kw_names': None, 'res': '$24call.4'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'retval': '$24call.4', 'castval': '$34return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$24call.4', '$4load_global.0', 'name', 'obj']
    $34return_value.5 = cast(value=$24call.4) ['$24call.4', '$34return_value.5']
    return $34return_value.5                 ['$34return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A176C24D0>
DEBUG:numba.core.ssa:on stmt: obj = arg(0, name=obj)
DEBUG:numba.core.ssa:on stmt: name = arg(1, name=name)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
DEBUG:numba.core.ssa:on stmt: $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34return_value.5 = cast(value=$24call.4)
DEBUG:numba.core.ssa:on stmt: return $34return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$24call.4': [(<numba.core.ir.Assign object at 0x0000019A176BDDD0>,
                            0)],
             '$34return_value.5': [(<numba.core.ir.Assign object at 0x0000019A176C3310>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A176BF110>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x0000019A176BF6D0>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x0000019A176BF550>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A176C24D0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=954)
           2	RESUME(arg=0, lineno=954)
           4	LOAD_GLOBAL(arg=1, lineno=955)
          16	LOAD_FAST(arg=0, lineno=955)
          18	LOAD_FAST(arg=1, lineno=955)
          20	LOAD_GLOBAL(arg=2, lineno=955)
          32	PRECALL(arg=3, lineno=955)
          36	CALL(arg=3, lineno=955)
          46	RETURN_VALUE(arg=None, lineno=955)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=954)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=954)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=955)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=2, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=PRECALL(arg=3, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3', '$20load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=CALL(arg=3, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3', '$20load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=955)
DEBUG:numba.core.byteflow:stack ['$36call.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$obj16.2'}), (18, {'res': '$name18.3'}), (20, {'idx': 1, 'res': '$20load_global.4'}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {}), (36, {'func': '$4load_global.0', 'args': ['$obj16.2', '$name18.3', '$20load_global.4'], 'kw_names': None, 'res': '$36call.5'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'retval': '$36call.5', 'castval': '$46return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$4load_global.0']
    $20load_global.4 = global(_getattr_default: _getattr_default_type()) ['$20load_global.4']
    $36call.5 = call $4load_global.0(obj, name, $20load_global.4, func=$4load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($20load_global.4, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.4', '$36call.5', '$4load_global.0', 'name', 'obj']
    $46return_value.6 = cast(value=$36call.5) ['$36call.5', '$46return_value.6']
    return $46return_value.6                 ['$46return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A176E83D0>
DEBUG:numba.core.ssa:on stmt: obj = arg(0, name=obj)
DEBUG:numba.core.ssa:on stmt: name = arg(1, name=name)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>)
DEBUG:numba.core.ssa:on stmt: $20load_global.4 = global(_getattr_default: _getattr_default_type())
DEBUG:numba.core.ssa:on stmt: $36call.5 = call $4load_global.0(obj, name, $20load_global.4, func=$4load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($20load_global.4, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $46return_value.6 = cast(value=$36call.5)
DEBUG:numba.core.ssa:on stmt: return $46return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$20load_global.4': [(<numba.core.ir.Assign object at 0x0000019A176DEED0>,
                                   0)],
             '$36call.5': [(<numba.core.ir.Assign object at 0x0000019A176DF0D0>,
                            0)],
             '$46return_value.6': [(<numba.core.ir.Assign object at 0x0000019A176DF350>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A176DE8D0>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x0000019A176DE690>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x0000019A176DE590>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A176E83D0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2557)
           2	RESUME(arg=0, lineno=2557)
           4	LOAD_FAST(arg=0, lineno=2557)
           6	RETURN_VALUE(arg=None, lineno=2557)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2557)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=2557)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2557)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=2557)
DEBUG:numba.core.byteflow:stack ['$s4.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$s4.0'}), (6, {'retval': '$s4.0', 'castval': '$6return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    s = arg(0, name=s)                       ['s']
    $6return_value.1 = cast(value=s)         ['$6return_value.1', 's']
    return $6return_value.1                  ['$6return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A176CE190>
DEBUG:numba.core.ssa:on stmt: s = arg(0, name=s)
DEBUG:numba.core.ssa:on stmt: $6return_value.1 = cast(value=s)
DEBUG:numba.core.ssa:on stmt: return $6return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$6return_value.1': [(<numba.core.ir.Assign object at 0x0000019A176CE990>,
                                   0)],
             's': [(<numba.core.ir.Assign object at 0x0000019A176CE290>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A176CE190>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1006)
           2	COPY_FREE_VARS(arg=1, lineno=1006)
           4	RESUME(arg=0, lineno=1006)
           6	LOAD_CONST(arg=1, lineno=1007)
           8	STORE_FAST(arg=1, lineno=1007)
          10	LOAD_GLOBAL(arg=1, lineno=1008)
          22	LOAD_FAST(arg=0, lineno=1008)
          24	LOAD_FAST(arg=1, lineno=1008)
          26	PRECALL(arg=2, lineno=1008)
          30	CALL(arg=2, lineno=1008)
          40	LOAD_CONST(arg=2, lineno=1008)
          42	COMPARE_OP(arg=2, lineno=1008)
          48	POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=1008)
          50	PUSH_NULL(arg=None, lineno=1009)
          52	LOAD_GLOBAL(arg=3, lineno=1009)
          64	LOAD_FAST(arg=0, lineno=1009)
          66	LOAD_FAST(arg=1, lineno=1009)
          68	PRECALL(arg=2, lineno=1009)
          72	CALL(arg=2, lineno=1009)
          82	PRECALL(arg=0, lineno=1009)
          86	CALL(arg=0, lineno=1009)
          96	RETURN_VALUE(arg=None, lineno=1009)
>         98	LOAD_DEREF(arg=2, lineno=1013)
         100	RETURN_VALUE(arg=None, lineno=1013)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1006)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=1006)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=RESUME(arg=0, lineno=1006)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1007)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=1, lineno=1007)
DEBUG:numba.core.byteflow:stack ['$const6.0.1']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=1008)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1008)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$10load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1008)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$10load_global.1', '$obj22.3']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=PRECALL(arg=2, lineno=1008)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$10load_global.1', '$obj22.3', '$attr24.4']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=CALL(arg=2, lineno=1008)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$10load_global.1', '$obj22.3', '$attr24.4']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=1008)
DEBUG:numba.core.byteflow:stack ['$30call.5']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=COMPARE_OP(arg=2, lineno=1008)
DEBUG:numba.core.byteflow:stack ['$30call.5', '$const40.6.2']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=POP_JUMP_FORWARD_IF_FALSE(arg=24, lineno=1008)
DEBUG:numba.core.byteflow:stack ['$42compare_op.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=50, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=50 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=50, inst=PUSH_NULL(arg=None, lineno=1009)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_GLOBAL(arg=3, lineno=1009)
DEBUG:numba.core.byteflow:stack ['$null$50.0']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=0, lineno=1009)
DEBUG:numba.core.byteflow:stack ['$null$50.0', '$null$52.2', '$52load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=1, lineno=1009)
DEBUG:numba.core.byteflow:stack ['$null$50.0', '$null$52.2', '$52load_global.1', '$obj64.3']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=PRECALL(arg=2, lineno=1009)
DEBUG:numba.core.byteflow:stack ['$null$50.0', '$null$52.2', '$52load_global.1', '$obj64.3', '$attr66.4']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=CALL(arg=2, lineno=1009)
DEBUG:numba.core.byteflow:stack ['$null$50.0', '$null$52.2', '$52load_global.1', '$obj64.3', '$attr66.4']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=PRECALL(arg=0, lineno=1009)
DEBUG:numba.core.byteflow:stack ['$null$50.0', '$72call.5']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=CALL(arg=0, lineno=1009)
DEBUG:numba.core.byteflow:stack ['$null$50.0', '$72call.5']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=RETURN_VALUE(arg=None, lineno=1009)
DEBUG:numba.core.byteflow:stack ['$86call.6']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=98 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=98 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_DEREF(arg=2, lineno=1013)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1013)
DEBUG:numba.core.byteflow:stack ['$98load_deref.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$const6.0.1'}), (8, {'value': '$const6.0.1'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {'res': '$obj22.3'}), (24, {'res': '$attr24.4'}), (26, {}), (28, {}), (30, {'func': '$10load_global.1', 'args': ['$obj22.3', '$attr24.4'], 'kw_names': None, 'res': '$30call.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$const40.6.2'}), (42, {'lhs': '$30call.5', 'rhs': '$const40.6.2', 'res': '$42compare_op.7'}), (44, {}), (46, {}), (48, {'pred': '$42compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: (), 98: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=50 nstack_initial=0):
AdaptBlockInfo(insts=((50, {}), (52, {'idx': 1, 'res': '$52load_global.1'}), (54, {}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {'res': '$obj64.3'}), (66, {'res': '$attr66.4'}), (68, {}), (70, {}), (72, {'func': '$52load_global.1', 'args': ['$obj64.3', '$attr66.4'], 'kw_names': None, 'res': '$72call.5'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {'func': '$72call.5', 'args': [], 'kw_names': None, 'res': '$86call.6'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'retval': '$86call.6', 'castval': '$96return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$98load_deref.0'}), (100, {'retval': '$98load_deref.0', 'castval': '$100return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    obj = arg(0, name=obj)                   ['obj']
    attr = const(str, __repr__)              ['attr']
    $10load_global.1 = global(hasattr: <built-in function hasattr>) ['$10load_global.1']
    $30call.5 = call $10load_global.1(obj, attr, func=$10load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.1', '$30call.5', 'attr', 'obj']
    $const40.6.2 = const(bool, True)         ['$const40.6.2']
    $42compare_op.7 = $30call.5 == $const40.6.2 ['$30call.5', '$42compare_op.7', '$const40.6.2']
    bool48 = global(bool: <class 'bool'>)    ['bool48']
    $48pred = call bool48($42compare_op.7, func=bool48, args=(Var($42compare_op.7, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None) ['$42compare_op.7', '$48pred', 'bool48']
    branch $48pred, 50, 98                   ['$48pred']
label 50:
    $52load_global.1 = global(getattr: <built-in function getattr>) ['$52load_global.1']
    $72call.5 = call $52load_global.1(obj, attr, func=$52load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_global.1', '$72call.5', 'attr', 'obj']
    $86call.6 = call $72call.5(func=$72call.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$72call.5', '$86call.6']
    $96return_value.7 = cast(value=$86call.6) ['$86call.6', '$96return_value.7']
    return $96return_value.7                 ['$96return_value.7']
label 98:
    $98load_deref.0 = freevar(missing_repr_format: <object type:unicode_type>) ['$98load_deref.0']
    $100return_value.1 = cast(value=$98load_deref.0) ['$100return_value.1', '$98load_deref.0']
    return $100return_value.1                ['$100return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17697F50>
DEBUG:numba.core.ssa:on stmt: obj = arg(0, name=obj)
DEBUG:numba.core.ssa:on stmt: attr = const(str, __repr__)
DEBUG:numba.core.ssa:on stmt: $10load_global.1 = global(hasattr: <built-in function hasattr>)
DEBUG:numba.core.ssa:on stmt: $30call.5 = call $10load_global.1(obj, attr, func=$10load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const40.6.2 = const(bool, True)
DEBUG:numba.core.ssa:on stmt: $42compare_op.7 = $30call.5 == $const40.6.2
DEBUG:numba.core.ssa:on stmt: bool48 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $48pred = call bool48($42compare_op.7, func=bool48, args=(Var($42compare_op.7, old_builtins.py:1008),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $48pred, 50, 98
DEBUG:numba.core.ssa:==== SSA block analysis pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17697F50>
DEBUG:numba.core.ssa:on stmt: $52load_global.1 = global(getattr: <built-in function getattr>)
DEBUG:numba.core.ssa:on stmt: $72call.5 = call $52load_global.1(obj, attr, func=$52load_global.1, args=[Var(obj, old_builtins.py:1006), Var(attr, old_builtins.py:1007)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $86call.6 = call $72call.5(func=$72call.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $96return_value.7 = cast(value=$86call.6)
DEBUG:numba.core.ssa:on stmt: return $96return_value.7
DEBUG:numba.core.ssa:==== SSA block analysis pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17697F50>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(missing_repr_format: <object type:unicode_type>)
DEBUG:numba.core.ssa:on stmt: $100return_value.1 = cast(value=$98load_deref.0)
DEBUG:numba.core.ssa:on stmt: return $100return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100return_value.1': [(<numba.core.ir.Assign object at 0x0000019A17696D90>,
                                     98)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x0000019A176433D0>,
                                   0)],
             '$30call.5': [(<numba.core.ir.Assign object at 0x0000019A17643050>,
                            0)],
             '$42compare_op.7': [(<numba.core.ir.Assign object at 0x0000019A176430D0>,
                                  0)],
             '$48pred': [(<numba.core.ir.Assign object at 0x0000019A17641590>,
                          0)],
             '$52load_global.1': [(<numba.core.ir.Assign object at 0x0000019A17640A90>,
                                   50)],
             '$72call.5': [(<numba.core.ir.Assign object at 0x0000019A17641150>,
                            50)],
             '$86call.6': [(<numba.core.ir.Assign object at 0x0000019A17697A10>,
                            50)],
             '$96return_value.7': [(<numba.core.ir.Assign object at 0x0000019A17696810>,
                                    50)],
             '$98load_deref.0': [(<numba.core.ir.Assign object at 0x0000019A176965D0>,
                                  98)],
             '$const40.6.2': [(<numba.core.ir.Assign object at 0x0000019A17642610>,
                               0)],
             'attr': [(<numba.core.ir.Assign object at 0x0000019A17643890>, 0)],
             'bool48': [(<numba.core.ir.Assign object at 0x0000019A17640810>,
                         0)],
             'obj': [(<numba.core.ir.Assign object at 0x0000019A17642C10>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17697F50>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          16	LOAD_FAST(arg=0, lineno=999)
          18	LOAD_FAST(arg=1, lineno=999)
          20	PRECALL(arg=2, lineno=999)
          24	CALL(arg=2, lineno=999)
          34	RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=PRECALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:stack ['$24call.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$obj16.2'}), (18, {'res': '$name18.3'}), (20, {}), (22, {}), (24, {'func': '$4load_global.0', 'args': ['$obj16.2', '$name18.3'], 'kw_names': None, 'res': '$24call.4'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'retval': '$24call.4', 'castval': '$34return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$24call.4', '$4load_global.0', 'name', 'obj']
    $34return_value.5 = cast(value=$24call.4) ['$24call.4', '$34return_value.5']
    return $34return_value.5                 ['$34return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17685190>
DEBUG:numba.core.ssa:on stmt: obj = arg(0, name=obj)
DEBUG:numba.core.ssa:on stmt: name = arg(1, name=name)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
DEBUG:numba.core.ssa:on stmt: $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34return_value.5 = cast(value=$24call.4)
DEBUG:numba.core.ssa:on stmt: return $34return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$24call.4': [(<numba.core.ir.Assign object at 0x0000019A176851D0>,
                            0)],
             '$34return_value.5': [(<numba.core.ir.Assign object at 0x0000019A17685010>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A176855D0>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x0000019A17686090>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x0000019A17686D10>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17685190>
DEBUG:numba.core.typeinfer:captured error
Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(bool, 1, 'A', False, aligned=True), slice<a:b>, Array(bool, 1, 'A', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(unicode_type, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(unicode_type, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
DEBUG:numba.core.typeinfer:captured error
Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(bool, 1, 'A', False, aligned=True), slice<a:b>, Array(bool, 1, 'A', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(unicode_type, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(unicode_type, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          16	LOAD_FAST(arg=0, lineno=999)
          18	LOAD_FAST(arg=1, lineno=999)
          20	PRECALL(arg=2, lineno=999)
          24	CALL(arg=2, lineno=999)
          34	RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=PRECALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:stack ['$24call.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$obj16.2'}), (18, {'res': '$name18.3'}), (20, {}), (22, {}), (24, {'func': '$4load_global.0', 'args': ['$obj16.2', '$name18.3'], 'kw_names': None, 'res': '$24call.4'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'retval': '$24call.4', 'castval': '$34return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$24call.4', '$4load_global.0', 'name', 'obj']
    $34return_value.5 = cast(value=$24call.4) ['$24call.4', '$34return_value.5']
    return $34return_value.5                 ['$34return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1754DF10>
DEBUG:numba.core.ssa:on stmt: obj = arg(0, name=obj)
DEBUG:numba.core.ssa:on stmt: name = arg(1, name=name)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
DEBUG:numba.core.ssa:on stmt: $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34return_value.5 = cast(value=$24call.4)
DEBUG:numba.core.ssa:on stmt: return $34return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$24call.4': [(<numba.core.ir.Assign object at 0x0000019A1754C890>,
                            0)],
             '$34return_value.5': [(<numba.core.ir.Assign object at 0x0000019A1754E450>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17539390>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x0000019A17539150>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x0000019A17538590>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A1754DF10>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=954)
           2	RESUME(arg=0, lineno=954)
           4	LOAD_GLOBAL(arg=1, lineno=955)
          16	LOAD_FAST(arg=0, lineno=955)
          18	LOAD_FAST(arg=1, lineno=955)
          20	LOAD_GLOBAL(arg=2, lineno=955)
          32	PRECALL(arg=3, lineno=955)
          36	CALL(arg=3, lineno=955)
          46	RETURN_VALUE(arg=None, lineno=955)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=954)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=954)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=955)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_GLOBAL(arg=2, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=PRECALL(arg=3, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3', '$20load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=CALL(arg=3, lineno=955)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3', '$20load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=955)
DEBUG:numba.core.byteflow:stack ['$36call.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$obj16.2'}), (18, {'res': '$name18.3'}), (20, {'idx': 1, 'res': '$20load_global.4'}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {}), (36, {'func': '$4load_global.0', 'args': ['$obj16.2', '$name18.3', '$20load_global.4'], 'kw_names': None, 'res': '$36call.5'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'retval': '$36call.5', 'castval': '$46return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>) ['$4load_global.0']
    $20load_global.4 = global(_getattr_default: _getattr_default_type()) ['$20load_global.4']
    $36call.5 = call $4load_global.0(obj, name, $20load_global.4, func=$4load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($20load_global.4, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None) ['$20load_global.4', '$36call.5', '$4load_global.0', 'name', 'obj']
    $46return_value.6 = cast(value=$36call.5) ['$36call.5', '$46return_value.6']
    return $46return_value.6                 ['$46return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17536910>
DEBUG:numba.core.ssa:on stmt: obj = arg(0, name=obj)
DEBUG:numba.core.ssa:on stmt: name = arg(1, name=name)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(resolve_getattr: <intrinsic resolve_getattr>)
DEBUG:numba.core.ssa:on stmt: $20load_global.4 = global(_getattr_default: _getattr_default_type())
DEBUG:numba.core.ssa:on stmt: $36call.5 = call $4load_global.0(obj, name, $20load_global.4, func=$4load_global.0, args=[Var(obj, old_builtins.py:954), Var(name, old_builtins.py:954), Var($20load_global.4, old_builtins.py:955)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $46return_value.6 = cast(value=$36call.5)
DEBUG:numba.core.ssa:on stmt: return $46return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$20load_global.4': [(<numba.core.ir.Assign object at 0x0000019A17513950>,
                                   0)],
             '$36call.5': [(<numba.core.ir.Assign object at 0x0000019A175133D0>,
                            0)],
             '$46return_value.6': [(<numba.core.ir.Assign object at 0x0000019A17513050>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A175136D0>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x0000019A17510B90>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x0000019A17510A50>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17536910>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2564)
           2	RESUME(arg=0, lineno=2564)
           4	LOAD_CONST(arg=1, lineno=2564)
           6	LOAD_FAST(arg=0, lineno=2564)
           8	BINARY_OP(arg=0, lineno=2564)
          12	LOAD_CONST(arg=1, lineno=2564)
          14	BINARY_OP(arg=0, lineno=2564)
          18	RETURN_VALUE(arg=None, lineno=2564)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2564)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=2564)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=2564)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2564)
DEBUG:numba.core.byteflow:stack ['$const4.0.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_OP(arg=0, lineno=2564)
DEBUG:numba.core.byteflow:stack ['$const4.0.1', '$s6.1']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=2564)
DEBUG:numba.core.byteflow:stack ['$binop_add8.2']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=BINARY_OP(arg=0, lineno=2564)
DEBUG:numba.core.byteflow:stack ['$binop_add8.2', '$const12.3.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=RETURN_VALUE(arg=None, lineno=2564)
DEBUG:numba.core.byteflow:stack ['$binop_add14.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0.1'}), (6, {'res': '$s6.1'}), (8, {'op': '+', 'lhs': '$const4.0.1', 'rhs': '$s6.1', 'res': '$binop_add8.2'}), (10, {}), (12, {'res': '$const12.3.1'}), (14, {'op': '+', 'lhs': '$binop_add8.2', 'rhs': '$const12.3.1', 'res': '$binop_add14.4'}), (16, {}), (18, {'retval': '$binop_add14.4', 'castval': '$18return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    s = arg(0, name=s)                       ['s']
    $const4.0.1 = const(str, ')              ['$const4.0.1']
    $binop_add8.2 = $const4.0.1 + s          ['$binop_add8.2', '$const4.0.1', 's']
    $const12.3.1 = const(str, ')             ['$const12.3.1']
    $binop_add14.4 = $binop_add8.2 + $const12.3.1 ['$binop_add14.4', '$binop_add8.2', '$const12.3.1']
    $18return_value.5 = cast(value=$binop_add14.4) ['$18return_value.5', '$binop_add14.4']
    return $18return_value.5                 ['$18return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17456990>
DEBUG:numba.core.ssa:on stmt: s = arg(0, name=s)
DEBUG:numba.core.ssa:on stmt: $const4.0.1 = const(str, ')
DEBUG:numba.core.ssa:on stmt: $binop_add8.2 = $const4.0.1 + s
DEBUG:numba.core.ssa:on stmt: $const12.3.1 = const(str, ')
DEBUG:numba.core.ssa:on stmt: $binop_add14.4 = $binop_add8.2 + $const12.3.1
DEBUG:numba.core.ssa:on stmt: $18return_value.5 = cast(value=$binop_add14.4)
DEBUG:numba.core.ssa:on stmt: return $18return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$18return_value.5': [(<numba.core.ir.Assign object at 0x0000019A17455510>,
                                    0)],
             '$binop_add14.4': [(<numba.core.ir.Assign object at 0x0000019A174551D0>,
                                 0)],
             '$binop_add8.2': [(<numba.core.ir.Assign object at 0x0000019A17457D50>,
                                0)],
             '$const12.3.1': [(<numba.core.ir.Assign object at 0x0000019A17455110>,
                               0)],
             '$const4.0.1': [(<numba.core.ir.Assign object at 0x0000019A17454050>,
                              0)],
             's': [(<numba.core.ir.Assign object at 0x0000019A17456CD0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17456990>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          16	LOAD_FAST(arg=0, lineno=999)
          18	LOAD_FAST(arg=1, lineno=999)
          20	PRECALL(arg=2, lineno=999)
          24	CALL(arg=2, lineno=999)
          34	RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=PRECALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:stack ['$24call.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$obj16.2'}), (18, {'res': '$name18.3'}), (20, {}), (22, {}), (24, {'func': '$4load_global.0', 'args': ['$obj16.2', '$name18.3'], 'kw_names': None, 'res': '$24call.4'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'retval': '$24call.4', 'castval': '$34return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$24call.4', '$4load_global.0', 'name', 'obj']
    $34return_value.5 = cast(value=$24call.4) ['$24call.4', '$34return_value.5']
    return $34return_value.5                 ['$34return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17506B50>
DEBUG:numba.core.ssa:on stmt: obj = arg(0, name=obj)
DEBUG:numba.core.ssa:on stmt: name = arg(1, name=name)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
DEBUG:numba.core.ssa:on stmt: $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34return_value.5 = cast(value=$24call.4)
DEBUG:numba.core.ssa:on stmt: return $34return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$24call.4': [(<numba.core.ir.Assign object at 0x0000019A17505150>,
                            0)],
             '$34return_value.5': [(<numba.core.ir.Assign object at 0x0000019A17505C90>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17507790>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x0000019A17516710>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x0000019A17516D10>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17506B50>
DEBUG:numba.core.typeinfer:captured error
Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(bool, 1, 'A', False, aligned=True), slice<a:b>, Array(bool, 1, 'A', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(unicode_type, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(unicode_type, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
DEBUG:numba.core.typeinfer:captured error
Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(bool, 1, 'A', False, aligned=True), slice<a:b>, Array(bool, 1, 'A', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(unicode_type, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(unicode_type, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=998)
           2	RESUME(arg=0, lineno=998)
           4	LOAD_GLOBAL(arg=1, lineno=999)
          16	LOAD_FAST(arg=0, lineno=999)
          18	LOAD_FAST(arg=1, lineno=999)
          20	PRECALL(arg=2, lineno=999)
          24	CALL(arg=2, lineno=999)
          34	RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=998)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=PRECALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=CALL(arg=2, lineno=999)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$obj16.2', '$name18.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=RETURN_VALUE(arg=None, lineno=999)
DEBUG:numba.core.byteflow:stack ['$24call.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$obj16.2'}), (18, {'res': '$name18.3'}), (20, {}), (22, {}), (24, {'func': '$4load_global.0', 'args': ['$obj16.2', '$name18.3'], 'kw_names': None, 'res': '$24call.4'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'retval': '$24call.4', 'castval': '$34return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    obj = arg(0, name=obj)                   ['obj']
    name = arg(1, name=name)                 ['name']
    $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>) ['$4load_global.0']
    $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None) ['$24call.4', '$4load_global.0', 'name', 'obj']
    $34return_value.5 = cast(value=$24call.4) ['$24call.4', '$34return_value.5']
    return $34return_value.5                 ['$34return_value.5']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A162AF9D0>
DEBUG:numba.core.ssa:on stmt: obj = arg(0, name=obj)
DEBUG:numba.core.ssa:on stmt: name = arg(1, name=name)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(resolve_hasattr: <intrinsic resolve_hasattr>)
DEBUG:numba.core.ssa:on stmt: $24call.4 = call $4load_global.0(obj, name, func=$4load_global.0, args=[Var(obj, old_builtins.py:998), Var(name, old_builtins.py:998)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $34return_value.5 = cast(value=$24call.4)
DEBUG:numba.core.ssa:on stmt: return $34return_value.5
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$24call.4': [(<numba.core.ir.Assign object at 0x0000019A162A50D0>,
                            0)],
             '$34return_value.5': [(<numba.core.ir.Assign object at 0x0000019A162A6810>,
                                    0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A162A6F90>,
                                  0)],
             'name': [(<numba.core.ir.Assign object at 0x0000019A162A7D10>, 0)],
             'obj': [(<numba.core.ir.Assign object at 0x0000019A162A79D0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A162AF9D0>
DEBUG:numba.core.typeinfer:captured error
Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(bool, 1, 'A', False, aligned=True), slice<a:b>, Array(bool, 1, 'A', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(unicode_type, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(unicode_type, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
DEBUG:numba.core.typeinfer:captured error
Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\lowering.py", line 511, in lower_inst
    impl = self.context.get_function('static_setitem', signature)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 556, in get_function
    return self.get_function(fn, sig, _firstcall=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\base.py", line 558, in get_function
    raise NotImplementedError("No definition for lowering %s%s" % (key, sig))
NotImplementedError: No definition for lowering static_setitem(Array(bool, 1, 'A', False, aligned=True), slice<a:b>, Array(bool, 1, 'A', False, aligned=True)) -> none

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 160, in propagate
    constraint(typeinfer)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 566, in __call__
    self.resolve(typeinfer, typevars, fnty)
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 589, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typeinfer.py", line 1560, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 212, in resolve_function_type
    raise last_exception
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 195, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\typing\context.py", line 247, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 329, in get_call_type
    failures.raise_error()
  File "C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\core\types\functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: [1m[1m[1mNo implementation of function Function(<intrinsic resolve_hasattr>) found for signature:
 
 >>> resolve_hasattr(unicode_type, unicode_type)
 
There are 2 candidate implementations:
[1m      - Of which 2 did not match due to:
      Intrinsic in function 'resolve_hasattr': File: numba\cpython\old_builtins.py: Line 970.
        With argument(s): '(unicode_type, unicode_type)':[0m
[1m       Rejected as the implementation raised a specific error:
         RequireLiteralValue: [1margument 'name' must be a literal string[0m[0m
  raised from C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py:973
[0m
[0m[1mDuring: resolving callee type: Function(<intrinsic resolve_hasattr>)[0m
[0m[1mDuring: typing of call at C:\Users\Administrator\.conda\envs\speech-to-speech\Lib\site-packages\numba\cpython\old_builtins.py (999)
[0m
DEBUG:root:send audio data 1748516236.991153
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1154)
           2	RESUME(arg=0, lineno=1154)
           4	LOAD_GLOBAL(arg=1, lineno=1170)
          16	LOAD_FAST(arg=0, lineno=1170)
          18	LOAD_FAST(arg=1, lineno=1170)
          20	LOAD_FAST(arg=2, lineno=1170)
          22	PRECALL(arg=3, lineno=1170)
          26	CALL(arg=3, lineno=1170)
          36	LOAD_FAST(arg=3, lineno=1170)
          38	LOAD_CONST(arg=1, lineno=1170)
          40	LOAD_CONST(arg=1, lineno=1170)
          42	BUILD_SLICE(arg=2, lineno=1170)
          44	STORE_SUBSCR(arg=None, lineno=1170)
          48	LOAD_CONST(arg=1, lineno=1170)
          50	RETURN_VALUE(arg=None, lineno=1170)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1154)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1154)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1170)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=PRECALL(arg=3, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3', '$zero_pos20.4']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=CALL(arg=3, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2', '$threshold18.3', '$zero_pos20.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_FAST(arg=3, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$26call.5']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$26call.5', '$y36.6']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$26call.5', '$y36.6', '$const38.7.1']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BUILD_SLICE(arg=2, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$26call.5', '$y36.6', '$const38.7.1', '$const40.8.1']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=STORE_SUBSCR(arg=None, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$26call.5', '$y36.6', '$42build_slice.10']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=1170)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=RETURN_VALUE(arg=None, lineno=1170)
DEBUG:numba.core.byteflow:stack ['$const48.11.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$threshold18.3'}), (20, {'res': '$zero_pos20.4'}), (22, {}), (24, {}), (26, {'func': '$4load_global.0', 'args': ['$x16.2', '$threshold18.3', '$zero_pos20.4'], 'kw_names': None, 'res': '$26call.5'}), (28, {}), (30, {}), (32, {}), (34, {}), (36, {'res': '$y36.6'}), (38, {'res': '$const38.7.1'}), (40, {'res': '$const40.8.1'}), (42, {'start': '$const38.7.1', 'stop': '$const40.8.1', 'step': None, 'res': '$42build_slice.10', 'slicevar': '$42build_slice.9'}), (44, {'target': '$y36.6', 'index': '$42build_slice.10', 'value': '$26call.5'}), (46, {}), (48, {'res': '$const48.11.1'}), (50, {'retval': '$const48.11.1', 'castval': '$50return_value.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    y = arg(3, name=y)                       ['y']
    $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x0000019A1541F1D0>) ['$4load_global.0']
    $26call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None) ['$26call.5', '$4load_global.0', 'threshold', 'x', 'zero_pos']
    $const38.7.1 = const(NoneType, None)     ['$const38.7.1']
    $const40.8.1 = const(NoneType, None)     ['$const40.8.1']
    $42build_slice.9 = global(slice: <class 'slice'>) ['$42build_slice.9']
    $42build_slice.10 = call $42build_slice.9($const38.7.1, $const40.8.1, func=$42build_slice.9, args=(Var($const38.7.1, audio.py:1170), Var($const40.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None) ['$42build_slice.10', '$42build_slice.9', '$const38.7.1', '$const40.8.1']
    y[$42build_slice.10] = $26call.5         ['$26call.5', '$42build_slice.10', 'y']
    $const48.11.1 = const(NoneType, None)    ['$const48.11.1']
    $50return_value.12 = cast(value=$const48.11.1) ['$50return_value.12', '$const48.11.1']
    return $50return_value.12                ['$50return_value.12']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1617E310>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: threshold = arg(1, name=threshold)
DEBUG:numba.core.ssa:on stmt: zero_pos = arg(2, name=zero_pos)
DEBUG:numba.core.ssa:on stmt: y = arg(3, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(_zc_stencil: <numba.stencils.stencil.StencilFunc object at 0x0000019A1541F1D0>)
DEBUG:numba.core.ssa:on stmt: $26call.5 = call $4load_global.0(x, threshold, zero_pos, func=$4load_global.0, args=[Var(x, audio.py:1154), Var(threshold, audio.py:1154), Var(zero_pos, audio.py:1154)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const38.7.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const40.8.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $42build_slice.9 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $42build_slice.10 = call $42build_slice.9($const38.7.1, $const40.8.1, func=$42build_slice.9, args=(Var($const38.7.1, audio.py:1170), Var($const40.8.1, audio.py:1170)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: y[slice(None, None, None)] = $26call.5
DEBUG:numba.core.ssa:on stmt: $const48.11.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $50return_value.12 = cast(value=$const48.11.1)
DEBUG:numba.core.ssa:on stmt: return $50return_value.12
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$26call.5': [(<numba.core.ir.Assign object at 0x0000019A1615B0D0>,
                            0)],
             '$42build_slice.10': [(<numba.core.ir.Assign object at 0x0000019A1615A3D0>,
                                    0)],
             '$42build_slice.9': [(<numba.core.ir.Assign object at 0x0000019A1615A4D0>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A16158C50>,
                                  0)],
             '$50return_value.12': [(<numba.core.ir.Assign object at 0x0000019A16159950>,
                                     0)],
             '$const38.7.1': [(<numba.core.ir.Assign object at 0x0000019A1615B190>,
                               0)],
             '$const40.8.1': [(<numba.core.ir.Assign object at 0x0000019A16159810>,
                               0)],
             '$const48.11.1': [(<numba.core.ir.Assign object at 0x0000019A1615A190>,
                                0)],
             'threshold': [(<numba.core.ir.Assign object at 0x0000019A1615BD50>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A1615A590>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000019A1615B890>, 0)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x0000019A16159110>,
                           0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A1617E310>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=3, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=3, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=4, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=4, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=4, lineno=5)
         112	LOAD_CONST(arg=2, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=3, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=2, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=5, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=6, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=4, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=3, lineno=2)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$18load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=CALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=STORE_FAST(arg=4, lineno=3)
DEBUG:numba.core.byteflow:stack ['$82call.8']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=4, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0', '$const100.12.3']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$102build_slice.14']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=4, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_CONST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.2']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.2', '$const114.18.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$116build_slice.20']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$154call.27']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_FAST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30.2']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.2']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.2']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$218call.38']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi230.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=230 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi230.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=240 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=240, inst=LOAD_FAST(arg=4, lineno=8)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:stack ['$out0240.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=232 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=232, inst=STORE_FAST(arg=5, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=STORE_FAST(arg=6, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$const234.2.2']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9.2'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11.0'}), (100, {'res': '$const100.12.3'}), (102, {'start': '$const98.11.0', 'stop': '$const100.12.3', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9.2'}), (106, {}), (108, {'res': '$const108.15.2'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17.2'}), (114, {'res': '$const114.18.0'}), (116, {'start': '$const112.17.2', 'stop': '$const114.18.0', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15.2'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25.2'}), (148, {'res': '$const148.26.4'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25.2', '$const148.26.4'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30.2'}), (170, {'index': '$const168.30.2', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34.2'}), (194, {'res': '$const194.35.2'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34.2', '$const194.35.2'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2.2'}), (236, {'value': '$const234.2.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9.2 = const(int, 0)             ['$const94.9.2']
    $const98.11.0 = const(NoneType, None)    ['$const98.11.0']
    $const100.12.3 = const(int, 1)           ['$const100.12.3']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11.0, $const100.12.3, func=$102build_slice.13, args=(Var($const98.11.0, <string>:4), Var($const100.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12.3', '$const98.11.0']
    out0[$102build_slice.14] = $const94.9.2  ['$102build_slice.14', '$const94.9.2', 'out0']
    $const108.15.2 = const(int, 0)           ['$const108.15.2']
    $const112.17.2 = const(int, 0)           ['$const112.17.2']
    $const114.18.0 = const(NoneType, None)   ['$const114.18.0']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17.2, $const114.18.0, func=$116build_slice.19, args=(Var($const112.17.2, <string>:5), Var($const114.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17.2', '$const114.18.0']
    out0[$116build_slice.20] = $const108.15.2 ['$116build_slice.20', '$const108.15.2', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25.2 = const(int, 0)           ['$const146.25.2']
    $const148.26.4 = const(int, -1)          ['$const148.26.4']
    $154call.27 = call $134load_global.23($const146.25.2, $const148.26.4, func=$134load_global.23, args=[Var($const146.25.2, <string>:6), Var($const148.26.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25.2', '$const148.26.4']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30.2 = const(int, 0)           ['$const168.30.2']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30.2, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30.2', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34.2 = const(int, 0)           ['$const192.34.2']
    $const194.35.2 = const(int, 0)           ['$const194.35.2']
    $200call.36 = call $180load_global.32($const192.34.2, $const194.35.2, func=$180load_global.32, args=[Var($const192.34.2, <string>:6), Var($const194.35.2, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34.2', '$const194.35.2']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160E8B10>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: threshold = arg(1, name=threshold)
DEBUG:numba.core.ssa:on stmt: zero_pos = arg(2, name=zero_pos)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.2.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.2.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.2.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block analysis pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160E8B10>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 442
DEBUG:numba.core.ssa:==== SSA block analysis pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160E8B10>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block analysis pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160E8B10>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160E8B10>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi38.0 = x0
DEBUG:numba.core.ssa:on stmt: branch $36pred, 241, 291
DEBUG:numba.core.ssa:==== SSA block analysis pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160E8B10>
DEBUG:numba.core.ssa:on stmt: $40compare_op.2 = x0 <= threshold
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 279, 295
DEBUG:numba.core.ssa:==== SSA block analysis pass on 279
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160E8B10>
DEBUG:numba.core.ssa:on stmt: jump 289
DEBUG:numba.core.ssa:==== SSA block analysis pass on 291
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160E8B10>
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block analysis pass on 289
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160E8B10>
DEBUG:numba.core.ssa:on stmt: x0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block analysis pass on 295
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160E8B10>
DEBUG:numba.core.ssa:on stmt: $const60.1.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const60.1.2 + index00
DEBUG:numba.core.ssa:on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
DEBUG:numba.core.ssa:on stmt: bool90 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi92.0 = x1
DEBUG:numba.core.ssa:on stmt: branch $90pred, 299, 345
DEBUG:numba.core.ssa:==== SSA block analysis pass on 299
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160E8B10>
DEBUG:numba.core.ssa:on stmt: $94compare_op.2 = x1 <= threshold
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 333, 349
DEBUG:numba.core.ssa:==== SSA block analysis pass on 333
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160E8B10>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block analysis pass on 345
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160E8B10>
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block analysis pass on 343
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160E8B10>
DEBUG:numba.core.ssa:on stmt: x1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block analysis pass on 349
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160E8B10>
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 353, 357
DEBUG:numba.core.ssa:==== SSA block analysis pass on 353
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160E8B10>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $192compare_op.10 = $144call.4 != $182call.9
DEBUG:numba.core.ssa:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $198return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block analysis pass on 357
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160E8B10>
DEBUG:numba.core.ssa:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
DEBUG:numba.core.ssa:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
DEBUG:numba.core.ssa:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $276compare_op.10 = $228call.4 != $266call.9
DEBUG:numba.core.ssa:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $282return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block analysis pass on 441
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160E8B10>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x0000019A160FD8D0>,
                           299)],
             '$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x0000019A1749FFD0>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x0000019A1749DD50>,
                                       0)],
             '$114pred': [(<numba.core.ir.Assign object at 0x0000019A161176D0>,
                           349)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x0000019A1749ED10>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x0000019A1749D1D0>,
                                       0)],
             '$116load_global.0': [(<numba.core.ir.Assign object at 0x0000019A15EAE790>,
                                    353)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x0000019A1749C310>,
                                       0)],
             '$128load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A15EAE410>,
                                  353)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x0000019A1749EB90>,
                                       0)],
             '$144call.4': [(<numba.core.ir.Assign object at 0x0000019A15EA9190>,
                             353)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x0000019A174C86D0>,
                                0)],
             '$154load_global.5': [(<numba.core.ir.Assign object at 0x0000019A15F1C1D0>,
                                    353)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x0000019A174C8D10>,
                                          0)],
             '$166load_attr.7': [(<numba.core.ir.Assign object at 0x0000019A15F10410>,
                                  353)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x0000019A174C8C90>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x0000019A174CA810>,
                                       0)],
             '$182call.9': [(<numba.core.ir.Assign object at 0x0000019A15F12110>,
                             353)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x0000019A17590150>,
                                     0)],
             '$192compare_op.10': [(<numba.core.ir.Assign object at 0x0000019A15F53D90>,
                                    353)],
             '$198return_value.11': [(<numba.core.ir.Assign object at 0x0000019A15F6B150>,
                                      353)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x0000019A174CAF10>,
                                0)],
             '$200load_global.0': [(<numba.core.ir.Assign object at 0x0000019A15F61FD0>,
                                    357)],
             '$212load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A15F63B90>,
                                  357)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x0000019A174C9010>,
                                0)],
             '$228call.4': [(<numba.core.ir.Assign object at 0x0000019A15F55ED0>,
                             357)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x0000019A174CB9D0>,
                                    0)],
             '$22unary_negative.4': [(<numba.core.ir.Assign object at 0x0000019A161E8AD0>,
                                      240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x0000019A174CB450>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x0000019A174CB890>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x0000019A174CBAD0>,
                                   230)],
             '$238load_global.5': [(<numba.core.ir.Assign object at 0x0000019A15F33DD0>,
                                    357)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x0000019A174CB390>,
                                       442)],
             '$250load_attr.7': [(<numba.core.ir.Assign object at 0x0000019A15F41050>,
                                  357)],
             '$266call.9': [(<numba.core.ir.Assign object at 0x0000019A15F3CCD0>,
                             357)],
             '$276compare_op.10': [(<numba.core.ir.Assign object at 0x0000019A15F3D050>,
                                    357)],
             '$282return_value.11': [(<numba.core.ir.Assign object at 0x0000019A15F2ABD0>,
                                      357)],
             '$30compare_op.6': [(<numba.core.ir.Assign object at 0x0000019A161D94D0>,
                                  240)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x0000019A17591090>,
                                     0)],
             '$36pred': [(<numba.core.ir.Assign object at 0x0000019A161D8750>,
                          240)],
             '$40compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A174DDF10>,
                                  241)],
             '$46pred': [(<numba.core.ir.Assign object at 0x0000019A161E21D0>,
                          241)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x0000019A17590E50>,
                                     0)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x0000019A17591790>,
                                   0)],
             '$76unary_negative.4': [(<numba.core.ir.Assign object at 0x0000019A15FB70D0>,
                                      295)],
             '$84compare_op.6': [(<numba.core.ir.Assign object at 0x0000019A160BC4D0>,
                                  295)],
             '$90pred': [(<numba.core.ir.Assign object at 0x0000019A1611FED0>,
                          295)],
             '$94compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A161185D0>,
                                  299)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x0000019A174CB110>,
                                     0)],
             '$const100.12.3.1': [(<numba.core.ir.Assign object at 0x0000019A1749C710>,
                                   0)],
             '$const108.15.2.1': [(<numba.core.ir.Assign object at 0x0000019A1749C250>,
                                   0)],
             '$const112.17.2.1': [(<numba.core.ir.Assign object at 0x0000019A1749C410>,
                                   0)],
             '$const114.18.0.1': [(<numba.core.ir.Assign object at 0x0000019A1749F4D0>,
                                   0)],
             '$const146.25.2.1': [(<numba.core.ir.Assign object at 0x0000019A1749ECD0>,
                                   0)],
             '$const148.26.4.1': [(<numba.core.ir.Assign object at 0x0000019A174C9150>,
                                   0)],
             '$const168.30.2.1': [(<numba.core.ir.Assign object at 0x0000019A174C9550>,
                                   0)],
             '$const192.34.2.1': [(<numba.core.ir.Assign object at 0x0000019A174CA410>,
                                   0)],
             '$const194.35.2.1': [(<numba.core.ir.Assign object at 0x0000019A174CB190>,
                                   0)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x0000019A1617C910>,
                              240)],
             '$const60.1.2': [(<numba.core.ir.Assign object at 0x0000019A160F2550>,
                               295)],
             '$const94.9.2.1': [(<numba.core.ir.Assign object at 0x0000019A1749CF10>,
                                 0)],
             '$const98.11.0.1': [(<numba.core.ir.Assign object at 0x0000019A1749F6D0>,
                                  0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x0000019A17590AD0>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x0000019A174CBA50>,
                              230)],
             '$phi38.0': [(<numba.core.ir.Assign object at 0x0000019A161EAFD0>,
                           240)],
             '$phi92.0': [(<numba.core.ir.Assign object at 0x0000019A1611E850>,
                           295)],
             'bool100': [(<numba.core.ir.Assign object at 0x0000019A16119990>,
                          299)],
             'bool114': [(<numba.core.ir.Assign object at 0x0000019A16117F10>,
                          349)],
             'bool36': [(<numba.core.ir.Assign object at 0x0000019A161D8E50>,
                         240)],
             'bool46': [(<numba.core.ir.Assign object at 0x0000019A161E2D50>,
                         241)],
             'bool90': [(<numba.core.ir.Assign object at 0x0000019A15E9CD90>,
                         295)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x0000019A17590350>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x0000019A174CBE10>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x0000019A1749C810>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x0000019A176D42D0>,
                                240),
                               (<numba.core.ir.Assign object at 0x0000019A161EAED0>,
                                295)],
             'threshold': [(<numba.core.ir.Assign object at 0x0000019A17592890>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A17590FD0>, 0)],
             'x0': [(<numba.core.ir.Assign object at 0x0000019A176D4210>, 240),
                    (<numba.core.ir.Assign object at 0x0000019A160F3250>, 289)],
             'x1': [(<numba.core.ir.Assign object at 0x0000019A176D4290>, 295),
                    (<numba.core.ir.Assign object at 0x0000019A1600C450>, 343)],
             'zero_pos': [(<numba.core.ir.Assign object at 0x0000019A17591910>,
                           0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A176CE250>
DEBUG:numba.core.ssa:Fix SSA violator on var stencil_index
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A162A5150>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: threshold = arg(1, name=threshold)
DEBUG:numba.core.ssa:on stmt: zero_pos = arg(2, name=zero_pos)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.2.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.2.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.2.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A162A5150>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A162A5150>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A162A5150>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A162A5150>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:first assign: stencil_index
DEBUG:numba.core.ssa:replaced with: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi38.0 = x0
DEBUG:numba.core.ssa:on stmt: branch $36pred, 241, 291
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A162A5150>
DEBUG:numba.core.ssa:on stmt: $40compare_op.2 = x0 <= threshold
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 279, 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 279
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A162A5150>
DEBUG:numba.core.ssa:on stmt: jump 289
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 291
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A162A5150>
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 289
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A162A5150>
DEBUG:numba.core.ssa:on stmt: x0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 295
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A162A5150>
DEBUG:numba.core.ssa:on stmt: $const60.1.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const60.1.2 + index00
DEBUG:numba.core.ssa:replaced with: stencil_index.1 = $const60.1.2 + index00
DEBUG:numba.core.ssa:on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
DEBUG:numba.core.ssa:on stmt: bool90 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi92.0 = x1
DEBUG:numba.core.ssa:on stmt: branch $90pred, 299, 345
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 299
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A162A5150>
DEBUG:numba.core.ssa:on stmt: $94compare_op.2 = x1 <= threshold
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 333, 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 333
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A162A5150>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 345
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A162A5150>
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 343
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A162A5150>
DEBUG:numba.core.ssa:on stmt: x1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 349
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A162A5150>
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 353, 357
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 353
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A162A5150>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $192compare_op.10 = $144call.4 != $182call.9
DEBUG:numba.core.ssa:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $198return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 357
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A162A5150>
DEBUG:numba.core.ssa:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
DEBUG:numba.core.ssa:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
DEBUG:numba.core.ssa:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $276compare_op.10 = $228call.4 != $266call.9
DEBUG:numba.core.ssa:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $282return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 441
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A162A5150>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {240: [<numba.core.ir.Assign object at 0x0000019A161EA5D0>],
             295: [<numba.core.ir.Assign object at 0x0000019A161EAC10>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17641550>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: threshold = arg(1, name=threshold)
DEBUG:numba.core.ssa:on stmt: zero_pos = arg(2, name=zero_pos)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.2.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.2.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.2.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17641550>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17641550>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17641550>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17641550>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='stencil_index' stmt=x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi38.0 = x0
DEBUG:numba.core.ssa:on stmt: branch $36pred, 241, 291
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17641550>
DEBUG:numba.core.ssa:on stmt: $40compare_op.2 = x0 <= threshold
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 279, 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 279
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17641550>
DEBUG:numba.core.ssa:on stmt: jump 289
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 291
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17641550>
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 289
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17641550>
DEBUG:numba.core.ssa:on stmt: x0 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 295
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17641550>
DEBUG:numba.core.ssa:on stmt: $const60.1.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const60.1.2 + index00
DEBUG:numba.core.ssa:on stmt: x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='stencil_index' stmt=x1 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
DEBUG:numba.core.ssa:on stmt: bool90 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi92.0 = x1
DEBUG:numba.core.ssa:on stmt: branch $90pred, 299, 345
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 299
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17641550>
DEBUG:numba.core.ssa:on stmt: $94compare_op.2 = x1 <= threshold
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 333, 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 333
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17641550>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 345
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17641550>
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 343
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17641550>
DEBUG:numba.core.ssa:on stmt: x1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 349
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17641550>
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 353, 357
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 353
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17641550>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $192compare_op.10 = $144call.4 != $182call.9
DEBUG:numba.core.ssa:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $198return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 357
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17641550>
DEBUG:numba.core.ssa:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
DEBUG:numba.core.ssa:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
DEBUG:numba.core.ssa:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $276compare_op.10 = $228call.4 != $266call.9
DEBUG:numba.core.ssa:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $282return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 441
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17641550>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:Fix SSA violator on var x0
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17539ED0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: threshold = arg(1, name=threshold)
DEBUG:numba.core.ssa:on stmt: zero_pos = arg(2, name=zero_pos)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.2.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.2.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.2.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17539ED0>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17539ED0>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17539ED0>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17539ED0>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:first assign: x0
DEBUG:numba.core.ssa:replaced with: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi38.0 = x0
DEBUG:numba.core.ssa:on stmt: branch $36pred, 241, 291
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17539ED0>
DEBUG:numba.core.ssa:on stmt: $40compare_op.2 = x0 <= threshold
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 279, 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 279
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17539ED0>
DEBUG:numba.core.ssa:on stmt: jump 289
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 291
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17539ED0>
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 289
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17539ED0>
DEBUG:numba.core.ssa:on stmt: x0 = const(int, 0)
DEBUG:numba.core.ssa:replaced with: x0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 295
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17539ED0>
DEBUG:numba.core.ssa:on stmt: $const60.1.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const60.1.2 + index00
DEBUG:numba.core.ssa:on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
DEBUG:numba.core.ssa:on stmt: bool90 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi92.0 = x1
DEBUG:numba.core.ssa:on stmt: branch $90pred, 299, 345
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 299
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17539ED0>
DEBUG:numba.core.ssa:on stmt: $94compare_op.2 = x1 <= threshold
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 333, 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 333
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17539ED0>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 345
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17539ED0>
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 343
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17539ED0>
DEBUG:numba.core.ssa:on stmt: x1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 349
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17539ED0>
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 353, 357
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 353
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17539ED0>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $192compare_op.10 = $144call.4 != $182call.9
DEBUG:numba.core.ssa:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $198return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 357
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17539ED0>
DEBUG:numba.core.ssa:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
DEBUG:numba.core.ssa:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
DEBUG:numba.core.ssa:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $276compare_op.10 = $228call.4 != $266call.9
DEBUG:numba.core.ssa:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $282return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 441
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17539ED0>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {240: [<numba.core.ir.Assign object at 0x0000019A161EB290>],
             289: [<numba.core.ir.Assign object at 0x0000019A161EAF50>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FDD0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: threshold = arg(1, name=threshold)
DEBUG:numba.core.ssa:on stmt: zero_pos = arg(2, name=zero_pos)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.2.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.2.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.2.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FDD0>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FDD0>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FDD0>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FDD0>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
DEBUG:numba.core.ssa:find_def var='x0' stmt=$30compare_op.6 = $22unary_negative.4 <= x0
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi38.0 = x0
DEBUG:numba.core.ssa:find_def var='x0' stmt=$phi38.0 = x0
DEBUG:numba.core.ssa:on stmt: branch $36pred, 241, 291
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FDD0>
DEBUG:numba.core.ssa:on stmt: $40compare_op.2 = x0 <= threshold
DEBUG:numba.core.ssa:find_def var='x0' stmt=$40compare_op.2 = x0 <= threshold
DEBUG:numba.core.ssa:find_def_from_top label 241
DEBUG:numba.core.ssa:idom 240 from label 241
DEBUG:numba.core.ssa:find_def_from_bottom label 240
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 279, 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 279
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FDD0>
DEBUG:numba.core.ssa:on stmt: jump 289
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 291
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FDD0>
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 289
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FDD0>
DEBUG:numba.core.ssa:on stmt: x0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 295
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FDD0>
DEBUG:numba.core.ssa:on stmt: $const60.1.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const60.1.2 + index00
DEBUG:numba.core.ssa:on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
DEBUG:numba.core.ssa:on stmt: bool90 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi92.0 = x1
DEBUG:numba.core.ssa:on stmt: branch $90pred, 299, 345
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 299
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FDD0>
DEBUG:numba.core.ssa:on stmt: $94compare_op.2 = x1 <= threshold
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 333, 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 333
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FDD0>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 345
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FDD0>
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 343
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FDD0>
DEBUG:numba.core.ssa:on stmt: x1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 349
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FDD0>
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 353, 357
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 353
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FDD0>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='x0' stmt=$144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 353
DEBUG:numba.core.ssa:idom 349 from label 353
DEBUG:numba.core.ssa:find_def_from_bottom label 349
DEBUG:numba.core.ssa:find_def_from_top label 349
DEBUG:numba.core.ssa:idom 295 from label 349
DEBUG:numba.core.ssa:find_def_from_bottom label 295
DEBUG:numba.core.ssa:find_def_from_top label 295
DEBUG:numba.core.ssa:insert phi node x0.2 = phi(incoming_values=[], incoming_blocks=[]) at 295
DEBUG:numba.core.ssa:find_def_from_bottom label 241
DEBUG:numba.core.ssa:find_def_from_top label 241
DEBUG:numba.core.ssa:idom 240 from label 241
DEBUG:numba.core.ssa:find_def_from_bottom label 240
DEBUG:numba.core.ssa:incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_bottom label 291
DEBUG:numba.core.ssa:find_def_from_top label 291
DEBUG:numba.core.ssa:idom 240 from label 291
DEBUG:numba.core.ssa:find_def_from_bottom label 240
DEBUG:numba.core.ssa:incoming_def x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_bottom label 289
DEBUG:numba.core.ssa:incoming_def x0.1 = const(int, 0)
DEBUG:numba.core.ssa:replaced with: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $192compare_op.10 = $144call.4 != $182call.9
DEBUG:numba.core.ssa:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $198return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 357
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FDD0>
DEBUG:numba.core.ssa:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
DEBUG:numba.core.ssa:on stmt: $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='x0' stmt=$228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 357
DEBUG:numba.core.ssa:idom 349 from label 357
DEBUG:numba.core.ssa:find_def_from_bottom label 349
DEBUG:numba.core.ssa:find_def_from_top label 349
DEBUG:numba.core.ssa:idom 295 from label 349
DEBUG:numba.core.ssa:find_def_from_bottom label 295
DEBUG:numba.core.ssa:replaced with: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
DEBUG:numba.core.ssa:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $276compare_op.10 = $228call.4 != $266call.9
DEBUG:numba.core.ssa:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $282return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 441
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FDD0>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:Fix SSA violator on var x1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1617E250>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: threshold = arg(1, name=threshold)
DEBUG:numba.core.ssa:on stmt: zero_pos = arg(2, name=zero_pos)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.2.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.2.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.2.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1617E250>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1617E250>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1617E250>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1617E250>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi38.0 = x0
DEBUG:numba.core.ssa:on stmt: branch $36pred, 241, 291
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1617E250>
DEBUG:numba.core.ssa:on stmt: $40compare_op.2 = x0 <= threshold
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 279, 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 279
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1617E250>
DEBUG:numba.core.ssa:on stmt: jump 289
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 291
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1617E250>
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 289
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1617E250>
DEBUG:numba.core.ssa:on stmt: x0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 295
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1617E250>
DEBUG:numba.core.ssa:on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0, audio.py:1140), Var(x0.1, audio.py:1142)], incoming_blocks=[241, 291, 289])
DEBUG:numba.core.ssa:on stmt: $const60.1.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const60.1.2 + index00
DEBUG:numba.core.ssa:on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:first assign: x1
DEBUG:numba.core.ssa:replaced with: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
DEBUG:numba.core.ssa:on stmt: bool90 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi92.0 = x1
DEBUG:numba.core.ssa:on stmt: branch $90pred, 299, 345
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 299
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1617E250>
DEBUG:numba.core.ssa:on stmt: $94compare_op.2 = x1 <= threshold
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 333, 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 333
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1617E250>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 345
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1617E250>
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 343
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1617E250>
DEBUG:numba.core.ssa:on stmt: x1 = const(int, 0)
DEBUG:numba.core.ssa:replaced with: x1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 349
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1617E250>
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 353, 357
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 353
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1617E250>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $192compare_op.10 = $144call.4 != $182call.9
DEBUG:numba.core.ssa:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $198return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 357
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1617E250>
DEBUG:numba.core.ssa:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
DEBUG:numba.core.ssa:on stmt: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
DEBUG:numba.core.ssa:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $276compare_op.10 = $228call.4 != $266call.9
DEBUG:numba.core.ssa:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $282return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 441
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1617E250>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {295: [<numba.core.ir.Assign object at 0x0000019A161EAF90>],
             343: [<numba.core.ir.Assign object at 0x0000019A160EB990>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FD90>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: threshold = arg(1, name=threshold)
DEBUG:numba.core.ssa:on stmt: zero_pos = arg(2, name=zero_pos)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.2.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.2.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.2.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.2.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FD90>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 442
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FD90>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 442
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FD90>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FD90>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: x0 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $30compare_op.6 = $22unary_negative.4 <= x0
DEBUG:numba.core.ssa:on stmt: bool36 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi38.0 = x0
DEBUG:numba.core.ssa:on stmt: branch $36pred, 241, 291
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FD90>
DEBUG:numba.core.ssa:on stmt: $40compare_op.2 = x0 <= threshold
DEBUG:numba.core.ssa:on stmt: bool46 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $46pred, 279, 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 279
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FD90>
DEBUG:numba.core.ssa:on stmt: jump 289
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 291
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FD90>
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 289
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FD90>
DEBUG:numba.core.ssa:on stmt: x0.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 295
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 295
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FD90>
DEBUG:numba.core.ssa:on stmt: x0.2 = phi(incoming_values=[Var(x0, audio.py:1140), Var(x0, audio.py:1140), Var(x0.1, audio.py:1142)], incoming_blocks=[241, 291, 289])
DEBUG:numba.core.ssa:on stmt: $const60.1.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const60.1.2 + index00
DEBUG:numba.core.ssa:on stmt: x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold)
DEBUG:numba.core.ssa:on stmt: $84compare_op.6 = $76unary_negative.4 <= x1
DEBUG:numba.core.ssa:find_def var='x1' stmt=$84compare_op.6 = $76unary_negative.4 <= x1
DEBUG:numba.core.ssa:on stmt: bool90 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $phi92.0 = x1
DEBUG:numba.core.ssa:find_def var='x1' stmt=$phi92.0 = x1
DEBUG:numba.core.ssa:on stmt: branch $90pred, 299, 345
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 299
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FD90>
DEBUG:numba.core.ssa:on stmt: $94compare_op.2 = x1 <= threshold
DEBUG:numba.core.ssa:find_def var='x1' stmt=$94compare_op.2 = x1 <= threshold
DEBUG:numba.core.ssa:find_def_from_top label 299
DEBUG:numba.core.ssa:idom 295 from label 299
DEBUG:numba.core.ssa:find_def_from_bottom label 295
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $100pred, 333, 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 333
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FD90>
DEBUG:numba.core.ssa:on stmt: jump 343
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 345
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FD90>
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 343
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FD90>
DEBUG:numba.core.ssa:on stmt: x1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: jump 349
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 349
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FD90>
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 353, 357
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 353
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FD90>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $144call.4 = call $128load_attr.2(x0.2, func=$128load_attr.2, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit)
DEBUG:numba.core.ssa:on stmt: $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='x1' stmt=$182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 353
DEBUG:numba.core.ssa:idom 349 from label 353
DEBUG:numba.core.ssa:find_def_from_bottom label 349
DEBUG:numba.core.ssa:find_def_from_top label 349
DEBUG:numba.core.ssa:insert phi node x1.2 = phi(incoming_values=[], incoming_blocks=[]) at 349
DEBUG:numba.core.ssa:find_def_from_bottom label 345
DEBUG:numba.core.ssa:find_def_from_top label 345
DEBUG:numba.core.ssa:idom 295 from label 345
DEBUG:numba.core.ssa:find_def_from_bottom label 295
DEBUG:numba.core.ssa:incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_bottom label 299
DEBUG:numba.core.ssa:find_def_from_top label 299
DEBUG:numba.core.ssa:idom 295 from label 299
DEBUG:numba.core.ssa:find_def_from_bottom label 295
DEBUG:numba.core.ssa:incoming_def x1 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_bottom label 343
DEBUG:numba.core.ssa:incoming_def x1.1 = const(int, 0)
DEBUG:numba.core.ssa:replaced with: $182call.9 = call $166load_attr.7(x1.2, func=$166load_attr.7, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $192compare_op.10 = $144call.4 != $182call.9
DEBUG:numba.core.ssa:on stmt: $198return_value.11 = cast(value=$192compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $198return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 357
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FD90>
DEBUG:numba.core.ssa:on stmt: $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $212load_attr.2 = getattr(value=$200load_global.0, attr=sign)
DEBUG:numba.core.ssa:on stmt: $228call.4 = call $212load_attr.2(x0.2, func=$212load_attr.2, args=[Var(x0.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $250load_attr.7 = getattr(value=$238load_global.5, attr=sign)
DEBUG:numba.core.ssa:on stmt: $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='x1' stmt=$266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 357
DEBUG:numba.core.ssa:idom 349 from label 357
DEBUG:numba.core.ssa:find_def_from_bottom label 349
DEBUG:numba.core.ssa:replaced with: $266call.9 = call $250load_attr.7(x1.2, func=$250load_attr.7, args=[Var(x1.2, audio.py:1149)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $276compare_op.10 = $228call.4 != $266call.9
DEBUG:numba.core.ssa:on stmt: $282return_value.11 = cast(value=$276compare_op.10)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $282return_value.11
DEBUG:numba.core.ssa:on stmt: jump 441
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 441
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1606FD90>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1023)
           2	RESUME(arg=0, lineno=1023)
           4	LOAD_FAST(arg=0, lineno=1026)
           6	LOAD_CONST(arg=1, lineno=1026)
           8	BINARY_SUBSCR(arg=None, lineno=1026)
          18	LOAD_FAST(arg=0, lineno=1026)
          20	LOAD_CONST(arg=2, lineno=1026)
          22	BINARY_SUBSCR(arg=None, lineno=1026)
          32	COMPARE_OP(arg=4, lineno=1026)
          38	LOAD_FAST(arg=0, lineno=1026)
          40	LOAD_CONST(arg=1, lineno=1026)
          42	BINARY_SUBSCR(arg=None, lineno=1026)
          52	LOAD_FAST(arg=0, lineno=1026)
          54	LOAD_CONST(arg=3, lineno=1026)
          56	BINARY_SUBSCR(arg=None, lineno=1026)
          66	COMPARE_OP(arg=5, lineno=1026)
          72	BINARY_OP(arg=1, lineno=1026)
          76	RETURN_VALUE(arg=None, lineno=1026)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x18.3']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=COMPARE_OP(arg=4, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$x38.7']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$x38.7', '$const40.8.1']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$42binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11.3']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$66compare_op.13']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$binop_and_72.14']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8.1'}), (42, {'index': '$const40.8.1', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11.3'}), (56, {'index': '$const54.11.3', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8.1 = const(int, 0)             ['$const40.8.1']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8.1, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8.1', 'x']
    $const54.11.3 = const(int, 1)            ['$const54.11.3']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11.3, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11.3', 'x']
    $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1029)
           2	RESUME(arg=0, lineno=1029)
           4	LOAD_FAST(arg=0, lineno=1032)
           6	LOAD_CONST(arg=1, lineno=1032)
           8	BINARY_SUBSCR(arg=None, lineno=1032)
          18	LOAD_FAST(arg=0, lineno=1032)
          20	LOAD_CONST(arg=2, lineno=1032)
          22	BINARY_SUBSCR(arg=None, lineno=1032)
          32	COMPARE_OP(arg=0, lineno=1032)
          38	LOAD_FAST(arg=0, lineno=1032)
          40	LOAD_CONST(arg=1, lineno=1032)
          42	BINARY_SUBSCR(arg=None, lineno=1032)
          52	LOAD_FAST(arg=0, lineno=1032)
          54	LOAD_CONST(arg=3, lineno=1032)
          56	BINARY_SUBSCR(arg=None, lineno=1032)
          66	COMPARE_OP(arg=1, lineno=1032)
          72	BINARY_OP(arg=1, lineno=1032)
          76	RETURN_VALUE(arg=None, lineno=1032)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x18.3']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=COMPARE_OP(arg=0, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$x38.7']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$x38.7', '$const40.8.1']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$42binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11.3']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=COMPARE_OP(arg=1, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$66compare_op.13']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$binop_and_72.14']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8.1'}), (42, {'index': '$const40.8.1', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11.3'}), (56, {'index': '$const54.11.3', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8.1 = const(int, 0)             ['$const40.8.1']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8.1, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8.1', 'x']
    $const54.11.3 = const(int, 1)            ['$const54.11.3']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11.3, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11.3', 'x']
    $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1035)
           2	RESUME(arg=0, lineno=1035)
           4	LOAD_GLOBAL(arg=1, lineno=1049)
          16	LOAD_FAST(arg=0, lineno=1049)
          18	PRECALL(arg=1, lineno=1049)
          22	CALL(arg=1, lineno=1049)
          32	LOAD_FAST(arg=1, lineno=1049)
          34	LOAD_CONST(arg=1, lineno=1049)
          36	LOAD_CONST(arg=1, lineno=1049)
          38	BUILD_SLICE(arg=2, lineno=1049)
          40	STORE_SUBSCR(arg=None, lineno=1049)
          44	LOAD_CONST(arg=1, lineno=1049)
          46	RETURN_VALUE(arg=None, lineno=1049)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1035)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1035)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=PRECALL(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1', '$const36.6.1']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$38build_slice.8']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$const44.9.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5.1'}), (36, {'res': '$const36.6.1'}), (38, {'start': '$const34.5.1', 'stop': '$const36.6.1', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9.1'}), (46, {'retval': '$const44.9.1', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A17704B90>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5.1 = const(NoneType, None)     ['$const34.5.1']
    $const36.6.1 = const(NoneType, None)     ['$const36.6.1']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1049), Var($const36.6.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5.1', '$const36.6.1']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9.1 = const(NoneType, None)     ['$const44.9.1']
    $46return_value.10 = cast(value=$const44.9.1) ['$46return_value.10', '$const44.9.1']
    return $46return_value.10                ['$46return_value.10']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177E8A90>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A17704B90>)
DEBUG:numba.core.ssa:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const34.5.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const36.6.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1049), Var($const36.6.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: y[slice(None, None, None)] = $22call.3
DEBUG:numba.core.ssa:on stmt: $const44.9.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.10 = cast(value=$const44.9.1)
DEBUG:numba.core.ssa:on stmt: return $46return_value.10
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x0000019A1768A510>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x0000019A177B38D0>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x0000019A177B39D0>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x0000019A177B3350>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A1768AA10>,
                                  0)],
             '$const34.5.1': [(<numba.core.ir.Assign object at 0x0000019A177B35D0>,
                               0)],
             '$const36.6.1': [(<numba.core.ir.Assign object at 0x0000019A177B3DD0>,
                               0)],
             '$const44.9.1': [(<numba.core.ir.Assign object at 0x0000019A177B2310>,
                               0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A17688D90>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000019A1768B890>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A177E8A90>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$18load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=CALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$82call.8']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0', '$const100.12.3']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$102build_slice.14']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4', '$const114.18.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$116build_slice.20']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$154call.27']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30.2']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$218call.38']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi230.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=230 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi230.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=240 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:stack ['$out0240.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=232 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$const234.2.2']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9.2'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11.0'}), (100, {'res': '$const100.12.3'}), (102, {'start': '$const98.11.0', 'stop': '$const100.12.3', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9.2'}), (106, {}), (108, {'res': '$const108.15.2'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17.4'}), (114, {'res': '$const114.18.0'}), (116, {'start': '$const112.17.4', 'stop': '$const114.18.0', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15.2'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25.2'}), (148, {'res': '$const148.26.4'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25.2', '$const148.26.4'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30.2'}), (170, {'index': '$const168.30.2', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34.2'}), (194, {'res': '$const194.35.3'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34.2', '$const194.35.3'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2.2'}), (236, {'value': '$const234.2.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9.2 = const(int, 0)             ['$const94.9.2']
    $const98.11.0 = const(NoneType, None)    ['$const98.11.0']
    $const100.12.3 = const(int, 1)           ['$const100.12.3']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11.0, $const100.12.3, func=$102build_slice.13, args=(Var($const98.11.0, <string>:4), Var($const100.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12.3', '$const98.11.0']
    out0[$102build_slice.14] = $const94.9.2  ['$102build_slice.14', '$const94.9.2', 'out0']
    $const108.15.2 = const(int, 0)           ['$const108.15.2']
    $const112.17.4 = const(int, -1)          ['$const112.17.4']
    $const114.18.0 = const(NoneType, None)   ['$const114.18.0']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17.4, $const114.18.0, func=$116build_slice.19, args=(Var($const112.17.4, <string>:5), Var($const114.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17.4', '$const114.18.0']
    out0[$116build_slice.20] = $const108.15.2 ['$116build_slice.20', '$const108.15.2', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25.2 = const(int, 0)           ['$const146.25.2']
    $const148.26.4 = const(int, -1)          ['$const148.26.4']
    $154call.27 = call $134load_global.23($const146.25.2, $const148.26.4, func=$134load_global.23, args=[Var($const146.25.2, <string>:6), Var($const148.26.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25.2', '$const148.26.4']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30.2 = const(int, 0)           ['$const168.30.2']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30.2, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30.2', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34.2 = const(int, 0)           ['$const192.34.2']
    $const194.35.3 = const(int, 1)           ['$const194.35.3']
    $200call.36 = call $180load_global.32($const192.34.2, $const194.35.3, func=$180load_global.32, args=[Var($const192.34.2, <string>:6), Var($const194.35.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34.2', '$const194.35.3']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1781FDD0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.4.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.4.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.3.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.3.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block analysis pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1781FDD0>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 242
DEBUG:numba.core.ssa:==== SSA block analysis pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1781FDD0>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block analysis pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1781FDD0>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1781FDD0>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const20.4.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const20.4.2 + index00
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const40.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index.2 = $const40.8.1 + index00
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const54.11.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: stencil_index.3 = $const54.11.3 + index00
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
DEBUG:numba.core.ssa:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $76return_value.15
DEBUG:numba.core.ssa:on stmt: jump 241
DEBUG:numba.core.ssa:==== SSA block analysis pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1781FDD0>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x0000019A17810F90>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x0000019A17811110>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x0000019A17811990>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x0000019A17811B10>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x0000019A17811D10>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x0000019A17811E90>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x0000019A17812490>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x0000019A17812690>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x0000019A17812B50>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x0000019A17812E10>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x0000019A1780FA50>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x0000019A178134D0>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x0000019A178138D0>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x0000019A17813B50>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000019A178028D0>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x0000019A17813D90>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x0000019A17813F10>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x0000019A1781C0D0>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x0000019A1781CC50>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x0000019A1780FC90>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x0000019A177F5390>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000019A17802B90>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x0000019A178100D0>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x0000019A17802E50>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x0000019A17800150>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x0000019A17810390>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x0000019A178013D0>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000019A178026D0>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x0000019A17800A90>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x0000019A178136D0>,
                                     0)],
             '$const100.12.3.1': [(<numba.core.ir.Assign object at 0x0000019A17810D90>,
                                   0)],
             '$const108.15.2.1': [(<numba.core.ir.Assign object at 0x0000019A178112D0>,
                                   0)],
             '$const112.17.4.1': [(<numba.core.ir.Assign object at 0x0000019A17811610>,
                                   0)],
             '$const114.18.0.1': [(<numba.core.ir.Assign object at 0x0000019A17811790>,
                                   0)],
             '$const146.25.2.1': [(<numba.core.ir.Assign object at 0x0000019A17812050>,
                                   0)],
             '$const148.26.4.1': [(<numba.core.ir.Assign object at 0x0000019A17812210>,
                                   0)],
             '$const168.30.2.1': [(<numba.core.ir.Assign object at 0x0000019A17812990>,
                                   0)],
             '$const192.34.2.1': [(<numba.core.ir.Assign object at 0x0000019A17813110>,
                                   0)],
             '$const194.35.3.1': [(<numba.core.ir.Assign object at 0x0000019A178132D0>,
                                   0)],
             '$const20.4.2': [(<numba.core.ir.Assign object at 0x0000019A177F4650>,
                               240)],
             '$const40.8.1': [(<numba.core.ir.Assign object at 0x0000019A177F5A10>,
                               240)],
             '$const54.11.3': [(<numba.core.ir.Assign object at 0x0000019A177F6F50>,
                                240)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x0000019A177EAD50>,
                              240)],
             '$const94.9.2.1': [(<numba.core.ir.Assign object at 0x0000019A17810890>,
                                 0)],
             '$const98.11.0.1': [(<numba.core.ir.Assign object at 0x0000019A17810C10>,
                                  0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x0000019A1780F8D0>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x0000019A1781C190>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x0000019A1780F6D0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x0000019A1781C450>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x0000019A17810590>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x0000019A17802650>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x0000019A17802810>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x0000019A17802B50>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x0000019A17802DD0>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A1780CD90>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A1781FDD0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1035)
           2	RESUME(arg=0, lineno=1035)
           4	LOAD_GLOBAL(arg=1, lineno=1049)
          16	LOAD_FAST(arg=0, lineno=1049)
          18	PRECALL(arg=1, lineno=1049)
          22	CALL(arg=1, lineno=1049)
          32	LOAD_FAST(arg=1, lineno=1049)
          34	LOAD_CONST(arg=1, lineno=1049)
          36	LOAD_CONST(arg=1, lineno=1049)
          38	BUILD_SLICE(arg=2, lineno=1049)
          40	STORE_SUBSCR(arg=None, lineno=1049)
          44	LOAD_CONST(arg=1, lineno=1049)
          46	RETURN_VALUE(arg=None, lineno=1049)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1035)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1035)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=PRECALL(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1', '$const36.6.1']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$38build_slice.8']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$const44.9.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5.1'}), (36, {'res': '$const36.6.1'}), (38, {'start': '$const34.5.1', 'stop': '$const36.6.1', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9.1'}), (46, {'retval': '$const44.9.1', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A17704B90>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5.1 = const(NoneType, None)     ['$const34.5.1']
    $const36.6.1 = const(NoneType, None)     ['$const36.6.1']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1049), Var($const36.6.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5.1', '$const36.6.1']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9.1 = const(NoneType, None)     ['$const44.9.1']
    $46return_value.10 = cast(value=$const44.9.1) ['$46return_value.10', '$const44.9.1']
    return $46return_value.10                ['$46return_value.10']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17979D90>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A17704B90>)
DEBUG:numba.core.ssa:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const34.5.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const36.6.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1049), Var($const36.6.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: y[slice(None, None, None)] = $22call.3
DEBUG:numba.core.ssa:on stmt: $const44.9.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.10 = cast(value=$const44.9.1)
DEBUG:numba.core.ssa:on stmt: return $46return_value.10
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x0000019A17977810>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x0000019A17978090>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x0000019A17978150>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x0000019A179784D0>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17977390>,
                                  0)],
             '$const34.5.1': [(<numba.core.ir.Assign object at 0x0000019A17977CD0>,
                               0)],
             '$const36.6.1': [(<numba.core.ir.Assign object at 0x0000019A17977E90>,
                               0)],
             '$const44.9.1': [(<numba.core.ir.Assign object at 0x0000019A17978350>,
                               0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A17977010>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000019A17977110>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17979D90>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$18load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=CALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$82call.8']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0', '$const100.12.3']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$102build_slice.14']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4', '$const114.18.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$116build_slice.20']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$154call.27']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30.2']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$218call.38']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi230.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=230 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi230.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=240 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:stack ['$out0240.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=232 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$const234.2.2']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9.2'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11.0'}), (100, {'res': '$const100.12.3'}), (102, {'start': '$const98.11.0', 'stop': '$const100.12.3', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9.2'}), (106, {}), (108, {'res': '$const108.15.2'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17.4'}), (114, {'res': '$const114.18.0'}), (116, {'start': '$const112.17.4', 'stop': '$const114.18.0', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15.2'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25.2'}), (148, {'res': '$const148.26.4'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25.2', '$const148.26.4'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30.2'}), (170, {'index': '$const168.30.2', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34.2'}), (194, {'res': '$const194.35.3'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34.2', '$const194.35.3'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2.2'}), (236, {'value': '$const234.2.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9.2 = const(int, 0)             ['$const94.9.2']
    $const98.11.0 = const(NoneType, None)    ['$const98.11.0']
    $const100.12.3 = const(int, 1)           ['$const100.12.3']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11.0, $const100.12.3, func=$102build_slice.13, args=(Var($const98.11.0, <string>:4), Var($const100.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12.3', '$const98.11.0']
    out0[$102build_slice.14] = $const94.9.2  ['$102build_slice.14', '$const94.9.2', 'out0']
    $const108.15.2 = const(int, 0)           ['$const108.15.2']
    $const112.17.4 = const(int, -1)          ['$const112.17.4']
    $const114.18.0 = const(NoneType, None)   ['$const114.18.0']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17.4, $const114.18.0, func=$116build_slice.19, args=(Var($const112.17.4, <string>:5), Var($const114.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17.4', '$const114.18.0']
    out0[$116build_slice.20] = $const108.15.2 ['$116build_slice.20', '$const108.15.2', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25.2 = const(int, 0)           ['$const146.25.2']
    $const148.26.4 = const(int, -1)          ['$const148.26.4']
    $154call.27 = call $134load_global.23($const146.25.2, $const148.26.4, func=$134load_global.23, args=[Var($const146.25.2, <string>:6), Var($const148.26.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25.2', '$const148.26.4']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30.2 = const(int, 0)           ['$const168.30.2']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30.2, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30.2', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34.2 = const(int, 0)           ['$const192.34.2']
    $const194.35.3 = const(int, 1)           ['$const194.35.3']
    $200call.36 = call $180load_global.32($const192.34.2, $const194.35.3, func=$180load_global.32, args=[Var($const192.34.2, <string>:6), Var($const194.35.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34.2', '$const194.35.3']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A179B0A10>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.4.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.4.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.3.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.3.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block analysis pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A179B0A10>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 242
DEBUG:numba.core.ssa:==== SSA block analysis pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A179B0A10>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block analysis pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A179B0A10>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A179B0A10>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const20.4.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const20.4.2 + index00
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const40.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index.2 = $const40.8.1 + index00
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const54.11.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: stencil_index.3 = $const54.11.3 + index00
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
DEBUG:numba.core.ssa:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $76return_value.15
DEBUG:numba.core.ssa:on stmt: jump 241
DEBUG:numba.core.ssa:==== SSA block analysis pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A179B0A10>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x0000019A179A2350>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x0000019A179A24D0>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x0000019A179A2E50>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x0000019A179A2FD0>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x0000019A179A3290>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x0000019A179A34D0>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x0000019A179A3B90>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x0000019A179A3E50>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x0000019A179A43D0>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x0000019A179A45D0>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x0000019A179A0C50>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x0000019A179A4C10>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x0000019A179A50D0>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x0000019A179A52D0>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000019A1799B410>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x0000019A179A5510>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x0000019A179A5690>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x0000019A179A5810>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x0000019A179A6350>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x0000019A179A1010>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x0000019A1798DED0>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000019A1799B690>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x0000019A179A1410>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x0000019A1799B950>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x0000019A17998C90>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x0000019A179A1610>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x0000019A17999F10>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000019A1799B210>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x0000019A179995D0>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x0000019A179A4E90>,
                                     0)],
             '$const100.12.3.1': [(<numba.core.ir.Assign object at 0x0000019A179A2150>,
                                   0)],
             '$const108.15.2.1': [(<numba.core.ir.Assign object at 0x0000019A179A2750>,
                                   0)],
             '$const112.17.4.1': [(<numba.core.ir.Assign object at 0x0000019A179A2A90>,
                                   0)],
             '$const114.18.0.1': [(<numba.core.ir.Assign object at 0x0000019A179A2C50>,
                                   0)],
             '$const146.25.2.1': [(<numba.core.ir.Assign object at 0x0000019A179A3710>,
                                   0)],
             '$const148.26.4.1': [(<numba.core.ir.Assign object at 0x0000019A179A38D0>,
                                   0)],
             '$const168.30.2.1': [(<numba.core.ir.Assign object at 0x0000019A179A41D0>,
                                   0)],
             '$const192.34.2.1': [(<numba.core.ir.Assign object at 0x0000019A179A4790>,
                                   0)],
             '$const194.35.3.1': [(<numba.core.ir.Assign object at 0x0000019A179A4950>,
                                   0)],
             '$const20.4.2': [(<numba.core.ir.Assign object at 0x0000019A1798D190>,
                               240)],
             '$const40.8.1': [(<numba.core.ir.Assign object at 0x0000019A1798E550>,
                               240)],
             '$const54.11.3': [(<numba.core.ir.Assign object at 0x0000019A1798FA90>,
                                240)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x0000019A17987310>,
                              240)],
             '$const94.9.2.1': [(<numba.core.ir.Assign object at 0x0000019A179A1C10>,
                                 0)],
             '$const98.11.0.1': [(<numba.core.ir.Assign object at 0x0000019A179A1F90>,
                                  0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x0000019A179A0A90>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x0000019A179A53D0>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x0000019A179A0890>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x0000019A179A5B50>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x0000019A179A1850>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x0000019A1799B190>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x0000019A1799B350>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x0000019A1799B650>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x0000019A1799B8D0>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A1799DF10>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A179B0A10>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1035)
           2	RESUME(arg=0, lineno=1035)
           4	LOAD_GLOBAL(arg=1, lineno=1049)
          16	LOAD_FAST(arg=0, lineno=1049)
          18	PRECALL(arg=1, lineno=1049)
          22	CALL(arg=1, lineno=1049)
          32	LOAD_FAST(arg=1, lineno=1049)
          34	LOAD_CONST(arg=1, lineno=1049)
          36	LOAD_CONST(arg=1, lineno=1049)
          38	BUILD_SLICE(arg=2, lineno=1049)
          40	STORE_SUBSCR(arg=None, lineno=1049)
          44	LOAD_CONST(arg=1, lineno=1049)
          46	RETURN_VALUE(arg=None, lineno=1049)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1035)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1035)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=PRECALL(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1', '$const36.6.1']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$38build_slice.8']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$const44.9.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5.1'}), (36, {'res': '$const36.6.1'}), (38, {'start': '$const34.5.1', 'stop': '$const36.6.1', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9.1'}), (46, {'retval': '$const44.9.1', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A17704B90>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5.1 = const(NoneType, None)     ['$const34.5.1']
    $const36.6.1 = const(NoneType, None)     ['$const36.6.1']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1049), Var($const36.6.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5.1', '$const36.6.1']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9.1 = const(NoneType, None)     ['$const44.9.1']
    $46return_value.10 = cast(value=$const44.9.1) ['$46return_value.10', '$const44.9.1']
    return $46return_value.10                ['$46return_value.10']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B271D0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A17704B90>)
DEBUG:numba.core.ssa:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const34.5.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const36.6.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1049), Var($const36.6.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: y[slice(None, None, None)] = $22call.3
DEBUG:numba.core.ssa:on stmt: $const44.9.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.10 = cast(value=$const44.9.1)
DEBUG:numba.core.ssa:on stmt: return $46return_value.10
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x0000019A17B24BD0>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x0000019A17B25310>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x0000019A17B253D0>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x0000019A17B25810>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17B247D0>,
                                  0)],
             '$const34.5.1': [(<numba.core.ir.Assign object at 0x0000019A17B24F50>,
                               0)],
             '$const36.6.1': [(<numba.core.ir.Assign object at 0x0000019A17B25110>,
                               0)],
             '$const44.9.1': [(<numba.core.ir.Assign object at 0x0000019A17B25650>,
                               0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A17B244D0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000019A17B245D0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17B271D0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$18load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=CALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$82call.8']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0', '$const100.12.3']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$102build_slice.14']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4', '$const114.18.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$116build_slice.20']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$154call.27']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30.2']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$218call.38']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi230.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=230 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi230.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=240 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:stack ['$out0240.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=232 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$const234.2.2']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9.2'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11.0'}), (100, {'res': '$const100.12.3'}), (102, {'start': '$const98.11.0', 'stop': '$const100.12.3', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9.2'}), (106, {}), (108, {'res': '$const108.15.2'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17.4'}), (114, {'res': '$const114.18.0'}), (116, {'start': '$const112.17.4', 'stop': '$const114.18.0', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15.2'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25.2'}), (148, {'res': '$const148.26.4'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25.2', '$const148.26.4'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30.2'}), (170, {'index': '$const168.30.2', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34.2'}), (194, {'res': '$const194.35.3'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34.2', '$const194.35.3'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2.2'}), (236, {'value': '$const234.2.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9.2 = const(int, 0)             ['$const94.9.2']
    $const98.11.0 = const(NoneType, None)    ['$const98.11.0']
    $const100.12.3 = const(int, 1)           ['$const100.12.3']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11.0, $const100.12.3, func=$102build_slice.13, args=(Var($const98.11.0, <string>:4), Var($const100.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12.3', '$const98.11.0']
    out0[$102build_slice.14] = $const94.9.2  ['$102build_slice.14', '$const94.9.2', 'out0']
    $const108.15.2 = const(int, 0)           ['$const108.15.2']
    $const112.17.4 = const(int, -1)          ['$const112.17.4']
    $const114.18.0 = const(NoneType, None)   ['$const114.18.0']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17.4, $const114.18.0, func=$116build_slice.19, args=(Var($const112.17.4, <string>:5), Var($const114.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17.4', '$const114.18.0']
    out0[$116build_slice.20] = $const108.15.2 ['$116build_slice.20', '$const108.15.2', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25.2 = const(int, 0)           ['$const146.25.2']
    $const148.26.4 = const(int, -1)          ['$const148.26.4']
    $154call.27 = call $134load_global.23($const146.25.2, $const148.26.4, func=$134load_global.23, args=[Var($const146.25.2, <string>:6), Var($const148.26.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25.2', '$const148.26.4']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30.2 = const(int, 0)           ['$const168.30.2']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30.2, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30.2', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34.2 = const(int, 0)           ['$const192.34.2']
    $const194.35.3 = const(int, 1)           ['$const194.35.3']
    $200call.36 = call $180load_global.32($const192.34.2, $const194.35.3, func=$180load_global.32, args=[Var($const192.34.2, <string>:6), Var($const194.35.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34.2', '$const194.35.3']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17C75790>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.4.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.4.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.3.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.3.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block analysis pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17C75790>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 242
DEBUG:numba.core.ssa:==== SSA block analysis pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17C75790>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block analysis pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17C75790>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17C75790>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const20.4.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const20.4.2 + index00
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const40.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index.2 = $const40.8.1 + index00
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const54.11.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: stencil_index.3 = $const54.11.3 + index00
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
DEBUG:numba.core.ssa:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $76return_value.15
DEBUG:numba.core.ssa:on stmt: jump 241
DEBUG:numba.core.ssa:==== SSA block analysis pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17C75790>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x0000019A17C6B590>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x0000019A17C6B710>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x0000019A17C6BFD0>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x0000019A17C6C190>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x0000019A17C6C410>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x0000019A17C6C5D0>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x0000019A17C6CB50>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x0000019A17C6CD90>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x0000019A17C6D250>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x0000019A17C6D410>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x0000019A17C69F50>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x0000019A17C6D9D0>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x0000019A17C6DF50>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x0000019A17C6E210>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000019A17C64810>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x0000019A17C6E3D0>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x0000019A17C6E550>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x0000019A17C6E6D0>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x0000019A17C6F2D0>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x0000019A17C6A250>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x0000019A17B28890>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000019A17C64A90>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x0000019A17C6A590>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x0000019A17C64D50>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x0000019A17B39B90>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x0000019A17C6A810>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x0000019A17B3B2D0>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000019A17C64650>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x0000019A17B3A990>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x0000019A17C6DC90>,
                                     0)],
             '$const100.12.3.1': [(<numba.core.ir.Assign object at 0x0000019A17C6B390>,
                                   0)],
             '$const108.15.2.1': [(<numba.core.ir.Assign object at 0x0000019A17C6B910>,
                                   0)],
             '$const112.17.4.1': [(<numba.core.ir.Assign object at 0x0000019A17C6BC50>,
                                   0)],
             '$const114.18.0.1': [(<numba.core.ir.Assign object at 0x0000019A17C6BDD0>,
                                   0)],
             '$const146.25.2.1': [(<numba.core.ir.Assign object at 0x0000019A17C6C790>,
                                   0)],
             '$const148.26.4.1': [(<numba.core.ir.Assign object at 0x0000019A17C6C910>,
                                   0)],
             '$const168.30.2.1': [(<numba.core.ir.Assign object at 0x0000019A17C6D050>,
                                   0)],
             '$const192.34.2.1': [(<numba.core.ir.Assign object at 0x0000019A17C6D610>,
                                   0)],
             '$const194.35.3.1': [(<numba.core.ir.Assign object at 0x0000019A17C6D7D0>,
                                   0)],
             '$const20.4.2': [(<numba.core.ir.Assign object at 0x0000019A17B38490>,
                               240)],
             '$const40.8.1': [(<numba.core.ir.Assign object at 0x0000019A17B292D0>,
                               240)],
             '$const54.11.3': [(<numba.core.ir.Assign object at 0x0000019A17B26490>,
                                240)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x0000019A17B32610>,
                              240)],
             '$const94.9.2.1': [(<numba.core.ir.Assign object at 0x0000019A17C6AE50>,
                                 0)],
             '$const98.11.0.1': [(<numba.core.ir.Assign object at 0x0000019A17C6B1D0>,
                                  0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x0000019A17C69A90>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x0000019A17C6E790>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x0000019A17C69B90>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x0000019A17C6EA50>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x0000019A17C6AAD0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x0000019A17C645D0>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x0000019A17C64750>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x0000019A17C64A50>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x0000019A17C64CD0>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A17C674D0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17C6F510>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1035)
           2	RESUME(arg=0, lineno=1035)
           4	LOAD_GLOBAL(arg=1, lineno=1049)
          16	LOAD_FAST(arg=0, lineno=1049)
          18	PRECALL(arg=1, lineno=1049)
          22	CALL(arg=1, lineno=1049)
          32	LOAD_FAST(arg=1, lineno=1049)
          34	LOAD_CONST(arg=1, lineno=1049)
          36	LOAD_CONST(arg=1, lineno=1049)
          38	BUILD_SLICE(arg=2, lineno=1049)
          40	STORE_SUBSCR(arg=None, lineno=1049)
          44	LOAD_CONST(arg=1, lineno=1049)
          46	RETURN_VALUE(arg=None, lineno=1049)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1035)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1035)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=PRECALL(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1', '$const36.6.1']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$38build_slice.8']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$const44.9.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5.1'}), (36, {'res': '$const36.6.1'}), (38, {'start': '$const34.5.1', 'stop': '$const36.6.1', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9.1'}), (46, {'retval': '$const44.9.1', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A17704B90>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5.1 = const(NoneType, None)     ['$const34.5.1']
    $const36.6.1 = const(NoneType, None)     ['$const36.6.1']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1049), Var($const36.6.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5.1', '$const36.6.1']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9.1 = const(NoneType, None)     ['$const44.9.1']
    $46return_value.10 = cast(value=$const44.9.1) ['$46return_value.10', '$const44.9.1']
    return $46return_value.10                ['$46return_value.10']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175FC090>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A17704B90>)
DEBUG:numba.core.ssa:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const34.5.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const36.6.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1049), Var($const36.6.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: y[slice(None, None, None)] = $22call.3
DEBUG:numba.core.ssa:on stmt: $const44.9.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.10 = cast(value=$const44.9.1)
DEBUG:numba.core.ssa:on stmt: return $46return_value.10
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x0000019A17666B50>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x0000019A17664450>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x0000019A17664D50>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x0000019A17667D90>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17667210>,
                                  0)],
             '$const34.5.1': [(<numba.core.ir.Assign object at 0x0000019A17666F50>,
                               0)],
             '$const36.6.1': [(<numba.core.ir.Assign object at 0x0000019A17667390>,
                               0)],
             '$const44.9.1': [(<numba.core.ir.Assign object at 0x0000019A17664A90>,
                               0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A17666E50>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000019A17666110>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A175FC090>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$18load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=CALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$82call.8']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0', '$const100.12.3']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$102build_slice.14']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4', '$const114.18.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$116build_slice.20']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$154call.27']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30.2']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$218call.38']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi230.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=230 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi230.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=240 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:stack ['$out0240.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=232 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$const234.2.2']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9.2'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11.0'}), (100, {'res': '$const100.12.3'}), (102, {'start': '$const98.11.0', 'stop': '$const100.12.3', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9.2'}), (106, {}), (108, {'res': '$const108.15.2'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17.4'}), (114, {'res': '$const114.18.0'}), (116, {'start': '$const112.17.4', 'stop': '$const114.18.0', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15.2'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25.2'}), (148, {'res': '$const148.26.4'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25.2', '$const148.26.4'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30.2'}), (170, {'index': '$const168.30.2', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34.2'}), (194, {'res': '$const194.35.3'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34.2', '$const194.35.3'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2.2'}), (236, {'value': '$const234.2.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9.2 = const(int, 0)             ['$const94.9.2']
    $const98.11.0 = const(NoneType, None)    ['$const98.11.0']
    $const100.12.3 = const(int, 1)           ['$const100.12.3']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11.0, $const100.12.3, func=$102build_slice.13, args=(Var($const98.11.0, <string>:4), Var($const100.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12.3', '$const98.11.0']
    out0[$102build_slice.14] = $const94.9.2  ['$102build_slice.14', '$const94.9.2', 'out0']
    $const108.15.2 = const(int, 0)           ['$const108.15.2']
    $const112.17.4 = const(int, -1)          ['$const112.17.4']
    $const114.18.0 = const(NoneType, None)   ['$const114.18.0']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17.4, $const114.18.0, func=$116build_slice.19, args=(Var($const112.17.4, <string>:5), Var($const114.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17.4', '$const114.18.0']
    out0[$116build_slice.20] = $const108.15.2 ['$116build_slice.20', '$const108.15.2', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25.2 = const(int, 0)           ['$const146.25.2']
    $const148.26.4 = const(int, -1)          ['$const148.26.4']
    $154call.27 = call $134load_global.23($const146.25.2, $const148.26.4, func=$134load_global.23, args=[Var($const146.25.2, <string>:6), Var($const148.26.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25.2', '$const148.26.4']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30.2 = const(int, 0)           ['$const168.30.2']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30.2, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30.2', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34.2 = const(int, 0)           ['$const192.34.2']
    $const194.35.3 = const(int, 1)           ['$const194.35.3']
    $200call.36 = call $180load_global.32($const192.34.2, $const194.35.3, func=$180load_global.32, args=[Var($const192.34.2, <string>:6), Var($const194.35.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34.2', '$const194.35.3']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17589F50>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.4.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.4.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.3.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.3.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block analysis pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17589F50>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 242
DEBUG:numba.core.ssa:==== SSA block analysis pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17589F50>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block analysis pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17589F50>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17589F50>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const20.4.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const20.4.2 + index00
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const40.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index.2 = $const40.8.1 + index00
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const54.11.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: stencil_index.3 = $const54.11.3 + index00
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
DEBUG:numba.core.ssa:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $76return_value.15
DEBUG:numba.core.ssa:on stmt: jump 241
DEBUG:numba.core.ssa:==== SSA block analysis pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17589F50>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x0000019A1740D2D0>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x0000019A1740CD90>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x0000019A1756BC90>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x0000019A1756B090>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x0000019A17568050>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x0000019A175692D0>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x0000019A1756B6D0>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x0000019A17568210>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x0000019A1756B190>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x0000019A1756A790>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x0000019A176A4F10>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x0000019A17569CD0>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x0000019A17569290>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x0000019A17568F90>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000019A17648D10>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x0000019A1756BF50>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x0000019A17569190>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x0000019A17568CD0>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x0000019A1756B690>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x0000019A176A6110>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x0000019A175FC490>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000019A1764A6D0>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x0000019A176A63D0>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x0000019A1764AE10>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x0000019A1764AD50>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x0000019A176A4890>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x0000019A17649650>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000019A17648650>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x0000019A1764BD50>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x0000019A17569350>,
                                     0)],
             '$const100.12.3.1': [(<numba.core.ir.Assign object at 0x0000019A1740DF50>,
                                   0)],
             '$const108.15.2.1': [(<numba.core.ir.Assign object at 0x0000019A1740C550>,
                                   0)],
             '$const112.17.4.1': [(<numba.core.ir.Assign object at 0x0000019A1740DF90>,
                                   0)],
             '$const114.18.0.1': [(<numba.core.ir.Assign object at 0x0000019A1756B350>,
                                   0)],
             '$const146.25.2.1': [(<numba.core.ir.Assign object at 0x0000019A17569550>,
                                   0)],
             '$const148.26.4.1': [(<numba.core.ir.Assign object at 0x0000019A17569010>,
                                   0)],
             '$const168.30.2.1': [(<numba.core.ir.Assign object at 0x0000019A1756B590>,
                                   0)],
             '$const192.34.2.1': [(<numba.core.ir.Assign object at 0x0000019A17569AD0>,
                                   0)],
             '$const194.35.3.1': [(<numba.core.ir.Assign object at 0x0000019A1756ACD0>,
                                   0)],
             '$const20.4.2': [(<numba.core.ir.Assign object at 0x0000019A173BA190>,
                               240)],
             '$const40.8.1': [(<numba.core.ir.Assign object at 0x0000019A175FF650>,
                               240)],
             '$const54.11.3': [(<numba.core.ir.Assign object at 0x0000019A174B4050>,
                                240)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x0000019A174B5B10>,
                              240)],
             '$const94.9.2.1': [(<numba.core.ir.Assign object at 0x0000019A1740C950>,
                                 0)],
             '$const98.11.0.1': [(<numba.core.ir.Assign object at 0x0000019A1740C6D0>,
                                  0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x0000019A1740FF10>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x0000019A17569510>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x0000019A176A4410>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x0000019A1756A8D0>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x0000019A1740D750>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x0000019A1764BA50>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x0000019A1764B350>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x0000019A1764A650>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x0000019A1764B550>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A176A5850>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A176C1450>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1035)
           2	RESUME(arg=0, lineno=1035)
           4	LOAD_GLOBAL(arg=1, lineno=1049)
          16	LOAD_FAST(arg=0, lineno=1049)
          18	PRECALL(arg=1, lineno=1049)
          22	CALL(arg=1, lineno=1049)
          32	LOAD_FAST(arg=1, lineno=1049)
          34	LOAD_CONST(arg=1, lineno=1049)
          36	LOAD_CONST(arg=1, lineno=1049)
          38	BUILD_SLICE(arg=2, lineno=1049)
          40	STORE_SUBSCR(arg=None, lineno=1049)
          44	LOAD_CONST(arg=1, lineno=1049)
          46	RETURN_VALUE(arg=None, lineno=1049)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1035)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1035)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=PRECALL(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1', '$const36.6.1']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$38build_slice.8']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1049)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1049)
DEBUG:numba.core.byteflow:stack ['$const44.9.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5.1'}), (36, {'res': '$const36.6.1'}), (38, {'start': '$const34.5.1', 'stop': '$const36.6.1', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9.1'}), (46, {'retval': '$const44.9.1', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A17704B90>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5.1 = const(NoneType, None)     ['$const34.5.1']
    $const36.6.1 = const(NoneType, None)     ['$const36.6.1']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1049), Var($const36.6.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5.1', '$const36.6.1']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9.1 = const(NoneType, None)     ['$const44.9.1']
    $46return_value.10 = cast(value=$const44.9.1) ['$46return_value.10', '$const44.9.1']
    return $46return_value.10                ['$46return_value.10']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A160DC510>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A17704B90>)
DEBUG:numba.core.ssa:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1035)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const34.5.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const36.6.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1049), Var($const36.6.1, utils.py:1049)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: y[slice(None, None, None)] = $22call.3
DEBUG:numba.core.ssa:on stmt: $const44.9.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.10 = cast(value=$const44.9.1)
DEBUG:numba.core.ssa:on stmt: return $46return_value.10
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x0000019A162AE850>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x0000019A162AC250>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x0000019A162AC950>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x0000019A162AC990>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A162ACD50>,
                                  0)],
             '$const34.5.1': [(<numba.core.ir.Assign object at 0x0000019A162AF090>,
                               0)],
             '$const36.6.1': [(<numba.core.ir.Assign object at 0x0000019A162AC9D0>,
                               0)],
             '$const44.9.1': [(<numba.core.ir.Assign object at 0x0000019A162AD7D0>,
                               0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A162AC110>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000019A162AC690>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A160DC510>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$18load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=CALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$82call.8']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0', '$const100.12.3']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$102build_slice.14']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4', '$const114.18.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$116build_slice.20']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$154call.27']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30.2']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$218call.38']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi230.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=230 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi230.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=240 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:stack ['$out0240.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=232 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$const234.2.2']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9.2'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11.0'}), (100, {'res': '$const100.12.3'}), (102, {'start': '$const98.11.0', 'stop': '$const100.12.3', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9.2'}), (106, {}), (108, {'res': '$const108.15.2'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17.4'}), (114, {'res': '$const114.18.0'}), (116, {'start': '$const112.17.4', 'stop': '$const114.18.0', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15.2'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25.2'}), (148, {'res': '$const148.26.4'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25.2', '$const148.26.4'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30.2'}), (170, {'index': '$const168.30.2', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34.2'}), (194, {'res': '$const194.35.3'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34.2', '$const194.35.3'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2.2'}), (236, {'value': '$const234.2.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9.2 = const(int, 0)             ['$const94.9.2']
    $const98.11.0 = const(NoneType, None)    ['$const98.11.0']
    $const100.12.3 = const(int, 1)           ['$const100.12.3']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11.0, $const100.12.3, func=$102build_slice.13, args=(Var($const98.11.0, <string>:4), Var($const100.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12.3', '$const98.11.0']
    out0[$102build_slice.14] = $const94.9.2  ['$102build_slice.14', '$const94.9.2', 'out0']
    $const108.15.2 = const(int, 0)           ['$const108.15.2']
    $const112.17.4 = const(int, -1)          ['$const112.17.4']
    $const114.18.0 = const(NoneType, None)   ['$const114.18.0']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17.4, $const114.18.0, func=$116build_slice.19, args=(Var($const112.17.4, <string>:5), Var($const114.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17.4', '$const114.18.0']
    out0[$116build_slice.20] = $const108.15.2 ['$116build_slice.20', '$const108.15.2', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25.2 = const(int, 0)           ['$const146.25.2']
    $const148.26.4 = const(int, -1)          ['$const148.26.4']
    $154call.27 = call $134load_global.23($const146.25.2, $const148.26.4, func=$134load_global.23, args=[Var($const146.25.2, <string>:6), Var($const148.26.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25.2', '$const148.26.4']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30.2 = const(int, 0)           ['$const168.30.2']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30.2, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30.2', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34.2 = const(int, 0)           ['$const192.34.2']
    $const194.35.3 = const(int, 1)           ['$const194.35.3']
    $200call.36 = call $180load_global.32($const192.34.2, $const194.35.3, func=$180load_global.32, args=[Var($const192.34.2, <string>:6), Var($const194.35.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34.2', '$const194.35.3']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1626EFD0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.4.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.4.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.3.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.3.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block analysis pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1626EFD0>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 242
DEBUG:numba.core.ssa:==== SSA block analysis pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1626EFD0>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block analysis pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1626EFD0>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1626EFD0>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const20.4.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const20.4.2 + index00
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const40.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index.2 = $const40.8.1 + index00
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const54.11.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: stencil_index.3 = $const54.11.3 + index00
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
DEBUG:numba.core.ssa:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $76return_value.15
DEBUG:numba.core.ssa:on stmt: jump 241
DEBUG:numba.core.ssa:==== SSA block analysis pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1626EFD0>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x0000019A162A7B50>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x0000019A162A4650>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x0000019A162A5190>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x0000019A162A4D50>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x0000019A162A5950>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x0000019A162A4810>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x0000019A1600D310>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x0000019A1600D690>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x0000019A1600D910>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x0000019A1600C2D0>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x0000019A162A7950>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x0000019A1600C4D0>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x0000019A1600DC50>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x0000019A1600D190>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000019A1625D550>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x0000019A1600DD50>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x0000019A1600DAD0>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x0000019A1600E790>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x0000019A1600FAD0>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x0000019A162A6150>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x0000019A16220510>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000019A1625DC10>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x0000019A162A6490>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x0000019A1625DD50>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x0000019A1625C790>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x0000019A162A69D0>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x0000019A1625D3D0>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000019A1625D410>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x0000019A1625CD90>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x0000019A1600C710>,
                                     0)],
             '$const100.12.3.1': [(<numba.core.ir.Assign object at 0x0000019A162A4D90>,
                                   0)],
             '$const108.15.2.1': [(<numba.core.ir.Assign object at 0x0000019A162A6AD0>,
                                   0)],
             '$const112.17.4.1': [(<numba.core.ir.Assign object at 0x0000019A162A4110>,
                                   0)],
             '$const114.18.0.1': [(<numba.core.ir.Assign object at 0x0000019A162A5610>,
                                   0)],
             '$const146.25.2.1': [(<numba.core.ir.Assign object at 0x0000019A162A5890>,
                                   0)],
             '$const148.26.4.1': [(<numba.core.ir.Assign object at 0x0000019A1600EC10>,
                                   0)],
             '$const168.30.2.1': [(<numba.core.ir.Assign object at 0x0000019A1600D4D0>,
                                   0)],
             '$const192.34.2.1': [(<numba.core.ir.Assign object at 0x0000019A1600CA10>,
                                   0)],
             '$const194.35.3.1': [(<numba.core.ir.Assign object at 0x0000019A1600CB90>,
                                   0)],
             '$const20.4.2': [(<numba.core.ir.Assign object at 0x0000019A162217D0>,
                               240)],
             '$const40.8.1': [(<numba.core.ir.Assign object at 0x0000019A162229D0>,
                               240)],
             '$const54.11.3': [(<numba.core.ir.Assign object at 0x0000019A16222B50>,
                                240)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x0000019A16254A10>,
                              240)],
             '$const94.9.2.1': [(<numba.core.ir.Assign object at 0x0000019A162A70D0>,
                                 0)],
             '$const98.11.0.1': [(<numba.core.ir.Assign object at 0x0000019A162A5750>,
                                  0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x0000019A162A63D0>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x0000019A1600E750>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x0000019A162A5C50>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x0000019A1600D010>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x0000019A162A6890>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x0000019A1625CB50>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x0000019A1625D510>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x0000019A1625D690>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x0000019A1625CED0>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A1625FC10>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A1600C410>
DEBUG:root:send audio data 1748516240.059915
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1052)
           2	RESUME(arg=0, lineno=1052)
           4	LOAD_GLOBAL(arg=1, lineno=1066)
          16	LOAD_FAST(arg=0, lineno=1066)
          18	PRECALL(arg=1, lineno=1066)
          22	CALL(arg=1, lineno=1066)
          32	LOAD_FAST(arg=1, lineno=1066)
          34	LOAD_CONST(arg=1, lineno=1066)
          36	LOAD_CONST(arg=1, lineno=1066)
          38	BUILD_SLICE(arg=2, lineno=1066)
          40	STORE_SUBSCR(arg=None, lineno=1066)
          44	LOAD_CONST(arg=1, lineno=1066)
          46	RETURN_VALUE(arg=None, lineno=1066)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1052)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1052)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=PRECALL(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1', '$const36.6.1']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$38build_slice.8']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$const44.9.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5.1'}), (36, {'res': '$const36.6.1'}), (38, {'start': '$const34.5.1', 'stop': '$const36.6.1', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9.1'}), (46, {'retval': '$const44.9.1', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A177C2510>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5.1 = const(NoneType, None)     ['$const34.5.1']
    $const36.6.1 = const(NoneType, None)     ['$const36.6.1']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1066), Var($const36.6.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5.1', '$const36.6.1']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9.1 = const(NoneType, None)     ['$const44.9.1']
    $46return_value.10 = cast(value=$const44.9.1) ['$46return_value.10', '$const44.9.1']
    return $46return_value.10                ['$46return_value.10']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17AE8210>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A177C2510>)
DEBUG:numba.core.ssa:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const34.5.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const36.6.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1066), Var($const36.6.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: y[slice(None, None, None)] = $22call.3
DEBUG:numba.core.ssa:on stmt: $const44.9.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.10 = cast(value=$const44.9.1)
DEBUG:numba.core.ssa:on stmt: return $46return_value.10
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x0000019A17A85A10>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x0000019A17A847D0>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x0000019A17A87690>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x0000019A17A85010>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17A85F50>,
                                  0)],
             '$const34.5.1': [(<numba.core.ir.Assign object at 0x0000019A17A85350>,
                               0)],
             '$const36.6.1': [(<numba.core.ir.Assign object at 0x0000019A17A85150>,
                               0)],
             '$const44.9.1': [(<numba.core.ir.Assign object at 0x0000019A17A871D0>,
                               0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A17A86310>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000019A17A860D0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17AE8210>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$18load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=CALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$82call.8']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0', '$const100.12.3']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$102build_slice.14']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4', '$const114.18.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$116build_slice.20']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$154call.27']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30.2']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$218call.38']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi230.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=230 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi230.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=240 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:stack ['$out0240.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=232 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$const234.2.2']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9.2'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11.0'}), (100, {'res': '$const100.12.3'}), (102, {'start': '$const98.11.0', 'stop': '$const100.12.3', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9.2'}), (106, {}), (108, {'res': '$const108.15.2'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17.4'}), (114, {'res': '$const114.18.0'}), (116, {'start': '$const112.17.4', 'stop': '$const114.18.0', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15.2'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25.2'}), (148, {'res': '$const148.26.4'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25.2', '$const148.26.4'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30.2'}), (170, {'index': '$const168.30.2', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34.2'}), (194, {'res': '$const194.35.3'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34.2', '$const194.35.3'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2.2'}), (236, {'value': '$const234.2.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9.2 = const(int, 0)             ['$const94.9.2']
    $const98.11.0 = const(NoneType, None)    ['$const98.11.0']
    $const100.12.3 = const(int, 1)           ['$const100.12.3']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11.0, $const100.12.3, func=$102build_slice.13, args=(Var($const98.11.0, <string>:4), Var($const100.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12.3', '$const98.11.0']
    out0[$102build_slice.14] = $const94.9.2  ['$102build_slice.14', '$const94.9.2', 'out0']
    $const108.15.2 = const(int, 0)           ['$const108.15.2']
    $const112.17.4 = const(int, -1)          ['$const112.17.4']
    $const114.18.0 = const(NoneType, None)   ['$const114.18.0']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17.4, $const114.18.0, func=$116build_slice.19, args=(Var($const112.17.4, <string>:5), Var($const114.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17.4', '$const114.18.0']
    out0[$116build_slice.20] = $const108.15.2 ['$116build_slice.20', '$const108.15.2', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25.2 = const(int, 0)           ['$const146.25.2']
    $const148.26.4 = const(int, -1)          ['$const148.26.4']
    $154call.27 = call $134load_global.23($const146.25.2, $const148.26.4, func=$134load_global.23, args=[Var($const146.25.2, <string>:6), Var($const148.26.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25.2', '$const148.26.4']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30.2 = const(int, 0)           ['$const168.30.2']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30.2, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30.2', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34.2 = const(int, 0)           ['$const192.34.2']
    $const194.35.3 = const(int, 1)           ['$const194.35.3']
    $200call.36 = call $180load_global.32($const192.34.2, $const194.35.3, func=$180load_global.32, args=[Var($const192.34.2, <string>:6), Var($const194.35.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34.2', '$const194.35.3']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A179FF2D0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.4.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.4.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.3.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.3.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block analysis pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A179FF2D0>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 242
DEBUG:numba.core.ssa:==== SSA block analysis pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A179FF2D0>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block analysis pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A179FF2D0>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A179FF2D0>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const20.4.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const20.4.2 + index00
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const40.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index.2 = $const40.8.1 + index00
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const54.11.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: stencil_index.3 = $const54.11.3 + index00
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
DEBUG:numba.core.ssa:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $76return_value.15
DEBUG:numba.core.ssa:on stmt: jump 241
DEBUG:numba.core.ssa:==== SSA block analysis pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A179FF2D0>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x0000019A179F6450>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x0000019A179F64D0>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x0000019A179F7590>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x0000019A179F77D0>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x0000019A179F79D0>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x0000019A179F7A90>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x0000019A179F9490>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x0000019A179FAA90>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x0000019A179FB790>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x0000019A179FB650>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x0000019A179F4F10>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x0000019A179FBFD0>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x0000019A179FB9D0>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x0000019A179FAB50>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000019A17A19590>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x0000019A179F9F90>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x0000019A179FA1D0>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x0000019A179FA0D0>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x0000019A179FA750>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x0000019A179F5290>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x0000019A17AB9D50>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000019A17A18A50>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x0000019A179F5610>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x0000019A17A19310>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x0000019A17A1B4D0>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x0000019A179F58D0>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x0000019A17A1A910>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000019A17A19950>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x0000019A17A1BD50>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x0000019A179FB950>,
                                     0)],
             '$const100.12.3.1': [(<numba.core.ir.Assign object at 0x0000019A179F5F90>,
                                   0)],
             '$const108.15.2.1': [(<numba.core.ir.Assign object at 0x0000019A179F5FD0>,
                                   0)],
             '$const112.17.4.1': [(<numba.core.ir.Assign object at 0x0000019A179F7090>,
                                   0)],
             '$const114.18.0.1': [(<numba.core.ir.Assign object at 0x0000019A179F6D90>,
                                   0)],
             '$const146.25.2.1': [(<numba.core.ir.Assign object at 0x0000019A179F7BD0>,
                                   0)],
             '$const148.26.4.1': [(<numba.core.ir.Assign object at 0x0000019A179F7C10>,
                                   0)],
             '$const168.30.2.1': [(<numba.core.ir.Assign object at 0x0000019A179FB5D0>,
                                   0)],
             '$const192.34.2.1': [(<numba.core.ir.Assign object at 0x0000019A179FB550>,
                                   0)],
             '$const194.35.3.1': [(<numba.core.ir.Assign object at 0x0000019A179FB110>,
                                   0)],
             '$const20.4.2': [(<numba.core.ir.Assign object at 0x0000019A17ABA310>,
                               240)],
             '$const40.8.1': [(<numba.core.ir.Assign object at 0x0000019A17AB9050>,
                               240)],
             '$const54.11.3': [(<numba.core.ir.Assign object at 0x0000019A17AB9990>,
                                240)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x0000019A17A65910>,
                              240)],
             '$const94.9.2.1': [(<numba.core.ir.Assign object at 0x0000019A179F5DD0>,
                                 0)],
             '$const98.11.0.1': [(<numba.core.ir.Assign object at 0x0000019A179F62D0>,
                                  0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x0000019A179F4E90>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x0000019A179FA290>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x0000019A179F4D50>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x0000019A179F9E10>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x0000019A179F5B10>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x0000019A17A198D0>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x0000019A17A19A10>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x0000019A17A19210>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x0000019A17A191D0>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A179DDF50>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A179F8F50>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1052)
           2	RESUME(arg=0, lineno=1052)
           4	LOAD_GLOBAL(arg=1, lineno=1066)
          16	LOAD_FAST(arg=0, lineno=1066)
          18	PRECALL(arg=1, lineno=1066)
          22	CALL(arg=1, lineno=1066)
          32	LOAD_FAST(arg=1, lineno=1066)
          34	LOAD_CONST(arg=1, lineno=1066)
          36	LOAD_CONST(arg=1, lineno=1066)
          38	BUILD_SLICE(arg=2, lineno=1066)
          40	STORE_SUBSCR(arg=None, lineno=1066)
          44	LOAD_CONST(arg=1, lineno=1066)
          46	RETURN_VALUE(arg=None, lineno=1066)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1052)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1052)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=PRECALL(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1', '$const36.6.1']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$38build_slice.8']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$const44.9.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5.1'}), (36, {'res': '$const36.6.1'}), (38, {'start': '$const34.5.1', 'stop': '$const36.6.1', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9.1'}), (46, {'retval': '$const44.9.1', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A177C2510>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5.1 = const(NoneType, None)     ['$const34.5.1']
    $const36.6.1 = const(NoneType, None)     ['$const36.6.1']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1066), Var($const36.6.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5.1', '$const36.6.1']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9.1 = const(NoneType, None)     ['$const44.9.1']
    $46return_value.10 = cast(value=$const44.9.1) ['$46return_value.10', '$const44.9.1']
    return $46return_value.10                ['$46return_value.10']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17CF8ED0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A177C2510>)
DEBUG:numba.core.ssa:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const34.5.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const36.6.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1066), Var($const36.6.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: y[slice(None, None, None)] = $22call.3
DEBUG:numba.core.ssa:on stmt: $const44.9.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.10 = cast(value=$const44.9.1)
DEBUG:numba.core.ssa:on stmt: return $46return_value.10
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x0000019A17CEE9D0>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x0000019A17CEF110>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x0000019A17CEF1D0>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x0000019A17CEF610>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17CEE650>,
                                  0)],
             '$const34.5.1': [(<numba.core.ir.Assign object at 0x0000019A17CEED50>,
                               0)],
             '$const36.6.1': [(<numba.core.ir.Assign object at 0x0000019A17CEEF10>,
                               0)],
             '$const44.9.1': [(<numba.core.ir.Assign object at 0x0000019A17CEF450>,
                               0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A17CEE350>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000019A17CEE450>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17CF8ED0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$18load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=CALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$82call.8']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0', '$const100.12.3']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$102build_slice.14']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4', '$const114.18.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$116build_slice.20']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$154call.27']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30.2']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$218call.38']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi230.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=230 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi230.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=240 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:stack ['$out0240.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=232 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$const234.2.2']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9.2'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11.0'}), (100, {'res': '$const100.12.3'}), (102, {'start': '$const98.11.0', 'stop': '$const100.12.3', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9.2'}), (106, {}), (108, {'res': '$const108.15.2'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17.4'}), (114, {'res': '$const114.18.0'}), (116, {'start': '$const112.17.4', 'stop': '$const114.18.0', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15.2'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25.2'}), (148, {'res': '$const148.26.4'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25.2', '$const148.26.4'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30.2'}), (170, {'index': '$const168.30.2', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34.2'}), (194, {'res': '$const194.35.3'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34.2', '$const194.35.3'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2.2'}), (236, {'value': '$const234.2.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9.2 = const(int, 0)             ['$const94.9.2']
    $const98.11.0 = const(NoneType, None)    ['$const98.11.0']
    $const100.12.3 = const(int, 1)           ['$const100.12.3']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11.0, $const100.12.3, func=$102build_slice.13, args=(Var($const98.11.0, <string>:4), Var($const100.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12.3', '$const98.11.0']
    out0[$102build_slice.14] = $const94.9.2  ['$102build_slice.14', '$const94.9.2', 'out0']
    $const108.15.2 = const(int, 0)           ['$const108.15.2']
    $const112.17.4 = const(int, -1)          ['$const112.17.4']
    $const114.18.0 = const(NoneType, None)   ['$const114.18.0']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17.4, $const114.18.0, func=$116build_slice.19, args=(Var($const112.17.4, <string>:5), Var($const114.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17.4', '$const114.18.0']
    out0[$116build_slice.20] = $const108.15.2 ['$116build_slice.20', '$const108.15.2', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25.2 = const(int, 0)           ['$const146.25.2']
    $const148.26.4 = const(int, -1)          ['$const148.26.4']
    $154call.27 = call $134load_global.23($const146.25.2, $const148.26.4, func=$134load_global.23, args=[Var($const146.25.2, <string>:6), Var($const148.26.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25.2', '$const148.26.4']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30.2 = const(int, 0)           ['$const168.30.2']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30.2, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30.2', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34.2 = const(int, 0)           ['$const192.34.2']
    $const194.35.3 = const(int, 1)           ['$const194.35.3']
    $200call.36 = call $180load_global.32($const192.34.2, $const194.35.3, func=$180load_global.32, args=[Var($const192.34.2, <string>:6), Var($const194.35.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34.2', '$const194.35.3']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D1B790>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.4.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.4.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.3.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.3.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block analysis pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D1B790>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 242
DEBUG:numba.core.ssa:==== SSA block analysis pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D1B790>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block analysis pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D1B790>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D1B790>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const20.4.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const20.4.2 + index00
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const40.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index.2 = $const40.8.1 + index00
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const54.11.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: stencil_index.3 = $const54.11.3 + index00
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
DEBUG:numba.core.ssa:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $76return_value.15
DEBUG:numba.core.ssa:on stmt: jump 241
DEBUG:numba.core.ssa:==== SSA block analysis pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D1B790>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x0000019A17D14DD0>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x0000019A17D14F50>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x0000019A17D15810>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x0000019A17D15990>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x0000019A17D15C50>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x0000019A17D15E90>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x0000019A17D16510>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x0000019A17D16810>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x0000019A17D16D50>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x0000019A17D16F90>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x0000019A17D13590>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x0000019A17D17550>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x0000019A17D17B10>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x0000019A17D17E50>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000019A17D0A4D0>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x0000019A17D18050>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x0000019A17D181D0>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x0000019A17D18350>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x0000019A17D18F10>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x0000019A17D13910>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x0000019A17D00F50>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000019A17D0A750>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x0000019A17D13E10>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x0000019A17D0AA10>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x0000019A17D03CD0>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x0000019A17D14090>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x0000019A17D08F90>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000019A17D0A2D0>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x0000019A17D08650>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x0000019A17D17810>,
                                     0)],
             '$const100.12.3.1': [(<numba.core.ir.Assign object at 0x0000019A17D14BD0>,
                                   0)],
             '$const108.15.2.1': [(<numba.core.ir.Assign object at 0x0000019A17D15150>,
                                   0)],
             '$const112.17.4.1': [(<numba.core.ir.Assign object at 0x0000019A17D15490>,
                                   0)],
             '$const114.18.0.1': [(<numba.core.ir.Assign object at 0x0000019A17D15610>,
                                   0)],
             '$const146.25.2.1': [(<numba.core.ir.Assign object at 0x0000019A17D16090>,
                                   0)],
             '$const148.26.4.1': [(<numba.core.ir.Assign object at 0x0000019A17D16250>,
                                   0)],
             '$const168.30.2.1': [(<numba.core.ir.Assign object at 0x0000019A17D16B50>,
                                   0)],
             '$const192.34.2.1': [(<numba.core.ir.Assign object at 0x0000019A17D171D0>,
                                   0)],
             '$const194.35.3.1': [(<numba.core.ir.Assign object at 0x0000019A17D17350>,
                                   0)],
             '$const20.4.2': [(<numba.core.ir.Assign object at 0x0000019A17D00210>,
                               240)],
             '$const40.8.1': [(<numba.core.ir.Assign object at 0x0000019A17D015D0>,
                               240)],
             '$const54.11.3': [(<numba.core.ir.Assign object at 0x0000019A17D02B10>,
                                240)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x0000019A17CFE350>,
                              240)],
             '$const94.9.2.1': [(<numba.core.ir.Assign object at 0x0000019A17D146D0>,
                                 0)],
             '$const98.11.0.1': [(<numba.core.ir.Assign object at 0x0000019A17D14A10>,
                                  0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x0000019A17D133D0>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x0000019A17D18410>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x0000019A17D13190>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x0000019A17D186D0>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x0000019A17D14350>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x0000019A17D0A250>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x0000019A17D0A410>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x0000019A17D0A710>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x0000019A17D0A990>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A17D105D0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17D1B790>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1052)
           2	RESUME(arg=0, lineno=1052)
           4	LOAD_GLOBAL(arg=1, lineno=1066)
          16	LOAD_FAST(arg=0, lineno=1066)
          18	PRECALL(arg=1, lineno=1066)
          22	CALL(arg=1, lineno=1066)
          32	LOAD_FAST(arg=1, lineno=1066)
          34	LOAD_CONST(arg=1, lineno=1066)
          36	LOAD_CONST(arg=1, lineno=1066)
          38	BUILD_SLICE(arg=2, lineno=1066)
          40	STORE_SUBSCR(arg=None, lineno=1066)
          44	LOAD_CONST(arg=1, lineno=1066)
          46	RETURN_VALUE(arg=None, lineno=1066)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1052)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1052)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=PRECALL(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1', '$const36.6.1']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$38build_slice.8']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$const44.9.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5.1'}), (36, {'res': '$const36.6.1'}), (38, {'start': '$const34.5.1', 'stop': '$const36.6.1', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9.1'}), (46, {'retval': '$const44.9.1', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A177C2510>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5.1 = const(NoneType, None)     ['$const34.5.1']
    $const36.6.1 = const(NoneType, None)     ['$const36.6.1']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1066), Var($const36.6.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5.1', '$const36.6.1']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9.1 = const(NoneType, None)     ['$const44.9.1']
    $46return_value.10 = cast(value=$const44.9.1) ['$46return_value.10', '$const44.9.1']
    return $46return_value.10                ['$46return_value.10']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A18EBEF50>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A177C2510>)
DEBUG:numba.core.ssa:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const34.5.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const36.6.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1066), Var($const36.6.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: y[slice(None, None, None)] = $22call.3
DEBUG:numba.core.ssa:on stmt: $const44.9.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.10 = cast(value=$const44.9.1)
DEBUG:numba.core.ssa:on stmt: return $46return_value.10
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x0000019A18EBCBD0>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x0000019A18EBD310>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x0000019A18EBD3D0>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x0000019A18EBD810>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A18EBC8D0>,
                                  0)],
             '$const34.5.1': [(<numba.core.ir.Assign object at 0x0000019A18EBCF50>,
                               0)],
             '$const36.6.1': [(<numba.core.ir.Assign object at 0x0000019A18EBD110>,
                               0)],
             '$const44.9.1': [(<numba.core.ir.Assign object at 0x0000019A18EBD650>,
                               0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A18EBC610>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000019A18EBC710>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A18EBEF50>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$18load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=CALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$82call.8']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0', '$const100.12.3']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$102build_slice.14']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4', '$const114.18.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$116build_slice.20']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$154call.27']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30.2']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$218call.38']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi230.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=230 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi230.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=240 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:stack ['$out0240.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=232 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$const234.2.2']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9.2'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11.0'}), (100, {'res': '$const100.12.3'}), (102, {'start': '$const98.11.0', 'stop': '$const100.12.3', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9.2'}), (106, {}), (108, {'res': '$const108.15.2'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17.4'}), (114, {'res': '$const114.18.0'}), (116, {'start': '$const112.17.4', 'stop': '$const114.18.0', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15.2'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25.2'}), (148, {'res': '$const148.26.4'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25.2', '$const148.26.4'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30.2'}), (170, {'index': '$const168.30.2', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34.2'}), (194, {'res': '$const194.35.3'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34.2', '$const194.35.3'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2.2'}), (236, {'value': '$const234.2.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9.2 = const(int, 0)             ['$const94.9.2']
    $const98.11.0 = const(NoneType, None)    ['$const98.11.0']
    $const100.12.3 = const(int, 1)           ['$const100.12.3']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11.0, $const100.12.3, func=$102build_slice.13, args=(Var($const98.11.0, <string>:4), Var($const100.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12.3', '$const98.11.0']
    out0[$102build_slice.14] = $const94.9.2  ['$102build_slice.14', '$const94.9.2', 'out0']
    $const108.15.2 = const(int, 0)           ['$const108.15.2']
    $const112.17.4 = const(int, -1)          ['$const112.17.4']
    $const114.18.0 = const(NoneType, None)   ['$const114.18.0']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17.4, $const114.18.0, func=$116build_slice.19, args=(Var($const112.17.4, <string>:5), Var($const114.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17.4', '$const114.18.0']
    out0[$116build_slice.20] = $const108.15.2 ['$116build_slice.20', '$const108.15.2', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25.2 = const(int, 0)           ['$const146.25.2']
    $const148.26.4 = const(int, -1)          ['$const148.26.4']
    $154call.27 = call $134load_global.23($const146.25.2, $const148.26.4, func=$134load_global.23, args=[Var($const146.25.2, <string>:6), Var($const148.26.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25.2', '$const148.26.4']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30.2 = const(int, 0)           ['$const168.30.2']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30.2, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30.2', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34.2 = const(int, 0)           ['$const192.34.2']
    $const194.35.3 = const(int, 1)           ['$const194.35.3']
    $200call.36 = call $180load_global.32($const192.34.2, $const194.35.3, func=$180load_global.32, args=[Var($const192.34.2, <string>:6), Var($const194.35.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34.2', '$const194.35.3']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A18EF5650>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.4.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.4.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.3.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.3.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block analysis pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A18EF5650>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 242
DEBUG:numba.core.ssa:==== SSA block analysis pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A18EF5650>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block analysis pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A18EF5650>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A18EF5650>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const20.4.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const20.4.2 + index00
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const40.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index.2 = $const40.8.1 + index00
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const54.11.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: stencil_index.3 = $const54.11.3 + index00
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
DEBUG:numba.core.ssa:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $76return_value.15
DEBUG:numba.core.ssa:on stmt: jump 241
DEBUG:numba.core.ssa:==== SSA block analysis pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A18EF5650>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x0000019A18EE6BD0>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x0000019A18EE6D50>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x0000019A18EE7550>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x0000019A18EE76D0>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x0000019A18EE78D0>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x0000019A18EE7A50>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x0000019A18EE7F50>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x0000019A18EF0150>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x0000019A18EF0690>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x0000019A18EF0890>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x0000019A18EE5A50>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x0000019A18EF0F10>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x0000019A18EF1550>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x0000019A18EF1810>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000019A18EDC550>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x0000019A18EF1A10>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x0000019A18EF1B90>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x0000019A18EF1D10>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x0000019A18EF2890>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x0000019A18EE5C90>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x0000019A18EBFA90>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000019A18EDC7D0>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x0000019A18EE5F50>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x0000019A18EDCA90>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x0000019A18ED5890>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x0000019A18EE60D0>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x0000019A18ED6FD0>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000019A18EDC350>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x0000019A18ED6690>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x0000019A18EF1250>,
                                     0)],
             '$const100.12.3.1': [(<numba.core.ir.Assign object at 0x0000019A18EE6A10>,
                                   0)],
             '$const108.15.2.1': [(<numba.core.ir.Assign object at 0x0000019A18EE6F50>,
                                   0)],
             '$const112.17.4.1': [(<numba.core.ir.Assign object at 0x0000019A18EE7210>,
                                   0)],
             '$const114.18.0.1': [(<numba.core.ir.Assign object at 0x0000019A18EE7390>,
                                   0)],
             '$const146.25.2.1': [(<numba.core.ir.Assign object at 0x0000019A18EE7BD0>,
                                   0)],
             '$const148.26.4.1': [(<numba.core.ir.Assign object at 0x0000019A18EE7D50>,
                                   0)],
             '$const168.30.2.1': [(<numba.core.ir.Assign object at 0x0000019A18EF0490>,
                                   0)],
             '$const192.34.2.1': [(<numba.core.ir.Assign object at 0x0000019A18EF0A90>,
                                   0)],
             '$const194.35.3.1': [(<numba.core.ir.Assign object at 0x0000019A18EF0C50>,
                                   0)],
             '$const20.4.2': [(<numba.core.ir.Assign object at 0x0000019A18ED4190>,
                               240)],
             '$const40.8.1': [(<numba.core.ir.Assign object at 0x0000019A18EBC650>,
                               240)],
             '$const54.11.3': [(<numba.core.ir.Assign object at 0x0000019A18EB2C50>,
                                240)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x0000019A18ED2250>,
                              240)],
             '$const94.9.2.1': [(<numba.core.ir.Assign object at 0x0000019A18EE6590>,
                                 0)],
             '$const98.11.0.1': [(<numba.core.ir.Assign object at 0x0000019A18EE6890>,
                                  0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x0000019A18EE58D0>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x0000019A18EF1DD0>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x0000019A18EE5750>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x0000019A18EF2090>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x0000019A18EE62D0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x0000019A18EDC2D0>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x0000019A18EDC490>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x0000019A18EDC790>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x0000019A18EDCA10>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A18EDF010>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A18EF3890>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1052)
           2	RESUME(arg=0, lineno=1052)
           4	LOAD_GLOBAL(arg=1, lineno=1066)
          16	LOAD_FAST(arg=0, lineno=1066)
          18	PRECALL(arg=1, lineno=1066)
          22	CALL(arg=1, lineno=1066)
          32	LOAD_FAST(arg=1, lineno=1066)
          34	LOAD_CONST(arg=1, lineno=1066)
          36	LOAD_CONST(arg=1, lineno=1066)
          38	BUILD_SLICE(arg=2, lineno=1066)
          40	STORE_SUBSCR(arg=None, lineno=1066)
          44	LOAD_CONST(arg=1, lineno=1066)
          46	RETURN_VALUE(arg=None, lineno=1066)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1052)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1052)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=PRECALL(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1', '$const36.6.1']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$38build_slice.8']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$const44.9.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5.1'}), (36, {'res': '$const36.6.1'}), (38, {'start': '$const34.5.1', 'stop': '$const36.6.1', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9.1'}), (46, {'retval': '$const44.9.1', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A177C2510>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5.1 = const(NoneType, None)     ['$const34.5.1']
    $const36.6.1 = const(NoneType, None)     ['$const36.6.1']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1066), Var($const36.6.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5.1', '$const36.6.1']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9.1 = const(NoneType, None)     ['$const44.9.1']
    $46return_value.10 = cast(value=$const44.9.1) ['$46return_value.10', '$const44.9.1']
    return $46return_value.10                ['$46return_value.10']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A15E9F450>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A177C2510>)
DEBUG:numba.core.ssa:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const34.5.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const36.6.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1066), Var($const36.6.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: y[slice(None, None, None)] = $22call.3
DEBUG:numba.core.ssa:on stmt: $const44.9.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.10 = cast(value=$const44.9.1)
DEBUG:numba.core.ssa:on stmt: return $46return_value.10
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x0000019A161EC3D0>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x0000019A161EF550>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x0000019A161EF290>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x0000019A161EF090>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A161ECED0>,
                                  0)],
             '$const34.5.1': [(<numba.core.ir.Assign object at 0x0000019A161EF2D0>,
                               0)],
             '$const36.6.1': [(<numba.core.ir.Assign object at 0x0000019A161EFE90>,
                               0)],
             '$const44.9.1': [(<numba.core.ir.Assign object at 0x0000019A161EF110>,
                               0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A161ECF10>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000019A161EC310>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A15E9F450>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$18load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=CALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$82call.8']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0', '$const100.12.3']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$102build_slice.14']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4', '$const114.18.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$116build_slice.20']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$154call.27']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30.2']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$218call.38']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi230.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=230 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi230.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=240 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:stack ['$out0240.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=232 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$const234.2.2']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9.2'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11.0'}), (100, {'res': '$const100.12.3'}), (102, {'start': '$const98.11.0', 'stop': '$const100.12.3', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9.2'}), (106, {}), (108, {'res': '$const108.15.2'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17.4'}), (114, {'res': '$const114.18.0'}), (116, {'start': '$const112.17.4', 'stop': '$const114.18.0', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15.2'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25.2'}), (148, {'res': '$const148.26.4'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25.2', '$const148.26.4'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30.2'}), (170, {'index': '$const168.30.2', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34.2'}), (194, {'res': '$const194.35.3'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34.2', '$const194.35.3'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2.2'}), (236, {'value': '$const234.2.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9.2 = const(int, 0)             ['$const94.9.2']
    $const98.11.0 = const(NoneType, None)    ['$const98.11.0']
    $const100.12.3 = const(int, 1)           ['$const100.12.3']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11.0, $const100.12.3, func=$102build_slice.13, args=(Var($const98.11.0, <string>:4), Var($const100.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12.3', '$const98.11.0']
    out0[$102build_slice.14] = $const94.9.2  ['$102build_slice.14', '$const94.9.2', 'out0']
    $const108.15.2 = const(int, 0)           ['$const108.15.2']
    $const112.17.4 = const(int, -1)          ['$const112.17.4']
    $const114.18.0 = const(NoneType, None)   ['$const114.18.0']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17.4, $const114.18.0, func=$116build_slice.19, args=(Var($const112.17.4, <string>:5), Var($const114.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17.4', '$const114.18.0']
    out0[$116build_slice.20] = $const108.15.2 ['$116build_slice.20', '$const108.15.2', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25.2 = const(int, 0)           ['$const146.25.2']
    $const148.26.4 = const(int, -1)          ['$const148.26.4']
    $154call.27 = call $134load_global.23($const146.25.2, $const148.26.4, func=$134load_global.23, args=[Var($const146.25.2, <string>:6), Var($const148.26.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25.2', '$const148.26.4']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30.2 = const(int, 0)           ['$const168.30.2']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30.2, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30.2', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34.2 = const(int, 0)           ['$const192.34.2']
    $const194.35.3 = const(int, 1)           ['$const194.35.3']
    $200call.36 = call $180load_global.32($const192.34.2, $const194.35.3, func=$180load_global.32, args=[Var($const192.34.2, <string>:6), Var($const194.35.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34.2', '$const194.35.3']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A16167C10>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.4.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.4.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.3.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.3.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block analysis pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A16167C10>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 242
DEBUG:numba.core.ssa:==== SSA block analysis pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A16167C10>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block analysis pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A16167C10>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A16167C10>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const20.4.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const20.4.2 + index00
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const40.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index.2 = $const40.8.1 + index00
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const54.11.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: stencil_index.3 = $const54.11.3 + index00
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
DEBUG:numba.core.ssa:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $76return_value.15
DEBUG:numba.core.ssa:on stmt: jump 241
DEBUG:numba.core.ssa:==== SSA block analysis pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A16167C10>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x0000019A16298690>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x0000019A16298A50>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x0000019A162684D0>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x0000019A16268890>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x0000019A16268190>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x0000019A16268290>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x0000019A16268350>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x0000019A1626AAD0>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x0000019A16269710>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x0000019A162693D0>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x0000019A1629B350>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x0000019A162691D0>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x0000019A1626B310>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x0000019A1626B250>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000019A160D01D0>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x0000019A16269210>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x0000019A16269890>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x0000019A1626B790>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x0000019A15EE6AD0>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x0000019A1629A150>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x0000019A15FE8E90>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000019A160D0090>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x0000019A1629A390>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x0000019A160D0A90>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x0000019A161D7390>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x0000019A16299550>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x0000019A161D4D10>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000019A160D2B90>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x0000019A161D71D0>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x0000019A1626A810>,
                                     0)],
             '$const100.12.3.1': [(<numba.core.ir.Assign object at 0x0000019A162984D0>,
                                   0)],
             '$const108.15.2.1': [(<numba.core.ir.Assign object at 0x0000019A1629A810>,
                                   0)],
             '$const112.17.4.1': [(<numba.core.ir.Assign object at 0x0000019A1626AD10>,
                                   0)],
             '$const114.18.0.1': [(<numba.core.ir.Assign object at 0x0000019A1626B150>,
                                   0)],
             '$const146.25.2.1': [(<numba.core.ir.Assign object at 0x0000019A16268550>,
                                   0)],
             '$const148.26.4.1': [(<numba.core.ir.Assign object at 0x0000019A16268450>,
                                   0)],
             '$const168.30.2.1': [(<numba.core.ir.Assign object at 0x0000019A16268F90>,
                                   0)],
             '$const192.34.2.1': [(<numba.core.ir.Assign object at 0x0000019A16268B10>,
                                   0)],
             '$const194.35.3.1': [(<numba.core.ir.Assign object at 0x0000019A1626A950>,
                                   0)],
             '$const20.4.2': [(<numba.core.ir.Assign object at 0x0000019A15E9FCD0>,
                               240)],
             '$const40.8.1': [(<numba.core.ir.Assign object at 0x0000019A15FE8CD0>,
                               240)],
             '$const54.11.3': [(<numba.core.ir.Assign object at 0x0000019A1611D150>,
                                240)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x0000019A1628A990>,
                              240)],
             '$const94.9.2.1': [(<numba.core.ir.Assign object at 0x0000019A162991D0>,
                                 0)],
             '$const98.11.0.1': [(<numba.core.ir.Assign object at 0x0000019A16299CD0>,
                                  0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x0000019A1629BA10>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x0000019A16269A50>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x0000019A1629B2D0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x0000019A16269C50>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x0000019A16298A10>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x0000019A160D0C50>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x0000019A160D26D0>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x0000019A160D03D0>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x0000019A160D0510>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A17D15B10>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A1625C7D0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1052)
           2	RESUME(arg=0, lineno=1052)
           4	LOAD_GLOBAL(arg=1, lineno=1066)
          16	LOAD_FAST(arg=0, lineno=1066)
          18	PRECALL(arg=1, lineno=1066)
          22	CALL(arg=1, lineno=1066)
          32	LOAD_FAST(arg=1, lineno=1066)
          34	LOAD_CONST(arg=1, lineno=1066)
          36	LOAD_CONST(arg=1, lineno=1066)
          38	BUILD_SLICE(arg=2, lineno=1066)
          40	STORE_SUBSCR(arg=None, lineno=1066)
          44	LOAD_CONST(arg=1, lineno=1066)
          46	RETURN_VALUE(arg=None, lineno=1066)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1052)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1052)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=PRECALL(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=BUILD_SLICE(arg=2, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$const34.5.1', '$const36.6.1']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=STORE_SUBSCR(arg=None, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$22call.3', '$y32.4', '$38build_slice.8']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=1, lineno=1066)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=1066)
DEBUG:numba.core.byteflow:stack ['$const44.9.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$x16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$y32.4'}), (34, {'res': '$const34.5.1'}), (36, {'res': '$const36.6.1'}), (38, {'start': '$const34.5.1', 'stop': '$const36.6.1', 'step': None, 'res': '$38build_slice.8', 'slicevar': '$38build_slice.7'}), (40, {'target': '$y32.4', 'index': '$38build_slice.8', 'value': '$22call.3'}), (42, {}), (44, {'res': '$const44.9.1'}), (46, {'retval': '$const44.9.1', 'castval': '$46return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A177C2510>) ['$4load_global.0']
    $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None) ['$22call.3', '$4load_global.0', 'x']
    $const34.5.1 = const(NoneType, None)     ['$const34.5.1']
    $const36.6.1 = const(NoneType, None)     ['$const36.6.1']
    $38build_slice.7 = global(slice: <class 'slice'>) ['$38build_slice.7']
    $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1066), Var($const36.6.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None) ['$38build_slice.7', '$38build_slice.8', '$const34.5.1', '$const36.6.1']
    y[$38build_slice.8] = $22call.3          ['$22call.3', '$38build_slice.8', 'y']
    $const44.9.1 = const(NoneType, None)     ['$const44.9.1']
    $46return_value.10 = cast(value=$const44.9.1) ['$46return_value.10', '$const44.9.1']
    return $46return_value.10                ['$46return_value.10']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A162AB310>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: y = arg(1, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x0000019A177C2510>)
DEBUG:numba.core.ssa:on stmt: $22call.3 = call $4load_global.0(x, func=$4load_global.0, args=[Var(x, utils.py:1052)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const34.5.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const36.6.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $38build_slice.7 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $38build_slice.8 = call $38build_slice.7($const34.5.1, $const36.6.1, func=$38build_slice.7, args=(Var($const34.5.1, utils.py:1066), Var($const36.6.1, utils.py:1066)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: y[slice(None, None, None)] = $22call.3
DEBUG:numba.core.ssa:on stmt: $const44.9.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $46return_value.10 = cast(value=$const44.9.1)
DEBUG:numba.core.ssa:on stmt: return $46return_value.10
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$22call.3': [(<numba.core.ir.Assign object at 0x0000019A162D1590>,
                            0)],
             '$38build_slice.7': [(<numba.core.ir.Assign object at 0x0000019A162D0610>,
                                   0)],
             '$38build_slice.8': [(<numba.core.ir.Assign object at 0x0000019A162D33D0>,
                                   0)],
             '$46return_value.10': [(<numba.core.ir.Assign object at 0x0000019A162AAF90>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A162D2550>,
                                  0)],
             '$const34.5.1': [(<numba.core.ir.Assign object at 0x0000019A162D2650>,
                               0)],
             '$const36.6.1': [(<numba.core.ir.Assign object at 0x0000019A162D19D0>,
                               0)],
             '$const44.9.1': [(<numba.core.ir.Assign object at 0x0000019A162AA690>,
                               0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A162D04D0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000019A162D2D90>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A162AB310>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	RESUME(arg=0, lineno=1)
           4	LOAD_FAST(arg=0, lineno=2)
           6	LOAD_ATTR(arg=0, lineno=2)
          16	STORE_FAST(arg=1, lineno=2)
          18	LOAD_GLOBAL(arg=2, lineno=3)
          30	LOAD_METHOD(arg=2, lineno=3)
          52	LOAD_FAST(arg=1, lineno=3)
          54	LOAD_GLOBAL(arg=2, lineno=3)
          66	LOAD_ATTR(arg=3, lineno=3)
          76	KW_NAMES(arg=1, lineno=3)
          78	PRECALL(arg=2, lineno=3)
          82	CALL(arg=2, lineno=3)
          92	STORE_FAST(arg=2, lineno=3)
          94	LOAD_CONST(arg=2, lineno=4)
          96	LOAD_FAST(arg=2, lineno=4)
          98	LOAD_CONST(arg=0, lineno=4)
         100	LOAD_CONST(arg=3, lineno=4)
         102	BUILD_SLICE(arg=2, lineno=4)
         104	STORE_SUBSCR(arg=None, lineno=4)
         108	LOAD_CONST(arg=2, lineno=5)
         110	LOAD_FAST(arg=2, lineno=5)
         112	LOAD_CONST(arg=4, lineno=5)
         114	LOAD_CONST(arg=0, lineno=5)
         116	BUILD_SLICE(arg=2, lineno=5)
         118	STORE_SUBSCR(arg=None, lineno=5)
         122	LOAD_GLOBAL(arg=9, lineno=6)
         134	LOAD_GLOBAL(arg=11, lineno=6)
         146	LOAD_CONST(arg=2, lineno=6)
         148	LOAD_CONST(arg=4, lineno=6)
         150	PRECALL(arg=2, lineno=6)
         154	CALL(arg=2, lineno=6)
         164	UNARY_NEGATIVE(arg=None, lineno=6)
         166	LOAD_FAST(arg=1, lineno=6)
         168	LOAD_CONST(arg=2, lineno=6)
         170	BINARY_SUBSCR(arg=None, lineno=6)
         180	LOAD_GLOBAL(arg=13, lineno=6)
         192	LOAD_CONST(arg=2, lineno=6)
         194	LOAD_CONST(arg=3, lineno=6)
         196	PRECALL(arg=2, lineno=6)
         200	CALL(arg=2, lineno=6)
         210	BINARY_OP(arg=10, lineno=6)
         214	PRECALL(arg=2, lineno=6)
         218	CALL(arg=2, lineno=6)
         228	GET_ITER(arg=None, lineno=6)
>        230	FOR_ITER(arg=4, lineno=6)
         232	STORE_FAST(arg=3, lineno=6)
         234	LOAD_CONST(arg=2, lineno=7)
         236	STORE_FAST(arg=4, lineno=7)
         238	JUMP_BACKWARD(arg=5, lineno=7)
>        240	LOAD_FAST(arg=2, lineno=8)
         242	RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=STORE_FAST(arg=1, lineno=2)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_METHOD(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$18load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_GLOBAL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_ATTR(arg=3, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$54load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=KW_NAMES(arg=1, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=PRECALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=CALL(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$null$30.3', '$30load_method.4', '$full_shape052.5', '$66load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=STORE_FAST(arg=2, lineno=3)
DEBUG:numba.core.byteflow:stack ['$82call.8']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=LOAD_CONST(arg=3, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$const98.11.0', '$const100.12.3']
DEBUG:numba.core.byteflow:dispatch pc=104, inst=STORE_SUBSCR(arg=None, lineno=4)
DEBUG:numba.core.byteflow:stack ['$const94.9.2', '$out096.10', '$102build_slice.14']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_CONST(arg=4, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_CONST(arg=0, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BUILD_SLICE(arg=2, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$const112.17.4', '$const114.18.0']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=STORE_SUBSCR(arg=None, lineno=5)
DEBUG:numba.core.byteflow:stack ['$const108.15.2', '$out0110.16', '$116build_slice.20']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_GLOBAL(arg=9, lineno=6)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_GLOBAL(arg=11, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_CONST(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$null$134.24', '$134load_global.23', '$const146.25.2', '$const148.26.4']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=UNARY_NEGATIVE(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$154call.27']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_FAST(arg=1, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=BINARY_SUBSCR(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$full_shape0166.29', '$const168.30.2']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_GLOBAL(arg=13, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_CONST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$null$180.33', '$180load_global.32', '$const192.34.2', '$const194.35.3']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=BINARY_OP(arg=10, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$170binary_subscr.31', '$200call.36']
DEBUG:numba.core.byteflow:dispatch pc=214, inst=PRECALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=CALL(arg=2, lineno=6)
DEBUG:numba.core.byteflow:stack ['$null$122.22', '$122load_global.21', '$164unary_negative.28', '$binop_sub210.37']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=GET_ITER(arg=None, lineno=6)
DEBUG:numba.core.byteflow:stack ['$218call.38']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$228get_iter.39',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi230.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=230 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=230, inst=FOR_ITER(arg=4, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi230.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=240, stack=(), blockstack=(), npush=0), Edge(pc=232, stack=('$phi230.0', '$230for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=240 nstack_initial=0), State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=240 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=240, inst=LOAD_FAST(arg=2, lineno=8)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=242, inst=RETURN_VALUE(arg=None, lineno=8)
DEBUG:numba.core.byteflow:stack ['$out0240.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=232 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=232 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=232, inst=STORE_FAST(arg=3, lineno=6)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$phi232.1']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=LOAD_CONST(arg=2, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=STORE_FAST(arg=4, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0', '$const234.2.2']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=JUMP_BACKWARD(arg=5, lineno=7)
DEBUG:numba.core.byteflow:stack ['$phi232.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=230, stack=('$phi232.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=230 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=230 nstack_initial=1): {'$phi230.0'},
             State(pc_initial=232 nstack_initial=2): {'$phi232.1'},
             State(pc_initial=240 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi230.0': State(pc_initial=0 nstack_initial=0),
 '$phi232.1': State(pc_initial=230 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi232.0',
                            State(pc_initial=232 nstack_initial=2))},
             '$phi232.0': {('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi230.0',
                            State(pc_initial=230 nstack_initial=1))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi230.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.0': {('$228get_iter.39',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi232.1': {('$230for_iter.2',
                            State(pc_initial=230 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi230.0': {('$228get_iter.39', State(pc_initial=0 nstack_initial=0))},
 '$phi232.1': {('$230for_iter.2', State(pc_initial=230 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi230.0': '$228get_iter.39'},
             State(pc_initial=230 nstack_initial=1): {'$phi232.1': '$230for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'value': '$6load_attr.1'}), (18, {'idx': 1, 'res': '$18load_global.2'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.2', 'res': '$30load_method.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$full_shape052.5'}), (54, {'idx': 1, 'res': '$54load_global.6'}), (56, {}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'item': '$54load_global.6', 'res': '$66load_attr.7'}), (68, {}), (70, {}), (72, {}), (74, {}), (78, {}), (80, {}), (82, {'func': '$30load_method.4', 'args': ['$full_shape052.5', '$66load_attr.7'], 'kw_names': 1, 'res': '$82call.8'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82call.8'}), (94, {'res': '$const94.9.2'}), (96, {'res': '$out096.10'}), (98, {'res': '$const98.11.0'}), (100, {'res': '$const100.12.3'}), (102, {'start': '$const98.11.0', 'stop': '$const100.12.3', 'step': None, 'res': '$102build_slice.14', 'slicevar': '$102build_slice.13'}), (104, {'target': '$out096.10', 'index': '$102build_slice.14', 'value': '$const94.9.2'}), (106, {}), (108, {'res': '$const108.15.2'}), (110, {'res': '$out0110.16'}), (112, {'res': '$const112.17.4'}), (114, {'res': '$const114.18.0'}), (116, {'start': '$const112.17.4', 'stop': '$const114.18.0', 'step': None, 'res': '$116build_slice.20', 'slicevar': '$116build_slice.19'}), (118, {'target': '$out0110.16', 'index': '$116build_slice.20', 'value': '$const108.15.2'}), (120, {}), (122, {'idx': 4, 'res': '$122load_global.21'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'idx': 5, 'res': '$134load_global.23'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {'res': '$const146.25.2'}), (148, {'res': '$const148.26.4'}), (150, {}), (152, {}), (154, {'func': '$134load_global.23', 'args': ['$const146.25.2', '$const148.26.4'], 'kw_names': None, 'res': '$154call.27'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.27', 'res': '$164unary_negative.28'}), (166, {'res': '$full_shape0166.29'}), (168, {'res': '$const168.30.2'}), (170, {'index': '$const168.30.2', 'target': '$full_shape0166.29', 'res': '$170binary_subscr.31'}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'idx': 6, 'res': '$180load_global.32'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'res': '$const192.34.2'}), (194, {'res': '$const194.35.3'}), (196, {}), (198, {}), (200, {'func': '$180load_global.32', 'args': ['$const192.34.2', '$const194.35.3'], 'kw_names': None, 'res': '$200call.36'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'op': '-', 'lhs': '$170binary_subscr.31', 'rhs': '$200call.36', 'res': '$binop_sub210.37'}), (212, {}), (214, {}), (216, {}), (218, {'func': '$122load_global.21', 'args': ['$164unary_negative.28', '$binop_sub210.37'], 'kw_names': None, 'res': '$218call.38'}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'value': '$218call.38', 'res': '$228get_iter.39'})), outgoing_phis={'$phi230.0': '$228get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$228get_iter.39',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=230 nstack_initial=1):
AdaptBlockInfo(insts=((230, {'iterator': '$phi230.0', 'pair': '$230for_iter.1', 'indval': '$230for_iter.2', 'pred': '$230for_iter.3'}),), outgoing_phis={'$phi232.1': '$230for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={240: (), 232: ('$phi230.0', '$230for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=232 nstack_initial=2):
AdaptBlockInfo(insts=((232, {'value': '$phi232.1'}), (234, {'res': '$const234.2.2'}), (236, {'value': '$const234.2.2'}), (238, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={230: ('$phi232.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=240 nstack_initial=0):
AdaptBlockInfo(insts=((240, {'res': '$out0240.0'}), (242, {'retval': '$out0240.0', 'castval': '$242return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $18load_global.2 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.2']
    $30load_method.4 = getattr(value=$18load_global.2, attr=empty) ['$18load_global.2', '$30load_method.4']
    $54load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$54load_global.6']
    $66load_attr.7 = getattr(value=$54load_global.6, attr=bool) ['$54load_global.6', '$66load_attr.7']
    out0 = call $30load_method.4(full_shape0, func=$30load_method.4, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7, <string>:3))], vararg=None, varkwarg=None, target=None) ['$30load_method.4', '$66load_attr.7', 'full_shape0', 'out0']
    $const94.9.2 = const(int, 0)             ['$const94.9.2']
    $const98.11.0 = const(NoneType, None)    ['$const98.11.0']
    $const100.12.3 = const(int, 1)           ['$const100.12.3']
    $102build_slice.13 = global(slice: <class 'slice'>) ['$102build_slice.13']
    $102build_slice.14 = call $102build_slice.13($const98.11.0, $const100.12.3, func=$102build_slice.13, args=(Var($const98.11.0, <string>:4), Var($const100.12.3, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.13', '$102build_slice.14', '$const100.12.3', '$const98.11.0']
    out0[$102build_slice.14] = $const94.9.2  ['$102build_slice.14', '$const94.9.2', 'out0']
    $const108.15.2 = const(int, 0)           ['$const108.15.2']
    $const112.17.4 = const(int, -1)          ['$const112.17.4']
    $const114.18.0 = const(NoneType, None)   ['$const114.18.0']
    $116build_slice.19 = global(slice: <class 'slice'>) ['$116build_slice.19']
    $116build_slice.20 = call $116build_slice.19($const112.17.4, $const114.18.0, func=$116build_slice.19, args=(Var($const112.17.4, <string>:5), Var($const114.18.0, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$116build_slice.19', '$116build_slice.20', '$const112.17.4', '$const114.18.0']
    out0[$116build_slice.20] = $const108.15.2 ['$116build_slice.20', '$const108.15.2', 'out0']
    $122load_global.21 = global(range: <class 'range'>) ['$122load_global.21']
    $134load_global.23 = global(min: <built-in function min>) ['$134load_global.23']
    $const146.25.2 = const(int, 0)           ['$const146.25.2']
    $const148.26.4 = const(int, -1)          ['$const148.26.4']
    $154call.27 = call $134load_global.23($const146.25.2, $const148.26.4, func=$134load_global.23, args=[Var($const146.25.2, <string>:6), Var($const148.26.4, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$134load_global.23', '$154call.27', '$const146.25.2', '$const148.26.4']
    $164unary_negative.28 = unary(fn=<built-in function neg>, value=$154call.27) ['$154call.27', '$164unary_negative.28']
    $const168.30.2 = const(int, 0)           ['$const168.30.2']
    $170binary_subscr.31 = getitem(value=full_shape0, index=$const168.30.2, fn=<built-in function getitem>) ['$170binary_subscr.31', '$const168.30.2', 'full_shape0']
    $180load_global.32 = global(max: <built-in function max>) ['$180load_global.32']
    $const192.34.2 = const(int, 0)           ['$const192.34.2']
    $const194.35.3 = const(int, 1)           ['$const194.35.3']
    $200call.36 = call $180load_global.32($const192.34.2, $const194.35.3, func=$180load_global.32, args=[Var($const192.34.2, <string>:6), Var($const194.35.3, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_global.32', '$200call.36', '$const192.34.2', '$const194.35.3']
    $binop_sub210.37 = $170binary_subscr.31 - $200call.36 ['$170binary_subscr.31', '$200call.36', '$binop_sub210.37']
    $218call.38 = call $122load_global.21($164unary_negative.28, $binop_sub210.37, func=$122load_global.21, args=[Var($164unary_negative.28, <string>:6), Var($binop_sub210.37, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.21', '$164unary_negative.28', '$218call.38', '$binop_sub210.37']
    $228get_iter.39 = getiter(value=$218call.38) ['$218call.38', '$228get_iter.39']
    $phi230.0 = $228get_iter.39              ['$228get_iter.39', '$phi230.0']
    jump 230                                 []
label 230:
    $230for_iter.1 = iternext(value=$phi230.0) ['$230for_iter.1', '$phi230.0']
    $230for_iter.2 = pair_first(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.2']
    $230for_iter.3 = pair_second(value=$230for_iter.1) ['$230for_iter.1', '$230for_iter.3']
    $phi232.1 = $230for_iter.2               ['$230for_iter.2', '$phi232.1']
    branch $230for_iter.3, 232, 240          ['$230for_iter.3']
label 232:
    index00 = $phi232.1                      ['$phi232.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 230                                 []
label 240:
    $242return_value.1 = cast(value=out0)    ['$242return_value.1', 'out0']
    return $242return_value.1                ['$242return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1617C8D0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: full_shape0 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $18load_global.2.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_method.4.1 = getattr(value=$18load_global.2.1, attr=empty)
DEBUG:numba.core.ssa:on stmt: $54load_global.6.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $66load_attr.7.1 = getattr(value=$54load_global.6.1, attr=bool)
DEBUG:numba.core.ssa:on stmt: out0 = call $30load_method.4.1(full_shape0, func=$30load_method.4.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($66load_attr.7.1, <string>:3))], vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const94.9.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const98.11.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $const100.12.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $102build_slice.13.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $102build_slice.14.1 = call $102build_slice.13.1($const98.11.0.1, $const100.12.3.1, func=$102build_slice.13.1, args=(Var($const98.11.0.1, <string>:4), Var($const100.12.3.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$102build_slice.14.1] = $const94.9.2.1
DEBUG:numba.core.ssa:on stmt: $const108.15.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const112.17.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $const114.18.0.1 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $116build_slice.19.1 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $116build_slice.20.1 = call $116build_slice.19.1($const112.17.4.1, $const114.18.0.1, func=$116build_slice.19.1, args=(Var($const112.17.4.1, <string>:5), Var($const114.18.0.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: out0[$116build_slice.20.1] = $const108.15.2.1
DEBUG:numba.core.ssa:on stmt: $122load_global.21.1 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $134load_global.23.1 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const146.25.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const148.26.4.1 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: $154call.27.1 = call $134load_global.23.1($const146.25.2.1, $const148.26.4.1, func=$134load_global.23.1, args=[Var($const146.25.2.1, <string>:6), Var($const148.26.4.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $164unary_negative.28.1 = unary(fn=<built-in function neg>, value=$154call.27.1)
DEBUG:numba.core.ssa:on stmt: $const168.30.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $170binary_subscr.31.1 = getitem(value=full_shape0, index=$const168.30.2.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $180load_global.32.1 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const192.34.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const194.35.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $200call.36.1 = call $180load_global.32.1($const192.34.2.1, $const194.35.3.1, func=$180load_global.32.1, args=[Var($const192.34.2.1, <string>:6), Var($const194.35.3.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub210.37.1 = $170binary_subscr.31.1 - $200call.36.1
DEBUG:numba.core.ssa:on stmt: $218call.38.1 = call $122load_global.21.1($164unary_negative.28.1, $binop_sub210.37.1, func=$122load_global.21.1, args=[Var($164unary_negative.28.1, <string>:6), Var($binop_sub210.37.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $228get_iter.39.1 = getiter(value=$218call.38.1)
DEBUG:numba.core.ssa:on stmt: $phi230.0.1 = $228get_iter.39.1
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:==== SSA block analysis pass on 230
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1617C8D0>
DEBUG:numba.core.ssa:on stmt: $230for_iter.1.1 = iternext(value=$phi230.0.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.2.1 = pair_first(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $230for_iter.3.1 = pair_second(value=$230for_iter.1.1)
DEBUG:numba.core.ssa:on stmt: $phi232.1.1 = $230for_iter.2.1
DEBUG:numba.core.ssa:on stmt: branch $230for_iter.3.1, 232, 242
DEBUG:numba.core.ssa:==== SSA block analysis pass on 232
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1617C8D0>
DEBUG:numba.core.ssa:on stmt: index00 = $phi232.1.1
DEBUG:numba.core.ssa:on stmt: jump 240
DEBUG:numba.core.ssa:==== SSA block analysis pass on 242
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1617C8D0>
DEBUG:numba.core.ssa:on stmt: $242return_value.1.1 = cast(value=out0)
DEBUG:numba.core.ssa:on stmt: return $242return_value.1.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 240
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1617C8D0>
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index = $const6.1.1 + index00
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const20.4.2 = const(int, -1)
DEBUG:numba.core.ssa:on stmt: stencil_index.1 = $const20.4.2 + index00
DEBUG:numba.core.ssa:on stmt: $22binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5
DEBUG:numba.core.ssa:on stmt: $const40.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: stencil_index.2 = $const40.8.1 + index00
DEBUG:numba.core.ssa:on stmt: $42binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const54.11.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: stencil_index.3 = $const54.11.3 + index00
DEBUG:numba.core.ssa:on stmt: $56binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12
DEBUG:numba.core.ssa:on stmt: $binop_and_72.14 = $32compare_op.6 & $66compare_op.13
DEBUG:numba.core.ssa:on stmt: $76return_value.15 = cast(value=$binop_and_72.14)
DEBUG:numba.core.ssa:on stmt: out0[index00] = $76return_value.15
DEBUG:numba.core.ssa:on stmt: jump 241
DEBUG:numba.core.ssa:==== SSA block analysis pass on 241
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1617C8D0>
DEBUG:numba.core.ssa:on stmt: jump 230
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102build_slice.13.1': [(<numba.core.ir.Assign object at 0x0000019A176EEB10>,
                                       0)],
             '$102build_slice.14.1': [(<numba.core.ir.Assign object at 0x0000019A176EC750>,
                                       0)],
             '$116build_slice.19.1': [(<numba.core.ir.Assign object at 0x0000019A176EF150>,
                                       0)],
             '$116build_slice.20.1': [(<numba.core.ir.Assign object at 0x0000019A176ED810>,
                                       0)],
             '$122load_global.21.1': [(<numba.core.ir.Assign object at 0x0000019A176EF810>,
                                       0)],
             '$134load_global.23.1': [(<numba.core.ir.Assign object at 0x0000019A176EF190>,
                                       0)],
             '$154call.27.1': [(<numba.core.ir.Assign object at 0x0000019A176ECA50>,
                                0)],
             '$164unary_negative.28.1': [(<numba.core.ir.Assign object at 0x0000019A176ED510>,
                                          0)],
             '$170binary_subscr.31.1': [(<numba.core.ir.Assign object at 0x0000019A176D6B50>,
                                         0)],
             '$180load_global.32.1': [(<numba.core.ir.Assign object at 0x0000019A176D65D0>,
                                       0)],
             '$18load_global.2.1': [(<numba.core.ir.Assign object at 0x0000019A176ECE50>,
                                     0)],
             '$200call.36.1': [(<numba.core.ir.Assign object at 0x0000019A176D6090>,
                                0)],
             '$218call.38.1': [(<numba.core.ir.Assign object at 0x0000019A176D4550>,
                                0)],
             '$228get_iter.39.1': [(<numba.core.ir.Assign object at 0x0000019A176D7990>,
                                    0)],
             '$22binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000019A1743EB50>,
                                     240)],
             '$230for_iter.1.1': [(<numba.core.ir.Assign object at 0x0000019A176D7150>,
                                   230)],
             '$230for_iter.2.1': [(<numba.core.ir.Assign object at 0x0000019A176D7290>,
                                   230)],
             '$230for_iter.3.1': [(<numba.core.ir.Assign object at 0x0000019A176D4310>,
                                   230)],
             '$242return_value.1.1': [(<numba.core.ir.Assign object at 0x0000019A176D7550>,
                                       242)],
             '$30load_method.4.1': [(<numba.core.ir.Assign object at 0x0000019A176ECBD0>,
                                     0)],
             '$32compare_op.6': [(<numba.core.ir.Assign object at 0x0000019A162AA390>,
                                  240)],
             '$42binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000019A1743CB90>,
                                     240)],
             '$54load_global.6.1': [(<numba.core.ir.Assign object at 0x0000019A176ED890>,
                                     0)],
             '$56binary_subscr.12': [(<numba.core.ir.Assign object at 0x0000019A1743EF50>,
                                      240)],
             '$66compare_op.13': [(<numba.core.ir.Assign object at 0x0000019A1619B850>,
                                   240)],
             '$66load_attr.7.1': [(<numba.core.ir.Assign object at 0x0000019A176EFD10>,
                                   0)],
             '$76return_value.15': [(<numba.core.ir.Assign object at 0x0000019A16198F50>,
                                     240)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000019A1743F090>,
                                    240)],
             '$binop_and_72.14': [(<numba.core.ir.Assign object at 0x0000019A16198090>,
                                   240)],
             '$binop_sub210.37.1': [(<numba.core.ir.Assign object at 0x0000019A176D5490>,
                                     0)],
             '$const100.12.3.1': [(<numba.core.ir.Assign object at 0x0000019A176EE650>,
                                   0)],
             '$const108.15.2.1': [(<numba.core.ir.Assign object at 0x0000019A176EDA50>,
                                   0)],
             '$const112.17.4.1': [(<numba.core.ir.Assign object at 0x0000019A176ED610>,
                                   0)],
             '$const114.18.0.1': [(<numba.core.ir.Assign object at 0x0000019A176EDD10>,
                                   0)],
             '$const146.25.2.1': [(<numba.core.ir.Assign object at 0x0000019A176EF550>,
                                   0)],
             '$const148.26.4.1': [(<numba.core.ir.Assign object at 0x0000019A176EED10>,
                                   0)],
             '$const168.30.2.1': [(<numba.core.ir.Assign object at 0x0000019A176D4C90>,
                                   0)],
             '$const192.34.2.1': [(<numba.core.ir.Assign object at 0x0000019A176D6450>,
                                   0)],
             '$const194.35.3.1': [(<numba.core.ir.Assign object at 0x0000019A176D6610>,
                                   0)],
             '$const20.4.2': [(<numba.core.ir.Assign object at 0x0000019A1759FA50>,
                               240)],
             '$const40.8.1': [(<numba.core.ir.Assign object at 0x0000019A162A81D0>,
                               240)],
             '$const54.11.3': [(<numba.core.ir.Assign object at 0x0000019A161996D0>,
                                240)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x0000019A17624A90>,
                              240)],
             '$const94.9.2.1': [(<numba.core.ir.Assign object at 0x0000019A176ED2D0>,
                                 0)],
             '$const98.11.0.1': [(<numba.core.ir.Assign object at 0x0000019A176ED350>,
                                  0)],
             '$phi230.0.1': [(<numba.core.ir.Assign object at 0x0000019A176EF010>,
                              0)],
             '$phi232.1.1': [(<numba.core.ir.Assign object at 0x0000019A176D7AD0>,
                              230)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x0000019A176EC910>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x0000019A176D7590>,
                          232)],
             'out0': [(<numba.core.ir.Assign object at 0x0000019A176EE150>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x0000019A1743E510>,
                                240)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x0000019A1743DB50>,
                                  240)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x0000019A1743F310>,
                                  240)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x0000019A1743DBD0>,
                                  240)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A17813510>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A1753BED0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1193)
           2	RESUME(arg=0, lineno=1193)
           4	LOAD_FAST(arg=0, lineno=1205)
           6	LOAD_CONST(arg=1, lineno=1205)
           8	BINARY_SUBSCR(arg=None, lineno=1205)
          18	LOAD_GLOBAL(arg=1, lineno=1205)
          30	LOAD_ATTR(arg=1, lineno=1205)
          40	LOAD_FAST(arg=0, lineno=1205)
          42	LOAD_CONST(arg=2, lineno=1205)
          44	LOAD_GLOBAL(arg=5, lineno=1205)
          56	LOAD_FAST(arg=2, lineno=1205)
          58	LOAD_FAST(arg=0, lineno=1205)
          60	LOAD_ATTR(arg=3, lineno=1205)
          70	LOAD_CONST(arg=1, lineno=1205)
          72	BINARY_SUBSCR(arg=None, lineno=1205)
          82	PRECALL(arg=2, lineno=1205)
          86	CALL(arg=2, lineno=1205)
          96	BUILD_SLICE(arg=2, lineno=1205)
          98	BINARY_SUBSCR(arg=None, lineno=1205)
         108	PRECALL(arg=1, lineno=1205)
         112	CALL(arg=1, lineno=1205)
         122	COMPARE_OP(arg=5, lineno=1205)
         128	LOAD_FAST(arg=7, lineno=1205)
         130	LOAD_CONST(arg=1, lineno=1205)
         132	STORE_SUBSCR(arg=None, lineno=1205)
         136	LOAD_FAST(arg=7, lineno=1206)
         138	LOAD_CONST(arg=1, lineno=1206)
         140	COPY(arg=2, lineno=1206)
         142	COPY(arg=2, lineno=1206)
         144	BINARY_SUBSCR(arg=None, lineno=1206)
         154	LOAD_FAST(arg=0, lineno=1206)
         156	LOAD_CONST(arg=1, lineno=1206)
         158	BINARY_SUBSCR(arg=None, lineno=1206)
         168	LOAD_GLOBAL(arg=1, lineno=1206)
         180	LOAD_ATTR(arg=4, lineno=1206)
         190	LOAD_FAST(arg=0, lineno=1206)
         192	LOAD_CONST(arg=2, lineno=1206)
         194	LOAD_GLOBAL(arg=5, lineno=1206)
         206	LOAD_FAST(arg=4, lineno=1206)
         208	LOAD_FAST(arg=0, lineno=1206)
         210	LOAD_ATTR(arg=3, lineno=1206)
         220	LOAD_CONST(arg=1, lineno=1206)
         222	BINARY_SUBSCR(arg=None, lineno=1206)
         232	PRECALL(arg=2, lineno=1206)
         236	CALL(arg=2, lineno=1206)
         246	BUILD_SLICE(arg=2, lineno=1206)
         248	BINARY_SUBSCR(arg=None, lineno=1206)
         258	PRECALL(arg=1, lineno=1206)
         262	CALL(arg=1, lineno=1206)
         272	LOAD_FAST(arg=5, lineno=1206)
         274	BINARY_OP(arg=0, lineno=1206)
         278	COMPARE_OP(arg=5, lineno=1206)
         284	BINARY_OP(arg=14, lineno=1206)
         288	SWAP(arg=3, lineno=1206)
         290	SWAP(arg=2, lineno=1206)
         292	STORE_SUBSCR(arg=None, lineno=1206)
         296	LOAD_FAST(arg=7, lineno=1208)
         298	LOAD_CONST(arg=1, lineno=1208)
         300	BINARY_SUBSCR(arg=None, lineno=1208)
         310	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1208)
         312	LOAD_FAST(arg=6, lineno=1209)
         314	LOAD_CONST(arg=3, lineno=1209)
         316	BINARY_OP(arg=0, lineno=1209)
         320	STORE_FAST(arg=8, lineno=1209)
         322	JUMP_FORWARD(arg=2, lineno=1209)
>        324	LOAD_CONST(arg=3, lineno=1211)
         326	STORE_FAST(arg=8, lineno=1211)
>        328	LOAD_FAST(arg=8, lineno=1213)
         330	LOAD_FAST(arg=0, lineno=1213)
         332	LOAD_ATTR(arg=3, lineno=1213)
         342	LOAD_CONST(arg=1, lineno=1213)
         344	BINARY_SUBSCR(arg=None, lineno=1213)
         354	COMPARE_OP(arg=0, lineno=1213)
         360	POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1213)
>        362	LOAD_GLOBAL(arg=1, lineno=1214)
         374	LOAD_ATTR(arg=1, lineno=1214)
         384	LOAD_FAST(arg=0, lineno=1214)
         386	LOAD_GLOBAL(arg=3, lineno=1214)
         398	LOAD_CONST(arg=1, lineno=1214)
         400	LOAD_FAST(arg=8, lineno=1214)
         402	LOAD_FAST(arg=1, lineno=1214)
         404	BINARY_OP(arg=10, lineno=1214)
         408	PRECALL(arg=2, lineno=1214)
         412	CALL(arg=2, lineno=1214)
         422	LOAD_GLOBAL(arg=5, lineno=1214)
         434	LOAD_FAST(arg=8, lineno=1214)
         436	LOAD_FAST(arg=2, lineno=1214)
         438	BINARY_OP(arg=0, lineno=1214)
         442	LOAD_FAST(arg=0, lineno=1214)
         444	LOAD_ATTR(arg=3, lineno=1214)
         454	LOAD_CONST(arg=1, lineno=1214)
         456	BINARY_SUBSCR(arg=None, lineno=1214)
         466	PRECALL(arg=2, lineno=1214)
         470	CALL(arg=2, lineno=1214)
         480	BUILD_SLICE(arg=2, lineno=1214)
         482	BINARY_SUBSCR(arg=None, lineno=1214)
         492	PRECALL(arg=1, lineno=1214)
         496	CALL(arg=1, lineno=1214)
         506	STORE_FAST(arg=9, lineno=1214)
         508	LOAD_FAST(arg=0, lineno=1217)
         510	LOAD_FAST(arg=8, lineno=1217)
         512	BINARY_SUBSCR(arg=None, lineno=1217)
         522	LOAD_FAST(arg=9, lineno=1217)
         524	COMPARE_OP(arg=2, lineno=1217)
         530	LOAD_FAST(arg=7, lineno=1217)
         532	LOAD_FAST(arg=8, lineno=1217)
         534	STORE_SUBSCR(arg=None, lineno=1217)
         538	LOAD_FAST(arg=7, lineno=1219)
         540	LOAD_FAST(arg=8, lineno=1219)
         542	BINARY_SUBSCR(arg=None, lineno=1219)
         552	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1219)
         554	LOAD_FAST(arg=8, lineno=1220)
         556	LOAD_CONST(arg=3, lineno=1220)
         558	BINARY_OP(arg=13, lineno=1220)
         562	STORE_FAST(arg=8, lineno=1220)
         564	JUMP_BACKWARD(arg=119, lineno=1221)
>        566	LOAD_GLOBAL(arg=1, lineno=1223)
         578	LOAD_ATTR(arg=4, lineno=1223)
         588	LOAD_FAST(arg=0, lineno=1223)
         590	LOAD_GLOBAL(arg=3, lineno=1223)
         602	LOAD_CONST(arg=1, lineno=1223)
         604	LOAD_FAST(arg=8, lineno=1223)
         606	LOAD_FAST(arg=3, lineno=1223)
         608	BINARY_OP(arg=10, lineno=1223)
         612	PRECALL(arg=2, lineno=1223)
         616	CALL(arg=2, lineno=1223)
         626	LOAD_GLOBAL(arg=5, lineno=1223)
         638	LOAD_FAST(arg=8, lineno=1223)
         640	LOAD_FAST(arg=4, lineno=1223)
         642	BINARY_OP(arg=0, lineno=1223)
         646	LOAD_FAST(arg=0, lineno=1223)
         648	LOAD_ATTR(arg=3, lineno=1223)
         658	LOAD_CONST(arg=1, lineno=1223)
         660	BINARY_SUBSCR(arg=None, lineno=1223)
         670	PRECALL(arg=2, lineno=1223)
         674	CALL(arg=2, lineno=1223)
         684	BUILD_SLICE(arg=2, lineno=1223)
         686	BINARY_SUBSCR(arg=None, lineno=1223)
         696	PRECALL(arg=1, lineno=1223)
         700	CALL(arg=1, lineno=1223)
         710	STORE_FAST(arg=10, lineno=1223)
         712	LOAD_FAST(arg=7, lineno=1224)
         714	LOAD_FAST(arg=8, lineno=1224)
         716	COPY(arg=2, lineno=1224)
         718	COPY(arg=2, lineno=1224)
         720	BINARY_SUBSCR(arg=None, lineno=1224)
         730	LOAD_FAST(arg=0, lineno=1224)
         732	LOAD_FAST(arg=8, lineno=1224)
         734	BINARY_SUBSCR(arg=None, lineno=1224)
         744	LOAD_FAST(arg=10, lineno=1224)
         746	LOAD_FAST(arg=5, lineno=1224)
         748	BINARY_OP(arg=0, lineno=1224)
         752	COMPARE_OP(arg=5, lineno=1224)
         758	BINARY_OP(arg=14, lineno=1224)
         762	SWAP(arg=3, lineno=1224)
         764	SWAP(arg=2, lineno=1224)
         766	STORE_SUBSCR(arg=None, lineno=1224)
         770	LOAD_FAST(arg=7, lineno=1226)
         772	LOAD_FAST(arg=8, lineno=1226)
         774	BINARY_SUBSCR(arg=None, lineno=1226)
         784	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1226)
         786	LOAD_FAST(arg=8, lineno=1227)
         788	LOAD_CONST(arg=3, lineno=1227)
         790	BINARY_OP(arg=13, lineno=1227)
         794	STORE_FAST(arg=8, lineno=1227)
         796	JUMP_BACKWARD(arg=235, lineno=1228)
>        798	LOAD_FAST(arg=8, lineno=1231)
         800	LOAD_FAST(arg=6, lineno=1231)
         802	LOAD_CONST(arg=3, lineno=1231)
         804	BINARY_OP(arg=0, lineno=1231)
         808	BINARY_OP(arg=13, lineno=1231)
         812	STORE_FAST(arg=8, lineno=1231)
         814	LOAD_FAST(arg=8, lineno=1213)
         816	LOAD_FAST(arg=0, lineno=1213)
         818	LOAD_ATTR(arg=3, lineno=1213)
         828	LOAD_CONST(arg=1, lineno=1213)
         830	BINARY_SUBSCR(arg=None, lineno=1213)
         840	COMPARE_OP(arg=0, lineno=1213)
         846	POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1213)
         848	LOAD_CONST(arg=2, lineno=1213)
         850	RETURN_VALUE(arg=None, lineno=1213)
>        852	LOAD_CONST(arg=2, lineno=1213)
         854	RETURN_VALUE(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1193)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1193)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1205)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$18load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_GLOBAL(arg=5, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_ATTR(arg=3, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$x58.11']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_CONST(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12', '$const70.13.1']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=PRECALL(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=CALL(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=BUILD_SLICE(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$86call.15']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=BINARY_SUBSCR(arg=None, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$96build_slice.17']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=PRECALL(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=CALL(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=COMPARE_OP(arg=5, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$112call.19']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=7, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$122compare_op.20']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$122compare_op.20', '$peaks128.21']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=STORE_SUBSCR(arg=None, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$122compare_op.20', '$peaks128.21', '$const130.22.1']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_FAST(arg=7, lineno=1206)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=COPY(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=COPY(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$peaks136.23']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=BINARY_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$peaks136.23', '$const138.24.1']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$x154.26']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=BINARY_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$x154.26', '$const156.27.1']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_GLOBAL(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_ATTR(arg=4, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$168load_global.29']
DEBUG:numba.core.byteflow:dispatch pc=190, inst=LOAD_FAST(arg=0, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_GLOBAL(arg=5, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=LOAD_FAST(arg=4, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34']
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=LOAD_ATTR(arg=3, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$x208.37']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=BINARY_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38', '$const220.39.1']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=PRECALL(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=CALL(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=BUILD_SLICE(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$236call.41']
DEBUG:numba.core.byteflow:dispatch pc=248, inst=BINARY_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$246build_slice.43']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=PRECALL(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=CALL(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=BINARY_OP(arg=0, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45', '$delta272.46']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=COMPARE_OP(arg=5, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$binop_add274.47']
DEBUG:numba.core.byteflow:dispatch pc=284, inst=BINARY_OP(arg=14, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$278compare_op.48']
DEBUG:numba.core.byteflow:dispatch pc=288, inst=SWAP(arg=3, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$binop_iand284.49']
DEBUG:numba.core.byteflow:dispatch pc=290, inst=SWAP(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$binop_iand284.49', '$const138.24.1', '$peaks136.23']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=STORE_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$binop_iand284.49', '$peaks136.23', '$const138.24.1']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=LOAD_FAST(arg=7, lineno=1208)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=298, inst=LOAD_CONST(arg=1, lineno=1208)
DEBUG:numba.core.byteflow:stack ['$peaks296.50']
DEBUG:numba.core.byteflow:dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=1208)
DEBUG:numba.core.byteflow:stack ['$peaks296.50', '$const298.51.1']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1208)
DEBUG:numba.core.byteflow:stack ['$300binary_subscr.52']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=324, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=312 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=312, inst=LOAD_FAST(arg=6, lineno=1209)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=314, inst=LOAD_CONST(arg=3, lineno=1209)
DEBUG:numba.core.byteflow:stack ['$wait312.0']
DEBUG:numba.core.byteflow:dispatch pc=316, inst=BINARY_OP(arg=0, lineno=1209)
DEBUG:numba.core.byteflow:stack ['$wait312.0', '$const314.1.3']
DEBUG:numba.core.byteflow:dispatch pc=320, inst=STORE_FAST(arg=8, lineno=1209)
DEBUG:numba.core.byteflow:stack ['$binop_add316.2']
DEBUG:numba.core.byteflow:dispatch pc=322, inst=JUMP_FORWARD(arg=2, lineno=1209)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=324 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=324, inst=LOAD_CONST(arg=3, lineno=1211)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=326, inst=STORE_FAST(arg=8, lineno=1211)
DEBUG:numba.core.byteflow:stack ['$const324.0.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=328 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=328, inst=LOAD_FAST(arg=8, lineno=1213)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=330, inst=LOAD_FAST(arg=0, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0']
DEBUG:numba.core.byteflow:dispatch pc=332, inst=LOAD_ATTR(arg=3, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0', '$x330.1']
DEBUG:numba.core.byteflow:dispatch pc=342, inst=LOAD_CONST(arg=1, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0', '$332load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0', '$332load_attr.2', '$const342.3.1']
DEBUG:numba.core.byteflow:dispatch pc=354, inst=COMPARE_OP(arg=0, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0', '$344binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=360, inst=POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$354compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=362, stack=(), blockstack=(), npush=0), Edge(pc=852, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=362 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=362, inst=LOAD_GLOBAL(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=374, inst=LOAD_ATTR(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$362load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=384, inst=LOAD_FAST(arg=0, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=386, inst=LOAD_GLOBAL(arg=3, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3']
DEBUG:numba.core.byteflow:dispatch pc=398, inst=LOAD_CONST(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=400, inst=LOAD_FAST(arg=8, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1']
DEBUG:numba.core.byteflow:dispatch pc=402, inst=LOAD_FAST(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1', '$n400.7']
DEBUG:numba.core.byteflow:dispatch pc=404, inst=BINARY_OP(arg=10, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1', '$n400.7', '$pre_max402.8']
DEBUG:numba.core.byteflow:dispatch pc=408, inst=PRECALL(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1', '$binop_sub404.9']
DEBUG:numba.core.byteflow:dispatch pc=412, inst=CALL(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1', '$binop_sub404.9']
DEBUG:numba.core.byteflow:dispatch pc=422, inst=LOAD_GLOBAL(arg=5, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10']
DEBUG:numba.core.byteflow:dispatch pc=434, inst=LOAD_FAST(arg=8, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11']
DEBUG:numba.core.byteflow:dispatch pc=436, inst=LOAD_FAST(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13']
DEBUG:numba.core.byteflow:dispatch pc=438, inst=BINARY_OP(arg=0, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13', '$post_max436.14']
DEBUG:numba.core.byteflow:dispatch pc=442, inst=LOAD_FAST(arg=0, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15']
DEBUG:numba.core.byteflow:dispatch pc=444, inst=LOAD_ATTR(arg=3, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$x442.16']
DEBUG:numba.core.byteflow:dispatch pc=454, inst=LOAD_CONST(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17']
DEBUG:numba.core.byteflow:dispatch pc=456, inst=BINARY_SUBSCR(arg=None, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17', '$const454.18.1']
DEBUG:numba.core.byteflow:dispatch pc=466, inst=PRECALL(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=470, inst=CALL(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=480, inst=BUILD_SLICE(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$470call.20']
DEBUG:numba.core.byteflow:dispatch pc=482, inst=BINARY_SUBSCR(arg=None, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$480build_slice.22']
DEBUG:numba.core.byteflow:dispatch pc=492, inst=PRECALL(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
DEBUG:numba.core.byteflow:dispatch pc=496, inst=CALL(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
DEBUG:numba.core.byteflow:dispatch pc=506, inst=STORE_FAST(arg=9, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$496call.24']
DEBUG:numba.core.byteflow:dispatch pc=508, inst=LOAD_FAST(arg=0, lineno=1217)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=510, inst=LOAD_FAST(arg=8, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$x508.25']
DEBUG:numba.core.byteflow:dispatch pc=512, inst=BINARY_SUBSCR(arg=None, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$x508.25', '$n510.26']
DEBUG:numba.core.byteflow:dispatch pc=522, inst=LOAD_FAST(arg=9, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$512binary_subscr.27']
DEBUG:numba.core.byteflow:dispatch pc=524, inst=COMPARE_OP(arg=2, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$512binary_subscr.27', '$maxn522.28']
DEBUG:numba.core.byteflow:dispatch pc=530, inst=LOAD_FAST(arg=7, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$524compare_op.29']
DEBUG:numba.core.byteflow:dispatch pc=532, inst=LOAD_FAST(arg=8, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$524compare_op.29', '$peaks530.30']
DEBUG:numba.core.byteflow:dispatch pc=534, inst=STORE_SUBSCR(arg=None, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$524compare_op.29', '$peaks530.30', '$n532.31']
DEBUG:numba.core.byteflow:dispatch pc=538, inst=LOAD_FAST(arg=7, lineno=1219)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=540, inst=LOAD_FAST(arg=8, lineno=1219)
DEBUG:numba.core.byteflow:stack ['$peaks538.32']
DEBUG:numba.core.byteflow:dispatch pc=542, inst=BINARY_SUBSCR(arg=None, lineno=1219)
DEBUG:numba.core.byteflow:stack ['$peaks538.32', '$n540.33']
DEBUG:numba.core.byteflow:dispatch pc=552, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1219)
DEBUG:numba.core.byteflow:stack ['$542binary_subscr.34']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=554, stack=(), blockstack=(), npush=0), Edge(pc=566, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=852 nstack_initial=0), State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=852 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=852, inst=LOAD_CONST(arg=2, lineno=1213)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=854, inst=RETURN_VALUE(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$const852.0.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=554 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=554, inst=LOAD_FAST(arg=8, lineno=1220)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=556, inst=LOAD_CONST(arg=3, lineno=1220)
DEBUG:numba.core.byteflow:stack ['$n554.0']
DEBUG:numba.core.byteflow:dispatch pc=558, inst=BINARY_OP(arg=13, lineno=1220)
DEBUG:numba.core.byteflow:stack ['$n554.0', '$const556.1.3']
DEBUG:numba.core.byteflow:dispatch pc=562, inst=STORE_FAST(arg=8, lineno=1220)
DEBUG:numba.core.byteflow:stack ['$binop_iadd558.2']
DEBUG:numba.core.byteflow:dispatch pc=564, inst=JUMP_BACKWARD(arg=119, lineno=1221)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=566 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=566 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=566, inst=LOAD_GLOBAL(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=578, inst=LOAD_ATTR(arg=4, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$566load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=588, inst=LOAD_FAST(arg=0, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=590, inst=LOAD_GLOBAL(arg=3, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3']
DEBUG:numba.core.byteflow:dispatch pc=602, inst=LOAD_CONST(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=604, inst=LOAD_FAST(arg=8, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1']
DEBUG:numba.core.byteflow:dispatch pc=606, inst=LOAD_FAST(arg=3, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1', '$n604.7']
DEBUG:numba.core.byteflow:dispatch pc=608, inst=BINARY_OP(arg=10, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1', '$n604.7', '$pre_avg606.8']
DEBUG:numba.core.byteflow:dispatch pc=612, inst=PRECALL(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1', '$binop_sub608.9']
DEBUG:numba.core.byteflow:dispatch pc=616, inst=CALL(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1', '$binop_sub608.9']
DEBUG:numba.core.byteflow:dispatch pc=626, inst=LOAD_GLOBAL(arg=5, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10']
DEBUG:numba.core.byteflow:dispatch pc=638, inst=LOAD_FAST(arg=8, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11']
DEBUG:numba.core.byteflow:dispatch pc=640, inst=LOAD_FAST(arg=4, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13']
DEBUG:numba.core.byteflow:dispatch pc=642, inst=BINARY_OP(arg=0, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13', '$post_avg640.14']
DEBUG:numba.core.byteflow:dispatch pc=646, inst=LOAD_FAST(arg=0, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15']
DEBUG:numba.core.byteflow:dispatch pc=648, inst=LOAD_ATTR(arg=3, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$x646.16']
DEBUG:numba.core.byteflow:dispatch pc=658, inst=LOAD_CONST(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17']
DEBUG:numba.core.byteflow:dispatch pc=660, inst=BINARY_SUBSCR(arg=None, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17', '$const658.18.1']
DEBUG:numba.core.byteflow:dispatch pc=670, inst=PRECALL(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=674, inst=CALL(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=684, inst=BUILD_SLICE(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$674call.20']
DEBUG:numba.core.byteflow:dispatch pc=686, inst=BINARY_SUBSCR(arg=None, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$684build_slice.22']
DEBUG:numba.core.byteflow:dispatch pc=696, inst=PRECALL(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
DEBUG:numba.core.byteflow:dispatch pc=700, inst=CALL(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
DEBUG:numba.core.byteflow:dispatch pc=710, inst=STORE_FAST(arg=10, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$700call.24']
DEBUG:numba.core.byteflow:dispatch pc=712, inst=LOAD_FAST(arg=7, lineno=1224)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=714, inst=LOAD_FAST(arg=8, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25']
DEBUG:numba.core.byteflow:dispatch pc=716, inst=COPY(arg=2, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26']
DEBUG:numba.core.byteflow:dispatch pc=718, inst=COPY(arg=2, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$peaks712.25']
DEBUG:numba.core.byteflow:dispatch pc=720, inst=BINARY_SUBSCR(arg=None, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$peaks712.25', '$n714.26']
DEBUG:numba.core.byteflow:dispatch pc=730, inst=LOAD_FAST(arg=0, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27']
DEBUG:numba.core.byteflow:dispatch pc=732, inst=LOAD_FAST(arg=8, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28']
DEBUG:numba.core.byteflow:dispatch pc=734, inst=BINARY_SUBSCR(arg=None, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28', '$n732.29']
DEBUG:numba.core.byteflow:dispatch pc=744, inst=LOAD_FAST(arg=10, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30']
DEBUG:numba.core.byteflow:dispatch pc=746, inst=LOAD_FAST(arg=5, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31']
DEBUG:numba.core.byteflow:dispatch pc=748, inst=BINARY_OP(arg=0, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31', '$delta746.32']
DEBUG:numba.core.byteflow:dispatch pc=752, inst=COMPARE_OP(arg=5, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$binop_add748.33']
DEBUG:numba.core.byteflow:dispatch pc=758, inst=BINARY_OP(arg=14, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$752compare_op.34']
DEBUG:numba.core.byteflow:dispatch pc=762, inst=SWAP(arg=3, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$binop_iand758.35']
DEBUG:numba.core.byteflow:dispatch pc=764, inst=SWAP(arg=2, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$binop_iand758.35', '$n714.26', '$peaks712.25']
DEBUG:numba.core.byteflow:dispatch pc=766, inst=STORE_SUBSCR(arg=None, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$binop_iand758.35', '$peaks712.25', '$n714.26']
DEBUG:numba.core.byteflow:dispatch pc=770, inst=LOAD_FAST(arg=7, lineno=1226)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=772, inst=LOAD_FAST(arg=8, lineno=1226)
DEBUG:numba.core.byteflow:stack ['$peaks770.36']
DEBUG:numba.core.byteflow:dispatch pc=774, inst=BINARY_SUBSCR(arg=None, lineno=1226)
DEBUG:numba.core.byteflow:stack ['$peaks770.36', '$n772.37']
DEBUG:numba.core.byteflow:dispatch pc=784, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1226)
DEBUG:numba.core.byteflow:stack ['$774binary_subscr.38']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=786, stack=(), blockstack=(), npush=0), Edge(pc=798, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=786 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=786, inst=LOAD_FAST(arg=8, lineno=1227)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=788, inst=LOAD_CONST(arg=3, lineno=1227)
DEBUG:numba.core.byteflow:stack ['$n786.0']
DEBUG:numba.core.byteflow:dispatch pc=790, inst=BINARY_OP(arg=13, lineno=1227)
DEBUG:numba.core.byteflow:stack ['$n786.0', '$const788.1.3']
DEBUG:numba.core.byteflow:dispatch pc=794, inst=STORE_FAST(arg=8, lineno=1227)
DEBUG:numba.core.byteflow:stack ['$binop_iadd790.2']
DEBUG:numba.core.byteflow:dispatch pc=796, inst=JUMP_BACKWARD(arg=235, lineno=1228)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=798 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=798 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=798, inst=LOAD_FAST(arg=8, lineno=1231)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=800, inst=LOAD_FAST(arg=6, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$n798.0']
DEBUG:numba.core.byteflow:dispatch pc=802, inst=LOAD_CONST(arg=3, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$n798.0', '$wait800.1']
DEBUG:numba.core.byteflow:dispatch pc=804, inst=BINARY_OP(arg=0, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$n798.0', '$wait800.1', '$const802.2.3']
DEBUG:numba.core.byteflow:dispatch pc=808, inst=BINARY_OP(arg=13, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$n798.0', '$binop_add804.3']
DEBUG:numba.core.byteflow:dispatch pc=812, inst=STORE_FAST(arg=8, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$binop_iadd808.4']
DEBUG:numba.core.byteflow:dispatch pc=814, inst=LOAD_FAST(arg=8, lineno=1213)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=816, inst=LOAD_FAST(arg=0, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5']
DEBUG:numba.core.byteflow:dispatch pc=818, inst=LOAD_ATTR(arg=3, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5', '$x816.6']
DEBUG:numba.core.byteflow:dispatch pc=828, inst=LOAD_CONST(arg=1, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5', '$818load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=830, inst=BINARY_SUBSCR(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5', '$818load_attr.7', '$const828.8.1']
DEBUG:numba.core.byteflow:dispatch pc=840, inst=COMPARE_OP(arg=0, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5', '$830binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=846, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$840compare_op.10']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=848, stack=(), blockstack=(), npush=0), Edge(pc=362, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=848 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=848, inst=LOAD_CONST(arg=2, lineno=1213)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=850, inst=RETURN_VALUE(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$const848.0.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=362 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=324 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=362 nstack_initial=0): set(),
             State(pc_initial=554 nstack_initial=0): set(),
             State(pc_initial=566 nstack_initial=0): set(),
             State(pc_initial=786 nstack_initial=0): set(),
             State(pc_initial=798 nstack_initial=0): set(),
             State(pc_initial=848 nstack_initial=0): set(),
             State(pc_initial=852 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'idx': 0, 'res': '$18load_global.3'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.3', 'res': '$30load_attr.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$x40.6'}), (42, {'res': '$const42.7.2'}), (44, {'idx': 2, 'res': '$44load_global.8'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'res': '$const70.13.1'}), (72, {'index': '$const70.13.1', 'target': '$60load_attr.12', 'res': '$72binary_subscr.14'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {'func': '$44load_global.8', 'args': ['$post_max56.10', '$72binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'start': '$const42.7.2', 'stop': '$86call.15', 'step': None, 'res': '$96build_slice.17', 'slicevar': '$96build_slice.16'}), (98, {'index': '$96build_slice.17', 'target': '$x40.6', 'res': '$98binary_subscr.18'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'func': '$30load_attr.5', 'args': ['$98binary_subscr.18'], 'kw_names': None, 'res': '$112call.19'}), (114, {}), (116, {}), (118, {}), (120, {}), (122, {'lhs': '$8binary_subscr.2', 'rhs': '$112call.19', 'res': '$122compare_op.20'}), (124, {}), (126, {}), (128, {'res': '$peaks128.21'}), (130, {'res': '$const130.22.1'}), (132, {'target': '$peaks128.21', 'index': '$const130.22.1', 'value': '$122compare_op.20'}), (134, {}), (136, {'res': '$peaks136.23'}), (138, {'res': '$const138.24.1'}), (144, {'index': '$const138.24.1', 'target': '$peaks136.23', 'res': '$144binary_subscr.25'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$x154.26'}), (156, {'res': '$const156.27.1'}), (158, {'index': '$const156.27.1', 'target': '$x154.26', 'res': '$158binary_subscr.28'}), (160, {}), (162, {}), (164, {}), (166, {}), (168, {'idx': 0, 'res': '$168load_global.29'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'item': '$168load_global.29', 'res': '$180load_attr.31'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {'res': '$x190.32'}), (192, {'res': '$const192.33.2'}), (194, {'idx': 2, 'res': '$194load_global.34'}), (196, {}), (198, {}), (200, {}), (202, {}), (204, {}), (206, {'res': '$post_avg206.36'}), (208, {'res': '$x208.37'}), (210, {'item': '$x208.37', 'res': '$210load_attr.38'}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {'res': '$const220.39.1'}), (222, {'index': '$const220.39.1', 'target': '$210load_attr.38', 'res': '$222binary_subscr.40'}), (224, {}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'func': '$194load_global.34', 'args': ['$post_avg206.36', '$222binary_subscr.40'], 'kw_names': None, 'res': '$236call.41'}), (238, {}), (240, {}), (242, {}), (244, {}), (246, {'start': '$const192.33.2', 'stop': '$236call.41', 'step': None, 'res': '$246build_slice.43', 'slicevar': '$246build_slice.42'}), (248, {'index': '$246build_slice.43', 'target': '$x190.32', 'res': '$248binary_subscr.44'}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {}), (262, {'func': '$180load_attr.31', 'args': ['$248binary_subscr.44'], 'kw_names': None, 'res': '$262call.45'}), (264, {}), (266, {}), (268, {}), (270, {}), (272, {'res': '$delta272.46'}), (274, {'op': '+', 'lhs': '$262call.45', 'rhs': '$delta272.46', 'res': '$binop_add274.47'}), (276, {}), (278, {'lhs': '$158binary_subscr.28', 'rhs': '$binop_add274.47', 'res': '$278compare_op.48'}), (280, {}), (282, {}), (284, {'op': '&=', 'lhs': '$144binary_subscr.25', 'rhs': '$278compare_op.48', 'res': '$binop_iand284.49'}), (286, {}), (292, {'target': '$peaks136.23', 'index': '$const138.24.1', 'value': '$binop_iand284.49'}), (294, {}), (296, {'res': '$peaks296.50'}), (298, {'res': '$const298.51.1'}), (300, {'index': '$const298.51.1', 'target': '$peaks296.50', 'res': '$300binary_subscr.52'}), (302, {}), (304, {}), (306, {}), (308, {}), (310, {'pred': '$300binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 324: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'res': '$wait312.0'}), (314, {'res': '$const314.1.3'}), (316, {'op': '+', 'lhs': '$wait312.0', 'rhs': '$const314.1.3', 'res': '$binop_add316.2'}), (318, {}), (320, {'value': '$binop_add316.2'}), (322, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=324 nstack_initial=0):
AdaptBlockInfo(insts=((324, {'res': '$const324.0.3'}), (326, {'value': '$const324.0.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$n328.0'}), (330, {'res': '$x330.1'}), (332, {'item': '$x330.1', 'res': '$332load_attr.2'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'res': '$const342.3.1'}), (344, {'index': '$const342.3.1', 'target': '$332load_attr.2', 'res': '$344binary_subscr.4'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {'lhs': '$n328.0', 'rhs': '$344binary_subscr.4', 'res': '$354compare_op.5'}), (356, {}), (358, {}), (360, {'pred': '$354compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={362: (), 852: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=362 nstack_initial=0):
AdaptBlockInfo(insts=((362, {'idx': 0, 'res': '$362load_global.0'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {}), (374, {'item': '$362load_global.0', 'res': '$374load_attr.2'}), (376, {}), (378, {}), (380, {}), (382, {}), (384, {'res': '$x384.3'}), (386, {'idx': 1, 'res': '$386load_global.4'}), (388, {}), (390, {}), (392, {}), (394, {}), (396, {}), (398, {'res': '$const398.6.1'}), (400, {'res': '$n400.7'}), (402, {'res': '$pre_max402.8'}), (404, {'op': '-', 'lhs': '$n400.7', 'rhs': '$pre_max402.8', 'res': '$binop_sub404.9'}), (406, {}), (408, {}), (410, {}), (412, {'func': '$386load_global.4', 'args': ['$const398.6.1', '$binop_sub404.9'], 'kw_names': None, 'res': '$412call.10'}), (414, {}), (416, {}), (418, {}), (420, {}), (422, {'idx': 2, 'res': '$422load_global.11'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {}), (434, {'res': '$n434.13'}), (436, {'res': '$post_max436.14'}), (438, {'op': '+', 'lhs': '$n434.13', 'rhs': '$post_max436.14', 'res': '$binop_add438.15'}), (440, {}), (442, {'res': '$x442.16'}), (444, {'item': '$x442.16', 'res': '$444load_attr.17'}), (446, {}), (448, {}), (450, {}), (452, {}), (454, {'res': '$const454.18.1'}), (456, {'index': '$const454.18.1', 'target': '$444load_attr.17', 'res': '$456binary_subscr.19'}), (458, {}), (460, {}), (462, {}), (464, {}), (466, {}), (468, {}), (470, {'func': '$422load_global.11', 'args': ['$binop_add438.15', '$456binary_subscr.19'], 'kw_names': None, 'res': '$470call.20'}), (472, {}), (474, {}), (476, {}), (478, {}), (480, {'start': '$412call.10', 'stop': '$470call.20', 'step': None, 'res': '$480build_slice.22', 'slicevar': '$480build_slice.21'}), (482, {'index': '$480build_slice.22', 'target': '$x384.3', 'res': '$482binary_subscr.23'}), (484, {}), (486, {}), (488, {}), (490, {}), (492, {}), (494, {}), (496, {'func': '$374load_attr.2', 'args': ['$482binary_subscr.23'], 'kw_names': None, 'res': '$496call.24'}), (498, {}), (500, {}), (502, {}), (504, {}), (506, {'value': '$496call.24'}), (508, {'res': '$x508.25'}), (510, {'res': '$n510.26'}), (512, {'index': '$n510.26', 'target': '$x508.25', 'res': '$512binary_subscr.27'}), (514, {}), (516, {}), (518, {}), (520, {}), (522, {'res': '$maxn522.28'}), (524, {'lhs': '$512binary_subscr.27', 'rhs': '$maxn522.28', 'res': '$524compare_op.29'}), (526, {}), (528, {}), (530, {'res': '$peaks530.30'}), (532, {'res': '$n532.31'}), (534, {'target': '$peaks530.30', 'index': '$n532.31', 'value': '$524compare_op.29'}), (536, {}), (538, {'res': '$peaks538.32'}), (540, {'res': '$n540.33'}), (542, {'index': '$n540.33', 'target': '$peaks538.32', 'res': '$542binary_subscr.34'}), (544, {}), (546, {}), (548, {}), (550, {}), (552, {'pred': '$542binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={554: (), 566: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=554 nstack_initial=0):
AdaptBlockInfo(insts=((554, {'res': '$n554.0'}), (556, {'res': '$const556.1.3'}), (558, {'op': '+=', 'lhs': '$n554.0', 'rhs': '$const556.1.3', 'res': '$binop_iadd558.2'}), (560, {}), (562, {'value': '$binop_iadd558.2'}), (564, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=566 nstack_initial=0):
AdaptBlockInfo(insts=((566, {'idx': 0, 'res': '$566load_global.0'}), (568, {}), (570, {}), (572, {}), (574, {}), (576, {}), (578, {'item': '$566load_global.0', 'res': '$578load_attr.2'}), (580, {}), (582, {}), (584, {}), (586, {}), (588, {'res': '$x588.3'}), (590, {'idx': 1, 'res': '$590load_global.4'}), (592, {}), (594, {}), (596, {}), (598, {}), (600, {}), (602, {'res': '$const602.6.1'}), (604, {'res': '$n604.7'}), (606, {'res': '$pre_avg606.8'}), (608, {'op': '-', 'lhs': '$n604.7', 'rhs': '$pre_avg606.8', 'res': '$binop_sub608.9'}), (610, {}), (612, {}), (614, {}), (616, {'func': '$590load_global.4', 'args': ['$const602.6.1', '$binop_sub608.9'], 'kw_names': None, 'res': '$616call.10'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {'idx': 2, 'res': '$626load_global.11'}), (628, {}), (630, {}), (632, {}), (634, {}), (636, {}), (638, {'res': '$n638.13'}), (640, {'res': '$post_avg640.14'}), (642, {'op': '+', 'lhs': '$n638.13', 'rhs': '$post_avg640.14', 'res': '$binop_add642.15'}), (644, {}), (646, {'res': '$x646.16'}), (648, {'item': '$x646.16', 'res': '$648load_attr.17'}), (650, {}), (652, {}), (654, {}), (656, {}), (658, {'res': '$const658.18.1'}), (660, {'index': '$const658.18.1', 'target': '$648load_attr.17', 'res': '$660binary_subscr.19'}), (662, {}), (664, {}), (666, {}), (668, {}), (670, {}), (672, {}), (674, {'func': '$626load_global.11', 'args': ['$binop_add642.15', '$660binary_subscr.19'], 'kw_names': None, 'res': '$674call.20'}), (676, {}), (678, {}), (680, {}), (682, {}), (684, {'start': '$616call.10', 'stop': '$674call.20', 'step': None, 'res': '$684build_slice.22', 'slicevar': '$684build_slice.21'}), (686, {'index': '$684build_slice.22', 'target': '$x588.3', 'res': '$686binary_subscr.23'}), (688, {}), (690, {}), (692, {}), (694, {}), (696, {}), (698, {}), (700, {'func': '$578load_attr.2', 'args': ['$686binary_subscr.23'], 'kw_names': None, 'res': '$700call.24'}), (702, {}), (704, {}), (706, {}), (708, {}), (710, {'value': '$700call.24'}), (712, {'res': '$peaks712.25'}), (714, {'res': '$n714.26'}), (720, {'index': '$n714.26', 'target': '$peaks712.25', 'res': '$720binary_subscr.27'}), (722, {}), (724, {}), (726, {}), (728, {}), (730, {'res': '$x730.28'}), (732, {'res': '$n732.29'}), (734, {'index': '$n732.29', 'target': '$x730.28', 'res': '$734binary_subscr.30'}), (736, {}), (738, {}), (740, {}), (742, {}), (744, {'res': '$avgn744.31'}), (746, {'res': '$delta746.32'}), (748, {'op': '+', 'lhs': '$avgn744.31', 'rhs': '$delta746.32', 'res': '$binop_add748.33'}), (750, {}), (752, {'lhs': '$734binary_subscr.30', 'rhs': '$binop_add748.33', 'res': '$752compare_op.34'}), (754, {}), (756, {}), (758, {'op': '&=', 'lhs': '$720binary_subscr.27', 'rhs': '$752compare_op.34', 'res': '$binop_iand758.35'}), (760, {}), (766, {'target': '$peaks712.25', 'index': '$n714.26', 'value': '$binop_iand758.35'}), (768, {}), (770, {'res': '$peaks770.36'}), (772, {'res': '$n772.37'}), (774, {'index': '$n772.37', 'target': '$peaks770.36', 'res': '$774binary_subscr.38'}), (776, {}), (778, {}), (780, {}), (782, {}), (784, {'pred': '$774binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={786: (), 798: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=786 nstack_initial=0):
AdaptBlockInfo(insts=((786, {'res': '$n786.0'}), (788, {'res': '$const788.1.3'}), (790, {'op': '+=', 'lhs': '$n786.0', 'rhs': '$const788.1.3', 'res': '$binop_iadd790.2'}), (792, {}), (794, {'value': '$binop_iadd790.2'}), (796, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=798 nstack_initial=0):
AdaptBlockInfo(insts=((798, {'res': '$n798.0'}), (800, {'res': '$wait800.1'}), (802, {'res': '$const802.2.3'}), (804, {'op': '+', 'lhs': '$wait800.1', 'rhs': '$const802.2.3', 'res': '$binop_add804.3'}), (806, {}), (808, {'op': '+=', 'lhs': '$n798.0', 'rhs': '$binop_add804.3', 'res': '$binop_iadd808.4'}), (810, {}), (812, {'value': '$binop_iadd808.4'}), (814, {'res': '$n814.5'}), (816, {'res': '$x816.6'}), (818, {'item': '$x816.6', 'res': '$818load_attr.7'}), (820, {}), (822, {}), (824, {}), (826, {}), (828, {'res': '$const828.8.1'}), (830, {'index': '$const828.8.1', 'target': '$818load_attr.7', 'res': '$830binary_subscr.9'}), (832, {}), (834, {}), (836, {}), (838, {}), (840, {'lhs': '$n814.5', 'rhs': '$830binary_subscr.9', 'res': '$840compare_op.10'}), (842, {}), (844, {}), (846, {'pred': '$840compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={848: (), 362: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=848 nstack_initial=0):
AdaptBlockInfo(insts=((848, {'res': '$const848.0.2'}), (850, {'retval': '$const848.0.2', 'castval': '$850return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=852 nstack_initial=0):
AdaptBlockInfo(insts=((852, {'res': '$const852.0.2'}), (854, {'retval': '$const852.0.2', 'castval': '$854return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.3']
    $30load_attr.5 = getattr(value=$18load_global.3, attr=max) ['$18load_global.3', '$30load_attr.5']
    $const42.7.2 = const(NoneType, None)     ['$const42.7.2']
    $44load_global.8 = global(min: <built-in function min>) ['$44load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const70.13.1 = const(int, 0)            ['$const70.13.1']
    $72binary_subscr.14 = getitem(value=$60load_attr.12, index=$const70.13.1, fn=<built-in function getitem>) ['$60load_attr.12', '$72binary_subscr.14', '$const70.13.1']
    $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1193), Var($72binary_subscr.14, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_global.8', '$72binary_subscr.14', '$86call.15', 'post_max']
    $96build_slice.16 = global(slice: <class 'slice'>) ['$96build_slice.16']
    $96build_slice.17 = call $96build_slice.16($const42.7.2, $86call.15, func=$96build_slice.16, args=(Var($const42.7.2, utils.py:1205), Var($86call.15, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$96build_slice.16', '$96build_slice.17', '$const42.7.2']
    $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>) ['$96build_slice.17', '$98binary_subscr.18', 'x']
    $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$112call.19', '$30load_attr.5', '$98binary_subscr.18']
    $122compare_op.20 = $8binary_subscr.2 >= $112call.19 ['$112call.19', '$122compare_op.20', '$8binary_subscr.2']
    $const130.22.1 = const(int, 0)           ['$const130.22.1']
    peaks[$const130.22.1] = $122compare_op.20 ['$122compare_op.20', '$const130.22.1', 'peaks']
    $const138.24.1 = const(int, 0)           ['$const138.24.1']
    $144binary_subscr.25 = getitem(value=peaks, index=$const138.24.1, fn=<built-in function getitem>) ['$144binary_subscr.25', '$const138.24.1', 'peaks']
    $const156.27.1 = const(int, 0)           ['$const156.27.1']
    $158binary_subscr.28 = getitem(value=x, index=$const156.27.1, fn=<built-in function getitem>) ['$158binary_subscr.28', '$const156.27.1', 'x']
    $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$168load_global.29']
    $180load_attr.31 = getattr(value=$168load_global.29, attr=mean) ['$168load_global.29', '$180load_attr.31']
    $const192.33.2 = const(NoneType, None)   ['$const192.33.2']
    $194load_global.34 = global(min: <built-in function min>) ['$194load_global.34']
    $210load_attr.38 = getattr(value=x, attr=shape) ['$210load_attr.38', 'x']
    $const220.39.1 = const(int, 0)           ['$const220.39.1']
    $222binary_subscr.40 = getitem(value=$210load_attr.38, index=$const220.39.1, fn=<built-in function getitem>) ['$210load_attr.38', '$222binary_subscr.40', '$const220.39.1']
    $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1193), Var($222binary_subscr.40, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.34', '$222binary_subscr.40', '$236call.41', 'post_avg']
    $246build_slice.42 = global(slice: <class 'slice'>) ['$246build_slice.42']
    $246build_slice.43 = call $246build_slice.42($const192.33.2, $236call.41, func=$246build_slice.42, args=(Var($const192.33.2, utils.py:1206), Var($236call.41, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$236call.41', '$246build_slice.42', '$246build_slice.43', '$const192.33.2']
    $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>) ['$246build_slice.43', '$248binary_subscr.44', 'x']
    $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_attr.31', '$248binary_subscr.44', '$262call.45']
    $binop_add274.47 = $262call.45 + delta   ['$262call.45', '$binop_add274.47', 'delta']
    $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47 ['$158binary_subscr.28', '$278compare_op.48', '$binop_add274.47']
    $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$144binary_subscr.25', '$278compare_op.48', '$binop_iand284.49']
    peaks[$const138.24.1] = $binop_iand284.49 ['$binop_iand284.49', '$const138.24.1', 'peaks']
    $const298.51.1 = const(int, 0)           ['$const298.51.1']
    $300binary_subscr.52 = getitem(value=peaks, index=$const298.51.1, fn=<built-in function getitem>) ['$300binary_subscr.52', '$const298.51.1', 'peaks']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$300binary_subscr.52', '$310pred', 'bool310']
    branch $310pred, 312, 324                ['$310pred']
label 312:
    $const314.1.3 = const(int, 1)            ['$const314.1.3']
    n = wait + $const314.1.3                 ['$const314.1.3', 'n', 'wait']
    jump 328                                 []
label 324:
    n = const(int, 1)                        ['n']
    jump 328                                 []
label 328:
    $332load_attr.2 = getattr(value=x, attr=shape) ['$332load_attr.2', 'x']
    $const342.3.1 = const(int, 0)            ['$const342.3.1']
    $344binary_subscr.4 = getitem(value=$332load_attr.2, index=$const342.3.1, fn=<built-in function getitem>) ['$332load_attr.2', '$344binary_subscr.4', '$const342.3.1']
    $354compare_op.5 = n < $344binary_subscr.4 ['$344binary_subscr.4', '$354compare_op.5', 'n']
    bool360 = global(bool: <class 'bool'>)   ['bool360']
    $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$354compare_op.5', '$360pred', 'bool360']
    branch $360pred, 362, 852                ['$360pred']
label 362:
    $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$362load_global.0']
    $374load_attr.2 = getattr(value=$362load_global.0, attr=max) ['$362load_global.0', '$374load_attr.2']
    $386load_global.4 = global(max: <built-in function max>) ['$386load_global.4']
    $const398.6.1 = const(int, 0)            ['$const398.6.1']
    $binop_sub404.9 = n - pre_max            ['$binop_sub404.9', 'n', 'pre_max']
    $412call.10 = call $386load_global.4($const398.6.1, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6.1, utils.py:1214), Var($binop_sub404.9, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$386load_global.4', '$412call.10', '$binop_sub404.9', '$const398.6.1']
    $422load_global.11 = global(min: <built-in function min>) ['$422load_global.11']
    $binop_add438.15 = n + post_max          ['$binop_add438.15', 'n', 'post_max']
    $444load_attr.17 = getattr(value=x, attr=shape) ['$444load_attr.17', 'x']
    $const454.18.1 = const(int, 0)           ['$const454.18.1']
    $456binary_subscr.19 = getitem(value=$444load_attr.17, index=$const454.18.1, fn=<built-in function getitem>) ['$444load_attr.17', '$456binary_subscr.19', '$const454.18.1']
    $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1214), Var($456binary_subscr.19, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$422load_global.11', '$456binary_subscr.19', '$470call.20', '$binop_add438.15']
    $480build_slice.21 = global(slice: <class 'slice'>) ['$480build_slice.21']
    $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1214), Var($470call.20, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$412call.10', '$470call.20', '$480build_slice.21', '$480build_slice.22']
    $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>) ['$480build_slice.22', '$482binary_subscr.23', 'x']
    maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$374load_attr.2', '$482binary_subscr.23', 'maxn']
    $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$512binary_subscr.27', 'n', 'x']
    $524compare_op.29 = $512binary_subscr.27 == maxn ['$512binary_subscr.27', '$524compare_op.29', 'maxn']
    peaks[n] = $524compare_op.29             ['$524compare_op.29', 'n', 'peaks']
    $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$542binary_subscr.34', 'n', 'peaks']
    bool552 = global(bool: <class 'bool'>)   ['bool552']
    $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$542binary_subscr.34', '$552pred', 'bool552']
    branch $552pred, 566, 554                ['$552pred']
label 554:
    $const556.1.3 = const(int, 1)            ['$const556.1.3']
    $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd558.2', '$const556.1.3', 'n']
    n = $binop_iadd558.2                     ['$binop_iadd558.2', 'n']
    jump 328                                 []
label 566:
    $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$566load_global.0']
    $578load_attr.2 = getattr(value=$566load_global.0, attr=mean) ['$566load_global.0', '$578load_attr.2']
    $590load_global.4 = global(max: <built-in function max>) ['$590load_global.4']
    $const602.6.1 = const(int, 0)            ['$const602.6.1']
    $binop_sub608.9 = n - pre_avg            ['$binop_sub608.9', 'n', 'pre_avg']
    $616call.10 = call $590load_global.4($const602.6.1, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6.1, utils.py:1223), Var($binop_sub608.9, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$590load_global.4', '$616call.10', '$binop_sub608.9', '$const602.6.1']
    $626load_global.11 = global(min: <built-in function min>) ['$626load_global.11']
    $binop_add642.15 = n + post_avg          ['$binop_add642.15', 'n', 'post_avg']
    $648load_attr.17 = getattr(value=x, attr=shape) ['$648load_attr.17', 'x']
    $const658.18.1 = const(int, 0)           ['$const658.18.1']
    $660binary_subscr.19 = getitem(value=$648load_attr.17, index=$const658.18.1, fn=<built-in function getitem>) ['$648load_attr.17', '$660binary_subscr.19', '$const658.18.1']
    $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1223), Var($660binary_subscr.19, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$626load_global.11', '$660binary_subscr.19', '$674call.20', '$binop_add642.15']
    $684build_slice.21 = global(slice: <class 'slice'>) ['$684build_slice.21']
    $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1223), Var($674call.20, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$616call.10', '$674call.20', '$684build_slice.21', '$684build_slice.22']
    $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>) ['$684build_slice.22', '$686binary_subscr.23', 'x']
    avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$578load_attr.2', '$686binary_subscr.23', 'avgn']
    $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$720binary_subscr.27', 'n', 'peaks']
    $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$734binary_subscr.30', 'n', 'x']
    $binop_add748.33 = avgn + delta          ['$binop_add748.33', 'avgn', 'delta']
    $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33 ['$734binary_subscr.30', '$752compare_op.34', '$binop_add748.33']
    $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$720binary_subscr.27', '$752compare_op.34', '$binop_iand758.35']
    peaks[n] = $binop_iand758.35             ['$binop_iand758.35', 'n', 'peaks']
    $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$774binary_subscr.38', 'n', 'peaks']
    bool784 = global(bool: <class 'bool'>)   ['bool784']
    $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$774binary_subscr.38', '$784pred', 'bool784']
    branch $784pred, 798, 786                ['$784pred']
label 786:
    $const788.1.3 = const(int, 1)            ['$const788.1.3']
    $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd790.2', '$const788.1.3', 'n']
    n = $binop_iadd790.2                     ['$binop_iadd790.2', 'n']
    jump 328                                 []
label 798:
    $const802.2.3 = const(int, 1)            ['$const802.2.3']
    $binop_add804.3 = wait + $const802.2.3   ['$binop_add804.3', '$const802.2.3', 'wait']
    $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add804.3', '$binop_iadd808.4', 'n']
    n = $binop_iadd808.4                     ['$binop_iadd808.4', 'n']
    $818load_attr.7 = getattr(value=x, attr=shape) ['$818load_attr.7', 'x']
    $const828.8.1 = const(int, 0)            ['$const828.8.1']
    $830binary_subscr.9 = getitem(value=$818load_attr.7, index=$const828.8.1, fn=<built-in function getitem>) ['$818load_attr.7', '$830binary_subscr.9', '$const828.8.1']
    $840compare_op.10 = n < $830binary_subscr.9 ['$830binary_subscr.9', '$840compare_op.10', 'n']
    bool846 = global(bool: <class 'bool'>)   ['bool846']
    $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$840compare_op.10', '$846pred', 'bool846']
    branch $846pred, 362, 848                ['$846pred']
label 848:
    $const848.0.2 = const(NoneType, None)    ['$const848.0.2']
    $850return_value.1 = cast(value=$const848.0.2) ['$850return_value.1', '$const848.0.2']
    return $850return_value.1                ['$850return_value.1']
label 852:
    $const852.0.2 = const(NoneType, None)    ['$const852.0.2']
    $854return_value.1 = cast(value=$const852.0.2) ['$854return_value.1', '$const852.0.2']
    return $854return_value.1                ['$854return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17AF68D0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: pre_max = arg(1, name=pre_max)
DEBUG:numba.core.ssa:on stmt: post_max = arg(2, name=post_max)
DEBUG:numba.core.ssa:on stmt: pre_avg = arg(3, name=pre_avg)
DEBUG:numba.core.ssa:on stmt: post_avg = arg(4, name=post_avg)
DEBUG:numba.core.ssa:on stmt: delta = arg(5, name=delta)
DEBUG:numba.core.ssa:on stmt: wait = arg(6, name=wait)
DEBUG:numba.core.ssa:on stmt: peaks = arg(7, name=peaks)
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
DEBUG:numba.core.ssa:on stmt: $const42.7.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $44load_global.8 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const70.13.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1193), Var($72binary_subscr.14, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7.2, $86call.15, func=$96build_slice.16, args=(Var($const42.7.2, utils.py:1205), Var($86call.15, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
DEBUG:numba.core.ssa:on stmt: $const130.22.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $122compare_op.20
DEBUG:numba.core.ssa:on stmt: $const138.24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const156.27.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
DEBUG:numba.core.ssa:on stmt: $const192.33.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $194load_global.34 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const220.39.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1193), Var($222binary_subscr.40, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33.2, $236call.41, func=$246build_slice.42, args=(Var($const192.33.2, utils.py:1206), Var($236call.41, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_add274.47 = $262call.45 + delta
DEBUG:numba.core.ssa:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
DEBUG:numba.core.ssa:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $binop_iand284.49
DEBUG:numba.core.ssa:on stmt: $const298.51.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool310 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $310pred, 312, 324
DEBUG:numba.core.ssa:==== SSA block analysis pass on 312
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17AF68D0>
DEBUG:numba.core.ssa:on stmt: $const314.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n = wait + $const314.1.3
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block analysis pass on 324
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17AF68D0>
DEBUG:numba.core.ssa:on stmt: n = const(int, 1)
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block analysis pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17AF68D0>
DEBUG:numba.core.ssa:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const342.3.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $354compare_op.5 = n < $344binary_subscr.4
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 362, 852
DEBUG:numba.core.ssa:==== SSA block analysis pass on 362
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17AF68D0>
DEBUG:numba.core.ssa:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
DEBUG:numba.core.ssa:on stmt: $386load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const398.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub404.9 = n - pre_max
DEBUG:numba.core.ssa:on stmt: $412call.10 = call $386load_global.4($const398.6.1, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6.1, utils.py:1214), Var($binop_sub404.9, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $422load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add438.15 = n + post_max
DEBUG:numba.core.ssa:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const454.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1214), Var($456binary_subscr.19, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1214), Var($470call.20, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
DEBUG:numba.core.ssa:on stmt: peaks[n] = $524compare_op.29
DEBUG:numba.core.ssa:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool552 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $552pred, 566, 554
DEBUG:numba.core.ssa:==== SSA block analysis pass on 554
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17AF68D0>
DEBUG:numba.core.ssa:on stmt: $const556.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd558.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block analysis pass on 566
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17AF68D0>
DEBUG:numba.core.ssa:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
DEBUG:numba.core.ssa:on stmt: $590load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const602.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub608.9 = n - pre_avg
DEBUG:numba.core.ssa:on stmt: $616call.10 = call $590load_global.4($const602.6.1, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6.1, utils.py:1223), Var($binop_sub608.9, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $626load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add642.15 = n + post_avg
DEBUG:numba.core.ssa:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const658.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1223), Var($660binary_subscr.19, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1223), Var($674call.20, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add748.33 = avgn + delta
DEBUG:numba.core.ssa:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
DEBUG:numba.core.ssa:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[n] = $binop_iand758.35
DEBUG:numba.core.ssa:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool784 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $784pred, 798, 786
DEBUG:numba.core.ssa:==== SSA block analysis pass on 786
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17AF68D0>
DEBUG:numba.core.ssa:on stmt: $const788.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd790.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block analysis pass on 798
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17AF68D0>
DEBUG:numba.core.ssa:on stmt: $const802.2.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add804.3 = wait + $const802.2.3
DEBUG:numba.core.ssa:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd808.4
DEBUG:numba.core.ssa:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const828.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $840compare_op.10 = n < $830binary_subscr.9
DEBUG:numba.core.ssa:on stmt: bool846 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $846pred, 362, 848
DEBUG:numba.core.ssa:==== SSA block analysis pass on 848
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17AF68D0>
DEBUG:numba.core.ssa:on stmt: $const848.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $850return_value.1 = cast(value=$const848.0.2)
DEBUG:numba.core.ssa:on stmt: return $850return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 852
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17AF68D0>
DEBUG:numba.core.ssa:on stmt: $const852.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $854return_value.1 = cast(value=$const852.0.2)
DEBUG:numba.core.ssa:on stmt: return $854return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 853
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17AF68D0>
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$112call.19': [(<numba.core.ir.Assign object at 0x0000019A17ABDBD0>,
                              0)],
             '$122compare_op.20': [(<numba.core.ir.Assign object at 0x0000019A17ABDF50>,
                                    0)],
             '$144binary_subscr.25': [(<numba.core.ir.Assign object at 0x0000019A17A2F5D0>,
                                       0)],
             '$158binary_subscr.28': [(<numba.core.ir.Assign object at 0x0000019A17A2D9D0>,
                                       0)],
             '$168load_global.29': [(<numba.core.ir.Assign object at 0x0000019A17ABF910>,
                                     0)],
             '$180load_attr.31': [(<numba.core.ir.Assign object at 0x0000019A17ABC850>,
                                   0)],
             '$18load_global.3': [(<numba.core.ir.Assign object at 0x0000019A17AACA50>,
                                   0)],
             '$194load_global.34': [(<numba.core.ir.Assign object at 0x0000019A17ABE850>,
                                     0)],
             '$210load_attr.38': [(<numba.core.ir.Assign object at 0x0000019A17ABFA50>,
                                   0)],
             '$222binary_subscr.40': [(<numba.core.ir.Assign object at 0x0000019A17A2D990>,
                                       0)],
             '$236call.41': [(<numba.core.ir.Assign object at 0x0000019A17ABEC10>,
                              0)],
             '$246build_slice.42': [(<numba.core.ir.Assign object at 0x0000019A17ABEDD0>,
                                     0)],
             '$246build_slice.43': [(<numba.core.ir.Assign object at 0x0000019A17ABDD10>,
                                     0)],
             '$248binary_subscr.44': [(<numba.core.ir.Assign object at 0x0000019A17AF64D0>,
                                       0)],
             '$262call.45': [(<numba.core.ir.Assign object at 0x0000019A17AF5190>,
                              0)],
             '$278compare_op.48': [(<numba.core.ir.Assign object at 0x0000019A17AF6BD0>,
                                    0)],
             '$300binary_subscr.52': [(<numba.core.ir.Assign object at 0x0000019A17A2E3D0>,
                                       0)],
             '$30load_attr.5': [(<numba.core.ir.Assign object at 0x0000019A17AAED90>,
                                 0)],
             '$310pred': [(<numba.core.ir.Assign object at 0x0000019A17AF7510>,
                           0)],
             '$332load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A17AF52D0>,
                                  328)],
             '$344binary_subscr.4': [(<numba.core.ir.Assign object at 0x0000019A17AAD410>,
                                      328)],
             '$354compare_op.5': [(<numba.core.ir.Assign object at 0x0000019A17AF5ED0>,
                                   328)],
             '$360pred': [(<numba.core.ir.Assign object at 0x0000019A17AF59D0>,
                           328)],
             '$362load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17AF5AD0>,
                                    362)],
             '$374load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A17AF5710>,
                                  362)],
             '$386load_global.4': [(<numba.core.ir.Assign object at 0x0000019A17AF46D0>,
                                    362)],
             '$412call.10': [(<numba.core.ir.Assign object at 0x0000019A17AF4FD0>,
                              362)],
             '$422load_global.11': [(<numba.core.ir.Assign object at 0x0000019A17AF6150>,
                                     362)],
             '$444load_attr.17': [(<numba.core.ir.Assign object at 0x0000019A17A7C790>,
                                   362)],
             '$44load_global.8': [(<numba.core.ir.Assign object at 0x0000019A17AAD610>,
                                   0)],
             '$456binary_subscr.19': [(<numba.core.ir.Assign object at 0x0000019A17AAC210>,
                                       362)],
             '$470call.20': [(<numba.core.ir.Assign object at 0x0000019A17A7CE10>,
                              362)],
             '$480build_slice.21': [(<numba.core.ir.Assign object at 0x0000019A17A7CFD0>,
                                     362)],
             '$480build_slice.22': [(<numba.core.ir.Assign object at 0x0000019A17A7D150>,
                                     362)],
             '$482binary_subscr.23': [(<numba.core.ir.Assign object at 0x0000019A17A7D310>,
                                       362)],
             '$512binary_subscr.27': [(<numba.core.ir.Assign object at 0x0000019A17A7DB90>,
                                       362)],
             '$524compare_op.29': [(<numba.core.ir.Assign object at 0x0000019A17A7DF90>,
                                    362)],
             '$542binary_subscr.34': [(<numba.core.ir.Assign object at 0x0000019A17A7E8D0>,
                                       362)],
             '$552pred': [(<numba.core.ir.Assign object at 0x0000019A17A7ED10>,
                           362)],
             '$566load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17A7F290>,
                                    566)],
             '$578load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A17A7F490>,
                                  566)],
             '$590load_global.4': [(<numba.core.ir.Assign object at 0x0000019A17A7F810>,
                                    566)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x0000019A17ABE310>,
                                  0)],
             '$616call.10': [(<numba.core.ir.Assign object at 0x0000019A17A6D090>,
                              566)],
             '$626load_global.11': [(<numba.core.ir.Assign object at 0x0000019A17A6D050>,
                                     566)],
             '$648load_attr.17': [(<numba.core.ir.Assign object at 0x0000019A17A6F850>,
                                   566)],
             '$660binary_subscr.19': [(<numba.core.ir.Assign object at 0x0000019A17A2BED0>,
                                       566)],
             '$674call.20': [(<numba.core.ir.Assign object at 0x0000019A17A6D7D0>,
                              566)],
             '$684build_slice.21': [(<numba.core.ir.Assign object at 0x0000019A17A6C850>,
                                     566)],
             '$684build_slice.22': [(<numba.core.ir.Assign object at 0x0000019A17A6D750>,
                                     566)],
             '$686binary_subscr.23': [(<numba.core.ir.Assign object at 0x0000019A17A6E3D0>,
                                       566)],
             '$720binary_subscr.27': [(<numba.core.ir.Assign object at 0x0000019A17A6DDD0>,
                                       566)],
             '$72binary_subscr.14': [(<numba.core.ir.Assign object at 0x0000019A17A2E590>,
                                      0)],
             '$734binary_subscr.30': [(<numba.core.ir.Assign object at 0x0000019A17A6E4D0>,
                                       566)],
             '$752compare_op.34': [(<numba.core.ir.Assign object at 0x0000019A17A6D8D0>,
                                    566)],
             '$774binary_subscr.38': [(<numba.core.ir.Assign object at 0x0000019A17A6F250>,
                                       566)],
             '$784pred': [(<numba.core.ir.Assign object at 0x0000019A17A6DD90>,
                           566)],
             '$818load_attr.7': [(<numba.core.ir.Assign object at 0x0000019A17A9DF10>,
                                  798)],
             '$830binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000019A17A12910>,
                                      798)],
             '$840compare_op.10': [(<numba.core.ir.Assign object at 0x0000019A17A9DE90>,
                                    798)],
             '$846pred': [(<numba.core.ir.Assign object at 0x0000019A17A9E2D0>,
                           798)],
             '$850return_value.1': [(<numba.core.ir.Assign object at 0x0000019A17A9C350>,
                                     848)],
             '$854return_value.1': [(<numba.core.ir.Assign object at 0x0000019A17A9CE50>,
                                     852)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x0000019A17ABE190>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000019A17A2DB90>,
                                    0)],
             '$96build_slice.16': [(<numba.core.ir.Assign object at 0x0000019A17ABCB10>,
                                    0)],
             '$96build_slice.17': [(<numba.core.ir.Assign object at 0x0000019A17ABCED0>,
                                    0)],
             '$98binary_subscr.18': [(<numba.core.ir.Assign object at 0x0000019A17ABC890>,
                                      0)],
             '$binop_add274.47': [(<numba.core.ir.Assign object at 0x0000019A17AF4490>,
                                   0)],
             '$binop_add438.15': [(<numba.core.ir.Assign object at 0x0000019A17A7C410>,
                                   362)],
             '$binop_add642.15': [(<numba.core.ir.Assign object at 0x0000019A17A6FA90>,
                                   566)],
             '$binop_add748.33': [(<numba.core.ir.Assign object at 0x0000019A17A6F010>,
                                   566)],
             '$binop_add804.3': [(<numba.core.ir.Assign object at 0x0000019A17A9C8D0>,
                                  798)],
             '$binop_iadd558.2': [(<numba.core.ir.Assign object at 0x0000019A17A7EF10>,
                                   554)],
             '$binop_iadd790.2': [(<numba.core.ir.Assign object at 0x0000019A17A6F290>,
                                   786)],
             '$binop_iadd808.4': [(<numba.core.ir.Assign object at 0x0000019A17A9C750>,
                                   798)],
             '$binop_iand284.49': [(<numba.core.ir.Assign object at 0x0000019A17AF6B90>,
                                    0)],
             '$binop_iand758.35': [(<numba.core.ir.Assign object at 0x0000019A17A6DE10>,
                                    566)],
             '$binop_sub404.9': [(<numba.core.ir.Assign object at 0x0000019A17AF4CD0>,
                                  362)],
             '$binop_sub608.9': [(<numba.core.ir.Assign object at 0x0000019A17A7FF50>,
                                  566)],
             '$const130.22.1': [(<numba.core.ir.Assign object at 0x0000019A17ABC990>,
                                 0)],
             '$const138.24.1': [(<numba.core.ir.Assign object at 0x0000019A17ABD010>,
                                 0)],
             '$const156.27.1': [(<numba.core.ir.Assign object at 0x0000019A17ABD550>,
                                 0)],
             '$const192.33.2': [(<numba.core.ir.Assign object at 0x0000019A17ABDA90>,
                                 0)],
             '$const220.39.1': [(<numba.core.ir.Assign object at 0x0000019A17ABF590>,
                                 0)],
             '$const298.51.1': [(<numba.core.ir.Assign object at 0x0000019A17AF7A10>,
                                 0)],
             '$const314.1.3': [(<numba.core.ir.Assign object at 0x0000019A17AF7350>,
                                312)],
             '$const342.3.1': [(<numba.core.ir.Assign object at 0x0000019A17AF65D0>,
                                328)],
             '$const398.6.1': [(<numba.core.ir.Assign object at 0x0000019A17AF4810>,
                                362)],
             '$const42.7.2': [(<numba.core.ir.Assign object at 0x0000019A17AAFFD0>,
                               0)],
             '$const454.18.1': [(<numba.core.ir.Assign object at 0x0000019A17A7C910>,
                                 362)],
             '$const556.1.3': [(<numba.core.ir.Assign object at 0x0000019A17A7EA10>,
                                554)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x0000019A17AADD50>,
                              0)],
             '$const602.6.1': [(<numba.core.ir.Assign object at 0x0000019A17A7F990>,
                                566)],
             '$const658.18.1': [(<numba.core.ir.Assign object at 0x0000019A17A6F4D0>,
                                 566)],
             '$const70.13.1': [(<numba.core.ir.Assign object at 0x0000019A17ABDED0>,
                                0)],
             '$const788.1.3': [(<numba.core.ir.Assign object at 0x0000019A17A6E8D0>,
                                786)],
             '$const802.2.3': [(<numba.core.ir.Assign object at 0x0000019A17A9C090>,
                                798)],
             '$const828.8.1': [(<numba.core.ir.Assign object at 0x0000019A17A9F890>,
                                798)],
             '$const848.0.2': [(<numba.core.ir.Assign object at 0x0000019A17A9E010>,
                                848)],
             '$const852.0.2': [(<numba.core.ir.Assign object at 0x0000019A17A9C950>,
                                852)],
             'avgn': [(<numba.core.ir.Assign object at 0x0000019A17A6EE50>,
                       566)],
             'bool310': [(<numba.core.ir.Assign object at 0x0000019A17AF7910>,
                          0)],
             'bool360': [(<numba.core.ir.Assign object at 0x0000019A17AF5F50>,
                          328)],
             'bool552': [(<numba.core.ir.Assign object at 0x0000019A17A7EB50>,
                          362)],
             'bool784': [(<numba.core.ir.Assign object at 0x0000019A17A6CF50>,
                          566)],
             'bool846': [(<numba.core.ir.Assign object at 0x0000019A17A9DF90>,
                          798)],
             'delta': [(<numba.core.ir.Assign object at 0x0000019A17AAEED0>,
                        0)],
             'maxn': [(<numba.core.ir.Assign object at 0x0000019A17A7D510>,
                       362)],
             'n': [(<numba.core.ir.Assign object at 0x0000019A17AF7210>, 312),
                   (<numba.core.ir.Assign object at 0x0000019A17AF56D0>, 324),
                   (<numba.core.ir.Assign object at 0x0000019A17A7EF90>, 554),
                   (<numba.core.ir.Assign object at 0x0000019A17A6C690>, 786),
                   (<numba.core.ir.Assign object at 0x0000019A17A9C790>, 798)],
             'peaks': [(<numba.core.ir.Assign object at 0x0000019A17AAEAD0>,
                        0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x0000019A17AAD190>,
                           0)],
             'post_max': [(<numba.core.ir.Assign object at 0x0000019A17A2A610>,
                           0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x0000019A17A12390>,
                          0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x0000019A17A2B510>,
                          0)],
             'wait': [(<numba.core.ir.Assign object at 0x0000019A17AAEBD0>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A17A2BA10>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17A7FD10>
DEBUG:numba.core.ssa:Fix SSA violator on var n
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17ABFD10>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: pre_max = arg(1, name=pre_max)
DEBUG:numba.core.ssa:on stmt: post_max = arg(2, name=post_max)
DEBUG:numba.core.ssa:on stmt: pre_avg = arg(3, name=pre_avg)
DEBUG:numba.core.ssa:on stmt: post_avg = arg(4, name=post_avg)
DEBUG:numba.core.ssa:on stmt: delta = arg(5, name=delta)
DEBUG:numba.core.ssa:on stmt: wait = arg(6, name=wait)
DEBUG:numba.core.ssa:on stmt: peaks = arg(7, name=peaks)
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
DEBUG:numba.core.ssa:on stmt: $const42.7.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $44load_global.8 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const70.13.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1193), Var($72binary_subscr.14, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7.2, $86call.15, func=$96build_slice.16, args=(Var($const42.7.2, utils.py:1205), Var($86call.15, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
DEBUG:numba.core.ssa:on stmt: $const130.22.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $122compare_op.20
DEBUG:numba.core.ssa:on stmt: $const138.24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const156.27.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
DEBUG:numba.core.ssa:on stmt: $const192.33.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $194load_global.34 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const220.39.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1193), Var($222binary_subscr.40, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33.2, $236call.41, func=$246build_slice.42, args=(Var($const192.33.2, utils.py:1206), Var($236call.41, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_add274.47 = $262call.45 + delta
DEBUG:numba.core.ssa:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
DEBUG:numba.core.ssa:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $binop_iand284.49
DEBUG:numba.core.ssa:on stmt: $const298.51.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool310 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $310pred, 312, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 312
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17ABFD10>
DEBUG:numba.core.ssa:on stmt: $const314.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n = wait + $const314.1.3
DEBUG:numba.core.ssa:first assign: n
DEBUG:numba.core.ssa:replaced with: n = wait + $const314.1.3
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 324
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17ABFD10>
DEBUG:numba.core.ssa:on stmt: n = const(int, 1)
DEBUG:numba.core.ssa:replaced with: n.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17ABFD10>
DEBUG:numba.core.ssa:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const342.3.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $354compare_op.5 = n < $344binary_subscr.4
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 362, 852
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 362
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17ABFD10>
DEBUG:numba.core.ssa:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
DEBUG:numba.core.ssa:on stmt: $386load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const398.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub404.9 = n - pre_max
DEBUG:numba.core.ssa:on stmt: $412call.10 = call $386load_global.4($const398.6.1, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6.1, utils.py:1214), Var($binop_sub404.9, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $422load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add438.15 = n + post_max
DEBUG:numba.core.ssa:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const454.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1214), Var($456binary_subscr.19, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1214), Var($470call.20, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
DEBUG:numba.core.ssa:on stmt: peaks[n] = $524compare_op.29
DEBUG:numba.core.ssa:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool552 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $552pred, 566, 554
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 554
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17ABFD10>
DEBUG:numba.core.ssa:on stmt: $const556.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd558.2
DEBUG:numba.core.ssa:replaced with: n.2 = $binop_iadd558.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 566
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17ABFD10>
DEBUG:numba.core.ssa:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
DEBUG:numba.core.ssa:on stmt: $590load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const602.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub608.9 = n - pre_avg
DEBUG:numba.core.ssa:on stmt: $616call.10 = call $590load_global.4($const602.6.1, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6.1, utils.py:1223), Var($binop_sub608.9, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $626load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add642.15 = n + post_avg
DEBUG:numba.core.ssa:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const658.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1223), Var($660binary_subscr.19, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1223), Var($674call.20, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add748.33 = avgn + delta
DEBUG:numba.core.ssa:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
DEBUG:numba.core.ssa:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[n] = $binop_iand758.35
DEBUG:numba.core.ssa:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool784 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $784pred, 798, 786
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 786
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17ABFD10>
DEBUG:numba.core.ssa:on stmt: $const788.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd790.2
DEBUG:numba.core.ssa:replaced with: n.3 = $binop_iadd790.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 798
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17ABFD10>
DEBUG:numba.core.ssa:on stmt: $const802.2.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add804.3 = wait + $const802.2.3
DEBUG:numba.core.ssa:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd808.4
DEBUG:numba.core.ssa:replaced with: n.4 = $binop_iadd808.4
DEBUG:numba.core.ssa:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const828.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $840compare_op.10 = n < $830binary_subscr.9
DEBUG:numba.core.ssa:on stmt: bool846 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $846pred, 362, 848
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 848
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17ABFD10>
DEBUG:numba.core.ssa:on stmt: $const848.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $850return_value.1 = cast(value=$const848.0.2)
DEBUG:numba.core.ssa:on stmt: return $850return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 852
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17ABFD10>
DEBUG:numba.core.ssa:on stmt: $const852.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $854return_value.1 = cast(value=$const852.0.2)
DEBUG:numba.core.ssa:on stmt: return $854return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 853
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17ABFD10>
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {312: [<numba.core.ir.Assign object at 0x0000019A17AF4350>],
             324: [<numba.core.ir.Assign object at 0x0000019A17A2BE10>],
             554: [<numba.core.ir.Assign object at 0x0000019A17A2BDD0>],
             786: [<numba.core.ir.Assign object at 0x0000019A17A2B810>],
             798: [<numba.core.ir.Assign object at 0x0000019A17A4C790>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A4CF90>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: pre_max = arg(1, name=pre_max)
DEBUG:numba.core.ssa:on stmt: post_max = arg(2, name=post_max)
DEBUG:numba.core.ssa:on stmt: pre_avg = arg(3, name=pre_avg)
DEBUG:numba.core.ssa:on stmt: post_avg = arg(4, name=post_avg)
DEBUG:numba.core.ssa:on stmt: delta = arg(5, name=delta)
DEBUG:numba.core.ssa:on stmt: wait = arg(6, name=wait)
DEBUG:numba.core.ssa:on stmt: peaks = arg(7, name=peaks)
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
DEBUG:numba.core.ssa:on stmt: $const42.7.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $44load_global.8 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const70.13.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1193), Var($72binary_subscr.14, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7.2, $86call.15, func=$96build_slice.16, args=(Var($const42.7.2, utils.py:1205), Var($86call.15, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
DEBUG:numba.core.ssa:on stmt: $const130.22.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $122compare_op.20
DEBUG:numba.core.ssa:on stmt: $const138.24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const156.27.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
DEBUG:numba.core.ssa:on stmt: $const192.33.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $194load_global.34 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const220.39.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1193), Var($222binary_subscr.40, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33.2, $236call.41, func=$246build_slice.42, args=(Var($const192.33.2, utils.py:1206), Var($236call.41, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_add274.47 = $262call.45 + delta
DEBUG:numba.core.ssa:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
DEBUG:numba.core.ssa:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $binop_iand284.49
DEBUG:numba.core.ssa:on stmt: $const298.51.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool310 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $310pred, 312, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 312
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A4CF90>
DEBUG:numba.core.ssa:on stmt: $const314.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n = wait + $const314.1.3
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 324
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A4CF90>
DEBUG:numba.core.ssa:on stmt: n.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A4CF90>
DEBUG:numba.core.ssa:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const342.3.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $354compare_op.5 = n < $344binary_subscr.4
DEBUG:numba.core.ssa:find_def var='n' stmt=$354compare_op.5 = n < $344binary_subscr.4
DEBUG:numba.core.ssa:find_def_from_top label 328
DEBUG:numba.core.ssa:insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 328
DEBUG:numba.core.ssa:find_def_from_bottom label 312
DEBUG:numba.core.ssa:incoming_def n = wait + $const314.1.3
DEBUG:numba.core.ssa:find_def_from_bottom label 324
DEBUG:numba.core.ssa:incoming_def n.1 = const(int, 1)
DEBUG:numba.core.ssa:find_def_from_bottom label 853
DEBUG:numba.core.ssa:find_def_from_top label 853
DEBUG:numba.core.ssa:insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 853
DEBUG:numba.core.ssa:find_def_from_bottom label 554
DEBUG:numba.core.ssa:incoming_def n.2 = $binop_iadd558.2
DEBUG:numba.core.ssa:find_def_from_bottom label 786
DEBUG:numba.core.ssa:incoming_def n.3 = $binop_iadd790.2
DEBUG:numba.core.ssa:incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1220), Var(n.3, utils.py:1227)], incoming_blocks=[554, 786])
DEBUG:numba.core.ssa:replaced with: $354compare_op.5 = n.5 < $344binary_subscr.4
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 362, 852
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 362
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A4CF90>
DEBUG:numba.core.ssa:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
DEBUG:numba.core.ssa:on stmt: $386load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const398.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub404.9 = n - pre_max
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_sub404.9 = n - pre_max
DEBUG:numba.core.ssa:find_def_from_top label 362
DEBUG:numba.core.ssa:insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 362
DEBUG:numba.core.ssa:find_def_from_bottom label 328
DEBUG:numba.core.ssa:incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1209), Var(n.1, utils.py:1211), Var(n.6, utils.py:1213)], incoming_blocks=[312, 324, 853])
DEBUG:numba.core.ssa:find_def_from_bottom label 798
DEBUG:numba.core.ssa:incoming_def n.4 = $binop_iadd808.4
DEBUG:numba.core.ssa:replaced with: $binop_sub404.9 = n.7 - pre_max
DEBUG:numba.core.ssa:on stmt: $412call.10 = call $386load_global.4($const398.6.1, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6.1, utils.py:1214), Var($binop_sub404.9, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $422load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add438.15 = n + post_max
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_add438.15 = n + post_max
DEBUG:numba.core.ssa:replaced with: $binop_add438.15 = n.7 + post_max
DEBUG:numba.core.ssa:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const454.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1214), Var($456binary_subscr.19, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1214), Var($470call.20, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: $512binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
DEBUG:numba.core.ssa:on stmt: peaks[n] = $524compare_op.29
DEBUG:numba.core.ssa:find_def var='n' stmt=peaks[n] = $524compare_op.29
DEBUG:numba.core.ssa:replaced with: peaks[n.7] = $524compare_op.29
DEBUG:numba.core.ssa:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: $542binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool552 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $552pred, 566, 554
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 554
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A4CF90>
DEBUG:numba.core.ssa:on stmt: $const556.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 554
DEBUG:numba.core.ssa:idom 362 from label 554
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.2 = $binop_iadd558.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 566
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A4CF90>
DEBUG:numba.core.ssa:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
DEBUG:numba.core.ssa:on stmt: $590load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const602.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub608.9 = n - pre_avg
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_sub608.9 = n - pre_avg
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_sub608.9 = n.7 - pre_avg
DEBUG:numba.core.ssa:on stmt: $616call.10 = call $590load_global.4($const602.6.1, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6.1, utils.py:1223), Var($binop_sub608.9, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $626load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add642.15 = n + post_avg
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_add642.15 = n + post_avg
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_add642.15 = n.7 + post_avg
DEBUG:numba.core.ssa:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const658.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1223), Var($660binary_subscr.19, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1223), Var($674call.20, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $720binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $734binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add748.33 = avgn + delta
DEBUG:numba.core.ssa:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
DEBUG:numba.core.ssa:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[n] = $binop_iand758.35
DEBUG:numba.core.ssa:find_def var='n' stmt=peaks[n] = $binop_iand758.35
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: peaks[n.7] = $binop_iand758.35
DEBUG:numba.core.ssa:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $774binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool784 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $784pred, 798, 786
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 786
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A4CF90>
DEBUG:numba.core.ssa:on stmt: $const788.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 786
DEBUG:numba.core.ssa:idom 566 from label 786
DEBUG:numba.core.ssa:find_def_from_bottom label 566
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.3 = $binop_iadd790.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 798
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A4CF90>
DEBUG:numba.core.ssa:on stmt: $const802.2.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add804.3 = wait + $const802.2.3
DEBUG:numba.core.ssa:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 798
DEBUG:numba.core.ssa:idom 566 from label 798
DEBUG:numba.core.ssa:find_def_from_bottom label 566
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.4 = $binop_iadd808.4
DEBUG:numba.core.ssa:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const828.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $840compare_op.10 = n < $830binary_subscr.9
DEBUG:numba.core.ssa:find_def var='n' stmt=$840compare_op.10 = n < $830binary_subscr.9
DEBUG:numba.core.ssa:replaced with: $840compare_op.10 = n.4 < $830binary_subscr.9
DEBUG:numba.core.ssa:on stmt: bool846 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $846pred, 362, 848
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 848
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A4CF90>
DEBUG:numba.core.ssa:on stmt: $const848.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $850return_value.1 = cast(value=$const848.0.2)
DEBUG:numba.core.ssa:on stmt: return $850return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 852
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A4CF90>
DEBUG:numba.core.ssa:on stmt: $const852.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $854return_value.1 = cast(value=$const852.0.2)
DEBUG:numba.core.ssa:on stmt: return $854return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 853
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A4CF90>
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=569)
           2	COPY_FREE_VARS(arg=2, lineno=569)
           4	RESUME(arg=0, lineno=569)
           6	LOAD_FAST(arg=0, lineno=570)
           8	LOAD_ATTR(arg=0, lineno=570)
          18	LOAD_CONST(arg=1, lineno=570)
          20	COMPARE_OP(arg=2, lineno=570)
          26	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=570)
          28	LOAD_GLOBAL(arg=3, lineno=571)
          40	LOAD_CONST(arg=2, lineno=571)
          42	PRECALL(arg=1, lineno=571)
          46	CALL(arg=1, lineno=571)
          56	RAISE_VARARGS(arg=1, lineno=571)
>         58	LOAD_GLOBAL(arg=5, lineno=574)
          70	LOAD_ATTR(arg=3, lineno=574)
          80	LOAD_FAST(arg=0, lineno=574)
          82	PRECALL(arg=1, lineno=574)
          86	CALL(arg=1, lineno=574)
          96	STORE_FAST(arg=1, lineno=574)
          98	LOAD_GLOBAL(arg=9, lineno=575)
         110	LOAD_FAST(arg=1, lineno=575)
         112	PRECALL(arg=1, lineno=575)
         116	CALL(arg=1, lineno=575)
         126	LOAD_METHOD(arg=5, lineno=575)
         148	LOAD_CONST(arg=1, lineno=575)
         150	PRECALL(arg=1, lineno=575)
         154	CALL(arg=1, lineno=575)
         164	STORE_FAST(arg=2, lineno=575)
         166	PUSH_NULL(arg=None, lineno=576)
         168	LOAD_DEREF(arg=6, lineno=576)
         170	LOAD_FAST(arg=2, lineno=576)
         172	PRECALL(arg=1, lineno=576)
         176	CALL(arg=1, lineno=576)
         186	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=576)
         188	LOAD_FAST(arg=2, lineno=577)
         190	RETURN_VALUE(arg=None, lineno=577)
>        192	LOAD_FAST(arg=1, lineno=579)
         194	GET_ITER(arg=None, lineno=579)
>        196	FOR_ITER(arg=51, lineno=579)
         198	STORE_FAST(arg=3, lineno=579)
         200	LOAD_FAST(arg=3, lineno=580)
         202	LOAD_METHOD(arg=6, lineno=580)
         224	PRECALL(arg=0, lineno=580)
         228	CALL(arg=0, lineno=580)
         238	STORE_FAST(arg=4, lineno=580)
         240	PUSH_NULL(arg=None, lineno=581)
         242	LOAD_DEREF(arg=6, lineno=581)
         244	LOAD_FAST(arg=4, lineno=581)
         246	PRECALL(arg=1, lineno=581)
         250	CALL(arg=1, lineno=581)
         260	POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=581)
         262	LOAD_FAST(arg=4, lineno=582)
         264	SWAP(arg=2, lineno=582)
         266	POP_TOP(arg=None, lineno=582)
         268	RETURN_VALUE(arg=None, lineno=582)
>        270	PUSH_NULL(arg=None, lineno=583)
         272	LOAD_DEREF(arg=5, lineno=583)
         274	LOAD_FAST(arg=4, lineno=583)
         276	LOAD_FAST(arg=2, lineno=583)
         278	PRECALL(arg=2, lineno=583)
         282	CALL(arg=2, lineno=583)
         292	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=583)
         294	LOAD_FAST(arg=4, lineno=584)
         296	STORE_FAST(arg=2, lineno=584)
>        298	JUMP_BACKWARD(arg=52, lineno=584)
>        300	LOAD_FAST(arg=2, lineno=585)
         302	RETURN_VALUE(arg=None, lineno=585)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=569)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=569)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=RESUME(arg=0, lineno=569)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=570)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=570)
DEBUG:numba.core.byteflow:stack ['$a6.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=570)
DEBUG:numba.core.byteflow:stack ['$8load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=570)
DEBUG:numba.core.byteflow:stack ['$8load_attr.1', '$const18.2.1']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=570)
DEBUG:numba.core.byteflow:stack ['$20compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=28 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_GLOBAL(arg=3, lineno=571)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=571)
DEBUG:numba.core.byteflow:stack ['$null$28.1', '$28load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=PRECALL(arg=1, lineno=571)
DEBUG:numba.core.byteflow:stack ['$null$28.1', '$28load_global.0', '$const40.2.2']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=CALL(arg=1, lineno=571)
DEBUG:numba.core.byteflow:stack ['$null$28.1', '$28load_global.0', '$const40.2.2']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=571)
DEBUG:numba.core.byteflow:stack ['$46call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=574)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_ATTR(arg=3, lineno=574)
DEBUG:numba.core.byteflow:stack ['$null$58.1', '$58load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=0, lineno=574)
DEBUG:numba.core.byteflow:stack ['$null$58.1', '$70load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=PRECALL(arg=1, lineno=574)
DEBUG:numba.core.byteflow:stack ['$null$58.1', '$70load_attr.2', '$a80.3']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=CALL(arg=1, lineno=574)
DEBUG:numba.core.byteflow:stack ['$null$58.1', '$70load_attr.2', '$a80.3']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=STORE_FAST(arg=1, lineno=574)
DEBUG:numba.core.byteflow:stack ['$86call.4']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_GLOBAL(arg=9, lineno=575)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$98.6', '$98load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=PRECALL(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$98.6', '$98load_global.5', '$it110.7']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=CALL(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$98.6', '$98load_global.5', '$it110.7']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_METHOD(arg=5, lineno=575)
DEBUG:numba.core.byteflow:stack ['$116call.8']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_CONST(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$126.9', '$126load_method.10']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=PRECALL(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$126.9', '$126load_method.10', '$const148.11.1']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=CALL(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$126.9', '$126load_method.10', '$const148.11.1']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=STORE_FAST(arg=2, lineno=575)
DEBUG:numba.core.byteflow:stack ['$154call.12']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=PUSH_NULL(arg=None, lineno=576)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_DEREF(arg=6, lineno=576)
DEBUG:numba.core.byteflow:stack ['$null$166.13']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=576)
DEBUG:numba.core.byteflow:stack ['$null$166.13', '$168load_deref.14']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=PRECALL(arg=1, lineno=576)
DEBUG:numba.core.byteflow:stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=CALL(arg=1, lineno=576)
DEBUG:numba.core.byteflow:stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=576)
DEBUG:numba.core.byteflow:stack ['$176call.16']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=188, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=188 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=577)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=190, inst=RETURN_VALUE(arg=None, lineno=577)
DEBUG:numba.core.byteflow:stack ['$max_value188.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=192 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=192 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_FAST(arg=1, lineno=579)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=194, inst=GET_ITER(arg=None, lineno=579)
DEBUG:numba.core.byteflow:stack ['$it192.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=196, stack=('$194get_iter.1',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=196 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi196.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=196 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=196, inst=FOR_ITER(arg=51, lineno=579)
DEBUG:numba.core.byteflow:stack ['$phi196.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=300, stack=(), blockstack=(), npush=0), Edge(pc=198, stack=('$phi196.0', '$196for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=300 nstack_initial=0), State(pc_initial=198 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=300 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=300, inst=LOAD_FAST(arg=2, lineno=585)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=302, inst=RETURN_VALUE(arg=None, lineno=585)
DEBUG:numba.core.byteflow:stack ['$max_value300.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=198 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi198.0', '$phi198.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=198 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=198, inst=STORE_FAST(arg=3, lineno=579)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$phi198.1']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=LOAD_FAST(arg=3, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=LOAD_METHOD(arg=6, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$view200.2']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=PRECALL(arg=0, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$202.3', '$202load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=CALL(arg=0, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$202.3', '$202load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=STORE_FAST(arg=4, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$228call.5']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=PUSH_NULL(arg=None, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=LOAD_DEREF(arg=6, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$240.6']
DEBUG:numba.core.byteflow:dispatch pc=244, inst=LOAD_FAST(arg=4, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$240.6', '$242load_deref.7']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=PRECALL(arg=1, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
DEBUG:numba.core.byteflow:dispatch pc=250, inst=CALL(arg=1, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$250call.9']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=262, stack=('$phi198.0',), blockstack=(), npush=0), Edge(pc=270, stack=('$phi198.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=262 nstack_initial=1), State(pc_initial=270 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi262.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=262 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=4, lineno=582)
DEBUG:numba.core.byteflow:stack ['$phi262.0']
DEBUG:numba.core.byteflow:dispatch pc=264, inst=SWAP(arg=2, lineno=582)
DEBUG:numba.core.byteflow:stack ['$phi262.0', '$v262.1']
DEBUG:numba.core.byteflow:dispatch pc=266, inst=POP_TOP(arg=None, lineno=582)
DEBUG:numba.core.byteflow:stack ['$v262.1', '$phi262.0']
DEBUG:numba.core.byteflow:dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=582)
DEBUG:numba.core.byteflow:stack ['$v262.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=270 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi270.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=270 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=270, inst=PUSH_NULL(arg=None, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_DEREF(arg=5, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=LOAD_FAST(arg=4, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1', '$272load_deref.2']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=LOAD_FAST(arg=2, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=PRECALL(arg=2, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=CALL(arg=2, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$282call.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=294, stack=('$phi270.0',), blockstack=(), npush=0), Edge(pc=298, stack=('$phi270.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=294 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi294.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=294 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=294, inst=LOAD_FAST(arg=4, lineno=584)
DEBUG:numba.core.byteflow:stack ['$phi294.0']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=STORE_FAST(arg=2, lineno=584)
DEBUG:numba.core.byteflow:stack ['$phi294.0', '$v294.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=298, stack=('$phi294.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi298.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=298 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=298, inst=JUMP_BACKWARD(arg=52, lineno=584)
DEBUG:numba.core.byteflow:stack ['$phi298.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=196, stack=('$phi298.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=196 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=196 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=196 nstack_initial=1): {'$phi196.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=262 nstack_initial=1): set(),
             State(pc_initial=270 nstack_initial=1): set(),
             State(pc_initial=294 nstack_initial=1): set(),
             State(pc_initial=298 nstack_initial=1): set(),
             State(pc_initial=300 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi196.0': State(pc_initial=192 nstack_initial=0),
 '$phi198.1': State(pc_initial=196 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi298.0',
                            State(pc_initial=298 nstack_initial=1))},
             '$phi198.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi270.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi294.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1))},
             '$phi298.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi196.0': {('$194get_iter.1', State(pc_initial=192 nstack_initial=0))},
 '$phi198.1': {('$196for_iter.2', State(pc_initial=196 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=192 nstack_initial=0): {'$phi196.0': '$194get_iter.1'},
             State(pc_initial=196 nstack_initial=1): {'$phi198.1': '$196for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.2.1'}), (20, {'lhs': '$8load_attr.1', 'rhs': '$const18.2.1', 'res': '$20compare_op.3'}), (22, {}), (24, {}), (26, {'pred': '$20compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 58: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'idx': 1, 'res': '$28load_global.0'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$const40.2.2'}), (42, {}), (44, {}), (46, {'func': '$28load_global.0', 'args': ['$const40.2.2'], 'kw_names': None, 'res': '$46call.3'}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'exc': '$46call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'item': '$58load_global.0', 'res': '$70load_attr.2'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$a80.3'}), (82, {}), (84, {}), (86, {'func': '$70load_attr.2', 'args': ['$a80.3'], 'kw_names': None, 'res': '$86call.4'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'value': '$86call.4'}), (98, {'idx': 4, 'res': '$98load_global.5'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {'res': '$it110.7'}), (112, {}), (114, {}), (116, {'func': '$98load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$116call.8'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {'item': '$116call.8', 'res': '$126load_method.10'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {}), (148, {'res': '$const148.11.1'}), (150, {}), (152, {}), (154, {'func': '$126load_method.10', 'args': ['$const148.11.1'], 'kw_names': None, 'res': '$154call.12'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.12'}), (166, {}), (168, {'res': '$168load_deref.14'}), (170, {'res': '$max_value170.15'}), (172, {}), (174, {}), (176, {'func': '$168load_deref.14', 'args': ['$max_value170.15'], 'kw_names': None, 'res': '$176call.16'}), (178, {}), (180, {}), (182, {}), (184, {}), (186, {'pred': '$176call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: (), 192: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$max_value188.0'}), (190, {'retval': '$max_value188.0', 'castval': '$190return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$it192.0'}), (194, {'value': '$it192.0', 'res': '$194get_iter.1'})), outgoing_phis={'$phi196.0': '$194get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$194get_iter.1',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=196 nstack_initial=1):
AdaptBlockInfo(insts=((196, {'iterator': '$phi196.0', 'pair': '$196for_iter.1', 'indval': '$196for_iter.2', 'pred': '$196for_iter.3'}),), outgoing_phis={'$phi198.1': '$196for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={300: (), 198: ('$phi196.0', '$196for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$view200.2'}), (202, {'item': '$view200.2', 'res': '$202load_method.4'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'func': '$202load_method.4', 'args': [], 'kw_names': None, 'res': '$228call.5'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'value': '$228call.5'}), (240, {}), (242, {'res': '$242load_deref.7'}), (244, {'res': '$v244.8'}), (246, {}), (248, {}), (250, {'func': '$242load_deref.7', 'args': ['$v244.8'], 'kw_names': None, 'res': '$250call.9'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'pred': '$250call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={262: ('$phi198.0',), 270: ('$phi198.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=262 nstack_initial=1):
AdaptBlockInfo(insts=((262, {'res': '$v262.1'}), (268, {'retval': '$v262.1', 'castval': '$268return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=270 nstack_initial=1):
AdaptBlockInfo(insts=((270, {}), (272, {'res': '$272load_deref.2'}), (274, {'res': '$v274.3'}), (276, {'res': '$max_value276.4'}), (278, {}), (280, {}), (282, {'func': '$272load_deref.2', 'args': ['$v274.3', '$max_value276.4'], 'kw_names': None, 'res': '$282call.5'}), (284, {}), (286, {}), (288, {}), (290, {}), (292, {'pred': '$282call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi270.0',), 298: ('$phi270.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=294 nstack_initial=1):
AdaptBlockInfo(insts=((294, {'res': '$v294.1'}), (296, {'value': '$v294.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={298: ('$phi294.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=298 nstack_initial=1):
AdaptBlockInfo(insts=((298, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$phi298.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=300 nstack_initial=0):
AdaptBlockInfo(insts=((300, {'res': '$max_value300.0'}), (302, {'retval': '$max_value300.0', 'castval': '$302return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const18.2.1 = const(int, 0)             ['$const18.2.1']
    $20compare_op.3 = $8load_attr.1 == $const18.2.1 ['$20compare_op.3', '$8load_attr.1', '$const18.2.1']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.3', '$26pred', 'bool26']
    branch $26pred, 28, 58                   ['$26pred']
label 28:
    $28load_global.0 = global(ValueError: <class 'ValueError'>) ['$28load_global.0']
    $const40.2.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const40.2.2']
    $46call.3 = call $28load_global.0($const40.2.2, func=$28load_global.0, args=[Var($const40.2.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$46call.3', '$const40.2.2']
    raise $46call.3                          ['$46call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$58load_global.0']
    $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$70load_attr.2']
    it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_attr.2', 'a', 'it']
    $98load_global.5 = global(next: <built-in function next>) ['$98load_global.5']
    $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.8', '$98load_global.5', 'it']
    $126load_method.10 = getattr(value=$116call.8, attr=take) ['$116call.8', '$126load_method.10']
    $const148.11.1 = const(int, 0)           ['$const148.11.1']
    max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_method.10', '$const148.11.1', 'max_value']
    $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>) ['$168load_deref.14']
    $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$168load_deref.14', '$176call.16', 'max_value']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$176call.16', '$186pred', 'bool186']
    branch $186pred, 188, 192                ['$186pred']
label 188:
    $190return_value.1 = cast(value=max_value) ['$190return_value.1', 'max_value']
    return $190return_value.1                ['$190return_value.1']
label 192:
    $194get_iter.1 = getiter(value=it)       ['$194get_iter.1', 'it']
    $phi196.0 = $194get_iter.1               ['$194get_iter.1', '$phi196.0']
    jump 196                                 []
label 196:
    $196for_iter.1 = iternext(value=$phi196.0) ['$196for_iter.1', '$phi196.0']
    $196for_iter.2 = pair_first(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.2']
    $196for_iter.3 = pair_second(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.3']
    $phi198.1 = $196for_iter.2               ['$196for_iter.2', '$phi198.1']
    branch $196for_iter.3, 198, 300          ['$196for_iter.3']
label 198:
    view = $phi198.1                         ['$phi198.1', 'view']
    $202load_method.4 = getattr(value=view, attr=item) ['$202load_method.4', 'view']
    v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$202load_method.4', 'v']
    $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>) ['$242load_deref.7']
    $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$242load_deref.7', '$250call.9', 'v']
    bool260 = global(bool: <class 'bool'>)   ['bool260']
    $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$250call.9', '$260pred', 'bool260']
    branch $260pred, 262, 270                ['$260pred']
label 262:
    $268return_value.2 = cast(value=v)       ['$268return_value.2', 'v']
    return $268return_value.2                ['$268return_value.2']
label 270:
    $272load_deref.2 = freevar(comparator: <function max_comparator at 0x0000019A159372E0>) ['$272load_deref.2']
    $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$272load_deref.2', '$282call.5', 'max_value', 'v']
    bool292 = global(bool: <class 'bool'>)   ['bool292']
    $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$282call.5', '$292pred', 'bool292']
    branch $292pred, 294, 298                ['$292pred']
label 294:
    max_value = v                            ['max_value', 'v']
    jump 298                                 []
label 298:
    jump 196                                 []
label 300:
    $302return_value.1 = cast(value=max_value) ['$302return_value.1', 'max_value']
    return $302return_value.1                ['$302return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177C0510>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 58
DEBUG:numba.core.ssa:==== SSA block analysis pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177C0510>
DEBUG:numba.core.ssa:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const40.2.2 = const(str, zero-size array to reduction operation maximum which has no identity)
DEBUG:numba.core.ssa:on stmt: $46call.3 = call $28load_global.0($const40.2.2, func=$28load_global.0, args=[Var($const40.2.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177C0510>
DEBUG:numba.core.ssa:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
DEBUG:numba.core.ssa:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.5 = global(next: <built-in function next>)
DEBUG:numba.core.ssa:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
DEBUG:numba.core.ssa:on stmt: $const148.11.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
DEBUG:numba.core.ssa:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 192
DEBUG:numba.core.ssa:==== SSA block analysis pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177C0510>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177C0510>
DEBUG:numba.core.ssa:on stmt: $194get_iter.1 = getiter(value=it)
DEBUG:numba.core.ssa:on stmt: $phi196.0 = $194get_iter.1
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block analysis pass on 196
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177C0510>
DEBUG:numba.core.ssa:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
DEBUG:numba.core.ssa:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi198.1 = $196for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $196for_iter.3, 198, 300
DEBUG:numba.core.ssa:==== SSA block analysis pass on 198
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177C0510>
DEBUG:numba.core.ssa:on stmt: view = $phi198.1
DEBUG:numba.core.ssa:on stmt: $202load_method.4 = getattr(value=view, attr=item)
DEBUG:numba.core.ssa:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
DEBUG:numba.core.ssa:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool260 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $260pred, 262, 270
DEBUG:numba.core.ssa:==== SSA block analysis pass on 262
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177C0510>
DEBUG:numba.core.ssa:on stmt: $268return_value.2 = cast(value=v)
DEBUG:numba.core.ssa:on stmt: return $268return_value.2
DEBUG:numba.core.ssa:==== SSA block analysis pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177C0510>
DEBUG:numba.core.ssa:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x0000019A159372E0>)
DEBUG:numba.core.ssa:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool292 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $292pred, 294, 298
DEBUG:numba.core.ssa:==== SSA block analysis pass on 294
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177C0510>
DEBUG:numba.core.ssa:on stmt: max_value = v
DEBUG:numba.core.ssa:on stmt: jump 298
DEBUG:numba.core.ssa:==== SSA block analysis pass on 298
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177C0510>
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block analysis pass on 300
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177C0510>
DEBUG:numba.core.ssa:on stmt: $302return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $302return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$116call.8': [(<numba.core.ir.Assign object at 0x0000019A179D1B90>,
                             58)],
             '$126load_method.10': [(<numba.core.ir.Assign object at 0x0000019A179D2510>,
                                     58)],
             '$168load_deref.14': [(<numba.core.ir.Assign object at 0x0000019A179D3D90>,
                                    58)],
             '$176call.16': [(<numba.core.ir.Assign object at 0x0000019A1770A210>,
                              58)],
             '$186pred': [(<numba.core.ir.Assign object at 0x0000019A1770B850>,
                           58)],
             '$190return_value.1': [(<numba.core.ir.Assign object at 0x0000019A17708790>,
                                     188)],
             '$194get_iter.1': [(<numba.core.ir.Assign object at 0x0000019A1770BF50>,
                                 192)],
             '$196for_iter.1': [(<numba.core.ir.Assign object at 0x0000019A177097D0>,
                                 196)],
             '$196for_iter.2': [(<numba.core.ir.Assign object at 0x0000019A177081D0>,
                                 196)],
             '$196for_iter.3': [(<numba.core.ir.Assign object at 0x0000019A1770AB50>,
                                 196)],
             '$202load_method.4': [(<numba.core.ir.Assign object at 0x0000019A1770A590>,
                                    198)],
             '$20compare_op.3': [(<numba.core.ir.Assign object at 0x0000019A179D01D0>,
                                  0)],
             '$242load_deref.7': [(<numba.core.ir.Assign object at 0x0000019A177093D0>,
                                   198)],
             '$250call.9': [(<numba.core.ir.Assign object at 0x0000019A1770AD90>,
                             198)],
             '$260pred': [(<numba.core.ir.Assign object at 0x0000019A1770B5D0>,
                           198)],
             '$268return_value.2': [(<numba.core.ir.Assign object at 0x0000019A17708F90>,
                                     262)],
             '$26pred': [(<numba.core.ir.Assign object at 0x0000019A179D1610>,
                          0)],
             '$272load_deref.2': [(<numba.core.ir.Assign object at 0x0000019A17709810>,
                                   270)],
             '$282call.5': [(<numba.core.ir.Assign object at 0x0000019A17957CD0>,
                             270)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x0000019A179D2A50>,
                                   28)],
             '$292pred': [(<numba.core.ir.Assign object at 0x0000019A17954C50>,
                           270)],
             '$302return_value.1': [(<numba.core.ir.Assign object at 0x0000019A17956690>,
                                     300)],
             '$46call.3': [(<numba.core.ir.Assign object at 0x0000019A179D3F10>,
                            28)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x0000019A179D3890>,
                                   58)],
             '$70load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A179D3350>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x0000019A17A13A50>,
                                0)],
             '$98load_global.5': [(<numba.core.ir.Assign object at 0x0000019A179D2C50>,
                                   58)],
             '$const148.11.1': [(<numba.core.ir.Assign object at 0x0000019A1770A8D0>,
                                 58)],
             '$const18.2.1': [(<numba.core.ir.Assign object at 0x0000019A17A13F10>,
                               0)],
             '$const40.2.2': [(<numba.core.ir.Assign object at 0x0000019A179D2C10>,
                               28)],
             '$phi196.0': [(<numba.core.ir.Assign object at 0x0000019A1770BE50>,
                            192)],
             '$phi198.1': [(<numba.core.ir.Assign object at 0x0000019A1770B150>,
                            196)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A18DF9850>, 0)],
             'bool186': [(<numba.core.ir.Assign object at 0x0000019A1770BA90>,
                          58)],
             'bool26': [(<numba.core.ir.Assign object at 0x0000019A179D2350>,
                         0)],
             'bool260': [(<numba.core.ir.Assign object at 0x0000019A177083D0>,
                          198)],
             'bool292': [(<numba.core.ir.Assign object at 0x0000019A17957E10>,
                          270)],
             'it': [(<numba.core.ir.Assign object at 0x0000019A179D2DD0>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x0000019A1770A950>,
                            58),
                           (<numba.core.ir.Assign object at 0x0000019A17956B90>,
                            294)],
             'v': [(<numba.core.ir.Assign object at 0x0000019A17708D90>, 198)],
             'view': [(<numba.core.ir.Assign object at 0x0000019A1770ABD0>,
                       198)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A177C0510>
DEBUG:numba.core.ssa:Fix SSA violator on var max_value
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A161BB7D0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A161BB7D0>
DEBUG:numba.core.ssa:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const40.2.2 = const(str, zero-size array to reduction operation maximum which has no identity)
DEBUG:numba.core.ssa:on stmt: $46call.3 = call $28load_global.0($const40.2.2, func=$28load_global.0, args=[Var($const40.2.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A161BB7D0>
DEBUG:numba.core.ssa:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
DEBUG:numba.core.ssa:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.5 = global(next: <built-in function next>)
DEBUG:numba.core.ssa:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
DEBUG:numba.core.ssa:on stmt: $const148.11.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:first assign: max_value
DEBUG:numba.core.ssa:replaced with: max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
DEBUG:numba.core.ssa:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A161BB7D0>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A161BB7D0>
DEBUG:numba.core.ssa:on stmt: $194get_iter.1 = getiter(value=it)
DEBUG:numba.core.ssa:on stmt: $phi196.0 = $194get_iter.1
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 196
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A161BB7D0>
DEBUG:numba.core.ssa:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
DEBUG:numba.core.ssa:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi198.1 = $196for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $196for_iter.3, 198, 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 198
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A161BB7D0>
DEBUG:numba.core.ssa:on stmt: view = $phi198.1
DEBUG:numba.core.ssa:on stmt: $202load_method.4 = getattr(value=view, attr=item)
DEBUG:numba.core.ssa:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
DEBUG:numba.core.ssa:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool260 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $260pred, 262, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 262
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A161BB7D0>
DEBUG:numba.core.ssa:on stmt: $268return_value.2 = cast(value=v)
DEBUG:numba.core.ssa:on stmt: return $268return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A161BB7D0>
DEBUG:numba.core.ssa:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x0000019A159372E0>)
DEBUG:numba.core.ssa:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool292 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $292pred, 294, 298
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 294
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A161BB7D0>
DEBUG:numba.core.ssa:on stmt: max_value = v
DEBUG:numba.core.ssa:replaced with: max_value.1 = v
DEBUG:numba.core.ssa:on stmt: jump 298
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 298
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A161BB7D0>
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 300
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A161BB7D0>
DEBUG:numba.core.ssa:on stmt: $302return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $302return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x0000019A161BB6D0>],
             294: [<numba.core.ir.Assign object at 0x0000019A161BAFD0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161BAB90>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161BAB90>
DEBUG:numba.core.ssa:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const40.2.2 = const(str, zero-size array to reduction operation maximum which has no identity)
DEBUG:numba.core.ssa:on stmt: $46call.3 = call $28load_global.0($const40.2.2, func=$28load_global.0, args=[Var($const40.2.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161BAB90>
DEBUG:numba.core.ssa:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
DEBUG:numba.core.ssa:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.5 = global(next: <built-in function next>)
DEBUG:numba.core.ssa:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
DEBUG:numba.core.ssa:on stmt: $const148.11.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
DEBUG:numba.core.ssa:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161BAB90>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$190return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 58 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 58
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161BAB90>
DEBUG:numba.core.ssa:on stmt: $194get_iter.1 = getiter(value=it)
DEBUG:numba.core.ssa:on stmt: $phi196.0 = $194get_iter.1
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 196
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161BAB90>
DEBUG:numba.core.ssa:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
DEBUG:numba.core.ssa:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi198.1 = $196for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $196for_iter.3, 198, 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 198
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161BAB90>
DEBUG:numba.core.ssa:on stmt: view = $phi198.1
DEBUG:numba.core.ssa:on stmt: $202load_method.4 = getattr(value=view, attr=item)
DEBUG:numba.core.ssa:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
DEBUG:numba.core.ssa:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool260 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $260pred, 262, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 262
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161BAB90>
DEBUG:numba.core.ssa:on stmt: $268return_value.2 = cast(value=v)
DEBUG:numba.core.ssa:on stmt: return $268return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161BAB90>
DEBUG:numba.core.ssa:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x0000019A159372E0>)
DEBUG:numba.core.ssa:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 198 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 198
DEBUG:numba.core.ssa:find_def_from_top label 198
DEBUG:numba.core.ssa:idom 196 from label 198
DEBUG:numba.core.ssa:find_def_from_bottom label 196
DEBUG:numba.core.ssa:find_def_from_top label 196
DEBUG:numba.core.ssa:insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 196
DEBUG:numba.core.ssa:find_def_from_bottom label 192
DEBUG:numba.core.ssa:find_def_from_top label 192
DEBUG:numba.core.ssa:idom 58 from label 192
DEBUG:numba.core.ssa:find_def_from_bottom label 58
DEBUG:numba.core.ssa:incoming_def max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_bottom label 298
DEBUG:numba.core.ssa:find_def_from_top label 298
DEBUG:numba.core.ssa:insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 298
DEBUG:numba.core.ssa:find_def_from_bottom label 294
DEBUG:numba.core.ssa:incoming_def max_value.1 = v
DEBUG:numba.core.ssa:find_def_from_bottom label 270
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 198 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 198
DEBUG:numba.core.ssa:find_def_from_top label 198
DEBUG:numba.core.ssa:idom 196 from label 198
DEBUG:numba.core.ssa:find_def_from_bottom label 196
DEBUG:numba.core.ssa:incoming_def max_value.2 = phi(incoming_values=[Var(max_value, old_arraymath.py:575)], incoming_blocks=[192])
DEBUG:numba.core.ssa:incoming_def max_value.3 = phi(incoming_values=[Var(max_value.1, old_arraymath.py:584), Var(max_value.2, old_arraymath.py:583)], incoming_blocks=[294, 270])
DEBUG:numba.core.ssa:replaced with: $282call.5 = call $272load_deref.2(v, max_value.2, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value.2, old_arraymath.py:583)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool292 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $292pred, 294, 298
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 294
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161BAB90>
DEBUG:numba.core.ssa:on stmt: max_value.1 = v
DEBUG:numba.core.ssa:on stmt: jump 298
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 298
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161BAB90>
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 300
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161BAB90>
DEBUG:numba.core.ssa:on stmt: $302return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$302return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def_from_top label 300
DEBUG:numba.core.ssa:idom 196 from label 300
DEBUG:numba.core.ssa:find_def_from_bottom label 196
DEBUG:numba.core.ssa:replaced with: $302return_value.1 = cast(value=max_value.2)
DEBUG:numba.core.ssa:on stmt: return $302return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4793)
           2	RESUME(arg=0, lineno=4793)
           4	LOAD_FAST(arg=1, lineno=4794)
           6	LOAD_FAST(arg=0, lineno=4794)
           8	LOAD_ATTR(arg=0, lineno=4794)
          18	LOAD_CONST(arg=1, lineno=4794)
          20	BINARY_OP(arg=10, lineno=4794)
          24	COMPARE_OP(arg=4, lineno=4794)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4794)
          32	LOAD_FAST(arg=1, lineno=4794)
          34	LOAD_FAST(arg=0, lineno=4794)
          36	LOAD_ATTR(arg=0, lineno=4794)
          46	UNARY_NEGATIVE(arg=None, lineno=4794)
          48	COMPARE_OP(arg=0, lineno=4794)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4794)
>         56	LOAD_GLOBAL(arg=3, lineno=4795)
          68	LOAD_CONST(arg=2, lineno=4795)
          70	PRECALL(arg=1, lineno=4795)
          74	CALL(arg=1, lineno=4795)
          84	RAISE_VARARGS(arg=1, lineno=4795)
>         86	LOAD_FAST(arg=0, lineno=4796)
          88	LOAD_METHOD(arg=2, lineno=4796)
         110	PRECALL(arg=0, lineno=4796)
         114	CALL(arg=0, lineno=4796)
         124	LOAD_FAST(arg=1, lineno=4796)
         126	BINARY_SUBSCR(arg=None, lineno=4796)
         136	RETURN_VALUE(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4793)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=4793)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$a6.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$8load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$8load_attr.2', '$const18.3.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$binop_sub20.4']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$24compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$a34.1']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$36load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$46unary_negative.3']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$48compare_op.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=56 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4795)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=PRECALL(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0', '$const68.2.2']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=CALL(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0', '$const68.2.2']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$74call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=86 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$a86.0']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=PRECALL(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$null$88.1', '$88load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=CALL(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$null$88.1', '$88load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$114call.3']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$114call.3', '$indices124.4']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$126binary_subscr.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3.1'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3.1', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    axis = arg(2, name=axis)                 ['axis']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3.1 = const(int, 1)             ['$const18.3.1']
    $binop_sub20.4 = $8load_attr.2 - $const18.3.1 ['$8load_attr.2', '$binop_sub20.4', '$const18.3.1']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2.2 = const(str, Index out of bounds) ['$const68.2.2']
    $74call.3 = call $56load_global.0($const68.2.2, func=$56load_global.0, args=[Var($const68.2.2, arrayobj.py:4795)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17710C90>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: indices = arg(1, name=indices)
DEBUG:numba.core.ssa:on stmt: axis = arg(2, name=axis)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3.1
DEBUG:numba.core.ssa:on stmt: $24compare_op.5 = indices > $binop_sub20.4
DEBUG:numba.core.ssa:on stmt: bool30 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $30pred, 56, 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17710C90>
DEBUG:numba.core.ssa:on stmt: $36load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
DEBUG:numba.core.ssa:on stmt: $48compare_op.4 = indices < $46unary_negative.3
DEBUG:numba.core.ssa:on stmt: bool54 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $54pred, 56, 86
DEBUG:numba.core.ssa:==== SSA block analysis pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17710C90>
DEBUG:numba.core.ssa:on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
DEBUG:numba.core.ssa:on stmt: $const68.2.2 = const(str, Index out of bounds)
DEBUG:numba.core.ssa:on stmt: $74call.3 = call $56load_global.0($const68.2.2, func=$56load_global.0, args=[Var($const68.2.2, arrayobj.py:4795)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17710C90>
DEBUG:numba.core.ssa:on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
DEBUG:numba.core.ssa:on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
DEBUG:numba.core.ssa:on stmt: return $136return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x0000019A1769EB10>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000019A1769C690>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x0000019A1769FDD0>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x0000019A161B9990>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x0000019A161B9590>,
                          0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A1769C750>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x0000019A1769F510>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x0000019A1769D610>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x0000019A1769DCD0>,
                          32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x0000019A1769DED0>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x0000019A1769F990>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x0000019A1769DD50>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A161B90D0>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x0000019A161BAC10>,
                                 0)],
             '$const18.3.1': [(<numba.core.ir.Assign object at 0x0000019A161BAE50>,
                               0)],
             '$const68.2.2': [(<numba.core.ir.Assign object at 0x0000019A1769EC90>,
                               56)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A161B8210>, 0)],
             'axis': [(<numba.core.ir.Assign object at 0x0000019A161BB590>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x0000019A161B9050>,
                         0)],
             'bool54': [(<numba.core.ir.Assign object at 0x0000019A1769D390>,
                         32)],
             'indices': [(<numba.core.ir.Assign object at 0x0000019A161BB850>,
                          0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17710C90>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2302)
           2	RESUME(arg=0, lineno=2302)
           4	LOAD_FAST(arg=0, lineno=2304)
           6	LOAD_METHOD(arg=0, lineno=2304)
          28	LOAD_FAST(arg=0, lineno=2304)
          30	LOAD_ATTR(arg=1, lineno=2304)
          40	PRECALL(arg=1, lineno=2304)
          44	CALL(arg=1, lineno=2304)
          54	RETURN_VALUE(arg=None, lineno=2304)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2302)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=2302)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2304)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$ary4.0']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2', '$ary28.3']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=PRECALL(arg=1, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=CALL(arg=1, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$44call.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$ary28.3'}), (30, {'item': '$ary28.3', 'res': '$30load_attr.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {'func': '$6load_method.2', 'args': ['$30load_attr.4'], 'kw_names': None, 'res': '$44call.5'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {'retval': '$44call.5', 'castval': '$54return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_method.2 = getattr(value=ary, attr=reshape) ['$6load_method.2', 'ary']
    $30load_attr.4 = getattr(value=ary, attr=size) ['$30load_attr.4', 'ary']
    $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2304)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_attr.4', '$44call.5', '$6load_method.2']
    $54return_value.6 = cast(value=$44call.5) ['$44call.5', '$54return_value.6']
    return $54return_value.6                 ['$54return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177F16D0>
DEBUG:numba.core.ssa:on stmt: ary = arg(0, name=ary)
DEBUG:numba.core.ssa:on stmt: $6load_method.2 = getattr(value=ary, attr=reshape)
DEBUG:numba.core.ssa:on stmt: $30load_attr.4 = getattr(value=ary, attr=size)
DEBUG:numba.core.ssa:on stmt: $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2304)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $54return_value.6 = cast(value=$44call.5)
DEBUG:numba.core.ssa:on stmt: return $54return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$30load_attr.4': [(<numba.core.ir.Assign object at 0x0000019A17824B50>,
                                 0)],
             '$44call.5': [(<numba.core.ir.Assign object at 0x0000019A1764C410>,
                            0)],
             '$54return_value.6': [(<numba.core.ir.Assign object at 0x0000019A17710C50>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x0000019A17826C90>,
                                  0)],
             'ary': [(<numba.core.ir.Assign object at 0x0000019A17825850>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A177F16D0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2111)
           2	RESUME(arg=0, lineno=2111)
           4	LOAD_CONST(arg=1, lineno=2112)
           6	STORE_FAST(arg=2, lineno=2112)
           8	LOAD_CONST(arg=2, lineno=2113)
          10	STORE_FAST(arg=3, lineno=2113)
          12	LOAD_GLOBAL(arg=1, lineno=2114)
          24	LOAD_FAST(arg=1, lineno=2114)
          26	PRECALL(arg=1, lineno=2114)
          30	CALL(arg=1, lineno=2114)
          40	GET_ITER(arg=None, lineno=2114)
>         42	FOR_ITER(arg=24, lineno=2114)
          44	UNPACK_SEQUENCE(arg=2, lineno=2114)
          48	STORE_FAST(arg=4, lineno=2114)
          50	STORE_FAST(arg=5, lineno=2114)
          52	LOAD_FAST(arg=5, lineno=2115)
          54	LOAD_CONST(arg=1, lineno=2115)
          56	COMPARE_OP(arg=0, lineno=2115)
          62	POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=2115)
          64	LOAD_FAST(arg=2, lineno=2116)
          66	LOAD_CONST(arg=2, lineno=2116)
          68	BINARY_OP(arg=13, lineno=2116)
          72	STORE_FAST(arg=2, lineno=2116)
          74	LOAD_FAST(arg=4, lineno=2117)
          76	STORE_FAST(arg=6, lineno=2117)
          78	JUMP_BACKWARD(arg=19, lineno=2117)
>         80	LOAD_FAST(arg=3, lineno=2119)
          82	LOAD_FAST(arg=5, lineno=2119)
          84	BINARY_OP(arg=18, lineno=2119)
          88	STORE_FAST(arg=3, lineno=2119)
          90	JUMP_BACKWARD(arg=25, lineno=2119)
>         92	LOAD_FAST(arg=2, lineno=2121)
          94	LOAD_CONST(arg=1, lineno=2121)
          96	COMPARE_OP(arg=2, lineno=2121)
         102	POP_JUMP_FORWARD_IF_FALSE(arg=23, lineno=2121)
         104	LOAD_FAST(arg=0, lineno=2122)
         106	LOAD_FAST(arg=3, lineno=2122)
         108	COMPARE_OP(arg=3, lineno=2122)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=2122)
         116	LOAD_GLOBAL(arg=3, lineno=2123)
         128	LOAD_CONST(arg=3, lineno=2123)
         130	PRECALL(arg=1, lineno=2123)
         134	CALL(arg=1, lineno=2123)
         144	RAISE_VARARGS(arg=1, lineno=2123)
>        146	LOAD_CONST(arg=0, lineno=2122)
         148	RETURN_VALUE(arg=None, lineno=2122)
>        150	LOAD_FAST(arg=2, lineno=2125)
         152	LOAD_CONST(arg=2, lineno=2125)
         154	COMPARE_OP(arg=2, lineno=2125)
         160	POP_JUMP_FORWARD_IF_FALSE(arg=53, lineno=2125)
         162	LOAD_FAST(arg=3, lineno=2127)
         164	LOAD_CONST(arg=1, lineno=2127)
         166	COMPARE_OP(arg=2, lineno=2127)
         172	POP_JUMP_FORWARD_IF_FALSE(arg=9, lineno=2127)
         174	LOAD_CONST(arg=1, lineno=2128)
         176	STORE_FAST(arg=7, lineno=2128)
         178	LOAD_FAST(arg=0, lineno=2129)
         180	LOAD_CONST(arg=1, lineno=2129)
         182	COMPARE_OP(arg=2, lineno=2129)
         188	STORE_FAST(arg=8, lineno=2129)
         190	JUMP_FORWARD(arg=14, lineno=2129)
>        192	LOAD_FAST(arg=0, lineno=2131)
         194	LOAD_FAST(arg=3, lineno=2131)
         196	BINARY_OP(arg=2, lineno=2131)
         200	STORE_FAST(arg=7, lineno=2131)
         202	LOAD_FAST(arg=0, lineno=2132)
         204	LOAD_FAST(arg=3, lineno=2132)
         206	BINARY_OP(arg=6, lineno=2132)
         210	LOAD_CONST(arg=1, lineno=2132)
         212	COMPARE_OP(arg=2, lineno=2132)
         218	STORE_FAST(arg=8, lineno=2132)
>        220	LOAD_FAST(arg=8, lineno=2133)
         222	POP_JUMP_FORWARD_IF_TRUE(arg=15, lineno=2133)
         224	LOAD_GLOBAL(arg=3, lineno=2134)
         236	LOAD_CONST(arg=3, lineno=2134)
         238	PRECALL(arg=1, lineno=2134)
         242	CALL(arg=1, lineno=2134)
         252	RAISE_VARARGS(arg=1, lineno=2134)
>        254	LOAD_FAST(arg=7, lineno=2135)
         256	LOAD_FAST(arg=1, lineno=2135)
         258	LOAD_FAST(arg=6, lineno=2135)
         260	STORE_SUBSCR(arg=None, lineno=2135)
         264	LOAD_CONST(arg=0, lineno=2135)
         266	RETURN_VALUE(arg=None, lineno=2135)
>        268	LOAD_GLOBAL(arg=3, lineno=2138)
         280	LOAD_CONST(arg=4, lineno=2138)
         282	PRECALL(arg=1, lineno=2138)
         286	CALL(arg=1, lineno=2138)
         296	RAISE_VARARGS(arg=1, lineno=2138)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2111)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=2111)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=2112)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=STORE_FAST(arg=2, lineno=2112)
DEBUG:numba.core.byteflow:stack ['$const4.0.1']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_CONST(arg=2, lineno=2113)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=10, inst=STORE_FAST(arg=3, lineno=2113)
DEBUG:numba.core.byteflow:stack ['$const8.1.2']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=2114)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=2114)
DEBUG:numba.core.byteflow:stack ['$null$12.3', '$12load_global.2']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=PRECALL(arg=1, lineno=2114)
DEBUG:numba.core.byteflow:stack ['$null$12.3', '$12load_global.2', '$shape24.4']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=CALL(arg=1, lineno=2114)
DEBUG:numba.core.byteflow:stack ['$null$12.3', '$12load_global.2', '$shape24.4']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=GET_ITER(arg=None, lineno=2114)
DEBUG:numba.core.byteflow:stack ['$30call.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=42, stack=('$40get_iter.6',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi42.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=42 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=42, inst=FOR_ITER(arg=24, lineno=2114)
DEBUG:numba.core.byteflow:stack ['$phi42.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=44, stack=('$phi42.0', '$42for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=44 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=92 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_FAST(arg=2, lineno=2121)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_CONST(arg=1, lineno=2121)
DEBUG:numba.core.byteflow:stack ['$num_neg_value92.0']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=COMPARE_OP(arg=2, lineno=2121)
DEBUG:numba.core.byteflow:stack ['$num_neg_value92.0', '$const94.1.1']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=POP_JUMP_FORWARD_IF_FALSE(arg=23, lineno=2121)
DEBUG:numba.core.byteflow:stack ['$96compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=150, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=44 nstack_initial=2), State(pc_initial=104 nstack_initial=0), State(pc_initial=150 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi44.0', '$phi44.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=44 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=44, inst=UNPACK_SEQUENCE(arg=2, lineno=2114)
DEBUG:numba.core.byteflow:stack ['$phi44.0', '$phi44.1']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=STORE_FAST(arg=4, lineno=2114)
DEBUG:numba.core.byteflow:stack ['$phi44.0', '$44unpack_sequence.3', '$44unpack_sequence.2']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=STORE_FAST(arg=5, lineno=2114)
DEBUG:numba.core.byteflow:stack ['$phi44.0', '$44unpack_sequence.3']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=5, lineno=2115)
DEBUG:numba.core.byteflow:stack ['$phi44.0']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=2115)
DEBUG:numba.core.byteflow:stack ['$phi44.0', '$s52.5']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=COMPARE_OP(arg=0, lineno=2115)
DEBUG:numba.core.byteflow:stack ['$phi44.0', '$s52.5', '$const54.6.1']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=2115)
DEBUG:numba.core.byteflow:stack ['$phi44.0', '$56compare_op.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=64, stack=('$phi44.0',), blockstack=(), npush=0), Edge(pc=80, stack=('$phi44.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=150 nstack_initial=0), State(pc_initial=64 nstack_initial=1), State(pc_initial=80 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=104 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=2122)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=2122)
DEBUG:numba.core.byteflow:stack ['$origsize104.0']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=COMPARE_OP(arg=3, lineno=2122)
DEBUG:numba.core.byteflow:stack ['$origsize104.0', '$known_size106.1']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=2122)
DEBUG:numba.core.byteflow:stack ['$108compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=146, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=150 nstack_initial=0), State(pc_initial=64 nstack_initial=1), State(pc_initial=80 nstack_initial=1), State(pc_initial=116 nstack_initial=0), State(pc_initial=146 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=150 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=150, inst=LOAD_FAST(arg=2, lineno=2125)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_CONST(arg=2, lineno=2125)
DEBUG:numba.core.byteflow:stack ['$num_neg_value150.0']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=COMPARE_OP(arg=2, lineno=2125)
DEBUG:numba.core.byteflow:stack ['$num_neg_value150.0', '$const152.1.2']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=POP_JUMP_FORWARD_IF_FALSE(arg=53, lineno=2125)
DEBUG:numba.core.byteflow:stack ['$154compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=162, stack=(), blockstack=(), npush=0), Edge(pc=268, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=64 nstack_initial=1), State(pc_initial=80 nstack_initial=1), State(pc_initial=116 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi64.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=64 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_FAST(arg=2, lineno=2116)
DEBUG:numba.core.byteflow:stack ['$phi64.0']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_CONST(arg=2, lineno=2116)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$num_neg_value64.1']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=BINARY_OP(arg=13, lineno=2116)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$num_neg_value64.1', '$const66.2.2']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=STORE_FAST(arg=2, lineno=2116)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$binop_iadd68.3']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=4, lineno=2117)
DEBUG:numba.core.byteflow:stack ['$phi64.0']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=STORE_FAST(arg=6, lineno=2117)
DEBUG:numba.core.byteflow:stack ['$phi64.0', '$ax74.4']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=JUMP_BACKWARD(arg=19, lineno=2117)
DEBUG:numba.core.byteflow:stack ['$phi64.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=42, stack=('$phi64.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=116 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi80.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=80 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=3, lineno=2119)
DEBUG:numba.core.byteflow:stack ['$phi80.0']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_FAST(arg=5, lineno=2119)
DEBUG:numba.core.byteflow:stack ['$phi80.0', '$known_size80.1']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=BINARY_OP(arg=18, lineno=2119)
DEBUG:numba.core.byteflow:stack ['$phi80.0', '$known_size80.1', '$s82.2']
DEBUG:numba.core.byteflow:dispatch pc=88, inst=STORE_FAST(arg=3, lineno=2119)
DEBUG:numba.core.byteflow:stack ['$phi80.0', '$binop_imul84.3']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=JUMP_BACKWARD(arg=25, lineno=2119)
DEBUG:numba.core.byteflow:stack ['$phi80.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=42, stack=('$phi80.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=116 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_GLOBAL(arg=3, lineno=2123)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_CONST(arg=3, lineno=2123)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$116load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=PRECALL(arg=1, lineno=2123)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$116load_global.0', '$const128.2.3']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=CALL(arg=1, lineno=2123)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$116load_global.0', '$const128.2.3']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=RAISE_VARARGS(arg=1, lineno=2123)
DEBUG:numba.core.byteflow:stack ['$134call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=146 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_CONST(arg=0, lineno=2122)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=148, inst=RETURN_VALUE(arg=None, lineno=2122)
DEBUG:numba.core.byteflow:stack ['$const146.0.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=162 nstack_initial=0), State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=162 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=162, inst=LOAD_FAST(arg=3, lineno=2127)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=164, inst=LOAD_CONST(arg=1, lineno=2127)
DEBUG:numba.core.byteflow:stack ['$known_size162.0']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=COMPARE_OP(arg=2, lineno=2127)
DEBUG:numba.core.byteflow:stack ['$known_size162.0', '$const164.1.1']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=POP_JUMP_FORWARD_IF_FALSE(arg=9, lineno=2127)
DEBUG:numba.core.byteflow:stack ['$166compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=174, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=268 nstack_initial=0), State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1), State(pc_initial=174 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=268 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=268, inst=LOAD_GLOBAL(arg=3, lineno=2138)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=280, inst=LOAD_CONST(arg=4, lineno=2138)
DEBUG:numba.core.byteflow:stack ['$null$268.1', '$268load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=PRECALL(arg=1, lineno=2138)
DEBUG:numba.core.byteflow:stack ['$null$268.1', '$268load_global.0', '$const280.2.4']
DEBUG:numba.core.byteflow:dispatch pc=286, inst=CALL(arg=1, lineno=2138)
DEBUG:numba.core.byteflow:stack ['$null$268.1', '$268load_global.0', '$const280.2.4']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=RAISE_VARARGS(arg=1, lineno=2138)
DEBUG:numba.core.byteflow:stack ['$286call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=1), State(pc_initial=42 nstack_initial=1), State(pc_initial=174 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=42 nstack_initial=1), State(pc_initial=174 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=174 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=174 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=174, inst=LOAD_CONST(arg=1, lineno=2128)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=176, inst=STORE_FAST(arg=7, lineno=2128)
DEBUG:numba.core.byteflow:stack ['$const174.0.1']
DEBUG:numba.core.byteflow:dispatch pc=178, inst=LOAD_FAST(arg=0, lineno=2129)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_CONST(arg=1, lineno=2129)
DEBUG:numba.core.byteflow:stack ['$origsize178.1']
DEBUG:numba.core.byteflow:dispatch pc=182, inst=COMPARE_OP(arg=2, lineno=2129)
DEBUG:numba.core.byteflow:stack ['$origsize178.1', '$const180.2.1']
DEBUG:numba.core.byteflow:dispatch pc=188, inst=STORE_FAST(arg=8, lineno=2129)
DEBUG:numba.core.byteflow:stack ['$182compare_op.3']
DEBUG:numba.core.byteflow:dispatch pc=190, inst=JUMP_FORWARD(arg=14, lineno=2129)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=220, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=192 nstack_initial=0), State(pc_initial=220 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=192 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_FAST(arg=0, lineno=2131)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_FAST(arg=3, lineno=2131)
DEBUG:numba.core.byteflow:stack ['$origsize192.0']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=BINARY_OP(arg=2, lineno=2131)
DEBUG:numba.core.byteflow:stack ['$origsize192.0', '$known_size194.1']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=STORE_FAST(arg=7, lineno=2131)
DEBUG:numba.core.byteflow:stack ['$binop_floordiv196.2']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=LOAD_FAST(arg=0, lineno=2132)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=204, inst=LOAD_FAST(arg=3, lineno=2132)
DEBUG:numba.core.byteflow:stack ['$origsize202.3']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=BINARY_OP(arg=6, lineno=2132)
DEBUG:numba.core.byteflow:stack ['$origsize202.3', '$known_size204.4']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=LOAD_CONST(arg=1, lineno=2132)
DEBUG:numba.core.byteflow:stack ['$binop_mod206.5']
DEBUG:numba.core.byteflow:dispatch pc=212, inst=COMPARE_OP(arg=2, lineno=2132)
DEBUG:numba.core.byteflow:stack ['$binop_mod206.5', '$const210.6.1']
DEBUG:numba.core.byteflow:dispatch pc=218, inst=STORE_FAST(arg=8, lineno=2132)
DEBUG:numba.core.byteflow:stack ['$212compare_op.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=220, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=220 nstack_initial=0), State(pc_initial=220 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=220 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=220, inst=LOAD_FAST(arg=8, lineno=2133)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=222, inst=POP_JUMP_FORWARD_IF_TRUE(arg=15, lineno=2133)
DEBUG:numba.core.byteflow:stack ['$ok220.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=224, stack=(), blockstack=(), npush=0), Edge(pc=254, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=220 nstack_initial=0), State(pc_initial=224 nstack_initial=0), State(pc_initial=254 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=224 nstack_initial=0), State(pc_initial=254 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=224 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=224, inst=LOAD_GLOBAL(arg=3, lineno=2134)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=236, inst=LOAD_CONST(arg=3, lineno=2134)
DEBUG:numba.core.byteflow:stack ['$null$224.1', '$224load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=PRECALL(arg=1, lineno=2134)
DEBUG:numba.core.byteflow:stack ['$null$224.1', '$224load_global.0', '$const236.2.3']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=CALL(arg=1, lineno=2134)
DEBUG:numba.core.byteflow:stack ['$null$224.1', '$224load_global.0', '$const236.2.3']
DEBUG:numba.core.byteflow:dispatch pc=252, inst=RAISE_VARARGS(arg=1, lineno=2134)
DEBUG:numba.core.byteflow:stack ['$242call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=254 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=254 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=254, inst=LOAD_FAST(arg=7, lineno=2135)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=256, inst=LOAD_FAST(arg=1, lineno=2135)
DEBUG:numba.core.byteflow:stack ['$inferred254.0']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=LOAD_FAST(arg=6, lineno=2135)
DEBUG:numba.core.byteflow:stack ['$inferred254.0', '$shape256.1']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=STORE_SUBSCR(arg=None, lineno=2135)
DEBUG:numba.core.byteflow:stack ['$inferred254.0', '$shape256.1', '$neg_ax258.2']
DEBUG:numba.core.byteflow:dispatch pc=264, inst=LOAD_CONST(arg=0, lineno=2135)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=266, inst=RETURN_VALUE(arg=None, lineno=2135)
DEBUG:numba.core.byteflow:stack ['$const264.3.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=42 nstack_initial=1): {'$phi42.0'},
             State(pc_initial=44 nstack_initial=2): {'$phi44.1'},
             State(pc_initial=64 nstack_initial=1): set(),
             State(pc_initial=80 nstack_initial=1): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=150 nstack_initial=0): set(),
             State(pc_initial=162 nstack_initial=0): set(),
             State(pc_initial=174 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=220 nstack_initial=0): set(),
             State(pc_initial=224 nstack_initial=0): set(),
             State(pc_initial=254 nstack_initial=0): set(),
             State(pc_initial=268 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi42.0': State(pc_initial=0 nstack_initial=0),
 '$phi44.1': State(pc_initial=42 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi42.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi44.0': {('$phi42.0', State(pc_initial=42 nstack_initial=1))},
             '$phi44.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi64.0': {('$phi44.0', State(pc_initial=44 nstack_initial=2))},
             '$phi80.0': {('$phi44.0', State(pc_initial=44 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi42.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi44.0', State(pc_initial=44 nstack_initial=2))},
             '$phi44.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi44.0', State(pc_initial=44 nstack_initial=2))},
             '$phi44.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi64.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi42.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi64.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi42.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi44.1': {('$42for_iter.2',
                           State(pc_initial=42 nstack_initial=1))},
             '$phi64.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$40get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi42.0': {('$40get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi44.1': {('$42for_iter.2', State(pc_initial=42 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi42.0': '$40get_iter.6'},
             State(pc_initial=42 nstack_initial=1): {'$phi44.1': '$42for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0.1'}), (6, {'value': '$const4.0.1'}), (8, {'res': '$const8.1.2'}), (10, {'value': '$const8.1.2'}), (12, {'idx': 0, 'res': '$12load_global.2'}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {'res': '$shape24.4'}), (26, {}), (28, {}), (30, {'func': '$12load_global.2', 'args': ['$shape24.4'], 'kw_names': None, 'res': '$30call.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'value': '$30call.5', 'res': '$40get_iter.6'})), outgoing_phis={'$phi42.0': '$40get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: ('$40get_iter.6',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=42 nstack_initial=1):
AdaptBlockInfo(insts=((42, {'iterator': '$phi42.0', 'pair': '$42for_iter.1', 'indval': '$42for_iter.2', 'pred': '$42for_iter.3'}),), outgoing_phis={'$phi44.1': '$42for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 44: ('$phi42.0', '$42for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=44 nstack_initial=2):
AdaptBlockInfo(insts=((44, {'iterable': '$phi44.1', 'stores': ['$44unpack_sequence.2', '$44unpack_sequence.3'], 'tupleobj': '$44unpack_sequence.4'}), (46, {}), (48, {'value': '$44unpack_sequence.2'}), (50, {'value': '$44unpack_sequence.3'}), (52, {'res': '$s52.5'}), (54, {'res': '$const54.6.1'}), (56, {'lhs': '$s52.5', 'rhs': '$const54.6.1', 'res': '$56compare_op.7'}), (58, {}), (60, {}), (62, {'pred': '$56compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$phi44.0',), 80: ('$phi44.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=64 nstack_initial=1):
AdaptBlockInfo(insts=((64, {'res': '$num_neg_value64.1'}), (66, {'res': '$const66.2.2'}), (68, {'op': '+=', 'lhs': '$num_neg_value64.1', 'rhs': '$const66.2.2', 'res': '$binop_iadd68.3'}), (70, {}), (72, {'value': '$binop_iadd68.3'}), (74, {'res': '$ax74.4'}), (76, {'value': '$ax74.4'}), (78, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: ('$phi64.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$known_size80.1'}), (82, {'res': '$s82.2'}), (84, {'op': '*=', 'lhs': '$known_size80.1', 'rhs': '$s82.2', 'res': '$binop_imul84.3'}), (86, {}), (88, {'value': '$binop_imul84.3'}), (90, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={42: ('$phi80.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$num_neg_value92.0'}), (94, {'res': '$const94.1.1'}), (96, {'lhs': '$num_neg_value92.0', 'rhs': '$const94.1.1', 'res': '$96compare_op.2'}), (98, {}), (100, {}), (102, {'pred': '$96compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 150: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$origsize104.0'}), (106, {'res': '$known_size106.1'}), (108, {'lhs': '$origsize104.0', 'rhs': '$known_size106.1', 'res': '$108compare_op.2'}), (110, {}), (112, {}), (114, {'pred': '$108compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 146: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 1, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'res': '$const128.2.3'}), (130, {}), (132, {}), (134, {'func': '$116load_global.0', 'args': ['$const128.2.3'], 'kw_names': None, 'res': '$134call.3'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'exc': '$134call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$const146.0.0'}), (148, {'retval': '$const146.0.0', 'castval': '$148return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=150 nstack_initial=0):
AdaptBlockInfo(insts=((150, {'res': '$num_neg_value150.0'}), (152, {'res': '$const152.1.2'}), (154, {'lhs': '$num_neg_value150.0', 'rhs': '$const152.1.2', 'res': '$154compare_op.2'}), (156, {}), (158, {}), (160, {'pred': '$154compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={162: (), 268: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=162 nstack_initial=0):
AdaptBlockInfo(insts=((162, {'res': '$known_size162.0'}), (164, {'res': '$const164.1.1'}), (166, {'lhs': '$known_size162.0', 'rhs': '$const164.1.1', 'res': '$166compare_op.2'}), (168, {}), (170, {}), (172, {'pred': '$166compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={174: (), 192: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=174 nstack_initial=0):
AdaptBlockInfo(insts=((174, {'res': '$const174.0.1'}), (176, {'value': '$const174.0.1'}), (178, {'res': '$origsize178.1'}), (180, {'res': '$const180.2.1'}), (182, {'lhs': '$origsize178.1', 'rhs': '$const180.2.1', 'res': '$182compare_op.3'}), (184, {}), (186, {}), (188, {'value': '$182compare_op.3'}), (190, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={220: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$origsize192.0'}), (194, {'res': '$known_size194.1'}), (196, {'op': '//', 'lhs': '$origsize192.0', 'rhs': '$known_size194.1', 'res': '$binop_floordiv196.2'}), (198, {}), (200, {'value': '$binop_floordiv196.2'}), (202, {'res': '$origsize202.3'}), (204, {'res': '$known_size204.4'}), (206, {'op': '%', 'lhs': '$origsize202.3', 'rhs': '$known_size204.4', 'res': '$binop_mod206.5'}), (208, {}), (210, {'res': '$const210.6.1'}), (212, {'lhs': '$binop_mod206.5', 'rhs': '$const210.6.1', 'res': '$212compare_op.7'}), (214, {}), (216, {}), (218, {'value': '$212compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={220: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=220 nstack_initial=0):
AdaptBlockInfo(insts=((220, {'res': '$ok220.0'}), (222, {'pred': '$ok220.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={224: (), 254: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=224 nstack_initial=0):
AdaptBlockInfo(insts=((224, {'idx': 1, 'res': '$224load_global.0'}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'res': '$const236.2.3'}), (238, {}), (240, {}), (242, {'func': '$224load_global.0', 'args': ['$const236.2.3'], 'kw_names': None, 'res': '$242call.3'}), (244, {}), (246, {}), (248, {}), (250, {}), (252, {'exc': '$242call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=254 nstack_initial=0):
AdaptBlockInfo(insts=((254, {'res': '$inferred254.0'}), (256, {'res': '$shape256.1'}), (258, {'res': '$neg_ax258.2'}), (260, {'target': '$shape256.1', 'index': '$neg_ax258.2', 'value': '$inferred254.0'}), (262, {}), (264, {'res': '$const264.3.0'}), (266, {'retval': '$const264.3.0', 'castval': '$266return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=268 nstack_initial=0):
AdaptBlockInfo(insts=((268, {'idx': 1, 'res': '$268load_global.0'}), (270, {}), (272, {}), (274, {}), (276, {}), (278, {}), (280, {'res': '$const280.2.4'}), (282, {}), (284, {}), (286, {'func': '$268load_global.0', 'args': ['$const280.2.4'], 'kw_names': None, 'res': '$286call.3'}), (288, {}), (290, {}), (292, {}), (294, {}), (296, {'exc': '$286call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    origsize = arg(0, name=origsize)         ['origsize']
    shape = arg(1, name=shape)               ['shape']
    num_neg_value = const(int, 0)            ['num_neg_value']
    known_size = const(int, 1)               ['known_size']
    $12load_global.2 = global(enumerate: <class 'enumerate'>) ['$12load_global.2']
    $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2111)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.2', '$30call.5', 'shape']
    $40get_iter.6 = getiter(value=$30call.5) ['$30call.5', '$40get_iter.6']
    $phi42.0 = $40get_iter.6                 ['$40get_iter.6', '$phi42.0']
    jump 42                                  []
label 42:
    $42for_iter.1 = iternext(value=$phi42.0) ['$42for_iter.1', '$phi42.0']
    $42for_iter.2 = pair_first(value=$42for_iter.1) ['$42for_iter.1', '$42for_iter.2']
    $42for_iter.3 = pair_second(value=$42for_iter.1) ['$42for_iter.1', '$42for_iter.3']
    $phi44.1 = $42for_iter.2                 ['$42for_iter.2', '$phi44.1']
    branch $42for_iter.3, 44, 92             ['$42for_iter.3']
label 44:
    $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2) ['$44unpack_sequence.4', '$phi44.1']
    $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>) ['$44unpack_sequence.2', '$44unpack_sequence.4']
    $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>) ['$44unpack_sequence.3', '$44unpack_sequence.4']
    ax = $44unpack_sequence.2                ['$44unpack_sequence.2', 'ax']
    s = $44unpack_sequence.3                 ['$44unpack_sequence.3', 's']
    $const54.6.1 = const(int, 0)             ['$const54.6.1']
    $56compare_op.7 = s < $const54.6.1       ['$56compare_op.7', '$const54.6.1', 's']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2115),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.7', '$62pred', 'bool62']
    branch $62pred, 64, 80                   ['$62pred']
label 64:
    $const66.2.2 = const(int, 1)             ['$const66.2.2']
    $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2.2, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd68.3', '$const66.2.2', 'num_neg_value']
    num_neg_value = $binop_iadd68.3          ['$binop_iadd68.3', 'num_neg_value']
    neg_ax = ax                              ['ax', 'neg_ax']
    jump 42                                  []
label 80:
    $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul84.3', 'known_size', 's']
    known_size = $binop_imul84.3             ['$binop_imul84.3', 'known_size']
    jump 42                                  []
label 92:
    $const94.1.1 = const(int, 0)             ['$const94.1.1']
    $96compare_op.2 = num_neg_value == $const94.1.1 ['$96compare_op.2', '$const94.1.1', 'num_neg_value']
    bool102 = global(bool: <class 'bool'>)   ['bool102']
    $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2121),), kws=(), vararg=None, varkwarg=None, target=None) ['$102pred', '$96compare_op.2', 'bool102']
    branch $102pred, 104, 150                ['$102pred']
label 104:
    $108compare_op.2 = origsize != known_size ['$108compare_op.2', 'known_size', 'origsize']
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2122),), kws=(), vararg=None, varkwarg=None, target=None) ['$108compare_op.2', '$114pred', 'bool114']
    branch $114pred, 116, 146                ['$114pred']
label 116:
    $116load_global.0 = global(ValueError: <class 'ValueError'>) ['$116load_global.0']
    $const128.2.3 = const(str, total size of new array must be unchanged) ['$const128.2.3']
    $134call.3 = call $116load_global.0($const128.2.3, func=$116load_global.0, args=[Var($const128.2.3, arrayobj.py:2123)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_global.0', '$134call.3', '$const128.2.3']
    raise $134call.3                         ['$134call.3']
label 146:
    $const146.0.0 = const(NoneType, None)    ['$const146.0.0']
    $148return_value.1 = cast(value=$const146.0.0) ['$148return_value.1', '$const146.0.0']
    return $148return_value.1                ['$148return_value.1']
label 150:
    $const152.1.2 = const(int, 1)            ['$const152.1.2']
    $154compare_op.2 = num_neg_value == $const152.1.2 ['$154compare_op.2', '$const152.1.2', 'num_neg_value']
    bool160 = global(bool: <class 'bool'>)   ['bool160']
    $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2125),), kws=(), vararg=None, varkwarg=None, target=None) ['$154compare_op.2', '$160pred', 'bool160']
    branch $160pred, 162, 268                ['$160pred']
label 162:
    $const164.1.1 = const(int, 0)            ['$const164.1.1']
    $166compare_op.2 = known_size == $const164.1.1 ['$166compare_op.2', '$const164.1.1', 'known_size']
    bool172 = global(bool: <class 'bool'>)   ['bool172']
    $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2127),), kws=(), vararg=None, varkwarg=None, target=None) ['$166compare_op.2', '$172pred', 'bool172']
    branch $172pred, 174, 192                ['$172pred']
label 174:
    inferred = const(int, 0)                 ['inferred']
    $const180.2.1 = const(int, 0)            ['$const180.2.1']
    ok = origsize == $const180.2.1           ['$const180.2.1', 'ok', 'origsize']
    jump 220                                 []
label 192:
    inferred = origsize // known_size        ['inferred', 'known_size', 'origsize']
    $binop_mod206.5 = origsize % known_size  ['$binop_mod206.5', 'known_size', 'origsize']
    $const210.6.1 = const(int, 0)            ['$const210.6.1']
    ok = $binop_mod206.5 == $const210.6.1    ['$binop_mod206.5', '$const210.6.1', 'ok']
    jump 220                                 []
label 220:
    bool222 = global(bool: <class 'bool'>)   ['bool222']
    $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2129),), kws=(), vararg=None, varkwarg=None, target=None) ['$222pred', 'bool222', 'ok']
    branch $222pred, 254, 224                ['$222pred']
label 224:
    $224load_global.0 = global(ValueError: <class 'ValueError'>) ['$224load_global.0']
    $const236.2.3 = const(str, total size of new array must be unchanged) ['$const236.2.3']
    $242call.3 = call $224load_global.0($const236.2.3, func=$224load_global.0, args=[Var($const236.2.3, arrayobj.py:2134)], kws=(), vararg=None, varkwarg=None, target=None) ['$224load_global.0', '$242call.3', '$const236.2.3']
    raise $242call.3                         ['$242call.3']
label 254:
    shape[neg_ax] = inferred                 ['inferred', 'neg_ax', 'shape']
    $const264.3.0 = const(NoneType, None)    ['$const264.3.0']
    $266return_value.4 = cast(value=$const264.3.0) ['$266return_value.4', '$const264.3.0']
    return $266return_value.4                ['$266return_value.4']
label 268:
    $268load_global.0 = global(ValueError: <class 'ValueError'>) ['$268load_global.0']
    $const280.2.4 = const(str, multiple negative shape values) ['$const280.2.4']
    $286call.3 = call $268load_global.0($const280.2.4, func=$268load_global.0, args=[Var($const280.2.4, arrayobj.py:2138)], kws=(), vararg=None, varkwarg=None, target=None) ['$268load_global.0', '$286call.3', '$const280.2.4']
    raise $286call.3                         ['$286call.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177F1510>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2111)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $40get_iter.6 = getiter(value=$30call.5)
DEBUG:numba.core.ssa:on stmt: $phi42.0 = $40get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block analysis pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177F1510>
DEBUG:numba.core.ssa:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
DEBUG:numba.core.ssa:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi44.1 = $42for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $42for_iter.3, 44, 92
DEBUG:numba.core.ssa:==== SSA block analysis pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177F1510>
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $44unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $44unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const54.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $56compare_op.7 = s < $const54.6.1
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 80
DEBUG:numba.core.ssa:==== SSA block analysis pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177F1510>
DEBUG:numba.core.ssa:on stmt: $const66.2.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value = $binop_iadd68.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block analysis pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177F1510>
DEBUG:numba.core.ssa:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size = $binop_imul84.3
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block analysis pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177F1510>
DEBUG:numba.core.ssa:on stmt: $const94.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = num_neg_value == $const94.1.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2121),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 150
DEBUG:numba.core.ssa:==== SSA block analysis pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177F1510>
DEBUG:numba.core.ssa:on stmt: $108compare_op.2 = origsize != known_size
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2122),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 146
DEBUG:numba.core.ssa:==== SSA block analysis pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177F1510>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const128.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $134call.3 = call $116load_global.0($const128.2.3, func=$116load_global.0, args=[Var($const128.2.3, arrayobj.py:2123)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177F1510>
DEBUG:numba.core.ssa:on stmt: $const146.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$const146.0.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177F1510>
DEBUG:numba.core.ssa:on stmt: $const152.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $154compare_op.2 = num_neg_value == $const152.1.2
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2125),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 268
DEBUG:numba.core.ssa:==== SSA block analysis pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177F1510>
DEBUG:numba.core.ssa:on stmt: $const164.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $166compare_op.2 = known_size == $const164.1.1
DEBUG:numba.core.ssa:on stmt: bool172 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2127),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $172pred, 174, 192
DEBUG:numba.core.ssa:==== SSA block analysis pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177F1510>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const180.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const180.2.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block analysis pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177F1510>
DEBUG:numba.core.ssa:on stmt: inferred = origsize // known_size
DEBUG:numba.core.ssa:on stmt: $binop_mod206.5 = origsize % known_size
DEBUG:numba.core.ssa:on stmt: $const210.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = $binop_mod206.5 == $const210.6.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block analysis pass on 220
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177F1510>
DEBUG:numba.core.ssa:on stmt: bool222 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2129),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $222pred, 254, 224
DEBUG:numba.core.ssa:==== SSA block analysis pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177F1510>
DEBUG:numba.core.ssa:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const236.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $242call.3 = call $224load_global.0($const236.2.3, func=$224load_global.0, args=[Var($const236.2.3, arrayobj.py:2134)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 254
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177F1510>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred
DEBUG:numba.core.ssa:on stmt: $const264.3.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $266return_value.4 = cast(value=$const264.3.0)
DEBUG:numba.core.ssa:on stmt: return $266return_value.4
DEBUG:numba.core.ssa:==== SSA block analysis pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177F1510>
DEBUG:numba.core.ssa:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const280.2.4 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $286call.3 = call $268load_global.0($const280.2.4, func=$268load_global.0, args=[Var($const280.2.4, arrayobj.py:2138)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 269
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A177F1510>
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102pred': [(<numba.core.ir.Assign object at 0x0000019A176F4CD0>,
                           92)],
             '$108compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A176F64D0>,
                                   104)],
             '$114pred': [(<numba.core.ir.Assign object at 0x0000019A176F7ED0>,
                           104)],
             '$116load_global.0': [(<numba.core.ir.Assign object at 0x0000019A176F7C90>,
                                    116)],
             '$12load_global.2': [(<numba.core.ir.Assign object at 0x0000019A1622E4D0>,
                                   0)],
             '$134call.3': [(<numba.core.ir.Assign object at 0x0000019A176F6510>,
                             116)],
             '$148return_value.1': [(<numba.core.ir.Assign object at 0x0000019A176F43D0>,
                                     146)],
             '$154compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A17645B90>,
                                   150)],
             '$160pred': [(<numba.core.ir.Assign object at 0x0000019A17647090>,
                           150)],
             '$166compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A17646B10>,
                                   162)],
             '$172pred': [(<numba.core.ir.Assign object at 0x0000019A17645A50>,
                           162)],
             '$222pred': [(<numba.core.ir.Assign object at 0x0000019A17644E10>,
                           220)],
             '$224load_global.0': [(<numba.core.ir.Assign object at 0x0000019A176453D0>,
                                    224)],
             '$242call.3': [(<numba.core.ir.Assign object at 0x0000019A17646E50>,
                             224)],
             '$266return_value.4': [(<numba.core.ir.Assign object at 0x0000019A17B15590>,
                                     254)],
             '$268load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17B14E50>,
                                    268)],
             '$286call.3': [(<numba.core.ir.Assign object at 0x0000019A17B14350>,
                             268)],
             '$30call.5': [(<numba.core.ir.Assign object at 0x0000019A17C80250>,
                            0)],
             '$40get_iter.6': [(<numba.core.ir.Assign object at 0x0000019A17C81590>,
                                0)],
             '$42for_iter.1': [(<numba.core.ir.Assign object at 0x0000019A17C82510>,
                                42)],
             '$42for_iter.2': [(<numba.core.ir.Assign object at 0x0000019A17C833D0>,
                                42)],
             '$42for_iter.3': [(<numba.core.ir.Assign object at 0x0000019A17C80B90>,
                                42)],
             '$44unpack_sequence.2': [(<numba.core.ir.Assign object at 0x0000019A17C82190>,
                                       44)],
             '$44unpack_sequence.3': [(<numba.core.ir.Assign object at 0x0000019A17C82990>,
                                       44)],
             '$44unpack_sequence.4': [(<numba.core.ir.Assign object at 0x0000019A17C82010>,
                                       44)],
             '$56compare_op.7': [(<numba.core.ir.Assign object at 0x0000019A16215610>,
                                  44)],
             '$62pred': [(<numba.core.ir.Assign object at 0x0000019A16215F10>,
                          44)],
             '$96compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A176F6E90>,
                                  92)],
             '$binop_iadd68.3': [(<numba.core.ir.Assign object at 0x0000019A16217750>,
                                  64)],
             '$binop_imul84.3': [(<numba.core.ir.Assign object at 0x0000019A16217010>,
                                  80)],
             '$binop_mod206.5': [(<numba.core.ir.Assign object at 0x0000019A17644310>,
                                  192)],
             '$const128.2.3': [(<numba.core.ir.Assign object at 0x0000019A176F7510>,
                                116)],
             '$const146.0.0': [(<numba.core.ir.Assign object at 0x0000019A176F4710>,
                                146)],
             '$const152.1.2': [(<numba.core.ir.Assign object at 0x0000019A17646090>,
                                150)],
             '$const164.1.1': [(<numba.core.ir.Assign object at 0x0000019A17644F10>,
                                162)],
             '$const180.2.1': [(<numba.core.ir.Assign object at 0x0000019A17647B10>,
                                174)],
             '$const210.6.1': [(<numba.core.ir.Assign object at 0x0000019A17644350>,
                                192)],
             '$const236.2.3': [(<numba.core.ir.Assign object at 0x0000019A17644DD0>,
                                224)],
             '$const264.3.0': [(<numba.core.ir.Assign object at 0x0000019A17B16B10>,
                                254)],
             '$const280.2.4': [(<numba.core.ir.Assign object at 0x0000019A17B149D0>,
                                268)],
             '$const54.6.1': [(<numba.core.ir.Assign object at 0x0000019A17C83490>,
                               44)],
             '$const66.2.2': [(<numba.core.ir.Assign object at 0x0000019A16214CD0>,
                               64)],
             '$const94.1.1': [(<numba.core.ir.Assign object at 0x0000019A176F6490>,
                               92)],
             '$phi42.0': [(<numba.core.ir.Assign object at 0x0000019A1622CD50>,
                           0)],
             '$phi44.1': [(<numba.core.ir.Assign object at 0x0000019A17C83BD0>,
                           42)],
             'ax': [(<numba.core.ir.Assign object at 0x0000019A17C83610>, 44)],
             'bool102': [(<numba.core.ir.Assign object at 0x0000019A176F6390>,
                          92)],
             'bool114': [(<numba.core.ir.Assign object at 0x0000019A176F6250>,
                          104)],
             'bool160': [(<numba.core.ir.Assign object at 0x0000019A17645210>,
                          150)],
             'bool172': [(<numba.core.ir.Assign object at 0x0000019A17645010>,
                          162)],
             'bool222': [(<numba.core.ir.Assign object at 0x0000019A17644290>,
                          220)],
             'bool62': [(<numba.core.ir.Assign object at 0x0000019A16215390>,
                         44)],
             'inferred': [(<numba.core.ir.Assign object at 0x0000019A17646210>,
                           174),
                          (<numba.core.ir.Assign object at 0x0000019A17645C10>,
                           192)],
             'known_size': [(<numba.core.ir.Assign object at 0x0000019A1622D290>,
                             0),
                            (<numba.core.ir.Assign object at 0x0000019A16215B90>,
                             80)],
             'neg_ax': [(<numba.core.ir.Assign object at 0x0000019A162166D0>,
                         64)],
             'num_neg_value': [(<numba.core.ir.Assign object at 0x0000019A1622C7D0>,
                                0),
                               (<numba.core.ir.Assign object at 0x0000019A16215A10>,
                                64)],
             'ok': [(<numba.core.ir.Assign object at 0x0000019A17647F90>, 174),
                    (<numba.core.ir.Assign object at 0x0000019A17645390>, 192)],
             'origsize': [(<numba.core.ir.Assign object at 0x0000019A1622C490>,
                           0)],
             's': [(<numba.core.ir.Assign object at 0x0000019A17C83390>, 44)],
             'shape': [(<numba.core.ir.Assign object at 0x0000019A1622D450>,
                        0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A177F1510>
DEBUG:numba.core.ssa:Fix SSA violator on var num_neg_value
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177F20D0>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:first assign: num_neg_value
DEBUG:numba.core.ssa:replaced with: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2111)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $40get_iter.6 = getiter(value=$30call.5)
DEBUG:numba.core.ssa:on stmt: $phi42.0 = $40get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177F20D0>
DEBUG:numba.core.ssa:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
DEBUG:numba.core.ssa:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi44.1 = $42for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $42for_iter.3, 44, 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177F20D0>
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $44unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $44unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const54.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $56compare_op.7 = s < $const54.6.1
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 80
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177F20D0>
DEBUG:numba.core.ssa:on stmt: $const66.2.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value = $binop_iadd68.3
DEBUG:numba.core.ssa:replaced with: num_neg_value.1 = $binop_iadd68.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177F20D0>
DEBUG:numba.core.ssa:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size = $binop_imul84.3
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177F20D0>
DEBUG:numba.core.ssa:on stmt: $const94.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = num_neg_value == $const94.1.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2121),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177F20D0>
DEBUG:numba.core.ssa:on stmt: $108compare_op.2 = origsize != known_size
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2122),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 146
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177F20D0>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const128.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $134call.3 = call $116load_global.0($const128.2.3, func=$116load_global.0, args=[Var($const128.2.3, arrayobj.py:2123)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177F20D0>
DEBUG:numba.core.ssa:on stmt: $const146.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$const146.0.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177F20D0>
DEBUG:numba.core.ssa:on stmt: $const152.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $154compare_op.2 = num_neg_value == $const152.1.2
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2125),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177F20D0>
DEBUG:numba.core.ssa:on stmt: $const164.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $166compare_op.2 = known_size == $const164.1.1
DEBUG:numba.core.ssa:on stmt: bool172 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2127),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $172pred, 174, 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177F20D0>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const180.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const180.2.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177F20D0>
DEBUG:numba.core.ssa:on stmt: inferred = origsize // known_size
DEBUG:numba.core.ssa:on stmt: $binop_mod206.5 = origsize % known_size
DEBUG:numba.core.ssa:on stmt: $const210.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = $binop_mod206.5 == $const210.6.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 220
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177F20D0>
DEBUG:numba.core.ssa:on stmt: bool222 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2129),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $222pred, 254, 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177F20D0>
DEBUG:numba.core.ssa:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const236.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $242call.3 = call $224load_global.0($const236.2.3, func=$224load_global.0, args=[Var($const236.2.3, arrayobj.py:2134)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 254
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177F20D0>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred
DEBUG:numba.core.ssa:on stmt: $const264.3.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $266return_value.4 = cast(value=$const264.3.0)
DEBUG:numba.core.ssa:on stmt: return $266return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177F20D0>
DEBUG:numba.core.ssa:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const280.2.4 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $286call.3 = call $268load_global.0($const280.2.4, func=$268load_global.0, args=[Var($const280.2.4, arrayobj.py:2138)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 269
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177F20D0>
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000019A177F3110>],
             64: [<numba.core.ir.Assign object at 0x0000019A177165D0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17717050>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2111)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $40get_iter.6 = getiter(value=$30call.5)
DEBUG:numba.core.ssa:on stmt: $phi42.0 = $40get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17717050>
DEBUG:numba.core.ssa:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
DEBUG:numba.core.ssa:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi44.1 = $42for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $42for_iter.3, 44, 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17717050>
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $44unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $44unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const54.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $56compare_op.7 = s < $const54.6.1
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 80
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17717050>
DEBUG:numba.core.ssa:on stmt: $const66.2.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='num_neg_value' stmt=$binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const66.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 64
DEBUG:numba.core.ssa:idom 44 from label 64
DEBUG:numba.core.ssa:find_def_from_bottom label 44
DEBUG:numba.core.ssa:find_def_from_top label 44
DEBUG:numba.core.ssa:idom 42 from label 44
DEBUG:numba.core.ssa:find_def_from_bottom label 42
DEBUG:numba.core.ssa:find_def_from_top label 42
DEBUG:numba.core.ssa:insert phi node num_neg_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 42
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:find_def_from_bottom label 269
DEBUG:numba.core.ssa:find_def_from_top label 269
DEBUG:numba.core.ssa:insert phi node num_neg_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 269
DEBUG:numba.core.ssa:find_def_from_bottom label 64
DEBUG:numba.core.ssa:incoming_def num_neg_value.1 = $binop_iadd68.3
DEBUG:numba.core.ssa:find_def_from_bottom label 80
DEBUG:numba.core.ssa:find_def_from_top label 80
DEBUG:numba.core.ssa:idom 44 from label 80
DEBUG:numba.core.ssa:find_def_from_bottom label 44
DEBUG:numba.core.ssa:find_def_from_top label 44
DEBUG:numba.core.ssa:idom 42 from label 44
DEBUG:numba.core.ssa:find_def_from_bottom label 42
DEBUG:numba.core.ssa:incoming_def num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2112)], incoming_blocks=[0])
DEBUG:numba.core.ssa:incoming_def num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2116), Var(num_neg_value.2, arrayobj.py:2116)], incoming_blocks=[64, 80])
DEBUG:numba.core.ssa:replaced with: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value.1 = $binop_iadd68.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17717050>
DEBUG:numba.core.ssa:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size = $binop_imul84.3
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17717050>
DEBUG:numba.core.ssa:on stmt: $const94.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = num_neg_value == $const94.1.1
DEBUG:numba.core.ssa:find_def var='num_neg_value' stmt=$96compare_op.2 = num_neg_value == $const94.1.1
DEBUG:numba.core.ssa:find_def_from_top label 92
DEBUG:numba.core.ssa:idom 42 from label 92
DEBUG:numba.core.ssa:find_def_from_bottom label 42
DEBUG:numba.core.ssa:replaced with: $96compare_op.2 = num_neg_value.2 == $const94.1.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2121),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17717050>
DEBUG:numba.core.ssa:on stmt: $108compare_op.2 = origsize != known_size
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2122),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 146
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17717050>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const128.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $134call.3 = call $116load_global.0($const128.2.3, func=$116load_global.0, args=[Var($const128.2.3, arrayobj.py:2123)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17717050>
DEBUG:numba.core.ssa:on stmt: $const146.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$const146.0.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17717050>
DEBUG:numba.core.ssa:on stmt: $const152.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $154compare_op.2 = num_neg_value == $const152.1.2
DEBUG:numba.core.ssa:find_def var='num_neg_value' stmt=$154compare_op.2 = num_neg_value == $const152.1.2
DEBUG:numba.core.ssa:find_def_from_top label 150
DEBUG:numba.core.ssa:idom 92 from label 150
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:find_def_from_top label 92
DEBUG:numba.core.ssa:idom 42 from label 92
DEBUG:numba.core.ssa:find_def_from_bottom label 42
DEBUG:numba.core.ssa:replaced with: $154compare_op.2 = num_neg_value.2 == $const152.1.2
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2125),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17717050>
DEBUG:numba.core.ssa:on stmt: $const164.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $166compare_op.2 = known_size == $const164.1.1
DEBUG:numba.core.ssa:on stmt: bool172 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2127),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $172pred, 174, 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17717050>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const180.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const180.2.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17717050>
DEBUG:numba.core.ssa:on stmt: inferred = origsize // known_size
DEBUG:numba.core.ssa:on stmt: $binop_mod206.5 = origsize % known_size
DEBUG:numba.core.ssa:on stmt: $const210.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = $binop_mod206.5 == $const210.6.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 220
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17717050>
DEBUG:numba.core.ssa:on stmt: bool222 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2129),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $222pred, 254, 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17717050>
DEBUG:numba.core.ssa:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const236.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $242call.3 = call $224load_global.0($const236.2.3, func=$224load_global.0, args=[Var($const236.2.3, arrayobj.py:2134)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 254
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17717050>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred
DEBUG:numba.core.ssa:on stmt: $const264.3.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $266return_value.4 = cast(value=$const264.3.0)
DEBUG:numba.core.ssa:on stmt: return $266return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17717050>
DEBUG:numba.core.ssa:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const280.2.4 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $286call.3 = call $268load_global.0($const280.2.4, func=$268load_global.0, args=[Var($const280.2.4, arrayobj.py:2138)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 269
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17717050>
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:Fix SSA violator on var known_size
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1622CB10>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:first assign: known_size
DEBUG:numba.core.ssa:replaced with: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2111)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $40get_iter.6 = getiter(value=$30call.5)
DEBUG:numba.core.ssa:on stmt: $phi42.0 = $40get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1622CB10>
DEBUG:numba.core.ssa:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2112), Var(num_neg_value.3, arrayobj.py:2116)], incoming_blocks=[0, 269])
DEBUG:numba.core.ssa:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
DEBUG:numba.core.ssa:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi44.1 = $42for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $42for_iter.3, 44, 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1622CB10>
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $44unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $44unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const54.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $56compare_op.7 = s < $const54.6.1
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 80
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1622CB10>
DEBUG:numba.core.ssa:on stmt: $const66.2.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value.1 = $binop_iadd68.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1622CB10>
DEBUG:numba.core.ssa:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size = $binop_imul84.3
DEBUG:numba.core.ssa:replaced with: known_size.1 = $binop_imul84.3
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1622CB10>
DEBUG:numba.core.ssa:on stmt: $const94.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2121),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1622CB10>
DEBUG:numba.core.ssa:on stmt: $108compare_op.2 = origsize != known_size
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2122),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 146
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1622CB10>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const128.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $134call.3 = call $116load_global.0($const128.2.3, func=$116load_global.0, args=[Var($const128.2.3, arrayobj.py:2123)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1622CB10>
DEBUG:numba.core.ssa:on stmt: $const146.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$const146.0.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1622CB10>
DEBUG:numba.core.ssa:on stmt: $const152.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1.2
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2125),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1622CB10>
DEBUG:numba.core.ssa:on stmt: $const164.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $166compare_op.2 = known_size == $const164.1.1
DEBUG:numba.core.ssa:on stmt: bool172 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2127),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $172pred, 174, 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1622CB10>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const180.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const180.2.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1622CB10>
DEBUG:numba.core.ssa:on stmt: inferred = origsize // known_size
DEBUG:numba.core.ssa:on stmt: $binop_mod206.5 = origsize % known_size
DEBUG:numba.core.ssa:on stmt: $const210.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = $binop_mod206.5 == $const210.6.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 220
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1622CB10>
DEBUG:numba.core.ssa:on stmt: bool222 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2129),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $222pred, 254, 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1622CB10>
DEBUG:numba.core.ssa:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const236.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $242call.3 = call $224load_global.0($const236.2.3, func=$224load_global.0, args=[Var($const236.2.3, arrayobj.py:2134)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 254
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1622CB10>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred
DEBUG:numba.core.ssa:on stmt: $const264.3.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $266return_value.4 = cast(value=$const264.3.0)
DEBUG:numba.core.ssa:on stmt: return $266return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1622CB10>
DEBUG:numba.core.ssa:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const280.2.4 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $286call.3 = call $268load_global.0($const280.2.4, func=$268load_global.0, args=[Var($const280.2.4, arrayobj.py:2138)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 269
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1622CB10>
DEBUG:numba.core.ssa:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2116), Var(num_neg_value.2, arrayobj.py:2116)], incoming_blocks=[64, 80])
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000019A1622CA90>],
             80: [<numba.core.ir.Assign object at 0x0000019A17716DD0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17714E90>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2111)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $40get_iter.6 = getiter(value=$30call.5)
DEBUG:numba.core.ssa:on stmt: $phi42.0 = $40get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17714E90>
DEBUG:numba.core.ssa:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2112), Var(num_neg_value.3, arrayobj.py:2116)], incoming_blocks=[0, 269])
DEBUG:numba.core.ssa:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
DEBUG:numba.core.ssa:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi44.1 = $42for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $42for_iter.3, 44, 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17714E90>
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $44unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $44unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const54.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $56compare_op.7 = s < $const54.6.1
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 80
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17714E90>
DEBUG:numba.core.ssa:on stmt: $const66.2.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value.1 = $binop_iadd68.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17714E90>
DEBUG:numba.core.ssa:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='known_size' stmt=$binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 80
DEBUG:numba.core.ssa:idom 44 from label 80
DEBUG:numba.core.ssa:find_def_from_bottom label 44
DEBUG:numba.core.ssa:find_def_from_top label 44
DEBUG:numba.core.ssa:idom 42 from label 44
DEBUG:numba.core.ssa:find_def_from_bottom label 42
DEBUG:numba.core.ssa:find_def_from_top label 42
DEBUG:numba.core.ssa:insert phi node known_size.2 = phi(incoming_values=[], incoming_blocks=[]) at 42
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def known_size = const(int, 1)
DEBUG:numba.core.ssa:find_def_from_bottom label 269
DEBUG:numba.core.ssa:find_def_from_top label 269
DEBUG:numba.core.ssa:insert phi node known_size.3 = phi(incoming_values=[], incoming_blocks=[]) at 269
DEBUG:numba.core.ssa:find_def_from_bottom label 64
DEBUG:numba.core.ssa:find_def_from_top label 64
DEBUG:numba.core.ssa:idom 44 from label 64
DEBUG:numba.core.ssa:find_def_from_bottom label 44
DEBUG:numba.core.ssa:find_def_from_top label 44
DEBUG:numba.core.ssa:idom 42 from label 44
DEBUG:numba.core.ssa:find_def_from_bottom label 42
DEBUG:numba.core.ssa:incoming_def known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2113)], incoming_blocks=[0])
DEBUG:numba.core.ssa:find_def_from_bottom label 80
DEBUG:numba.core.ssa:incoming_def known_size.1 = $binop_imul84.3
DEBUG:numba.core.ssa:incoming_def known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2119), Var(known_size.1, arrayobj.py:2119)], incoming_blocks=[64, 80])
DEBUG:numba.core.ssa:replaced with: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size.1 = $binop_imul84.3
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17714E90>
DEBUG:numba.core.ssa:on stmt: $const94.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2121),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17714E90>
DEBUG:numba.core.ssa:on stmt: $108compare_op.2 = origsize != known_size
DEBUG:numba.core.ssa:find_def var='known_size' stmt=$108compare_op.2 = origsize != known_size
DEBUG:numba.core.ssa:find_def_from_top label 104
DEBUG:numba.core.ssa:idom 92 from label 104
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:find_def_from_top label 92
DEBUG:numba.core.ssa:idom 42 from label 92
DEBUG:numba.core.ssa:find_def_from_bottom label 42
DEBUG:numba.core.ssa:replaced with: $108compare_op.2 = origsize != known_size.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2122),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 146
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17714E90>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const128.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $134call.3 = call $116load_global.0($const128.2.3, func=$116load_global.0, args=[Var($const128.2.3, arrayobj.py:2123)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17714E90>
DEBUG:numba.core.ssa:on stmt: $const146.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$const146.0.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17714E90>
DEBUG:numba.core.ssa:on stmt: $const152.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1.2
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2125),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17714E90>
DEBUG:numba.core.ssa:on stmt: $const164.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $166compare_op.2 = known_size == $const164.1.1
DEBUG:numba.core.ssa:find_def var='known_size' stmt=$166compare_op.2 = known_size == $const164.1.1
DEBUG:numba.core.ssa:find_def_from_top label 162
DEBUG:numba.core.ssa:idom 150 from label 162
DEBUG:numba.core.ssa:find_def_from_bottom label 150
DEBUG:numba.core.ssa:find_def_from_top label 150
DEBUG:numba.core.ssa:idom 92 from label 150
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:find_def_from_top label 92
DEBUG:numba.core.ssa:idom 42 from label 92
DEBUG:numba.core.ssa:find_def_from_bottom label 42
DEBUG:numba.core.ssa:replaced with: $166compare_op.2 = known_size.2 == $const164.1.1
DEBUG:numba.core.ssa:on stmt: bool172 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2127),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $172pred, 174, 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17714E90>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const180.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const180.2.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17714E90>
DEBUG:numba.core.ssa:on stmt: inferred = origsize // known_size
DEBUG:numba.core.ssa:find_def var='known_size' stmt=inferred = origsize // known_size
DEBUG:numba.core.ssa:find_def_from_top label 192
DEBUG:numba.core.ssa:idom 162 from label 192
DEBUG:numba.core.ssa:find_def_from_bottom label 162
DEBUG:numba.core.ssa:find_def_from_top label 162
DEBUG:numba.core.ssa:idom 150 from label 162
DEBUG:numba.core.ssa:find_def_from_bottom label 150
DEBUG:numba.core.ssa:find_def_from_top label 150
DEBUG:numba.core.ssa:idom 92 from label 150
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:find_def_from_top label 92
DEBUG:numba.core.ssa:idom 42 from label 92
DEBUG:numba.core.ssa:find_def_from_bottom label 42
DEBUG:numba.core.ssa:replaced with: inferred = origsize // known_size.2
DEBUG:numba.core.ssa:on stmt: $binop_mod206.5 = origsize % known_size
DEBUG:numba.core.ssa:find_def var='known_size' stmt=$binop_mod206.5 = origsize % known_size
DEBUG:numba.core.ssa:find_def_from_top label 192
DEBUG:numba.core.ssa:idom 162 from label 192
DEBUG:numba.core.ssa:find_def_from_bottom label 162
DEBUG:numba.core.ssa:find_def_from_top label 162
DEBUG:numba.core.ssa:idom 150 from label 162
DEBUG:numba.core.ssa:find_def_from_bottom label 150
DEBUG:numba.core.ssa:find_def_from_top label 150
DEBUG:numba.core.ssa:idom 92 from label 150
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:find_def_from_top label 92
DEBUG:numba.core.ssa:idom 42 from label 92
DEBUG:numba.core.ssa:find_def_from_bottom label 42
DEBUG:numba.core.ssa:replaced with: $binop_mod206.5 = origsize % known_size.2
DEBUG:numba.core.ssa:on stmt: $const210.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = $binop_mod206.5 == $const210.6.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 220
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17714E90>
DEBUG:numba.core.ssa:on stmt: bool222 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2129),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $222pred, 254, 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17714E90>
DEBUG:numba.core.ssa:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const236.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $242call.3 = call $224load_global.0($const236.2.3, func=$224load_global.0, args=[Var($const236.2.3, arrayobj.py:2134)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 254
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17714E90>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred
DEBUG:numba.core.ssa:on stmt: $const264.3.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $266return_value.4 = cast(value=$const264.3.0)
DEBUG:numba.core.ssa:on stmt: return $266return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17714E90>
DEBUG:numba.core.ssa:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const280.2.4 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $286call.3 = call $268load_global.0($const280.2.4, func=$268load_global.0, args=[Var($const280.2.4, arrayobj.py:2138)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 269
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17714E90>
DEBUG:numba.core.ssa:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2116), Var(num_neg_value.2, arrayobj.py:2116)], incoming_blocks=[64, 80])
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:Fix SSA violator on var inferred
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177153D0>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2111)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $40get_iter.6 = getiter(value=$30call.5)
DEBUG:numba.core.ssa:on stmt: $phi42.0 = $40get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177153D0>
DEBUG:numba.core.ssa:on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2113), Var(known_size.3, arrayobj.py:2119)], incoming_blocks=[0, 269])
DEBUG:numba.core.ssa:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2112), Var(num_neg_value.3, arrayobj.py:2116)], incoming_blocks=[0, 269])
DEBUG:numba.core.ssa:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
DEBUG:numba.core.ssa:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi44.1 = $42for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $42for_iter.3, 44, 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177153D0>
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $44unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $44unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const54.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $56compare_op.7 = s < $const54.6.1
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 80
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177153D0>
DEBUG:numba.core.ssa:on stmt: $const66.2.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value.1 = $binop_iadd68.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177153D0>
DEBUG:numba.core.ssa:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size.1 = $binop_imul84.3
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177153D0>
DEBUG:numba.core.ssa:on stmt: $const94.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2121),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177153D0>
DEBUG:numba.core.ssa:on stmt: $108compare_op.2 = origsize != known_size.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2122),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 146
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177153D0>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const128.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $134call.3 = call $116load_global.0($const128.2.3, func=$116load_global.0, args=[Var($const128.2.3, arrayobj.py:2123)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177153D0>
DEBUG:numba.core.ssa:on stmt: $const146.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$const146.0.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177153D0>
DEBUG:numba.core.ssa:on stmt: $const152.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1.2
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2125),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177153D0>
DEBUG:numba.core.ssa:on stmt: $const164.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $166compare_op.2 = known_size.2 == $const164.1.1
DEBUG:numba.core.ssa:on stmt: bool172 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2127),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $172pred, 174, 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177153D0>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:first assign: inferred
DEBUG:numba.core.ssa:replaced with: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const180.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const180.2.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177153D0>
DEBUG:numba.core.ssa:on stmt: inferred = origsize // known_size.2
DEBUG:numba.core.ssa:replaced with: inferred.1 = origsize // known_size.2
DEBUG:numba.core.ssa:on stmt: $binop_mod206.5 = origsize % known_size.2
DEBUG:numba.core.ssa:on stmt: $const210.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = $binop_mod206.5 == $const210.6.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 220
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177153D0>
DEBUG:numba.core.ssa:on stmt: bool222 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2129),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $222pred, 254, 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177153D0>
DEBUG:numba.core.ssa:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const236.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $242call.3 = call $224load_global.0($const236.2.3, func=$224load_global.0, args=[Var($const236.2.3, arrayobj.py:2134)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 254
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177153D0>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred
DEBUG:numba.core.ssa:on stmt: $const264.3.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $266return_value.4 = cast(value=$const264.3.0)
DEBUG:numba.core.ssa:on stmt: return $266return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177153D0>
DEBUG:numba.core.ssa:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const280.2.4 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $286call.3 = call $268load_global.0($const280.2.4, func=$268load_global.0, args=[Var($const280.2.4, arrayobj.py:2138)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 269
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A177153D0>
DEBUG:numba.core.ssa:on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2119), Var(known_size.1, arrayobj.py:2119)], incoming_blocks=[64, 80])
DEBUG:numba.core.ssa:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2116), Var(num_neg_value.2, arrayobj.py:2116)], incoming_blocks=[64, 80])
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {174: [<numba.core.ir.Assign object at 0x0000019A17717AD0>],
             192: [<numba.core.ir.Assign object at 0x0000019A17770D50>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622DDD0>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2111)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $40get_iter.6 = getiter(value=$30call.5)
DEBUG:numba.core.ssa:on stmt: $phi42.0 = $40get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622DDD0>
DEBUG:numba.core.ssa:on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2113), Var(known_size.3, arrayobj.py:2119)], incoming_blocks=[0, 269])
DEBUG:numba.core.ssa:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2112), Var(num_neg_value.3, arrayobj.py:2116)], incoming_blocks=[0, 269])
DEBUG:numba.core.ssa:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
DEBUG:numba.core.ssa:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi44.1 = $42for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $42for_iter.3, 44, 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622DDD0>
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $44unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $44unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const54.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $56compare_op.7 = s < $const54.6.1
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 80
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622DDD0>
DEBUG:numba.core.ssa:on stmt: $const66.2.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value.1 = $binop_iadd68.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622DDD0>
DEBUG:numba.core.ssa:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size.1 = $binop_imul84.3
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622DDD0>
DEBUG:numba.core.ssa:on stmt: $const94.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2121),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622DDD0>
DEBUG:numba.core.ssa:on stmt: $108compare_op.2 = origsize != known_size.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2122),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 146
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622DDD0>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const128.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $134call.3 = call $116load_global.0($const128.2.3, func=$116load_global.0, args=[Var($const128.2.3, arrayobj.py:2123)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622DDD0>
DEBUG:numba.core.ssa:on stmt: $const146.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$const146.0.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622DDD0>
DEBUG:numba.core.ssa:on stmt: $const152.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1.2
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2125),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622DDD0>
DEBUG:numba.core.ssa:on stmt: $const164.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $166compare_op.2 = known_size.2 == $const164.1.1
DEBUG:numba.core.ssa:on stmt: bool172 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2127),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $172pred, 174, 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622DDD0>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const180.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const180.2.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622DDD0>
DEBUG:numba.core.ssa:on stmt: inferred.1 = origsize // known_size.2
DEBUG:numba.core.ssa:on stmt: $binop_mod206.5 = origsize % known_size.2
DEBUG:numba.core.ssa:on stmt: $const210.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = $binop_mod206.5 == $const210.6.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 220
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622DDD0>
DEBUG:numba.core.ssa:on stmt: bool222 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2129),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $222pred, 254, 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622DDD0>
DEBUG:numba.core.ssa:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const236.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $242call.3 = call $224load_global.0($const236.2.3, func=$224load_global.0, args=[Var($const236.2.3, arrayobj.py:2134)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 254
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622DDD0>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred
DEBUG:numba.core.ssa:find_def var='inferred' stmt=shape[neg_ax] = inferred
DEBUG:numba.core.ssa:find_def_from_top label 254
DEBUG:numba.core.ssa:idom 220 from label 254
DEBUG:numba.core.ssa:find_def_from_bottom label 220
DEBUG:numba.core.ssa:find_def_from_top label 220
DEBUG:numba.core.ssa:insert phi node inferred.2 = phi(incoming_values=[], incoming_blocks=[]) at 220
DEBUG:numba.core.ssa:find_def_from_bottom label 192
DEBUG:numba.core.ssa:incoming_def inferred.1 = origsize // known_size.2
DEBUG:numba.core.ssa:find_def_from_bottom label 174
DEBUG:numba.core.ssa:incoming_def inferred = const(int, 0)
DEBUG:numba.core.ssa:replaced with: shape[neg_ax] = inferred.2
DEBUG:numba.core.ssa:on stmt: $const264.3.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $266return_value.4 = cast(value=$const264.3.0)
DEBUG:numba.core.ssa:on stmt: return $266return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622DDD0>
DEBUG:numba.core.ssa:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const280.2.4 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $286call.3 = call $268load_global.0($const280.2.4, func=$268load_global.0, args=[Var($const280.2.4, arrayobj.py:2138)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 269
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622DDD0>
DEBUG:numba.core.ssa:on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2119), Var(known_size.1, arrayobj.py:2119)], incoming_blocks=[64, 80])
DEBUG:numba.core.ssa:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2116), Var(num_neg_value.2, arrayobj.py:2116)], incoming_blocks=[64, 80])
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:Fix SSA violator on var ok
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716A90>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2111)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $40get_iter.6 = getiter(value=$30call.5)
DEBUG:numba.core.ssa:on stmt: $phi42.0 = $40get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716A90>
DEBUG:numba.core.ssa:on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2113), Var(known_size.3, arrayobj.py:2119)], incoming_blocks=[0, 269])
DEBUG:numba.core.ssa:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2112), Var(num_neg_value.3, arrayobj.py:2116)], incoming_blocks=[0, 269])
DEBUG:numba.core.ssa:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
DEBUG:numba.core.ssa:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi44.1 = $42for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $42for_iter.3, 44, 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716A90>
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $44unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $44unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const54.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $56compare_op.7 = s < $const54.6.1
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 80
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716A90>
DEBUG:numba.core.ssa:on stmt: $const66.2.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value.1 = $binop_iadd68.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716A90>
DEBUG:numba.core.ssa:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size.1 = $binop_imul84.3
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716A90>
DEBUG:numba.core.ssa:on stmt: $const94.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2121),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716A90>
DEBUG:numba.core.ssa:on stmt: $108compare_op.2 = origsize != known_size.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2122),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 146
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716A90>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const128.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $134call.3 = call $116load_global.0($const128.2.3, func=$116load_global.0, args=[Var($const128.2.3, arrayobj.py:2123)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716A90>
DEBUG:numba.core.ssa:on stmt: $const146.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$const146.0.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716A90>
DEBUG:numba.core.ssa:on stmt: $const152.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1.2
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2125),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716A90>
DEBUG:numba.core.ssa:on stmt: $const164.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $166compare_op.2 = known_size.2 == $const164.1.1
DEBUG:numba.core.ssa:on stmt: bool172 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2127),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $172pred, 174, 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716A90>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const180.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const180.2.1
DEBUG:numba.core.ssa:first assign: ok
DEBUG:numba.core.ssa:replaced with: ok = origsize == $const180.2.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716A90>
DEBUG:numba.core.ssa:on stmt: inferred.1 = origsize // known_size.2
DEBUG:numba.core.ssa:on stmt: $binop_mod206.5 = origsize % known_size.2
DEBUG:numba.core.ssa:on stmt: $const210.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = $binop_mod206.5 == $const210.6.1
DEBUG:numba.core.ssa:replaced with: ok.1 = $binop_mod206.5 == $const210.6.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 220
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716A90>
DEBUG:numba.core.ssa:on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2131), Var(inferred, arrayobj.py:2128)], incoming_blocks=[192, 174])
DEBUG:numba.core.ssa:on stmt: bool222 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2129),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $222pred, 254, 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716A90>
DEBUG:numba.core.ssa:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const236.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $242call.3 = call $224load_global.0($const236.2.3, func=$224load_global.0, args=[Var($const236.2.3, arrayobj.py:2134)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 254
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716A90>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred.2
DEBUG:numba.core.ssa:on stmt: $const264.3.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $266return_value.4 = cast(value=$const264.3.0)
DEBUG:numba.core.ssa:on stmt: return $266return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716A90>
DEBUG:numba.core.ssa:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const280.2.4 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $286call.3 = call $268load_global.0($const280.2.4, func=$268load_global.0, args=[Var($const280.2.4, arrayobj.py:2138)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 269
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716A90>
DEBUG:numba.core.ssa:on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2119), Var(known_size.1, arrayobj.py:2119)], incoming_blocks=[64, 80])
DEBUG:numba.core.ssa:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2116), Var(num_neg_value.2, arrayobj.py:2116)], incoming_blocks=[64, 80])
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {174: [<numba.core.ir.Assign object at 0x0000019A17770990>],
             192: [<numba.core.ir.Assign object at 0x0000019A17771610>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622E910>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2111)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $40get_iter.6 = getiter(value=$30call.5)
DEBUG:numba.core.ssa:on stmt: $phi42.0 = $40get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622E910>
DEBUG:numba.core.ssa:on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2113), Var(known_size.3, arrayobj.py:2119)], incoming_blocks=[0, 269])
DEBUG:numba.core.ssa:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2112), Var(num_neg_value.3, arrayobj.py:2116)], incoming_blocks=[0, 269])
DEBUG:numba.core.ssa:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
DEBUG:numba.core.ssa:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi44.1 = $42for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $42for_iter.3, 44, 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622E910>
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $44unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $44unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const54.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $56compare_op.7 = s < $const54.6.1
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 80
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622E910>
DEBUG:numba.core.ssa:on stmt: $const66.2.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value.1 = $binop_iadd68.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622E910>
DEBUG:numba.core.ssa:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size.1 = $binop_imul84.3
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622E910>
DEBUG:numba.core.ssa:on stmt: $const94.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2121),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622E910>
DEBUG:numba.core.ssa:on stmt: $108compare_op.2 = origsize != known_size.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2122),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 146
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622E910>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const128.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $134call.3 = call $116load_global.0($const128.2.3, func=$116load_global.0, args=[Var($const128.2.3, arrayobj.py:2123)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622E910>
DEBUG:numba.core.ssa:on stmt: $const146.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$const146.0.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622E910>
DEBUG:numba.core.ssa:on stmt: $const152.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1.2
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2125),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622E910>
DEBUG:numba.core.ssa:on stmt: $const164.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $166compare_op.2 = known_size.2 == $const164.1.1
DEBUG:numba.core.ssa:on stmt: bool172 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2127),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $172pred, 174, 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622E910>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const180.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const180.2.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622E910>
DEBUG:numba.core.ssa:on stmt: inferred.1 = origsize // known_size.2
DEBUG:numba.core.ssa:on stmt: $binop_mod206.5 = origsize % known_size.2
DEBUG:numba.core.ssa:on stmt: $const210.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok.1 = $binop_mod206.5 == $const210.6.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 220
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622E910>
DEBUG:numba.core.ssa:on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2131), Var(inferred, arrayobj.py:2128)], incoming_blocks=[192, 174])
DEBUG:numba.core.ssa:on stmt: bool222 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2129),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='ok' stmt=$222pred = call bool222(ok, func=bool222, args=(Var(ok, arrayobj.py:2129),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 220
DEBUG:numba.core.ssa:insert phi node ok.2 = phi(incoming_values=[], incoming_blocks=[]) at 220
DEBUG:numba.core.ssa:find_def_from_bottom label 192
DEBUG:numba.core.ssa:incoming_def ok.1 = $binop_mod206.5 == $const210.6.1
DEBUG:numba.core.ssa:find_def_from_bottom label 174
DEBUG:numba.core.ssa:incoming_def ok = origsize == $const180.2.1
DEBUG:numba.core.ssa:replaced with: $222pred = call bool222(ok.2, func=bool222, args=(Var(ok.2, arrayobj.py:2133),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $222pred, 254, 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622E910>
DEBUG:numba.core.ssa:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const236.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $242call.3 = call $224load_global.0($const236.2.3, func=$224load_global.0, args=[Var($const236.2.3, arrayobj.py:2134)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 254
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622E910>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred.2
DEBUG:numba.core.ssa:on stmt: $const264.3.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $266return_value.4 = cast(value=$const264.3.0)
DEBUG:numba.core.ssa:on stmt: return $266return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622E910>
DEBUG:numba.core.ssa:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const280.2.4 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $286call.3 = call $268load_global.0($const280.2.4, func=$268load_global.0, args=[Var($const280.2.4, arrayobj.py:2138)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 269
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622E910>
DEBUG:numba.core.ssa:on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2119), Var(known_size.1, arrayobj.py:2119)], incoming_blocks=[64, 80])
DEBUG:numba.core.ssa:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2116), Var(num_neg_value.2, arrayobj.py:2116)], incoming_blocks=[64, 80])
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:Fix SSA violator on var neg_ax
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716250>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2111)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $40get_iter.6 = getiter(value=$30call.5)
DEBUG:numba.core.ssa:on stmt: $phi42.0 = $40get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716250>
DEBUG:numba.core.ssa:on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2113), Var(known_size.3, arrayobj.py:2119)], incoming_blocks=[0, 269])
DEBUG:numba.core.ssa:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2112), Var(num_neg_value.3, arrayobj.py:2116)], incoming_blocks=[0, 269])
DEBUG:numba.core.ssa:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
DEBUG:numba.core.ssa:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi44.1 = $42for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $42for_iter.3, 44, 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716250>
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $44unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $44unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const54.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $56compare_op.7 = s < $const54.6.1
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 80
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716250>
DEBUG:numba.core.ssa:on stmt: $const66.2.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value.1 = $binop_iadd68.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:first assign: neg_ax
DEBUG:numba.core.ssa:replaced with: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716250>
DEBUG:numba.core.ssa:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size.1 = $binop_imul84.3
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716250>
DEBUG:numba.core.ssa:on stmt: $const94.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2121),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716250>
DEBUG:numba.core.ssa:on stmt: $108compare_op.2 = origsize != known_size.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2122),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 146
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716250>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const128.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $134call.3 = call $116load_global.0($const128.2.3, func=$116load_global.0, args=[Var($const128.2.3, arrayobj.py:2123)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716250>
DEBUG:numba.core.ssa:on stmt: $const146.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$const146.0.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716250>
DEBUG:numba.core.ssa:on stmt: $const152.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1.2
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2125),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716250>
DEBUG:numba.core.ssa:on stmt: $const164.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $166compare_op.2 = known_size.2 == $const164.1.1
DEBUG:numba.core.ssa:on stmt: bool172 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2127),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $172pred, 174, 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716250>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const180.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const180.2.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716250>
DEBUG:numba.core.ssa:on stmt: inferred.1 = origsize // known_size.2
DEBUG:numba.core.ssa:on stmt: $binop_mod206.5 = origsize % known_size.2
DEBUG:numba.core.ssa:on stmt: $const210.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok.1 = $binop_mod206.5 == $const210.6.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 220
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716250>
DEBUG:numba.core.ssa:on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2132), Var(ok, arrayobj.py:2129)], incoming_blocks=[192, 174])
DEBUG:numba.core.ssa:on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2131), Var(inferred, arrayobj.py:2128)], incoming_blocks=[192, 174])
DEBUG:numba.core.ssa:on stmt: bool222 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $222pred = call bool222(ok.2, func=bool222, args=(Var(ok.2, arrayobj.py:2133),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $222pred, 254, 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716250>
DEBUG:numba.core.ssa:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const236.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $242call.3 = call $224load_global.0($const236.2.3, func=$224load_global.0, args=[Var($const236.2.3, arrayobj.py:2134)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 254
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716250>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred.2
DEBUG:numba.core.ssa:on stmt: $const264.3.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $266return_value.4 = cast(value=$const264.3.0)
DEBUG:numba.core.ssa:on stmt: return $266return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716250>
DEBUG:numba.core.ssa:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const280.2.4 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $286call.3 = call $268load_global.0($const280.2.4, func=$268load_global.0, args=[Var($const280.2.4, arrayobj.py:2138)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 269
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17716250>
DEBUG:numba.core.ssa:on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2119), Var(known_size.1, arrayobj.py:2119)], incoming_blocks=[64, 80])
DEBUG:numba.core.ssa:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2116), Var(num_neg_value.2, arrayobj.py:2116)], incoming_blocks=[64, 80])
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {64: [<numba.core.ir.Assign object at 0x0000019A1622F850>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622F410>
DEBUG:numba.core.ssa:on stmt: origsize = arg(0, name=origsize)
DEBUG:numba.core.ssa:on stmt: shape = arg(1, name=shape)
DEBUG:numba.core.ssa:on stmt: num_neg_value = const(int, 0)
DEBUG:numba.core.ssa:on stmt: known_size = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $12load_global.2 = global(enumerate: <class 'enumerate'>)
DEBUG:numba.core.ssa:on stmt: $30call.5 = call $12load_global.2(shape, func=$12load_global.2, args=[Var(shape, arrayobj.py:2111)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $40get_iter.6 = getiter(value=$30call.5)
DEBUG:numba.core.ssa:on stmt: $phi42.0 = $40get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 42
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622F410>
DEBUG:numba.core.ssa:on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2113), Var(known_size.3, arrayobj.py:2119)], incoming_blocks=[0, 269])
DEBUG:numba.core.ssa:on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2112), Var(num_neg_value.3, arrayobj.py:2116)], incoming_blocks=[0, 269])
DEBUG:numba.core.ssa:on stmt: $42for_iter.1 = iternext(value=$phi42.0)
DEBUG:numba.core.ssa:on stmt: $42for_iter.2 = pair_first(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $42for_iter.3 = pair_second(value=$42for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi44.1 = $42for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $42for_iter.3, 44, 92
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 44
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622F410>
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.4 = exhaust_iter(value=$phi44.1, count=2)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.2 = static_getitem(value=$44unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $44unpack_sequence.3 = static_getitem(value=$44unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: ax = $44unpack_sequence.2
DEBUG:numba.core.ssa:on stmt: s = $44unpack_sequence.3
DEBUG:numba.core.ssa:on stmt: $const54.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $56compare_op.7 = s < $const54.6.1
DEBUG:numba.core.ssa:on stmt: bool62 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $62pred = call bool62($56compare_op.7, func=bool62, args=(Var($56compare_op.7, arrayobj.py:2115),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $62pred, 64, 80
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622F410>
DEBUG:numba.core.ssa:on stmt: $const66.2.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd68.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const66.2.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: num_neg_value.1 = $binop_iadd68.3
DEBUG:numba.core.ssa:on stmt: neg_ax = ax
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 80
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622F410>
DEBUG:numba.core.ssa:on stmt: $binop_imul84.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: known_size.1 = $binop_imul84.3
DEBUG:numba.core.ssa:on stmt: jump 269
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 92
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622F410>
DEBUG:numba.core.ssa:on stmt: $const94.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $96compare_op.2 = num_neg_value.2 == $const94.1.1
DEBUG:numba.core.ssa:on stmt: bool102 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $102pred = call bool102($96compare_op.2, func=bool102, args=(Var($96compare_op.2, arrayobj.py:2121),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $102pred, 104, 150
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 104
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622F410>
DEBUG:numba.core.ssa:on stmt: $108compare_op.2 = origsize != known_size.2
DEBUG:numba.core.ssa:on stmt: bool114 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $114pred = call bool114($108compare_op.2, func=bool114, args=(Var($108compare_op.2, arrayobj.py:2122),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $114pred, 116, 146
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 116
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622F410>
DEBUG:numba.core.ssa:on stmt: $116load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const128.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $134call.3 = call $116load_global.0($const128.2.3, func=$116load_global.0, args=[Var($const128.2.3, arrayobj.py:2123)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 146
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622F410>
DEBUG:numba.core.ssa:on stmt: $const146.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $148return_value.1 = cast(value=$const146.0.0)
DEBUG:numba.core.ssa:on stmt: return $148return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 150
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622F410>
DEBUG:numba.core.ssa:on stmt: $const152.1.2 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $154compare_op.2 = num_neg_value.2 == $const152.1.2
DEBUG:numba.core.ssa:on stmt: bool160 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $160pred = call bool160($154compare_op.2, func=bool160, args=(Var($154compare_op.2, arrayobj.py:2125),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $160pred, 162, 268
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 162
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622F410>
DEBUG:numba.core.ssa:on stmt: $const164.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $166compare_op.2 = known_size.2 == $const164.1.1
DEBUG:numba.core.ssa:on stmt: bool172 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $172pred = call bool172($166compare_op.2, func=bool172, args=(Var($166compare_op.2, arrayobj.py:2127),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $172pred, 174, 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622F410>
DEBUG:numba.core.ssa:on stmt: inferred = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $const180.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok = origsize == $const180.2.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622F410>
DEBUG:numba.core.ssa:on stmt: inferred.1 = origsize // known_size.2
DEBUG:numba.core.ssa:on stmt: $binop_mod206.5 = origsize % known_size.2
DEBUG:numba.core.ssa:on stmt: $const210.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: ok.1 = $binop_mod206.5 == $const210.6.1
DEBUG:numba.core.ssa:on stmt: jump 220
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 220
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622F410>
DEBUG:numba.core.ssa:on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2132), Var(ok, arrayobj.py:2129)], incoming_blocks=[192, 174])
DEBUG:numba.core.ssa:on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2131), Var(inferred, arrayobj.py:2128)], incoming_blocks=[192, 174])
DEBUG:numba.core.ssa:on stmt: bool222 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $222pred = call bool222(ok.2, func=bool222, args=(Var(ok.2, arrayobj.py:2133),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $222pred, 254, 224
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 224
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622F410>
DEBUG:numba.core.ssa:on stmt: $224load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const236.2.3 = const(str, total size of new array must be unchanged)
DEBUG:numba.core.ssa:on stmt: $242call.3 = call $224load_global.0($const236.2.3, func=$224load_global.0, args=[Var($const236.2.3, arrayobj.py:2134)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 254
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622F410>
DEBUG:numba.core.ssa:on stmt: shape[neg_ax] = inferred.2
DEBUG:numba.core.ssa:find_def var='neg_ax' stmt=shape[neg_ax] = inferred.2
DEBUG:numba.core.ssa:find_def_from_top label 254
DEBUG:numba.core.ssa:idom 220 from label 254
DEBUG:numba.core.ssa:find_def_from_bottom label 220
DEBUG:numba.core.ssa:find_def_from_top label 220
DEBUG:numba.core.ssa:idom 162 from label 220
DEBUG:numba.core.ssa:find_def_from_bottom label 162
DEBUG:numba.core.ssa:find_def_from_top label 162
DEBUG:numba.core.ssa:idom 150 from label 162
DEBUG:numba.core.ssa:find_def_from_bottom label 150
DEBUG:numba.core.ssa:find_def_from_top label 150
DEBUG:numba.core.ssa:idom 92 from label 150
DEBUG:numba.core.ssa:find_def_from_bottom label 92
DEBUG:numba.core.ssa:find_def_from_top label 92
DEBUG:numba.core.ssa:idom 42 from label 92
DEBUG:numba.core.ssa:find_def_from_bottom label 42
DEBUG:numba.core.ssa:find_def_from_top label 42
DEBUG:numba.core.ssa:insert phi node neg_ax.1 = phi(incoming_values=[], incoming_blocks=[]) at 42
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:find_def_from_top label 0
DEBUG:numba.core.ssa:incoming_def <class 'numba.core.ssa.UndefinedVariable'>
DEBUG:numba.core.ssa:find_def_from_bottom label 269
DEBUG:numba.core.ssa:find_def_from_top label 269
DEBUG:numba.core.ssa:insert phi node neg_ax.2 = phi(incoming_values=[], incoming_blocks=[]) at 269
DEBUG:numba.core.ssa:find_def_from_bottom label 64
DEBUG:numba.core.ssa:incoming_def neg_ax = ax
DEBUG:numba.core.ssa:find_def_from_bottom label 80
DEBUG:numba.core.ssa:find_def_from_top label 80
DEBUG:numba.core.ssa:idom 44 from label 80
DEBUG:numba.core.ssa:find_def_from_bottom label 44
DEBUG:numba.core.ssa:find_def_from_top label 44
DEBUG:numba.core.ssa:idom 42 from label 44
DEBUG:numba.core.ssa:find_def_from_bottom label 42
DEBUG:numba.core.ssa:incoming_def neg_ax.1 = phi(incoming_values=[Undefined], incoming_blocks=[0])
DEBUG:numba.core.ssa:incoming_def neg_ax.2 = phi(incoming_values=[Var(neg_ax, arrayobj.py:2117), Var(neg_ax.1, arrayobj.py:2135)], incoming_blocks=[64, 80])
DEBUG:numba.core.ssa:replaced with: shape[neg_ax.1] = inferred.2
DEBUG:numba.core.ssa:on stmt: $const264.3.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $266return_value.4 = cast(value=$const264.3.0)
DEBUG:numba.core.ssa:on stmt: return $266return_value.4
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 268
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622F410>
DEBUG:numba.core.ssa:on stmt: $268load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const280.2.4 = const(str, multiple negative shape values)
DEBUG:numba.core.ssa:on stmt: $286call.3 = call $268load_global.0($const280.2.4, func=$268load_global.0, args=[Var($const280.2.4, arrayobj.py:2138)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 269
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1622F410>
DEBUG:numba.core.ssa:on stmt: known_size.3 = phi(incoming_values=[Var(known_size.2, arrayobj.py:2119), Var(known_size.1, arrayobj.py:2119)], incoming_blocks=[64, 80])
DEBUG:numba.core.ssa:on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.1, arrayobj.py:2116), Var(num_neg_value.2, arrayobj.py:2116)], incoming_blocks=[64, 80])
DEBUG:numba.core.ssa:on stmt: jump 42
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=480)
           2	RESUME(arg=0, lineno=480)
           4	LOAD_FAST(arg=0, lineno=482)
           6	LOAD_FAST(arg=1, lineno=482)
           8	COMPARE_OP(arg=4, lineno=482)
          14	RETURN_VALUE(arg=None, lineno=482)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=480)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=480)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=482)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=482)
DEBUG:numba.core.byteflow:stack ['$a4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=COMPARE_OP(arg=4, lineno=482)
DEBUG:numba.core.byteflow:stack ['$a4.0', '$min_val6.1']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=482)
DEBUG:numba.core.byteflow:stack ['$8compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (10, {}), (12, {}), (14, {'retval': '$8compare_op.2', 'castval': '$14return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $14return_value.3 = cast(value=$8compare_op.2) ['$14return_value.3', '$8compare_op.2']
    return $14return_value.3                 ['$14return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17861150>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: min_val = arg(1, name=min_val)
DEBUG:numba.core.ssa:on stmt: $8compare_op.2 = a > min_val
DEBUG:numba.core.ssa:on stmt: $14return_value.3 = cast(value=$8compare_op.2)
DEBUG:numba.core.ssa:on stmt: return $14return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$14return_value.3': [(<numba.core.ir.Assign object at 0x0000019A178B0410>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A178B0310>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A178B0C10>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x0000019A178B0F10>,
                          0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17861150>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=3601)
           2	RESUME(arg=0, lineno=3601)
           4	LOAD_GLOBAL(arg=1, lineno=3602)
          16	LOAD_FAST(arg=0, lineno=3602)
          18	PRECALL(arg=1, lineno=3602)
          22	CALL(arg=1, lineno=3602)
          32	STORE_FAST(arg=2, lineno=3602)
          34	LOAD_GLOBAL(arg=3, lineno=3603)
          46	LOAD_FAST(arg=2, lineno=3603)
          48	PRECALL(arg=1, lineno=3603)
          52	CALL(arg=1, lineno=3603)
          62	GET_ITER(arg=None, lineno=3603)
>         64	FOR_ITER(arg=54, lineno=3603)
          66	STORE_FAST(arg=3, lineno=3603)
          68	LOAD_FAST(arg=0, lineno=3604)
          70	LOAD_FAST(arg=3, lineno=3604)
          72	BINARY_SUBSCR(arg=None, lineno=3604)
          82	LOAD_FAST(arg=1, lineno=3604)
          84	LOAD_GLOBAL(arg=1, lineno=3604)
          96	LOAD_FAST(arg=1, lineno=3604)
          98	PRECALL(arg=1, lineno=3604)
         102	CALL(arg=1, lineno=3604)
         112	LOAD_FAST(arg=2, lineno=3604)
         114	BINARY_OP(arg=10, lineno=3604)
         118	LOAD_FAST(arg=3, lineno=3604)
         120	BINARY_OP(arg=0, lineno=3604)
         124	BINARY_SUBSCR(arg=None, lineno=3604)
         134	COMPARE_OP(arg=3, lineno=3604)
         140	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=3604)
         142	LOAD_GLOBAL(arg=5, lineno=3605)
         154	LOAD_CONST(arg=1, lineno=3605)
         156	PRECALL(arg=1, lineno=3605)
         160	CALL(arg=1, lineno=3605)
         170	RAISE_VARARGS(arg=1, lineno=3605)
>        172	JUMP_BACKWARD(arg=55, lineno=3604)
>        174	LOAD_CONST(arg=0, lineno=3603)
         176	RETURN_VALUE(arg=None, lineno=3603)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=3601)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=3601)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=3602)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=3602)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=PRECALL(arg=1, lineno=3602)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$shape16.2']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=CALL(arg=1, lineno=3602)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$shape16.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=STORE_FAST(arg=2, lineno=3602)
DEBUG:numba.core.byteflow:stack ['$22call.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_GLOBAL(arg=3, lineno=3603)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_FAST(arg=2, lineno=3603)
DEBUG:numba.core.byteflow:stack ['$null$34.5', '$34load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=PRECALL(arg=1, lineno=3603)
DEBUG:numba.core.byteflow:stack ['$null$34.5', '$34load_global.4', '$n46.6']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=CALL(arg=1, lineno=3603)
DEBUG:numba.core.byteflow:stack ['$null$34.5', '$34load_global.4', '$n46.6']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=GET_ITER(arg=None, lineno=3603)
DEBUG:numba.core.byteflow:stack ['$52call.7']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=64, stack=('$62get_iter.8',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=64 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi64.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=64 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=64, inst=FOR_ITER(arg=54, lineno=3603)
DEBUG:numba.core.byteflow:stack ['$phi64.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=174, stack=(), blockstack=(), npush=0), Edge(pc=66, stack=('$phi64.0', '$64for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=174 nstack_initial=0), State(pc_initial=66 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=174 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=174, inst=LOAD_CONST(arg=0, lineno=3603)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=176, inst=RETURN_VALUE(arg=None, lineno=3603)
DEBUG:numba.core.byteflow:stack ['$const174.0.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=66 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi66.0', '$phi66.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=66 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=66, inst=STORE_FAST(arg=3, lineno=3603)
DEBUG:numba.core.byteflow:stack ['$phi66.0', '$phi66.1']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=0, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi66.0']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_FAST(arg=3, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi66.0', '$shape68.2']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi66.0', '$shape68.2', '$i70.3']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=LOAD_FAST(arg=1, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi66.0', '$72binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_GLOBAL(arg=1, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_FAST(arg=1, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$null$84.7', '$84load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=PRECALL(arg=1, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$null$84.7', '$84load_global.6', '$main_shape96.8']
DEBUG:numba.core.byteflow:dispatch pc=102, inst=CALL(arg=1, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$null$84.7', '$84load_global.6', '$main_shape96.8']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$102call.9']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=BINARY_OP(arg=10, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$102call.9', '$n112.10']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_FAST(arg=3, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$binop_sub114.11']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=BINARY_OP(arg=0, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$binop_sub114.11', '$i118.12']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=BINARY_SUBSCR(arg=None, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi66.0', '$72binary_subscr.4', '$main_shape82.5', '$binop_add120.13']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi66.0', '$72binary_subscr.4', '$124binary_subscr.14']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi66.0', '$134compare_op.15']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=142, stack=('$phi66.0',), blockstack=(), npush=0), Edge(pc=172, stack=('$phi66.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=142 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi142.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=142 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=142, inst=LOAD_GLOBAL(arg=5, lineno=3605)
DEBUG:numba.core.byteflow:stack ['$phi142.0']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_CONST(arg=1, lineno=3605)
DEBUG:numba.core.byteflow:stack ['$phi142.0', '$null$142.2', '$142load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=PRECALL(arg=1, lineno=3605)
DEBUG:numba.core.byteflow:stack ['$phi142.0', '$null$142.2', '$142load_global.1', '$const154.3.1']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=CALL(arg=1, lineno=3605)
DEBUG:numba.core.byteflow:stack ['$phi142.0', '$null$142.2', '$142load_global.1', '$const154.3.1']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=RAISE_VARARGS(arg=1, lineno=3605)
DEBUG:numba.core.byteflow:stack ['$phi142.0', '$160call.4']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=172 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi172.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=172 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=172, inst=JUMP_BACKWARD(arg=55, lineno=3604)
DEBUG:numba.core.byteflow:stack ['$phi172.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=64, stack=('$phi172.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=64 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=1): {'$phi64.0'},
             State(pc_initial=66 nstack_initial=2): {'$phi66.1'},
             State(pc_initial=142 nstack_initial=1): set(),
             State(pc_initial=172 nstack_initial=1): set(),
             State(pc_initial=174 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi64.0': State(pc_initial=0 nstack_initial=0),
 '$phi66.1': State(pc_initial=64 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi142.0': {('$phi66.0', State(pc_initial=66 nstack_initial=2))},
             '$phi172.0': {('$phi66.0', State(pc_initial=66 nstack_initial=2))},
             '$phi64.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi172.0',
                           State(pc_initial=172 nstack_initial=1))},
             '$phi66.0': {('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi66.1': {('$64for_iter.2',
                           State(pc_initial=64 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi142.0': {('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi172.0': {('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi64.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi64.0', State(pc_initial=64 nstack_initial=1))},
             '$phi66.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.1': {('$64for_iter.2',
                           State(pc_initial=64 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi142.0': {('$62get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$62get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi64.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.1': {('$64for_iter.2',
                           State(pc_initial=64 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi142.0': {('$62get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$62get_iter.8',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi64.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.0': {('$62get_iter.8',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi66.1': {('$64for_iter.2',
                           State(pc_initial=64 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi64.0': {('$62get_iter.8', State(pc_initial=0 nstack_initial=0))},
 '$phi66.1': {('$64for_iter.2', State(pc_initial=64 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi64.0': '$62get_iter.8'},
             State(pc_initial=64 nstack_initial=1): {'$phi66.1': '$64for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$shape16.2'}), (18, {}), (20, {}), (22, {'func': '$4load_global.0', 'args': ['$shape16.2'], 'kw_names': None, 'res': '$22call.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'value': '$22call.3'}), (34, {'idx': 1, 'res': '$34load_global.4'}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'res': '$n46.6'}), (48, {}), (50, {}), (52, {'func': '$34load_global.4', 'args': ['$n46.6'], 'kw_names': None, 'res': '$52call.7'}), (54, {}), (56, {}), (58, {}), (60, {}), (62, {'value': '$52call.7', 'res': '$62get_iter.8'})), outgoing_phis={'$phi64.0': '$62get_iter.8'}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$62get_iter.8',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=64 nstack_initial=1):
AdaptBlockInfo(insts=((64, {'iterator': '$phi64.0', 'pair': '$64for_iter.1', 'indval': '$64for_iter.2', 'pred': '$64for_iter.3'}),), outgoing_phis={'$phi66.1': '$64for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={174: (), 66: ('$phi64.0', '$64for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=66 nstack_initial=2):
AdaptBlockInfo(insts=((66, {'value': '$phi66.1'}), (68, {'res': '$shape68.2'}), (70, {'res': '$i70.3'}), (72, {'index': '$i70.3', 'target': '$shape68.2', 'res': '$72binary_subscr.4'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {'res': '$main_shape82.5'}), (84, {'idx': 0, 'res': '$84load_global.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'res': '$main_shape96.8'}), (98, {}), (100, {}), (102, {'func': '$84load_global.6', 'args': ['$main_shape96.8'], 'kw_names': None, 'res': '$102call.9'}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'res': '$n112.10'}), (114, {'op': '-', 'lhs': '$102call.9', 'rhs': '$n112.10', 'res': '$binop_sub114.11'}), (116, {}), (118, {'res': '$i118.12'}), (120, {'op': '+', 'lhs': '$binop_sub114.11', 'rhs': '$i118.12', 'res': '$binop_add120.13'}), (122, {}), (124, {'index': '$binop_add120.13', 'target': '$main_shape82.5', 'res': '$124binary_subscr.14'}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'lhs': '$72binary_subscr.4', 'rhs': '$124binary_subscr.14', 'res': '$134compare_op.15'}), (136, {}), (138, {}), (140, {'pred': '$134compare_op.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={142: ('$phi66.0',), 172: ('$phi66.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=142 nstack_initial=1):
AdaptBlockInfo(insts=((142, {'idx': 2, 'res': '$142load_global.1'}), (144, {}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$const154.3.1'}), (156, {}), (158, {}), (160, {'func': '$142load_global.1', 'args': ['$const154.3.1'], 'kw_names': None, 'res': '$160call.4'}), (162, {}), (164, {}), (166, {}), (168, {}), (170, {'exc': '$160call.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=172 nstack_initial=1):
AdaptBlockInfo(insts=((172, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: ('$phi172.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=174 nstack_initial=0):
AdaptBlockInfo(insts=((174, {'res': '$const174.0.0'}), (176, {'retval': '$const174.0.0', 'castval': '$176return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    shape = arg(0, name=shape)               ['shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
    $4load_global.0 = global(len: <built-in function len>) ['$4load_global.0']
    n = call $4load_global.0(shape, func=$4load_global.0, args=[Var(shape, arrayobj.py:3601)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', 'n', 'shape']
    $34load_global.4 = global(range: <class 'range'>) ['$34load_global.4']
    $52call.7 = call $34load_global.4(n, func=$34load_global.4, args=[Var(n, arrayobj.py:3602)], kws=(), vararg=None, varkwarg=None, target=None) ['$34load_global.4', '$52call.7', 'n']
    $62get_iter.8 = getiter(value=$52call.7) ['$52call.7', '$62get_iter.8']
    $phi64.0 = $62get_iter.8                 ['$62get_iter.8', '$phi64.0']
    jump 64                                  []
label 64:
    $64for_iter.1 = iternext(value=$phi64.0) ['$64for_iter.1', '$phi64.0']
    $64for_iter.2 = pair_first(value=$64for_iter.1) ['$64for_iter.1', '$64for_iter.2']
    $64for_iter.3 = pair_second(value=$64for_iter.1) ['$64for_iter.1', '$64for_iter.3']
    $phi66.1 = $64for_iter.2                 ['$64for_iter.2', '$phi66.1']
    branch $64for_iter.3, 66, 174            ['$64for_iter.3']
label 66:
    i = $phi66.1                             ['$phi66.1', 'i']
    $72binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$72binary_subscr.4', 'i', 'shape']
    $84load_global.6 = global(len: <built-in function len>) ['$84load_global.6']
    $102call.9 = call $84load_global.6(main_shape, func=$84load_global.6, args=[Var(main_shape, arrayobj.py:3601)], kws=(), vararg=None, varkwarg=None, target=None) ['$102call.9', '$84load_global.6', 'main_shape']
    $binop_sub114.11 = $102call.9 - n        ['$102call.9', '$binop_sub114.11', 'n']
    $binop_add120.13 = $binop_sub114.11 + i  ['$binop_add120.13', '$binop_sub114.11', 'i']
    $124binary_subscr.14 = getitem(value=main_shape, index=$binop_add120.13, fn=<built-in function getitem>) ['$124binary_subscr.14', '$binop_add120.13', 'main_shape']
    $134compare_op.15 = $72binary_subscr.4 != $124binary_subscr.14 ['$124binary_subscr.14', '$134compare_op.15', '$72binary_subscr.4']
    bool140 = global(bool: <class 'bool'>)   ['bool140']
    $140pred = call bool140($134compare_op.15, func=bool140, args=(Var($134compare_op.15, arrayobj.py:3604),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.15', '$140pred', 'bool140']
    branch $140pred, 142, 172                ['$140pred']
label 142:
    $142load_global.1 = global(ValueError: <class 'ValueError'>) ['$142load_global.1']
    $const154.3.1 = const(str, nditer(): operands could not be broadcast together) ['$const154.3.1']
    $160call.4 = call $142load_global.1($const154.3.1, func=$142load_global.1, args=[Var($const154.3.1, arrayobj.py:3605)], kws=(), vararg=None, varkwarg=None, target=None) ['$142load_global.1', '$160call.4', '$const154.3.1']
    raise $160call.4                         ['$160call.4']
label 172:
    jump 64                                  []
label 174:
    $const174.0.0 = const(NoneType, None)    ['$const174.0.0']
    $176return_value.1 = cast(value=$const174.0.0) ['$176return_value.1', '$const174.0.0']
    return $176return_value.1                ['$176return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A178B0790>
DEBUG:numba.core.ssa:on stmt: shape = arg(0, name=shape)
DEBUG:numba.core.ssa:on stmt: main_shape = arg(1, name=main_shape)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: n = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $34load_global.4 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $52call.7 = call $34load_global.4(n, func=$34load_global.4, args=[Var(n, arrayobj.py:3602)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $62get_iter.8 = getiter(value=$52call.7)
DEBUG:numba.core.ssa:on stmt: $phi64.0 = $62get_iter.8
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block analysis pass on 64
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A178B0790>
DEBUG:numba.core.ssa:on stmt: $64for_iter.1 = iternext(value=$phi64.0)
DEBUG:numba.core.ssa:on stmt: $64for_iter.2 = pair_first(value=$64for_iter.1)
DEBUG:numba.core.ssa:on stmt: $64for_iter.3 = pair_second(value=$64for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi66.1 = $64for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $64for_iter.3, 66, 174
DEBUG:numba.core.ssa:==== SSA block analysis pass on 66
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A178B0790>
DEBUG:numba.core.ssa:on stmt: i = $phi66.1
DEBUG:numba.core.ssa:on stmt: $72binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $84load_global.6 = global(len: <built-in function len>)
DEBUG:numba.core.ssa:on stmt: $102call.9 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub114.11 = $102call.9 - n
DEBUG:numba.core.ssa:on stmt: $binop_add120.13 = $binop_sub114.11 + i
DEBUG:numba.core.ssa:on stmt: $124binary_subscr.14 = getitem(value=main_shape, index=$binop_add120.13, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $134compare_op.15 = $72binary_subscr.4 != $124binary_subscr.14
DEBUG:numba.core.ssa:on stmt: bool140 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $140pred = call bool140($134compare_op.15, func=bool140, args=(Var($134compare_op.15, arrayobj.py:3604),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $140pred, 142, 172
DEBUG:numba.core.ssa:==== SSA block analysis pass on 142
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A178B0790>
DEBUG:numba.core.ssa:on stmt: $142load_global.1 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const154.3.1 = const(str, nditer(): operands could not be broadcast together)
DEBUG:numba.core.ssa:on stmt: $160call.4 = call $142load_global.1($const154.3.1, func=$142load_global.1, args=[Var($const154.3.1, arrayobj.py:3605)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('nditer(): operands could not be broadcast together')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 172
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A178B0790>
DEBUG:numba.core.ssa:on stmt: jump 64
DEBUG:numba.core.ssa:==== SSA block analysis pass on 174
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A178B0790>
DEBUG:numba.core.ssa:on stmt: $const174.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $176return_value.1 = cast(value=$const174.0.0)
DEBUG:numba.core.ssa:on stmt: return $176return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$102call.9': [(<numba.core.ir.Assign object at 0x0000019A17863750>,
                             66)],
             '$124binary_subscr.14': [(<numba.core.ir.Assign object at 0x0000019A1799C490>,
                                       66)],
             '$134compare_op.15': [(<numba.core.ir.Assign object at 0x0000019A1769C4D0>,
                                    66)],
             '$140pred': [(<numba.core.ir.Assign object at 0x0000019A1784CF10>,
                           66)],
             '$142load_global.1': [(<numba.core.ir.Assign object at 0x0000019A1784C9D0>,
                                    142)],
             '$160call.4': [(<numba.core.ir.Assign object at 0x0000019A1784F710>,
                             142)],
             '$176return_value.1': [(<numba.core.ir.Assign object at 0x0000019A1784ED90>,
                                     174)],
             '$34load_global.4': [(<numba.core.ir.Assign object at 0x0000019A178618D0>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17860C90>,
                                  0)],
             '$52call.7': [(<numba.core.ir.Assign object at 0x0000019A17863F10>,
                            0)],
             '$62get_iter.8': [(<numba.core.ir.Assign object at 0x0000019A17862910>,
                                0)],
             '$64for_iter.1': [(<numba.core.ir.Assign object at 0x0000019A17861CD0>,
                                64)],
             '$64for_iter.2': [(<numba.core.ir.Assign object at 0x0000019A17862B10>,
                                64)],
             '$64for_iter.3': [(<numba.core.ir.Assign object at 0x0000019A17862AD0>,
                                64)],
             '$72binary_subscr.4': [(<numba.core.ir.Assign object at 0x0000019A178629D0>,
                                     66)],
             '$84load_global.6': [(<numba.core.ir.Assign object at 0x0000019A17863CD0>,
                                   66)],
             '$binop_add120.13': [(<numba.core.ir.Assign object at 0x0000019A1778DD90>,
                                   66)],
             '$binop_sub114.11': [(<numba.core.ir.Assign object at 0x0000019A17862810>,
                                   66)],
             '$const154.3.1': [(<numba.core.ir.Assign object at 0x0000019A1784FB10>,
                                142)],
             '$const174.0.0': [(<numba.core.ir.Assign object at 0x0000019A1784F6D0>,
                                174)],
             '$phi64.0': [(<numba.core.ir.Assign object at 0x0000019A17861A50>,
                           0)],
             '$phi66.1': [(<numba.core.ir.Assign object at 0x0000019A17860D90>,
                           64)],
             'bool140': [(<numba.core.ir.Assign object at 0x0000019A1769C850>,
                          66)],
             'i': [(<numba.core.ir.Assign object at 0x0000019A17860390>, 66)],
             'main_shape': [(<numba.core.ir.Assign object at 0x0000019A178626D0>,
                             0)],
             'n': [(<numba.core.ir.Assign object at 0x0000019A17862610>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x0000019A178606D0>,
                        0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A178B0790>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4793)
           2	RESUME(arg=0, lineno=4793)
           4	LOAD_FAST(arg=1, lineno=4794)
           6	LOAD_FAST(arg=0, lineno=4794)
           8	LOAD_ATTR(arg=0, lineno=4794)
          18	LOAD_CONST(arg=1, lineno=4794)
          20	BINARY_OP(arg=10, lineno=4794)
          24	COMPARE_OP(arg=4, lineno=4794)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4794)
          32	LOAD_FAST(arg=1, lineno=4794)
          34	LOAD_FAST(arg=0, lineno=4794)
          36	LOAD_ATTR(arg=0, lineno=4794)
          46	UNARY_NEGATIVE(arg=None, lineno=4794)
          48	COMPARE_OP(arg=0, lineno=4794)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4794)
>         56	LOAD_GLOBAL(arg=3, lineno=4795)
          68	LOAD_CONST(arg=2, lineno=4795)
          70	PRECALL(arg=1, lineno=4795)
          74	CALL(arg=1, lineno=4795)
          84	RAISE_VARARGS(arg=1, lineno=4795)
>         86	LOAD_FAST(arg=0, lineno=4796)
          88	LOAD_METHOD(arg=2, lineno=4796)
         110	PRECALL(arg=0, lineno=4796)
         114	CALL(arg=0, lineno=4796)
         124	LOAD_FAST(arg=1, lineno=4796)
         126	BINARY_SUBSCR(arg=None, lineno=4796)
         136	RETURN_VALUE(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4793)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=4793)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$a6.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$8load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$8load_attr.2', '$const18.3.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$binop_sub20.4']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$24compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$a34.1']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$36load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$46unary_negative.3']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$48compare_op.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=56 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4795)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=PRECALL(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0', '$const68.2.2']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=CALL(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0', '$const68.2.2']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$74call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=86 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$a86.0']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=PRECALL(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$null$88.1', '$88load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=CALL(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$null$88.1', '$88load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$114call.3']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$114call.3', '$indices124.4']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$126binary_subscr.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3.1'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3.1', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    axis = arg(2, name=axis)                 ['axis']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3.1 = const(int, 1)             ['$const18.3.1']
    $binop_sub20.4 = $8load_attr.2 - $const18.3.1 ['$8load_attr.2', '$binop_sub20.4', '$const18.3.1']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2.2 = const(str, Index out of bounds) ['$const68.2.2']
    $74call.3 = call $56load_global.0($const68.2.2, func=$56load_global.0, args=[Var($const68.2.2, arrayobj.py:4795)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17708450>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: indices = arg(1, name=indices)
DEBUG:numba.core.ssa:on stmt: axis = arg(2, name=axis)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3.1
DEBUG:numba.core.ssa:on stmt: $24compare_op.5 = indices > $binop_sub20.4
DEBUG:numba.core.ssa:on stmt: bool30 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $30pred, 56, 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17708450>
DEBUG:numba.core.ssa:on stmt: $36load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
DEBUG:numba.core.ssa:on stmt: $48compare_op.4 = indices < $46unary_negative.3
DEBUG:numba.core.ssa:on stmt: bool54 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $54pred, 56, 86
DEBUG:numba.core.ssa:==== SSA block analysis pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17708450>
DEBUG:numba.core.ssa:on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
DEBUG:numba.core.ssa:on stmt: $const68.2.2 = const(str, Index out of bounds)
DEBUG:numba.core.ssa:on stmt: $74call.3 = call $56load_global.0($const68.2.2, func=$56load_global.0, args=[Var($const68.2.2, arrayobj.py:4795)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17708450>
DEBUG:numba.core.ssa:on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
DEBUG:numba.core.ssa:on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
DEBUG:numba.core.ssa:on stmt: return $136return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x0000019A17CC3A90>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000019A17CC12D0>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x0000019A17CC29D0>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x0000019A17C98710>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x0000019A17C98CD0>,
                          0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A17C9B090>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x0000019A17C9AD10>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x0000019A17C9AB90>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x0000019A17C99690>,
                          32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17C99310>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x0000019A17C9A010>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x0000019A17C98E10>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A17C9A190>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x0000019A17C98850>,
                                 0)],
             '$const18.3.1': [(<numba.core.ir.Assign object at 0x0000019A17C9AAD0>,
                               0)],
             '$const68.2.2': [(<numba.core.ir.Assign object at 0x0000019A17C9A710>,
                               56)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A17C9BA90>, 0)],
             'axis': [(<numba.core.ir.Assign object at 0x0000019A17C9B1D0>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x0000019A17C98E50>,
                         0)],
             'bool54': [(<numba.core.ir.Assign object at 0x0000019A17C994D0>,
                         32)],
             'indices': [(<numba.core.ir.Assign object at 0x0000019A17C9A650>,
                          0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17708450>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=436)
           2	COPY_FREE_VARS(arg=1, lineno=436)
           4	RESUME(arg=0, lineno=436)
           6	LOAD_DEREF(arg=3, lineno=439)
           8	STORE_FAST(arg=1, lineno=439)
          10	LOAD_GLOBAL(arg=1, lineno=440)
          22	LOAD_ATTR(arg=1, lineno=440)
          32	LOAD_FAST(arg=0, lineno=440)
          34	PRECALL(arg=1, lineno=440)
          38	CALL(arg=1, lineno=440)
          48	GET_ITER(arg=None, lineno=440)
>         50	FOR_ITER(arg=25, lineno=440)
          52	STORE_FAST(arg=2, lineno=440)
          54	LOAD_FAST(arg=1, lineno=441)
          56	LOAD_FAST(arg=2, lineno=441)
          58	LOAD_METHOD(arg=2, lineno=441)
          80	PRECALL(arg=0, lineno=441)
          84	CALL(arg=0, lineno=441)
          94	BINARY_OP(arg=13, lineno=441)
          98	STORE_FAST(arg=1, lineno=441)
         100	JUMP_BACKWARD(arg=26, lineno=441)
>        102	LOAD_FAST(arg=1, lineno=442)
         104	LOAD_FAST(arg=0, lineno=442)
         106	LOAD_ATTR(arg=3, lineno=442)
         116	BINARY_OP(arg=11, lineno=442)
         120	RETURN_VALUE(arg=None, lineno=442)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=436)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=436)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=RESUME(arg=0, lineno=436)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=439)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=1, lineno=439)
DEBUG:numba.core.byteflow:stack ['$6load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_ATTR(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$10load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=440)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$22load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=PRECALL(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$22load_attr.3', '$a32.4']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=CALL(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$22load_attr.3', '$a32.4']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=GET_ITER(arg=None, lineno=440)
DEBUG:numba.core.byteflow:stack ['$38call.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=50, stack=('$48get_iter.6',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi50.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=50 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=50, inst=FOR_ITER(arg=25, lineno=440)
DEBUG:numba.core.byteflow:stack ['$phi50.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=102 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=442)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=442)
DEBUG:numba.core.byteflow:stack ['$c102.0']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_ATTR(arg=3, lineno=442)
DEBUG:numba.core.byteflow:stack ['$c102.0', '$a104.1']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BINARY_OP(arg=11, lineno=442)
DEBUG:numba.core.byteflow:stack ['$c102.0', '$106load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=442)
DEBUG:numba.core.byteflow:stack ['$binop_truediv116.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=52 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi52.0', '$phi52.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=52 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=52, inst=STORE_FAST(arg=2, lineno=440)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$phi52.1']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_METHOD(arg=2, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2', '$v56.3']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=PRECALL(arg=0, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=CALL(arg=0, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=BINARY_OP(arg=13, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2', '$84call.6']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=STORE_FAST(arg=1, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$binop_iadd94.7']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=JUMP_BACKWARD(arg=26, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=50, stack=('$phi52.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=102 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi50.0': {('$48get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.6'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {'item': '$10load_global.1', 'res': '$22load_attr.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$a32.4'}), (34, {}), (36, {}), (38, {'func': '$22load_attr.3', 'args': ['$a32.4'], 'kw_names': None, 'res': '$38call.5'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.5', 'res': '$48get_iter.6'})), outgoing_phis={'$phi50.0': '$48get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.6',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 52: ('$phi50.0', '$50for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$c54.2'}), (56, {'res': '$v56.3'}), (58, {'item': '$v56.3', 'res': '$58load_method.5'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'func': '$58load_method.5', 'args': [], 'kw_names': None, 'res': '$84call.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {'op': '+=', 'lhs': '$c54.2', 'rhs': '$84call.6', 'res': '$binop_iadd94.7'}), (96, {}), (98, {'value': '$binop_iadd94.7'}), (100, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi52.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$c102.0'}), (104, {'res': '$a104.1'}), (106, {'item': '$a104.1', 'res': '$106load_attr.2'}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {'op': '/', 'lhs': '$c102.0', 'rhs': '$106load_attr.2', 'res': '$binop_truediv116.3'}), (118, {}), (120, {'retval': '$binop_truediv116.3', 'castval': '$120return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$10load_global.1']
    $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$22load_attr.3']
    $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.3', '$38call.5', 'a']
    $48get_iter.6 = getiter(value=$38call.5) ['$38call.5', '$48get_iter.6']
    $phi50.0 = $48get_iter.6                 ['$48get_iter.6', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 102            ['$50for_iter.3']
label 52:
    v = $phi52.1                             ['$phi52.1', 'v']
    $58load_method.5 = getattr(value=v, attr=item) ['$58load_method.5', 'v']
    $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_method.5', '$84call.6']
    $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined) ['$84call.6', '$binop_iadd94.7', 'c']
    c = $binop_iadd94.7                      ['$binop_iadd94.7', 'c']
    jump 50                                  []
label 102:
    $106load_attr.2 = getattr(value=a, attr=size) ['$106load_attr.2', 'a']
    $binop_truediv116.3 = c / $106load_attr.2 ['$106load_attr.2', '$binop_truediv116.3', 'c']
    $120return_value.4 = cast(value=$binop_truediv116.3) ['$120return_value.4', '$binop_truediv116.3']
    return $120return_value.4                ['$120return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17A2ED50>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $48get_iter.6 = getiter(value=$38call.5)
DEBUG:numba.core.ssa:on stmt: $phi50.0 = $48get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block analysis pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17A2ED50>
DEBUG:numba.core.ssa:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
DEBUG:numba.core.ssa:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi52.1 = $50for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $50for_iter.3, 52, 102
DEBUG:numba.core.ssa:==== SSA block analysis pass on 52
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17A2ED50>
DEBUG:numba.core.ssa:on stmt: v = $phi52.1
DEBUG:numba.core.ssa:on stmt: $58load_method.5 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c = $binop_iadd94.7
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block analysis pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17A2ED50>
DEBUG:numba.core.ssa:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $binop_truediv116.3 = c / $106load_attr.2
DEBUG:numba.core.ssa:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
DEBUG:numba.core.ssa:on stmt: return $120return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$106load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A18F33650>,
                                  102)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x0000019A18F310D0>,
                                   0)],
             '$120return_value.4': [(<numba.core.ir.Assign object at 0x0000019A18F33B90>,
                                     102)],
             '$22load_attr.3': [(<numba.core.ir.Assign object at 0x0000019A18F31310>,
                                 0)],
             '$38call.5': [(<numba.core.ir.Assign object at 0x0000019A18F31750>,
                            0)],
             '$48get_iter.6': [(<numba.core.ir.Assign object at 0x0000019A18F31950>,
                                0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x0000019A18F31CD0>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x0000019A18F31E50>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x0000019A18F31FD0>,
                                50)],
             '$58load_method.5': [(<numba.core.ir.Assign object at 0x0000019A18F32990>,
                                   52)],
             '$84call.6': [(<numba.core.ir.Assign object at 0x0000019A18F32C50>,
                            52)],
             '$binop_iadd94.7': [(<numba.core.ir.Assign object at 0x0000019A18F32F10>,
                                  52)],
             '$binop_truediv116.3': [(<numba.core.ir.Assign object at 0x0000019A18F33950>,
                                      102)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x0000019A18F30FD0>,
                           0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x0000019A18F32090>,
                           50)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A17A9F250>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x0000019A1770A750>, 0),
                   (<numba.core.ir.Assign object at 0x0000019A17C99D10>, 52)],
             'v': [(<numba.core.ir.Assign object at 0x0000019A18F32350>, 52)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17A2ED50>
DEBUG:numba.core.ssa:Fix SSA violator on var c
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A18F36190>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:first assign: c
DEBUG:numba.core.ssa:replaced with: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $48get_iter.6 = getiter(value=$38call.5)
DEBUG:numba.core.ssa:on stmt: $phi50.0 = $48get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A18F36190>
DEBUG:numba.core.ssa:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
DEBUG:numba.core.ssa:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi52.1 = $50for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $50for_iter.3, 52, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 52
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A18F36190>
DEBUG:numba.core.ssa:on stmt: v = $phi52.1
DEBUG:numba.core.ssa:on stmt: $58load_method.5 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c = $binop_iadd94.7
DEBUG:numba.core.ssa:replaced with: c.1 = $binop_iadd94.7
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A18F36190>
DEBUG:numba.core.ssa:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $binop_truediv116.3 = c / $106load_attr.2
DEBUG:numba.core.ssa:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
DEBUG:numba.core.ssa:on stmt: return $120return_value.4
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000019A18F36150>],
             52: [<numba.core.ir.Assign object at 0x0000019A18F35E90>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A18F36350>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $48get_iter.6 = getiter(value=$38call.5)
DEBUG:numba.core.ssa:on stmt: $phi50.0 = $48get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A18F36350>
DEBUG:numba.core.ssa:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
DEBUG:numba.core.ssa:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi52.1 = $50for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $50for_iter.3, 52, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 52
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A18F36350>
DEBUG:numba.core.ssa:on stmt: v = $phi52.1
DEBUG:numba.core.ssa:on stmt: $58load_method.5 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='c' stmt=$binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 52
DEBUG:numba.core.ssa:idom 50 from label 52
DEBUG:numba.core.ssa:find_def_from_bottom label 50
DEBUG:numba.core.ssa:find_def_from_top label 50
DEBUG:numba.core.ssa:insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 50
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 52
DEBUG:numba.core.ssa:incoming_def c.1 = $binop_iadd94.7
DEBUG:numba.core.ssa:replaced with: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c.1 = $binop_iadd94.7
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A18F36350>
DEBUG:numba.core.ssa:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $binop_truediv116.3 = c / $106load_attr.2
DEBUG:numba.core.ssa:find_def var='c' stmt=$binop_truediv116.3 = c / $106load_attr.2
DEBUG:numba.core.ssa:find_def_from_top label 102
DEBUG:numba.core.ssa:idom 50 from label 102
DEBUG:numba.core.ssa:find_def_from_bottom label 50
DEBUG:numba.core.ssa:replaced with: $binop_truediv116.3 = c.2 / $106load_attr.2
DEBUG:numba.core.ssa:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
DEBUG:numba.core.ssa:on stmt: return $120return_value.4
DEBUG:root:send audio data 1748516243.140720
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1193)
           2	RESUME(arg=0, lineno=1193)
           4	LOAD_FAST(arg=0, lineno=1205)
           6	LOAD_CONST(arg=1, lineno=1205)
           8	BINARY_SUBSCR(arg=None, lineno=1205)
          18	LOAD_GLOBAL(arg=1, lineno=1205)
          30	LOAD_ATTR(arg=1, lineno=1205)
          40	LOAD_FAST(arg=0, lineno=1205)
          42	LOAD_CONST(arg=2, lineno=1205)
          44	LOAD_GLOBAL(arg=5, lineno=1205)
          56	LOAD_FAST(arg=2, lineno=1205)
          58	LOAD_FAST(arg=0, lineno=1205)
          60	LOAD_ATTR(arg=3, lineno=1205)
          70	LOAD_CONST(arg=1, lineno=1205)
          72	BINARY_SUBSCR(arg=None, lineno=1205)
          82	PRECALL(arg=2, lineno=1205)
          86	CALL(arg=2, lineno=1205)
          96	BUILD_SLICE(arg=2, lineno=1205)
          98	BINARY_SUBSCR(arg=None, lineno=1205)
         108	PRECALL(arg=1, lineno=1205)
         112	CALL(arg=1, lineno=1205)
         122	COMPARE_OP(arg=5, lineno=1205)
         128	LOAD_FAST(arg=7, lineno=1205)
         130	LOAD_CONST(arg=1, lineno=1205)
         132	STORE_SUBSCR(arg=None, lineno=1205)
         136	LOAD_FAST(arg=7, lineno=1206)
         138	LOAD_CONST(arg=1, lineno=1206)
         140	COPY(arg=2, lineno=1206)
         142	COPY(arg=2, lineno=1206)
         144	BINARY_SUBSCR(arg=None, lineno=1206)
         154	LOAD_FAST(arg=0, lineno=1206)
         156	LOAD_CONST(arg=1, lineno=1206)
         158	BINARY_SUBSCR(arg=None, lineno=1206)
         168	LOAD_GLOBAL(arg=1, lineno=1206)
         180	LOAD_ATTR(arg=4, lineno=1206)
         190	LOAD_FAST(arg=0, lineno=1206)
         192	LOAD_CONST(arg=2, lineno=1206)
         194	LOAD_GLOBAL(arg=5, lineno=1206)
         206	LOAD_FAST(arg=4, lineno=1206)
         208	LOAD_FAST(arg=0, lineno=1206)
         210	LOAD_ATTR(arg=3, lineno=1206)
         220	LOAD_CONST(arg=1, lineno=1206)
         222	BINARY_SUBSCR(arg=None, lineno=1206)
         232	PRECALL(arg=2, lineno=1206)
         236	CALL(arg=2, lineno=1206)
         246	BUILD_SLICE(arg=2, lineno=1206)
         248	BINARY_SUBSCR(arg=None, lineno=1206)
         258	PRECALL(arg=1, lineno=1206)
         262	CALL(arg=1, lineno=1206)
         272	LOAD_FAST(arg=5, lineno=1206)
         274	BINARY_OP(arg=0, lineno=1206)
         278	COMPARE_OP(arg=5, lineno=1206)
         284	BINARY_OP(arg=14, lineno=1206)
         288	SWAP(arg=3, lineno=1206)
         290	SWAP(arg=2, lineno=1206)
         292	STORE_SUBSCR(arg=None, lineno=1206)
         296	LOAD_FAST(arg=7, lineno=1208)
         298	LOAD_CONST(arg=1, lineno=1208)
         300	BINARY_SUBSCR(arg=None, lineno=1208)
         310	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1208)
         312	LOAD_FAST(arg=6, lineno=1209)
         314	LOAD_CONST(arg=3, lineno=1209)
         316	BINARY_OP(arg=0, lineno=1209)
         320	STORE_FAST(arg=8, lineno=1209)
         322	JUMP_FORWARD(arg=2, lineno=1209)
>        324	LOAD_CONST(arg=3, lineno=1211)
         326	STORE_FAST(arg=8, lineno=1211)
>        328	LOAD_FAST(arg=8, lineno=1213)
         330	LOAD_FAST(arg=0, lineno=1213)
         332	LOAD_ATTR(arg=3, lineno=1213)
         342	LOAD_CONST(arg=1, lineno=1213)
         344	BINARY_SUBSCR(arg=None, lineno=1213)
         354	COMPARE_OP(arg=0, lineno=1213)
         360	POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1213)
>        362	LOAD_GLOBAL(arg=1, lineno=1214)
         374	LOAD_ATTR(arg=1, lineno=1214)
         384	LOAD_FAST(arg=0, lineno=1214)
         386	LOAD_GLOBAL(arg=3, lineno=1214)
         398	LOAD_CONST(arg=1, lineno=1214)
         400	LOAD_FAST(arg=8, lineno=1214)
         402	LOAD_FAST(arg=1, lineno=1214)
         404	BINARY_OP(arg=10, lineno=1214)
         408	PRECALL(arg=2, lineno=1214)
         412	CALL(arg=2, lineno=1214)
         422	LOAD_GLOBAL(arg=5, lineno=1214)
         434	LOAD_FAST(arg=8, lineno=1214)
         436	LOAD_FAST(arg=2, lineno=1214)
         438	BINARY_OP(arg=0, lineno=1214)
         442	LOAD_FAST(arg=0, lineno=1214)
         444	LOAD_ATTR(arg=3, lineno=1214)
         454	LOAD_CONST(arg=1, lineno=1214)
         456	BINARY_SUBSCR(arg=None, lineno=1214)
         466	PRECALL(arg=2, lineno=1214)
         470	CALL(arg=2, lineno=1214)
         480	BUILD_SLICE(arg=2, lineno=1214)
         482	BINARY_SUBSCR(arg=None, lineno=1214)
         492	PRECALL(arg=1, lineno=1214)
         496	CALL(arg=1, lineno=1214)
         506	STORE_FAST(arg=9, lineno=1214)
         508	LOAD_FAST(arg=0, lineno=1217)
         510	LOAD_FAST(arg=8, lineno=1217)
         512	BINARY_SUBSCR(arg=None, lineno=1217)
         522	LOAD_FAST(arg=9, lineno=1217)
         524	COMPARE_OP(arg=2, lineno=1217)
         530	LOAD_FAST(arg=7, lineno=1217)
         532	LOAD_FAST(arg=8, lineno=1217)
         534	STORE_SUBSCR(arg=None, lineno=1217)
         538	LOAD_FAST(arg=7, lineno=1219)
         540	LOAD_FAST(arg=8, lineno=1219)
         542	BINARY_SUBSCR(arg=None, lineno=1219)
         552	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1219)
         554	LOAD_FAST(arg=8, lineno=1220)
         556	LOAD_CONST(arg=3, lineno=1220)
         558	BINARY_OP(arg=13, lineno=1220)
         562	STORE_FAST(arg=8, lineno=1220)
         564	JUMP_BACKWARD(arg=119, lineno=1221)
>        566	LOAD_GLOBAL(arg=1, lineno=1223)
         578	LOAD_ATTR(arg=4, lineno=1223)
         588	LOAD_FAST(arg=0, lineno=1223)
         590	LOAD_GLOBAL(arg=3, lineno=1223)
         602	LOAD_CONST(arg=1, lineno=1223)
         604	LOAD_FAST(arg=8, lineno=1223)
         606	LOAD_FAST(arg=3, lineno=1223)
         608	BINARY_OP(arg=10, lineno=1223)
         612	PRECALL(arg=2, lineno=1223)
         616	CALL(arg=2, lineno=1223)
         626	LOAD_GLOBAL(arg=5, lineno=1223)
         638	LOAD_FAST(arg=8, lineno=1223)
         640	LOAD_FAST(arg=4, lineno=1223)
         642	BINARY_OP(arg=0, lineno=1223)
         646	LOAD_FAST(arg=0, lineno=1223)
         648	LOAD_ATTR(arg=3, lineno=1223)
         658	LOAD_CONST(arg=1, lineno=1223)
         660	BINARY_SUBSCR(arg=None, lineno=1223)
         670	PRECALL(arg=2, lineno=1223)
         674	CALL(arg=2, lineno=1223)
         684	BUILD_SLICE(arg=2, lineno=1223)
         686	BINARY_SUBSCR(arg=None, lineno=1223)
         696	PRECALL(arg=1, lineno=1223)
         700	CALL(arg=1, lineno=1223)
         710	STORE_FAST(arg=10, lineno=1223)
         712	LOAD_FAST(arg=7, lineno=1224)
         714	LOAD_FAST(arg=8, lineno=1224)
         716	COPY(arg=2, lineno=1224)
         718	COPY(arg=2, lineno=1224)
         720	BINARY_SUBSCR(arg=None, lineno=1224)
         730	LOAD_FAST(arg=0, lineno=1224)
         732	LOAD_FAST(arg=8, lineno=1224)
         734	BINARY_SUBSCR(arg=None, lineno=1224)
         744	LOAD_FAST(arg=10, lineno=1224)
         746	LOAD_FAST(arg=5, lineno=1224)
         748	BINARY_OP(arg=0, lineno=1224)
         752	COMPARE_OP(arg=5, lineno=1224)
         758	BINARY_OP(arg=14, lineno=1224)
         762	SWAP(arg=3, lineno=1224)
         764	SWAP(arg=2, lineno=1224)
         766	STORE_SUBSCR(arg=None, lineno=1224)
         770	LOAD_FAST(arg=7, lineno=1226)
         772	LOAD_FAST(arg=8, lineno=1226)
         774	BINARY_SUBSCR(arg=None, lineno=1226)
         784	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1226)
         786	LOAD_FAST(arg=8, lineno=1227)
         788	LOAD_CONST(arg=3, lineno=1227)
         790	BINARY_OP(arg=13, lineno=1227)
         794	STORE_FAST(arg=8, lineno=1227)
         796	JUMP_BACKWARD(arg=235, lineno=1228)
>        798	LOAD_FAST(arg=8, lineno=1231)
         800	LOAD_FAST(arg=6, lineno=1231)
         802	LOAD_CONST(arg=3, lineno=1231)
         804	BINARY_OP(arg=0, lineno=1231)
         808	BINARY_OP(arg=13, lineno=1231)
         812	STORE_FAST(arg=8, lineno=1231)
         814	LOAD_FAST(arg=8, lineno=1213)
         816	LOAD_FAST(arg=0, lineno=1213)
         818	LOAD_ATTR(arg=3, lineno=1213)
         828	LOAD_CONST(arg=1, lineno=1213)
         830	BINARY_SUBSCR(arg=None, lineno=1213)
         840	COMPARE_OP(arg=0, lineno=1213)
         846	POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1213)
         848	LOAD_CONST(arg=2, lineno=1213)
         850	RETURN_VALUE(arg=None, lineno=1213)
>        852	LOAD_CONST(arg=2, lineno=1213)
         854	RETURN_VALUE(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1193)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1193)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1205)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$18load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_GLOBAL(arg=5, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_ATTR(arg=3, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$x58.11']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_CONST(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12', '$const70.13.1']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=PRECALL(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=CALL(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=BUILD_SLICE(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$86call.15']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=BINARY_SUBSCR(arg=None, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$96build_slice.17']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=PRECALL(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=CALL(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=COMPARE_OP(arg=5, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$112call.19']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=7, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$122compare_op.20']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$122compare_op.20', '$peaks128.21']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=STORE_SUBSCR(arg=None, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$122compare_op.20', '$peaks128.21', '$const130.22.1']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_FAST(arg=7, lineno=1206)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=COPY(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=COPY(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$peaks136.23']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=BINARY_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$peaks136.23', '$const138.24.1']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$x154.26']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=BINARY_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$x154.26', '$const156.27.1']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_GLOBAL(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_ATTR(arg=4, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$168load_global.29']
DEBUG:numba.core.byteflow:dispatch pc=190, inst=LOAD_FAST(arg=0, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_GLOBAL(arg=5, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=LOAD_FAST(arg=4, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34']
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=LOAD_ATTR(arg=3, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$x208.37']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=BINARY_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38', '$const220.39.1']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=PRECALL(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=CALL(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=BUILD_SLICE(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$236call.41']
DEBUG:numba.core.byteflow:dispatch pc=248, inst=BINARY_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$246build_slice.43']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=PRECALL(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=CALL(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=BINARY_OP(arg=0, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45', '$delta272.46']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=COMPARE_OP(arg=5, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$binop_add274.47']
DEBUG:numba.core.byteflow:dispatch pc=284, inst=BINARY_OP(arg=14, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$278compare_op.48']
DEBUG:numba.core.byteflow:dispatch pc=288, inst=SWAP(arg=3, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$binop_iand284.49']
DEBUG:numba.core.byteflow:dispatch pc=290, inst=SWAP(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$binop_iand284.49', '$const138.24.1', '$peaks136.23']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=STORE_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$binop_iand284.49', '$peaks136.23', '$const138.24.1']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=LOAD_FAST(arg=7, lineno=1208)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=298, inst=LOAD_CONST(arg=1, lineno=1208)
DEBUG:numba.core.byteflow:stack ['$peaks296.50']
DEBUG:numba.core.byteflow:dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=1208)
DEBUG:numba.core.byteflow:stack ['$peaks296.50', '$const298.51.1']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1208)
DEBUG:numba.core.byteflow:stack ['$300binary_subscr.52']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=324, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=312 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=312, inst=LOAD_FAST(arg=6, lineno=1209)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=314, inst=LOAD_CONST(arg=3, lineno=1209)
DEBUG:numba.core.byteflow:stack ['$wait312.0']
DEBUG:numba.core.byteflow:dispatch pc=316, inst=BINARY_OP(arg=0, lineno=1209)
DEBUG:numba.core.byteflow:stack ['$wait312.0', '$const314.1.3']
DEBUG:numba.core.byteflow:dispatch pc=320, inst=STORE_FAST(arg=8, lineno=1209)
DEBUG:numba.core.byteflow:stack ['$binop_add316.2']
DEBUG:numba.core.byteflow:dispatch pc=322, inst=JUMP_FORWARD(arg=2, lineno=1209)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=324 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=324, inst=LOAD_CONST(arg=3, lineno=1211)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=326, inst=STORE_FAST(arg=8, lineno=1211)
DEBUG:numba.core.byteflow:stack ['$const324.0.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=328 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=328, inst=LOAD_FAST(arg=8, lineno=1213)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=330, inst=LOAD_FAST(arg=0, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0']
DEBUG:numba.core.byteflow:dispatch pc=332, inst=LOAD_ATTR(arg=3, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0', '$x330.1']
DEBUG:numba.core.byteflow:dispatch pc=342, inst=LOAD_CONST(arg=1, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0', '$332load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0', '$332load_attr.2', '$const342.3.1']
DEBUG:numba.core.byteflow:dispatch pc=354, inst=COMPARE_OP(arg=0, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0', '$344binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=360, inst=POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$354compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=362, stack=(), blockstack=(), npush=0), Edge(pc=852, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=362 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=362, inst=LOAD_GLOBAL(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=374, inst=LOAD_ATTR(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$362load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=384, inst=LOAD_FAST(arg=0, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=386, inst=LOAD_GLOBAL(arg=3, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3']
DEBUG:numba.core.byteflow:dispatch pc=398, inst=LOAD_CONST(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=400, inst=LOAD_FAST(arg=8, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1']
DEBUG:numba.core.byteflow:dispatch pc=402, inst=LOAD_FAST(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1', '$n400.7']
DEBUG:numba.core.byteflow:dispatch pc=404, inst=BINARY_OP(arg=10, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1', '$n400.7', '$pre_max402.8']
DEBUG:numba.core.byteflow:dispatch pc=408, inst=PRECALL(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1', '$binop_sub404.9']
DEBUG:numba.core.byteflow:dispatch pc=412, inst=CALL(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1', '$binop_sub404.9']
DEBUG:numba.core.byteflow:dispatch pc=422, inst=LOAD_GLOBAL(arg=5, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10']
DEBUG:numba.core.byteflow:dispatch pc=434, inst=LOAD_FAST(arg=8, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11']
DEBUG:numba.core.byteflow:dispatch pc=436, inst=LOAD_FAST(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13']
DEBUG:numba.core.byteflow:dispatch pc=438, inst=BINARY_OP(arg=0, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13', '$post_max436.14']
DEBUG:numba.core.byteflow:dispatch pc=442, inst=LOAD_FAST(arg=0, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15']
DEBUG:numba.core.byteflow:dispatch pc=444, inst=LOAD_ATTR(arg=3, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$x442.16']
DEBUG:numba.core.byteflow:dispatch pc=454, inst=LOAD_CONST(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17']
DEBUG:numba.core.byteflow:dispatch pc=456, inst=BINARY_SUBSCR(arg=None, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17', '$const454.18.1']
DEBUG:numba.core.byteflow:dispatch pc=466, inst=PRECALL(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=470, inst=CALL(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=480, inst=BUILD_SLICE(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$470call.20']
DEBUG:numba.core.byteflow:dispatch pc=482, inst=BINARY_SUBSCR(arg=None, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$480build_slice.22']
DEBUG:numba.core.byteflow:dispatch pc=492, inst=PRECALL(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
DEBUG:numba.core.byteflow:dispatch pc=496, inst=CALL(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
DEBUG:numba.core.byteflow:dispatch pc=506, inst=STORE_FAST(arg=9, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$496call.24']
DEBUG:numba.core.byteflow:dispatch pc=508, inst=LOAD_FAST(arg=0, lineno=1217)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=510, inst=LOAD_FAST(arg=8, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$x508.25']
DEBUG:numba.core.byteflow:dispatch pc=512, inst=BINARY_SUBSCR(arg=None, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$x508.25', '$n510.26']
DEBUG:numba.core.byteflow:dispatch pc=522, inst=LOAD_FAST(arg=9, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$512binary_subscr.27']
DEBUG:numba.core.byteflow:dispatch pc=524, inst=COMPARE_OP(arg=2, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$512binary_subscr.27', '$maxn522.28']
DEBUG:numba.core.byteflow:dispatch pc=530, inst=LOAD_FAST(arg=7, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$524compare_op.29']
DEBUG:numba.core.byteflow:dispatch pc=532, inst=LOAD_FAST(arg=8, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$524compare_op.29', '$peaks530.30']
DEBUG:numba.core.byteflow:dispatch pc=534, inst=STORE_SUBSCR(arg=None, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$524compare_op.29', '$peaks530.30', '$n532.31']
DEBUG:numba.core.byteflow:dispatch pc=538, inst=LOAD_FAST(arg=7, lineno=1219)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=540, inst=LOAD_FAST(arg=8, lineno=1219)
DEBUG:numba.core.byteflow:stack ['$peaks538.32']
DEBUG:numba.core.byteflow:dispatch pc=542, inst=BINARY_SUBSCR(arg=None, lineno=1219)
DEBUG:numba.core.byteflow:stack ['$peaks538.32', '$n540.33']
DEBUG:numba.core.byteflow:dispatch pc=552, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1219)
DEBUG:numba.core.byteflow:stack ['$542binary_subscr.34']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=554, stack=(), blockstack=(), npush=0), Edge(pc=566, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=852 nstack_initial=0), State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=852 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=852, inst=LOAD_CONST(arg=2, lineno=1213)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=854, inst=RETURN_VALUE(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$const852.0.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=554 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=554, inst=LOAD_FAST(arg=8, lineno=1220)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=556, inst=LOAD_CONST(arg=3, lineno=1220)
DEBUG:numba.core.byteflow:stack ['$n554.0']
DEBUG:numba.core.byteflow:dispatch pc=558, inst=BINARY_OP(arg=13, lineno=1220)
DEBUG:numba.core.byteflow:stack ['$n554.0', '$const556.1.3']
DEBUG:numba.core.byteflow:dispatch pc=562, inst=STORE_FAST(arg=8, lineno=1220)
DEBUG:numba.core.byteflow:stack ['$binop_iadd558.2']
DEBUG:numba.core.byteflow:dispatch pc=564, inst=JUMP_BACKWARD(arg=119, lineno=1221)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=566 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=566 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=566, inst=LOAD_GLOBAL(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=578, inst=LOAD_ATTR(arg=4, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$566load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=588, inst=LOAD_FAST(arg=0, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=590, inst=LOAD_GLOBAL(arg=3, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3']
DEBUG:numba.core.byteflow:dispatch pc=602, inst=LOAD_CONST(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=604, inst=LOAD_FAST(arg=8, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1']
DEBUG:numba.core.byteflow:dispatch pc=606, inst=LOAD_FAST(arg=3, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1', '$n604.7']
DEBUG:numba.core.byteflow:dispatch pc=608, inst=BINARY_OP(arg=10, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1', '$n604.7', '$pre_avg606.8']
DEBUG:numba.core.byteflow:dispatch pc=612, inst=PRECALL(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1', '$binop_sub608.9']
DEBUG:numba.core.byteflow:dispatch pc=616, inst=CALL(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1', '$binop_sub608.9']
DEBUG:numba.core.byteflow:dispatch pc=626, inst=LOAD_GLOBAL(arg=5, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10']
DEBUG:numba.core.byteflow:dispatch pc=638, inst=LOAD_FAST(arg=8, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11']
DEBUG:numba.core.byteflow:dispatch pc=640, inst=LOAD_FAST(arg=4, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13']
DEBUG:numba.core.byteflow:dispatch pc=642, inst=BINARY_OP(arg=0, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13', '$post_avg640.14']
DEBUG:numba.core.byteflow:dispatch pc=646, inst=LOAD_FAST(arg=0, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15']
DEBUG:numba.core.byteflow:dispatch pc=648, inst=LOAD_ATTR(arg=3, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$x646.16']
DEBUG:numba.core.byteflow:dispatch pc=658, inst=LOAD_CONST(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17']
DEBUG:numba.core.byteflow:dispatch pc=660, inst=BINARY_SUBSCR(arg=None, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17', '$const658.18.1']
DEBUG:numba.core.byteflow:dispatch pc=670, inst=PRECALL(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=674, inst=CALL(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=684, inst=BUILD_SLICE(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$674call.20']
DEBUG:numba.core.byteflow:dispatch pc=686, inst=BINARY_SUBSCR(arg=None, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$684build_slice.22']
DEBUG:numba.core.byteflow:dispatch pc=696, inst=PRECALL(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
DEBUG:numba.core.byteflow:dispatch pc=700, inst=CALL(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
DEBUG:numba.core.byteflow:dispatch pc=710, inst=STORE_FAST(arg=10, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$700call.24']
DEBUG:numba.core.byteflow:dispatch pc=712, inst=LOAD_FAST(arg=7, lineno=1224)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=714, inst=LOAD_FAST(arg=8, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25']
DEBUG:numba.core.byteflow:dispatch pc=716, inst=COPY(arg=2, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26']
DEBUG:numba.core.byteflow:dispatch pc=718, inst=COPY(arg=2, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$peaks712.25']
DEBUG:numba.core.byteflow:dispatch pc=720, inst=BINARY_SUBSCR(arg=None, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$peaks712.25', '$n714.26']
DEBUG:numba.core.byteflow:dispatch pc=730, inst=LOAD_FAST(arg=0, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27']
DEBUG:numba.core.byteflow:dispatch pc=732, inst=LOAD_FAST(arg=8, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28']
DEBUG:numba.core.byteflow:dispatch pc=734, inst=BINARY_SUBSCR(arg=None, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28', '$n732.29']
DEBUG:numba.core.byteflow:dispatch pc=744, inst=LOAD_FAST(arg=10, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30']
DEBUG:numba.core.byteflow:dispatch pc=746, inst=LOAD_FAST(arg=5, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31']
DEBUG:numba.core.byteflow:dispatch pc=748, inst=BINARY_OP(arg=0, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31', '$delta746.32']
DEBUG:numba.core.byteflow:dispatch pc=752, inst=COMPARE_OP(arg=5, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$binop_add748.33']
DEBUG:numba.core.byteflow:dispatch pc=758, inst=BINARY_OP(arg=14, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$752compare_op.34']
DEBUG:numba.core.byteflow:dispatch pc=762, inst=SWAP(arg=3, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$binop_iand758.35']
DEBUG:numba.core.byteflow:dispatch pc=764, inst=SWAP(arg=2, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$binop_iand758.35', '$n714.26', '$peaks712.25']
DEBUG:numba.core.byteflow:dispatch pc=766, inst=STORE_SUBSCR(arg=None, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$binop_iand758.35', '$peaks712.25', '$n714.26']
DEBUG:numba.core.byteflow:dispatch pc=770, inst=LOAD_FAST(arg=7, lineno=1226)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=772, inst=LOAD_FAST(arg=8, lineno=1226)
DEBUG:numba.core.byteflow:stack ['$peaks770.36']
DEBUG:numba.core.byteflow:dispatch pc=774, inst=BINARY_SUBSCR(arg=None, lineno=1226)
DEBUG:numba.core.byteflow:stack ['$peaks770.36', '$n772.37']
DEBUG:numba.core.byteflow:dispatch pc=784, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1226)
DEBUG:numba.core.byteflow:stack ['$774binary_subscr.38']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=786, stack=(), blockstack=(), npush=0), Edge(pc=798, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=786 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=786, inst=LOAD_FAST(arg=8, lineno=1227)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=788, inst=LOAD_CONST(arg=3, lineno=1227)
DEBUG:numba.core.byteflow:stack ['$n786.0']
DEBUG:numba.core.byteflow:dispatch pc=790, inst=BINARY_OP(arg=13, lineno=1227)
DEBUG:numba.core.byteflow:stack ['$n786.0', '$const788.1.3']
DEBUG:numba.core.byteflow:dispatch pc=794, inst=STORE_FAST(arg=8, lineno=1227)
DEBUG:numba.core.byteflow:stack ['$binop_iadd790.2']
DEBUG:numba.core.byteflow:dispatch pc=796, inst=JUMP_BACKWARD(arg=235, lineno=1228)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=798 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=798 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=798, inst=LOAD_FAST(arg=8, lineno=1231)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=800, inst=LOAD_FAST(arg=6, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$n798.0']
DEBUG:numba.core.byteflow:dispatch pc=802, inst=LOAD_CONST(arg=3, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$n798.0', '$wait800.1']
DEBUG:numba.core.byteflow:dispatch pc=804, inst=BINARY_OP(arg=0, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$n798.0', '$wait800.1', '$const802.2.3']
DEBUG:numba.core.byteflow:dispatch pc=808, inst=BINARY_OP(arg=13, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$n798.0', '$binop_add804.3']
DEBUG:numba.core.byteflow:dispatch pc=812, inst=STORE_FAST(arg=8, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$binop_iadd808.4']
DEBUG:numba.core.byteflow:dispatch pc=814, inst=LOAD_FAST(arg=8, lineno=1213)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=816, inst=LOAD_FAST(arg=0, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5']
DEBUG:numba.core.byteflow:dispatch pc=818, inst=LOAD_ATTR(arg=3, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5', '$x816.6']
DEBUG:numba.core.byteflow:dispatch pc=828, inst=LOAD_CONST(arg=1, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5', '$818load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=830, inst=BINARY_SUBSCR(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5', '$818load_attr.7', '$const828.8.1']
DEBUG:numba.core.byteflow:dispatch pc=840, inst=COMPARE_OP(arg=0, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5', '$830binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=846, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$840compare_op.10']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=848, stack=(), blockstack=(), npush=0), Edge(pc=362, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=848 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=848, inst=LOAD_CONST(arg=2, lineno=1213)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=850, inst=RETURN_VALUE(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$const848.0.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=362 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=324 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=362 nstack_initial=0): set(),
             State(pc_initial=554 nstack_initial=0): set(),
             State(pc_initial=566 nstack_initial=0): set(),
             State(pc_initial=786 nstack_initial=0): set(),
             State(pc_initial=798 nstack_initial=0): set(),
             State(pc_initial=848 nstack_initial=0): set(),
             State(pc_initial=852 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'idx': 0, 'res': '$18load_global.3'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.3', 'res': '$30load_attr.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$x40.6'}), (42, {'res': '$const42.7.2'}), (44, {'idx': 2, 'res': '$44load_global.8'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'res': '$const70.13.1'}), (72, {'index': '$const70.13.1', 'target': '$60load_attr.12', 'res': '$72binary_subscr.14'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {'func': '$44load_global.8', 'args': ['$post_max56.10', '$72binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'start': '$const42.7.2', 'stop': '$86call.15', 'step': None, 'res': '$96build_slice.17', 'slicevar': '$96build_slice.16'}), (98, {'index': '$96build_slice.17', 'target': '$x40.6', 'res': '$98binary_subscr.18'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'func': '$30load_attr.5', 'args': ['$98binary_subscr.18'], 'kw_names': None, 'res': '$112call.19'}), (114, {}), (116, {}), (118, {}), (120, {}), (122, {'lhs': '$8binary_subscr.2', 'rhs': '$112call.19', 'res': '$122compare_op.20'}), (124, {}), (126, {}), (128, {'res': '$peaks128.21'}), (130, {'res': '$const130.22.1'}), (132, {'target': '$peaks128.21', 'index': '$const130.22.1', 'value': '$122compare_op.20'}), (134, {}), (136, {'res': '$peaks136.23'}), (138, {'res': '$const138.24.1'}), (144, {'index': '$const138.24.1', 'target': '$peaks136.23', 'res': '$144binary_subscr.25'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$x154.26'}), (156, {'res': '$const156.27.1'}), (158, {'index': '$const156.27.1', 'target': '$x154.26', 'res': '$158binary_subscr.28'}), (160, {}), (162, {}), (164, {}), (166, {}), (168, {'idx': 0, 'res': '$168load_global.29'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'item': '$168load_global.29', 'res': '$180load_attr.31'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {'res': '$x190.32'}), (192, {'res': '$const192.33.2'}), (194, {'idx': 2, 'res': '$194load_global.34'}), (196, {}), (198, {}), (200, {}), (202, {}), (204, {}), (206, {'res': '$post_avg206.36'}), (208, {'res': '$x208.37'}), (210, {'item': '$x208.37', 'res': '$210load_attr.38'}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {'res': '$const220.39.1'}), (222, {'index': '$const220.39.1', 'target': '$210load_attr.38', 'res': '$222binary_subscr.40'}), (224, {}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'func': '$194load_global.34', 'args': ['$post_avg206.36', '$222binary_subscr.40'], 'kw_names': None, 'res': '$236call.41'}), (238, {}), (240, {}), (242, {}), (244, {}), (246, {'start': '$const192.33.2', 'stop': '$236call.41', 'step': None, 'res': '$246build_slice.43', 'slicevar': '$246build_slice.42'}), (248, {'index': '$246build_slice.43', 'target': '$x190.32', 'res': '$248binary_subscr.44'}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {}), (262, {'func': '$180load_attr.31', 'args': ['$248binary_subscr.44'], 'kw_names': None, 'res': '$262call.45'}), (264, {}), (266, {}), (268, {}), (270, {}), (272, {'res': '$delta272.46'}), (274, {'op': '+', 'lhs': '$262call.45', 'rhs': '$delta272.46', 'res': '$binop_add274.47'}), (276, {}), (278, {'lhs': '$158binary_subscr.28', 'rhs': '$binop_add274.47', 'res': '$278compare_op.48'}), (280, {}), (282, {}), (284, {'op': '&=', 'lhs': '$144binary_subscr.25', 'rhs': '$278compare_op.48', 'res': '$binop_iand284.49'}), (286, {}), (292, {'target': '$peaks136.23', 'index': '$const138.24.1', 'value': '$binop_iand284.49'}), (294, {}), (296, {'res': '$peaks296.50'}), (298, {'res': '$const298.51.1'}), (300, {'index': '$const298.51.1', 'target': '$peaks296.50', 'res': '$300binary_subscr.52'}), (302, {}), (304, {}), (306, {}), (308, {}), (310, {'pred': '$300binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 324: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'res': '$wait312.0'}), (314, {'res': '$const314.1.3'}), (316, {'op': '+', 'lhs': '$wait312.0', 'rhs': '$const314.1.3', 'res': '$binop_add316.2'}), (318, {}), (320, {'value': '$binop_add316.2'}), (322, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=324 nstack_initial=0):
AdaptBlockInfo(insts=((324, {'res': '$const324.0.3'}), (326, {'value': '$const324.0.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$n328.0'}), (330, {'res': '$x330.1'}), (332, {'item': '$x330.1', 'res': '$332load_attr.2'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'res': '$const342.3.1'}), (344, {'index': '$const342.3.1', 'target': '$332load_attr.2', 'res': '$344binary_subscr.4'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {'lhs': '$n328.0', 'rhs': '$344binary_subscr.4', 'res': '$354compare_op.5'}), (356, {}), (358, {}), (360, {'pred': '$354compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={362: (), 852: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=362 nstack_initial=0):
AdaptBlockInfo(insts=((362, {'idx': 0, 'res': '$362load_global.0'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {}), (374, {'item': '$362load_global.0', 'res': '$374load_attr.2'}), (376, {}), (378, {}), (380, {}), (382, {}), (384, {'res': '$x384.3'}), (386, {'idx': 1, 'res': '$386load_global.4'}), (388, {}), (390, {}), (392, {}), (394, {}), (396, {}), (398, {'res': '$const398.6.1'}), (400, {'res': '$n400.7'}), (402, {'res': '$pre_max402.8'}), (404, {'op': '-', 'lhs': '$n400.7', 'rhs': '$pre_max402.8', 'res': '$binop_sub404.9'}), (406, {}), (408, {}), (410, {}), (412, {'func': '$386load_global.4', 'args': ['$const398.6.1', '$binop_sub404.9'], 'kw_names': None, 'res': '$412call.10'}), (414, {}), (416, {}), (418, {}), (420, {}), (422, {'idx': 2, 'res': '$422load_global.11'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {}), (434, {'res': '$n434.13'}), (436, {'res': '$post_max436.14'}), (438, {'op': '+', 'lhs': '$n434.13', 'rhs': '$post_max436.14', 'res': '$binop_add438.15'}), (440, {}), (442, {'res': '$x442.16'}), (444, {'item': '$x442.16', 'res': '$444load_attr.17'}), (446, {}), (448, {}), (450, {}), (452, {}), (454, {'res': '$const454.18.1'}), (456, {'index': '$const454.18.1', 'target': '$444load_attr.17', 'res': '$456binary_subscr.19'}), (458, {}), (460, {}), (462, {}), (464, {}), (466, {}), (468, {}), (470, {'func': '$422load_global.11', 'args': ['$binop_add438.15', '$456binary_subscr.19'], 'kw_names': None, 'res': '$470call.20'}), (472, {}), (474, {}), (476, {}), (478, {}), (480, {'start': '$412call.10', 'stop': '$470call.20', 'step': None, 'res': '$480build_slice.22', 'slicevar': '$480build_slice.21'}), (482, {'index': '$480build_slice.22', 'target': '$x384.3', 'res': '$482binary_subscr.23'}), (484, {}), (486, {}), (488, {}), (490, {}), (492, {}), (494, {}), (496, {'func': '$374load_attr.2', 'args': ['$482binary_subscr.23'], 'kw_names': None, 'res': '$496call.24'}), (498, {}), (500, {}), (502, {}), (504, {}), (506, {'value': '$496call.24'}), (508, {'res': '$x508.25'}), (510, {'res': '$n510.26'}), (512, {'index': '$n510.26', 'target': '$x508.25', 'res': '$512binary_subscr.27'}), (514, {}), (516, {}), (518, {}), (520, {}), (522, {'res': '$maxn522.28'}), (524, {'lhs': '$512binary_subscr.27', 'rhs': '$maxn522.28', 'res': '$524compare_op.29'}), (526, {}), (528, {}), (530, {'res': '$peaks530.30'}), (532, {'res': '$n532.31'}), (534, {'target': '$peaks530.30', 'index': '$n532.31', 'value': '$524compare_op.29'}), (536, {}), (538, {'res': '$peaks538.32'}), (540, {'res': '$n540.33'}), (542, {'index': '$n540.33', 'target': '$peaks538.32', 'res': '$542binary_subscr.34'}), (544, {}), (546, {}), (548, {}), (550, {}), (552, {'pred': '$542binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={554: (), 566: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=554 nstack_initial=0):
AdaptBlockInfo(insts=((554, {'res': '$n554.0'}), (556, {'res': '$const556.1.3'}), (558, {'op': '+=', 'lhs': '$n554.0', 'rhs': '$const556.1.3', 'res': '$binop_iadd558.2'}), (560, {}), (562, {'value': '$binop_iadd558.2'}), (564, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=566 nstack_initial=0):
AdaptBlockInfo(insts=((566, {'idx': 0, 'res': '$566load_global.0'}), (568, {}), (570, {}), (572, {}), (574, {}), (576, {}), (578, {'item': '$566load_global.0', 'res': '$578load_attr.2'}), (580, {}), (582, {}), (584, {}), (586, {}), (588, {'res': '$x588.3'}), (590, {'idx': 1, 'res': '$590load_global.4'}), (592, {}), (594, {}), (596, {}), (598, {}), (600, {}), (602, {'res': '$const602.6.1'}), (604, {'res': '$n604.7'}), (606, {'res': '$pre_avg606.8'}), (608, {'op': '-', 'lhs': '$n604.7', 'rhs': '$pre_avg606.8', 'res': '$binop_sub608.9'}), (610, {}), (612, {}), (614, {}), (616, {'func': '$590load_global.4', 'args': ['$const602.6.1', '$binop_sub608.9'], 'kw_names': None, 'res': '$616call.10'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {'idx': 2, 'res': '$626load_global.11'}), (628, {}), (630, {}), (632, {}), (634, {}), (636, {}), (638, {'res': '$n638.13'}), (640, {'res': '$post_avg640.14'}), (642, {'op': '+', 'lhs': '$n638.13', 'rhs': '$post_avg640.14', 'res': '$binop_add642.15'}), (644, {}), (646, {'res': '$x646.16'}), (648, {'item': '$x646.16', 'res': '$648load_attr.17'}), (650, {}), (652, {}), (654, {}), (656, {}), (658, {'res': '$const658.18.1'}), (660, {'index': '$const658.18.1', 'target': '$648load_attr.17', 'res': '$660binary_subscr.19'}), (662, {}), (664, {}), (666, {}), (668, {}), (670, {}), (672, {}), (674, {'func': '$626load_global.11', 'args': ['$binop_add642.15', '$660binary_subscr.19'], 'kw_names': None, 'res': '$674call.20'}), (676, {}), (678, {}), (680, {}), (682, {}), (684, {'start': '$616call.10', 'stop': '$674call.20', 'step': None, 'res': '$684build_slice.22', 'slicevar': '$684build_slice.21'}), (686, {'index': '$684build_slice.22', 'target': '$x588.3', 'res': '$686binary_subscr.23'}), (688, {}), (690, {}), (692, {}), (694, {}), (696, {}), (698, {}), (700, {'func': '$578load_attr.2', 'args': ['$686binary_subscr.23'], 'kw_names': None, 'res': '$700call.24'}), (702, {}), (704, {}), (706, {}), (708, {}), (710, {'value': '$700call.24'}), (712, {'res': '$peaks712.25'}), (714, {'res': '$n714.26'}), (720, {'index': '$n714.26', 'target': '$peaks712.25', 'res': '$720binary_subscr.27'}), (722, {}), (724, {}), (726, {}), (728, {}), (730, {'res': '$x730.28'}), (732, {'res': '$n732.29'}), (734, {'index': '$n732.29', 'target': '$x730.28', 'res': '$734binary_subscr.30'}), (736, {}), (738, {}), (740, {}), (742, {}), (744, {'res': '$avgn744.31'}), (746, {'res': '$delta746.32'}), (748, {'op': '+', 'lhs': '$avgn744.31', 'rhs': '$delta746.32', 'res': '$binop_add748.33'}), (750, {}), (752, {'lhs': '$734binary_subscr.30', 'rhs': '$binop_add748.33', 'res': '$752compare_op.34'}), (754, {}), (756, {}), (758, {'op': '&=', 'lhs': '$720binary_subscr.27', 'rhs': '$752compare_op.34', 'res': '$binop_iand758.35'}), (760, {}), (766, {'target': '$peaks712.25', 'index': '$n714.26', 'value': '$binop_iand758.35'}), (768, {}), (770, {'res': '$peaks770.36'}), (772, {'res': '$n772.37'}), (774, {'index': '$n772.37', 'target': '$peaks770.36', 'res': '$774binary_subscr.38'}), (776, {}), (778, {}), (780, {}), (782, {}), (784, {'pred': '$774binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={786: (), 798: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=786 nstack_initial=0):
AdaptBlockInfo(insts=((786, {'res': '$n786.0'}), (788, {'res': '$const788.1.3'}), (790, {'op': '+=', 'lhs': '$n786.0', 'rhs': '$const788.1.3', 'res': '$binop_iadd790.2'}), (792, {}), (794, {'value': '$binop_iadd790.2'}), (796, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=798 nstack_initial=0):
AdaptBlockInfo(insts=((798, {'res': '$n798.0'}), (800, {'res': '$wait800.1'}), (802, {'res': '$const802.2.3'}), (804, {'op': '+', 'lhs': '$wait800.1', 'rhs': '$const802.2.3', 'res': '$binop_add804.3'}), (806, {}), (808, {'op': '+=', 'lhs': '$n798.0', 'rhs': '$binop_add804.3', 'res': '$binop_iadd808.4'}), (810, {}), (812, {'value': '$binop_iadd808.4'}), (814, {'res': '$n814.5'}), (816, {'res': '$x816.6'}), (818, {'item': '$x816.6', 'res': '$818load_attr.7'}), (820, {}), (822, {}), (824, {}), (826, {}), (828, {'res': '$const828.8.1'}), (830, {'index': '$const828.8.1', 'target': '$818load_attr.7', 'res': '$830binary_subscr.9'}), (832, {}), (834, {}), (836, {}), (838, {}), (840, {'lhs': '$n814.5', 'rhs': '$830binary_subscr.9', 'res': '$840compare_op.10'}), (842, {}), (844, {}), (846, {'pred': '$840compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={848: (), 362: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=848 nstack_initial=0):
AdaptBlockInfo(insts=((848, {'res': '$const848.0.2'}), (850, {'retval': '$const848.0.2', 'castval': '$850return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=852 nstack_initial=0):
AdaptBlockInfo(insts=((852, {'res': '$const852.0.2'}), (854, {'retval': '$const852.0.2', 'castval': '$854return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.3']
    $30load_attr.5 = getattr(value=$18load_global.3, attr=max) ['$18load_global.3', '$30load_attr.5']
    $const42.7.2 = const(NoneType, None)     ['$const42.7.2']
    $44load_global.8 = global(min: <built-in function min>) ['$44load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const70.13.1 = const(int, 0)            ['$const70.13.1']
    $72binary_subscr.14 = getitem(value=$60load_attr.12, index=$const70.13.1, fn=<built-in function getitem>) ['$60load_attr.12', '$72binary_subscr.14', '$const70.13.1']
    $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1193), Var($72binary_subscr.14, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_global.8', '$72binary_subscr.14', '$86call.15', 'post_max']
    $96build_slice.16 = global(slice: <class 'slice'>) ['$96build_slice.16']
    $96build_slice.17 = call $96build_slice.16($const42.7.2, $86call.15, func=$96build_slice.16, args=(Var($const42.7.2, utils.py:1205), Var($86call.15, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$96build_slice.16', '$96build_slice.17', '$const42.7.2']
    $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>) ['$96build_slice.17', '$98binary_subscr.18', 'x']
    $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$112call.19', '$30load_attr.5', '$98binary_subscr.18']
    $122compare_op.20 = $8binary_subscr.2 >= $112call.19 ['$112call.19', '$122compare_op.20', '$8binary_subscr.2']
    $const130.22.1 = const(int, 0)           ['$const130.22.1']
    peaks[$const130.22.1] = $122compare_op.20 ['$122compare_op.20', '$const130.22.1', 'peaks']
    $const138.24.1 = const(int, 0)           ['$const138.24.1']
    $144binary_subscr.25 = getitem(value=peaks, index=$const138.24.1, fn=<built-in function getitem>) ['$144binary_subscr.25', '$const138.24.1', 'peaks']
    $const156.27.1 = const(int, 0)           ['$const156.27.1']
    $158binary_subscr.28 = getitem(value=x, index=$const156.27.1, fn=<built-in function getitem>) ['$158binary_subscr.28', '$const156.27.1', 'x']
    $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$168load_global.29']
    $180load_attr.31 = getattr(value=$168load_global.29, attr=mean) ['$168load_global.29', '$180load_attr.31']
    $const192.33.2 = const(NoneType, None)   ['$const192.33.2']
    $194load_global.34 = global(min: <built-in function min>) ['$194load_global.34']
    $210load_attr.38 = getattr(value=x, attr=shape) ['$210load_attr.38', 'x']
    $const220.39.1 = const(int, 0)           ['$const220.39.1']
    $222binary_subscr.40 = getitem(value=$210load_attr.38, index=$const220.39.1, fn=<built-in function getitem>) ['$210load_attr.38', '$222binary_subscr.40', '$const220.39.1']
    $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1193), Var($222binary_subscr.40, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.34', '$222binary_subscr.40', '$236call.41', 'post_avg']
    $246build_slice.42 = global(slice: <class 'slice'>) ['$246build_slice.42']
    $246build_slice.43 = call $246build_slice.42($const192.33.2, $236call.41, func=$246build_slice.42, args=(Var($const192.33.2, utils.py:1206), Var($236call.41, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$236call.41', '$246build_slice.42', '$246build_slice.43', '$const192.33.2']
    $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>) ['$246build_slice.43', '$248binary_subscr.44', 'x']
    $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_attr.31', '$248binary_subscr.44', '$262call.45']
    $binop_add274.47 = $262call.45 + delta   ['$262call.45', '$binop_add274.47', 'delta']
    $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47 ['$158binary_subscr.28', '$278compare_op.48', '$binop_add274.47']
    $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$144binary_subscr.25', '$278compare_op.48', '$binop_iand284.49']
    peaks[$const138.24.1] = $binop_iand284.49 ['$binop_iand284.49', '$const138.24.1', 'peaks']
    $const298.51.1 = const(int, 0)           ['$const298.51.1']
    $300binary_subscr.52 = getitem(value=peaks, index=$const298.51.1, fn=<built-in function getitem>) ['$300binary_subscr.52', '$const298.51.1', 'peaks']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$300binary_subscr.52', '$310pred', 'bool310']
    branch $310pred, 312, 324                ['$310pred']
label 312:
    $const314.1.3 = const(int, 1)            ['$const314.1.3']
    n = wait + $const314.1.3                 ['$const314.1.3', 'n', 'wait']
    jump 328                                 []
label 324:
    n = const(int, 1)                        ['n']
    jump 328                                 []
label 328:
    $332load_attr.2 = getattr(value=x, attr=shape) ['$332load_attr.2', 'x']
    $const342.3.1 = const(int, 0)            ['$const342.3.1']
    $344binary_subscr.4 = getitem(value=$332load_attr.2, index=$const342.3.1, fn=<built-in function getitem>) ['$332load_attr.2', '$344binary_subscr.4', '$const342.3.1']
    $354compare_op.5 = n < $344binary_subscr.4 ['$344binary_subscr.4', '$354compare_op.5', 'n']
    bool360 = global(bool: <class 'bool'>)   ['bool360']
    $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$354compare_op.5', '$360pred', 'bool360']
    branch $360pred, 362, 852                ['$360pred']
label 362:
    $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$362load_global.0']
    $374load_attr.2 = getattr(value=$362load_global.0, attr=max) ['$362load_global.0', '$374load_attr.2']
    $386load_global.4 = global(max: <built-in function max>) ['$386load_global.4']
    $const398.6.1 = const(int, 0)            ['$const398.6.1']
    $binop_sub404.9 = n - pre_max            ['$binop_sub404.9', 'n', 'pre_max']
    $412call.10 = call $386load_global.4($const398.6.1, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6.1, utils.py:1214), Var($binop_sub404.9, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$386load_global.4', '$412call.10', '$binop_sub404.9', '$const398.6.1']
    $422load_global.11 = global(min: <built-in function min>) ['$422load_global.11']
    $binop_add438.15 = n + post_max          ['$binop_add438.15', 'n', 'post_max']
    $444load_attr.17 = getattr(value=x, attr=shape) ['$444load_attr.17', 'x']
    $const454.18.1 = const(int, 0)           ['$const454.18.1']
    $456binary_subscr.19 = getitem(value=$444load_attr.17, index=$const454.18.1, fn=<built-in function getitem>) ['$444load_attr.17', '$456binary_subscr.19', '$const454.18.1']
    $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1214), Var($456binary_subscr.19, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$422load_global.11', '$456binary_subscr.19', '$470call.20', '$binop_add438.15']
    $480build_slice.21 = global(slice: <class 'slice'>) ['$480build_slice.21']
    $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1214), Var($470call.20, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$412call.10', '$470call.20', '$480build_slice.21', '$480build_slice.22']
    $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>) ['$480build_slice.22', '$482binary_subscr.23', 'x']
    maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$374load_attr.2', '$482binary_subscr.23', 'maxn']
    $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$512binary_subscr.27', 'n', 'x']
    $524compare_op.29 = $512binary_subscr.27 == maxn ['$512binary_subscr.27', '$524compare_op.29', 'maxn']
    peaks[n] = $524compare_op.29             ['$524compare_op.29', 'n', 'peaks']
    $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$542binary_subscr.34', 'n', 'peaks']
    bool552 = global(bool: <class 'bool'>)   ['bool552']
    $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$542binary_subscr.34', '$552pred', 'bool552']
    branch $552pred, 566, 554                ['$552pred']
label 554:
    $const556.1.3 = const(int, 1)            ['$const556.1.3']
    $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd558.2', '$const556.1.3', 'n']
    n = $binop_iadd558.2                     ['$binop_iadd558.2', 'n']
    jump 328                                 []
label 566:
    $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$566load_global.0']
    $578load_attr.2 = getattr(value=$566load_global.0, attr=mean) ['$566load_global.0', '$578load_attr.2']
    $590load_global.4 = global(max: <built-in function max>) ['$590load_global.4']
    $const602.6.1 = const(int, 0)            ['$const602.6.1']
    $binop_sub608.9 = n - pre_avg            ['$binop_sub608.9', 'n', 'pre_avg']
    $616call.10 = call $590load_global.4($const602.6.1, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6.1, utils.py:1223), Var($binop_sub608.9, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$590load_global.4', '$616call.10', '$binop_sub608.9', '$const602.6.1']
    $626load_global.11 = global(min: <built-in function min>) ['$626load_global.11']
    $binop_add642.15 = n + post_avg          ['$binop_add642.15', 'n', 'post_avg']
    $648load_attr.17 = getattr(value=x, attr=shape) ['$648load_attr.17', 'x']
    $const658.18.1 = const(int, 0)           ['$const658.18.1']
    $660binary_subscr.19 = getitem(value=$648load_attr.17, index=$const658.18.1, fn=<built-in function getitem>) ['$648load_attr.17', '$660binary_subscr.19', '$const658.18.1']
    $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1223), Var($660binary_subscr.19, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$626load_global.11', '$660binary_subscr.19', '$674call.20', '$binop_add642.15']
    $684build_slice.21 = global(slice: <class 'slice'>) ['$684build_slice.21']
    $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1223), Var($674call.20, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$616call.10', '$674call.20', '$684build_slice.21', '$684build_slice.22']
    $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>) ['$684build_slice.22', '$686binary_subscr.23', 'x']
    avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$578load_attr.2', '$686binary_subscr.23', 'avgn']
    $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$720binary_subscr.27', 'n', 'peaks']
    $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$734binary_subscr.30', 'n', 'x']
    $binop_add748.33 = avgn + delta          ['$binop_add748.33', 'avgn', 'delta']
    $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33 ['$734binary_subscr.30', '$752compare_op.34', '$binop_add748.33']
    $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$720binary_subscr.27', '$752compare_op.34', '$binop_iand758.35']
    peaks[n] = $binop_iand758.35             ['$binop_iand758.35', 'n', 'peaks']
    $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$774binary_subscr.38', 'n', 'peaks']
    bool784 = global(bool: <class 'bool'>)   ['bool784']
    $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$774binary_subscr.38', '$784pred', 'bool784']
    branch $784pred, 798, 786                ['$784pred']
label 786:
    $const788.1.3 = const(int, 1)            ['$const788.1.3']
    $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd790.2', '$const788.1.3', 'n']
    n = $binop_iadd790.2                     ['$binop_iadd790.2', 'n']
    jump 328                                 []
label 798:
    $const802.2.3 = const(int, 1)            ['$const802.2.3']
    $binop_add804.3 = wait + $const802.2.3   ['$binop_add804.3', '$const802.2.3', 'wait']
    $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add804.3', '$binop_iadd808.4', 'n']
    n = $binop_iadd808.4                     ['$binop_iadd808.4', 'n']
    $818load_attr.7 = getattr(value=x, attr=shape) ['$818load_attr.7', 'x']
    $const828.8.1 = const(int, 0)            ['$const828.8.1']
    $830binary_subscr.9 = getitem(value=$818load_attr.7, index=$const828.8.1, fn=<built-in function getitem>) ['$818load_attr.7', '$830binary_subscr.9', '$const828.8.1']
    $840compare_op.10 = n < $830binary_subscr.9 ['$830binary_subscr.9', '$840compare_op.10', 'n']
    bool846 = global(bool: <class 'bool'>)   ['bool846']
    $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$840compare_op.10', '$846pred', 'bool846']
    branch $846pred, 362, 848                ['$846pred']
label 848:
    $const848.0.2 = const(NoneType, None)    ['$const848.0.2']
    $850return_value.1 = cast(value=$const848.0.2) ['$850return_value.1', '$const848.0.2']
    return $850return_value.1                ['$850return_value.1']
label 852:
    $const852.0.2 = const(NoneType, None)    ['$const852.0.2']
    $854return_value.1 = cast(value=$const852.0.2) ['$854return_value.1', '$const852.0.2']
    return $854return_value.1                ['$854return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: pre_max = arg(1, name=pre_max)
DEBUG:numba.core.ssa:on stmt: post_max = arg(2, name=post_max)
DEBUG:numba.core.ssa:on stmt: pre_avg = arg(3, name=pre_avg)
DEBUG:numba.core.ssa:on stmt: post_avg = arg(4, name=post_avg)
DEBUG:numba.core.ssa:on stmt: delta = arg(5, name=delta)
DEBUG:numba.core.ssa:on stmt: wait = arg(6, name=wait)
DEBUG:numba.core.ssa:on stmt: peaks = arg(7, name=peaks)
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
DEBUG:numba.core.ssa:on stmt: $const42.7.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $44load_global.8 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const70.13.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1193), Var($72binary_subscr.14, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7.2, $86call.15, func=$96build_slice.16, args=(Var($const42.7.2, utils.py:1205), Var($86call.15, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
DEBUG:numba.core.ssa:on stmt: $const130.22.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $122compare_op.20
DEBUG:numba.core.ssa:on stmt: $const138.24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const156.27.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
DEBUG:numba.core.ssa:on stmt: $const192.33.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $194load_global.34 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const220.39.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1193), Var($222binary_subscr.40, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33.2, $236call.41, func=$246build_slice.42, args=(Var($const192.33.2, utils.py:1206), Var($236call.41, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_add274.47 = $262call.45 + delta
DEBUG:numba.core.ssa:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
DEBUG:numba.core.ssa:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $binop_iand284.49
DEBUG:numba.core.ssa:on stmt: $const298.51.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool310 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $310pred, 312, 324
DEBUG:numba.core.ssa:==== SSA block analysis pass on 312
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: $const314.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n = wait + $const314.1.3
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block analysis pass on 324
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: n = const(int, 1)
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block analysis pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const342.3.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $354compare_op.5 = n < $344binary_subscr.4
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 362, 852
DEBUG:numba.core.ssa:==== SSA block analysis pass on 362
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
DEBUG:numba.core.ssa:on stmt: $386load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const398.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub404.9 = n - pre_max
DEBUG:numba.core.ssa:on stmt: $412call.10 = call $386load_global.4($const398.6.1, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6.1, utils.py:1214), Var($binop_sub404.9, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $422load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add438.15 = n + post_max
DEBUG:numba.core.ssa:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const454.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1214), Var($456binary_subscr.19, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1214), Var($470call.20, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
DEBUG:numba.core.ssa:on stmt: peaks[n] = $524compare_op.29
DEBUG:numba.core.ssa:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool552 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $552pred, 566, 554
DEBUG:numba.core.ssa:==== SSA block analysis pass on 554
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: $const556.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd558.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block analysis pass on 566
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
DEBUG:numba.core.ssa:on stmt: $590load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const602.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub608.9 = n - pre_avg
DEBUG:numba.core.ssa:on stmt: $616call.10 = call $590load_global.4($const602.6.1, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6.1, utils.py:1223), Var($binop_sub608.9, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $626load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add642.15 = n + post_avg
DEBUG:numba.core.ssa:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const658.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1223), Var($660binary_subscr.19, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1223), Var($674call.20, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add748.33 = avgn + delta
DEBUG:numba.core.ssa:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
DEBUG:numba.core.ssa:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[n] = $binop_iand758.35
DEBUG:numba.core.ssa:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool784 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $784pred, 798, 786
DEBUG:numba.core.ssa:==== SSA block analysis pass on 786
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: $const788.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd790.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block analysis pass on 798
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: $const802.2.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add804.3 = wait + $const802.2.3
DEBUG:numba.core.ssa:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd808.4
DEBUG:numba.core.ssa:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const828.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $840compare_op.10 = n < $830binary_subscr.9
DEBUG:numba.core.ssa:on stmt: bool846 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $846pred, 362, 848
DEBUG:numba.core.ssa:==== SSA block analysis pass on 848
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: $const848.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $850return_value.1 = cast(value=$const848.0.2)
DEBUG:numba.core.ssa:on stmt: return $850return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 852
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: $const852.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $854return_value.1 = cast(value=$const852.0.2)
DEBUG:numba.core.ssa:on stmt: return $854return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 853
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$112call.19': [(<numba.core.ir.Assign object at 0x0000019A17627B90>,
                              0)],
             '$122compare_op.20': [(<numba.core.ir.Assign object at 0x0000019A1759FC90>,
                                    0)],
             '$144binary_subscr.25': [(<numba.core.ir.Assign object at 0x0000019A176EEF10>,
                                       0)],
             '$158binary_subscr.28': [(<numba.core.ir.Assign object at 0x0000019A176EF750>,
                                       0)],
             '$168load_global.29': [(<numba.core.ir.Assign object at 0x0000019A162A9990>,
                                     0)],
             '$180load_attr.31': [(<numba.core.ir.Assign object at 0x0000019A162A93D0>,
                                   0)],
             '$18load_global.3': [(<numba.core.ir.Assign object at 0x0000019A17624050>,
                                   0)],
             '$194load_global.34': [(<numba.core.ir.Assign object at 0x0000019A162ABE90>,
                                     0)],
             '$210load_attr.38': [(<numba.core.ir.Assign object at 0x0000019A17891010>,
                                   0)],
             '$222binary_subscr.40': [(<numba.core.ir.Assign object at 0x0000019A176EEC10>,
                                       0)],
             '$236call.41': [(<numba.core.ir.Assign object at 0x0000019A17891BD0>,
                              0)],
             '$246build_slice.42': [(<numba.core.ir.Assign object at 0x0000019A17890DD0>,
                                     0)],
             '$246build_slice.43': [(<numba.core.ir.Assign object at 0x0000019A17890250>,
                                     0)],
             '$248binary_subscr.44': [(<numba.core.ir.Assign object at 0x0000019A17891150>,
                                       0)],
             '$262call.45': [(<numba.core.ir.Assign object at 0x0000019A178920D0>,
                              0)],
             '$278compare_op.48': [(<numba.core.ir.Assign object at 0x0000019A178939D0>,
                                    0)],
             '$300binary_subscr.52': [(<numba.core.ir.Assign object at 0x0000019A176EE0D0>,
                                       0)],
             '$30load_attr.5': [(<numba.core.ir.Assign object at 0x0000019A176275D0>,
                                 0)],
             '$310pred': [(<numba.core.ir.Assign object at 0x0000019A17891250>,
                           0)],
             '$332load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A178907D0>,
                                  328)],
             '$344binary_subscr.4': [(<numba.core.ir.Assign object at 0x0000019A1783FD50>,
                                      328)],
             '$354compare_op.5': [(<numba.core.ir.Assign object at 0x0000019A1763AA50>,
                                   328)],
             '$360pred': [(<numba.core.ir.Assign object at 0x0000019A1763A4D0>,
                           328)],
             '$362load_global.0': [(<numba.core.ir.Assign object at 0x0000019A1763B1D0>,
                                    362)],
             '$374load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A17638450>,
                                  362)],
             '$386load_global.4': [(<numba.core.ir.Assign object at 0x0000019A17638610>,
                                    362)],
             '$412call.10': [(<numba.core.ir.Assign object at 0x0000019A17639B50>,
                              362)],
             '$422load_global.11': [(<numba.core.ir.Assign object at 0x0000019A1763A0D0>,
                                     362)],
             '$444load_attr.17': [(<numba.core.ir.Assign object at 0x0000019A17638550>,
                                   362)],
             '$44load_global.8': [(<numba.core.ir.Assign object at 0x0000019A17627B10>,
                                   0)],
             '$456binary_subscr.19': [(<numba.core.ir.Assign object at 0x0000019A1783DE90>,
                                       362)],
             '$470call.20': [(<numba.core.ir.Assign object at 0x0000019A17638AD0>,
                              362)],
             '$480build_slice.21': [(<numba.core.ir.Assign object at 0x0000019A17639410>,
                                     362)],
             '$480build_slice.22': [(<numba.core.ir.Assign object at 0x0000019A17638810>,
                                     362)],
             '$482binary_subscr.23': [(<numba.core.ir.Assign object at 0x0000019A176394D0>,
                                       362)],
             '$512binary_subscr.27': [(<numba.core.ir.Assign object at 0x0000019A1763BA10>,
                                       362)],
             '$524compare_op.29': [(<numba.core.ir.Assign object at 0x0000019A17638350>,
                                    362)],
             '$542binary_subscr.34': [(<numba.core.ir.Assign object at 0x0000019A18E8E0D0>,
                                       362)],
             '$552pred': [(<numba.core.ir.Assign object at 0x0000019A18E8EC50>,
                           362)],
             '$566load_global.0': [(<numba.core.ir.Assign object at 0x0000019A18E8DDD0>,
                                    566)],
             '$578load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A18E8E950>,
                                  566)],
             '$590load_global.4': [(<numba.core.ir.Assign object at 0x0000019A18E8DED0>,
                                    566)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x0000019A17627850>,
                                  0)],
             '$616call.10': [(<numba.core.ir.Assign object at 0x0000019A18E8CE10>,
                              566)],
             '$626load_global.11': [(<numba.core.ir.Assign object at 0x0000019A18E8FF90>,
                                     566)],
             '$648load_attr.17': [(<numba.core.ir.Assign object at 0x0000019A18E8C650>,
                                   566)],
             '$660binary_subscr.19': [(<numba.core.ir.Assign object at 0x0000019A162D1F10>,
                                       566)],
             '$674call.20': [(<numba.core.ir.Assign object at 0x0000019A18E8D050>,
                              566)],
             '$684build_slice.21': [(<numba.core.ir.Assign object at 0x0000019A18E8D950>,
                                     566)],
             '$684build_slice.22': [(<numba.core.ir.Assign object at 0x0000019A18E8DAD0>,
                                     566)],
             '$686binary_subscr.23': [(<numba.core.ir.Assign object at 0x0000019A18E8D6D0>,
                                       566)],
             '$720binary_subscr.27': [(<numba.core.ir.Assign object at 0x0000019A176E3410>,
                                       566)],
             '$72binary_subscr.14': [(<numba.core.ir.Assign object at 0x0000019A176EC050>,
                                      0)],
             '$734binary_subscr.30': [(<numba.core.ir.Assign object at 0x0000019A176E2F10>,
                                       566)],
             '$752compare_op.34': [(<numba.core.ir.Assign object at 0x0000019A176E08D0>,
                                    566)],
             '$774binary_subscr.38': [(<numba.core.ir.Assign object at 0x0000019A176E18D0>,
                                       566)],
             '$784pred': [(<numba.core.ir.Assign object at 0x0000019A176E1DD0>,
                           566)],
             '$818load_attr.7': [(<numba.core.ir.Assign object at 0x0000019A176E3ED0>,
                                  798)],
             '$830binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000019A1739F650>,
                                      798)],
             '$840compare_op.10': [(<numba.core.ir.Assign object at 0x0000019A176E02D0>,
                                    798)],
             '$846pred': [(<numba.core.ir.Assign object at 0x0000019A176E38D0>,
                           798)],
             '$850return_value.1': [(<numba.core.ir.Assign object at 0x0000019A1780DC50>,
                                     848)],
             '$854return_value.1': [(<numba.core.ir.Assign object at 0x0000019A1780EE90>,
                                     852)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x0000019A17624310>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000019A176ECB90>,
                                    0)],
             '$96build_slice.16': [(<numba.core.ir.Assign object at 0x0000019A17627C10>,
                                    0)],
             '$96build_slice.17': [(<numba.core.ir.Assign object at 0x0000019A17626050>,
                                    0)],
             '$98binary_subscr.18': [(<numba.core.ir.Assign object at 0x0000019A17627390>,
                                      0)],
             '$binop_add274.47': [(<numba.core.ir.Assign object at 0x0000019A17893690>,
                                   0)],
             '$binop_add438.15': [(<numba.core.ir.Assign object at 0x0000019A1763B350>,
                                   362)],
             '$binop_add642.15': [(<numba.core.ir.Assign object at 0x0000019A18E8F710>,
                                   566)],
             '$binop_add748.33': [(<numba.core.ir.Assign object at 0x0000019A176E0ED0>,
                                   566)],
             '$binop_add804.3': [(<numba.core.ir.Assign object at 0x0000019A176E3190>,
                                  798)],
             '$binop_iadd558.2': [(<numba.core.ir.Assign object at 0x0000019A18E8ED10>,
                                   554)],
             '$binop_iadd790.2': [(<numba.core.ir.Assign object at 0x0000019A176E16D0>,
                                   786)],
             '$binop_iadd808.4': [(<numba.core.ir.Assign object at 0x0000019A176E3BD0>,
                                   798)],
             '$binop_iand284.49': [(<numba.core.ir.Assign object at 0x0000019A17893710>,
                                    0)],
             '$binop_iand758.35': [(<numba.core.ir.Assign object at 0x0000019A176E3010>,
                                    566)],
             '$binop_sub404.9': [(<numba.core.ir.Assign object at 0x0000019A17639790>,
                                  362)],
             '$binop_sub608.9': [(<numba.core.ir.Assign object at 0x0000019A18E8C090>,
                                  566)],
             '$const130.22.1': [(<numba.core.ir.Assign object at 0x0000019A162A9050>,
                                 0)],
             '$const138.24.1': [(<numba.core.ir.Assign object at 0x0000019A162A9450>,
                                 0)],
             '$const156.27.1': [(<numba.core.ir.Assign object at 0x0000019A162ABBD0>,
                                 0)],
             '$const192.33.2': [(<numba.core.ir.Assign object at 0x0000019A162A9C50>,
                                 0)],
             '$const220.39.1': [(<numba.core.ir.Assign object at 0x0000019A17890C50>,
                                 0)],
             '$const298.51.1': [(<numba.core.ir.Assign object at 0x0000019A17893B50>,
                                 0)],
             '$const314.1.3': [(<numba.core.ir.Assign object at 0x0000019A178934D0>,
                                312)],
             '$const342.3.1': [(<numba.core.ir.Assign object at 0x0000019A17892B10>,
                                328)],
             '$const398.6.1': [(<numba.core.ir.Assign object at 0x0000019A176389D0>,
                                362)],
             '$const42.7.2': [(<numba.core.ir.Assign object at 0x0000019A17624890>,
                               0)],
             '$const454.18.1': [(<numba.core.ir.Assign object at 0x0000019A1763B210>,
                                 362)],
             '$const556.1.3': [(<numba.core.ir.Assign object at 0x0000019A18E8ED50>,
                                554)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x0000019A18DB9210>,
                              0)],
             '$const602.6.1': [(<numba.core.ir.Assign object at 0x0000019A18E8C710>,
                                566)],
             '$const658.18.1': [(<numba.core.ir.Assign object at 0x0000019A18E8DD10>,
                                 566)],
             '$const70.13.1': [(<numba.core.ir.Assign object at 0x0000019A17627BD0>,
                                0)],
             '$const788.1.3': [(<numba.core.ir.Assign object at 0x0000019A176E2250>,
                                786)],
             '$const802.2.3': [(<numba.core.ir.Assign object at 0x0000019A176E0450>,
                                798)],
             '$const828.8.1': [(<numba.core.ir.Assign object at 0x0000019A176E24D0>,
                                798)],
             '$const848.0.2': [(<numba.core.ir.Assign object at 0x0000019A176E2490>,
                                848)],
             '$const852.0.2': [(<numba.core.ir.Assign object at 0x0000019A1780CD50>,
                                852)],
             'avgn': [(<numba.core.ir.Assign object at 0x0000019A18E8F8D0>,
                       566)],
             'bool310': [(<numba.core.ir.Assign object at 0x0000019A17893810>,
                          0)],
             'bool360': [(<numba.core.ir.Assign object at 0x0000019A176393D0>,
                          328)],
             'bool552': [(<numba.core.ir.Assign object at 0x0000019A18E8EA90>,
                          362)],
             'bool784': [(<numba.core.ir.Assign object at 0x0000019A176E1250>,
                          566)],
             'bool846': [(<numba.core.ir.Assign object at 0x0000019A176E05D0>,
                          798)],
             'delta': [(<numba.core.ir.Assign object at 0x0000019A161A1950>,
                        0)],
             'maxn': [(<numba.core.ir.Assign object at 0x0000019A1763B2D0>,
                       362)],
             'n': [(<numba.core.ir.Assign object at 0x0000019A178924D0>, 312),
                   (<numba.core.ir.Assign object at 0x0000019A17892110>, 324),
                   (<numba.core.ir.Assign object at 0x0000019A18E8F0D0>, 554),
                   (<numba.core.ir.Assign object at 0x0000019A176E1450>, 786),
                   (<numba.core.ir.Assign object at 0x0000019A176E2210>, 798)],
             'peaks': [(<numba.core.ir.Assign object at 0x0000019A176EE690>,
                        0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x0000019A17C934D0>,
                           0)],
             'post_max': [(<numba.core.ir.Assign object at 0x0000019A1739C610>,
                           0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x0000019A1739E910>,
                          0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x0000019A17539910>,
                          0)],
             'wait': [(<numba.core.ir.Assign object at 0x0000019A176EF790>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A161999D0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A179B3D90>
DEBUG:numba.core.ssa:Fix SSA violator on var n
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1739D490>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: pre_max = arg(1, name=pre_max)
DEBUG:numba.core.ssa:on stmt: post_max = arg(2, name=post_max)
DEBUG:numba.core.ssa:on stmt: pre_avg = arg(3, name=pre_avg)
DEBUG:numba.core.ssa:on stmt: post_avg = arg(4, name=post_avg)
DEBUG:numba.core.ssa:on stmt: delta = arg(5, name=delta)
DEBUG:numba.core.ssa:on stmt: wait = arg(6, name=wait)
DEBUG:numba.core.ssa:on stmt: peaks = arg(7, name=peaks)
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
DEBUG:numba.core.ssa:on stmt: $const42.7.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $44load_global.8 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const70.13.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1193), Var($72binary_subscr.14, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7.2, $86call.15, func=$96build_slice.16, args=(Var($const42.7.2, utils.py:1205), Var($86call.15, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
DEBUG:numba.core.ssa:on stmt: $const130.22.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $122compare_op.20
DEBUG:numba.core.ssa:on stmt: $const138.24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const156.27.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
DEBUG:numba.core.ssa:on stmt: $const192.33.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $194load_global.34 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const220.39.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1193), Var($222binary_subscr.40, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33.2, $236call.41, func=$246build_slice.42, args=(Var($const192.33.2, utils.py:1206), Var($236call.41, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_add274.47 = $262call.45 + delta
DEBUG:numba.core.ssa:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
DEBUG:numba.core.ssa:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $binop_iand284.49
DEBUG:numba.core.ssa:on stmt: $const298.51.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool310 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $310pred, 312, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 312
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1739D490>
DEBUG:numba.core.ssa:on stmt: $const314.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n = wait + $const314.1.3
DEBUG:numba.core.ssa:first assign: n
DEBUG:numba.core.ssa:replaced with: n = wait + $const314.1.3
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 324
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1739D490>
DEBUG:numba.core.ssa:on stmt: n = const(int, 1)
DEBUG:numba.core.ssa:replaced with: n.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1739D490>
DEBUG:numba.core.ssa:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const342.3.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $354compare_op.5 = n < $344binary_subscr.4
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 362, 852
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 362
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1739D490>
DEBUG:numba.core.ssa:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
DEBUG:numba.core.ssa:on stmt: $386load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const398.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub404.9 = n - pre_max
DEBUG:numba.core.ssa:on stmt: $412call.10 = call $386load_global.4($const398.6.1, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6.1, utils.py:1214), Var($binop_sub404.9, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $422load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add438.15 = n + post_max
DEBUG:numba.core.ssa:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const454.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1214), Var($456binary_subscr.19, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1214), Var($470call.20, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
DEBUG:numba.core.ssa:on stmt: peaks[n] = $524compare_op.29
DEBUG:numba.core.ssa:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool552 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $552pred, 566, 554
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 554
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1739D490>
DEBUG:numba.core.ssa:on stmt: $const556.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd558.2
DEBUG:numba.core.ssa:replaced with: n.2 = $binop_iadd558.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 566
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1739D490>
DEBUG:numba.core.ssa:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
DEBUG:numba.core.ssa:on stmt: $590load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const602.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub608.9 = n - pre_avg
DEBUG:numba.core.ssa:on stmt: $616call.10 = call $590load_global.4($const602.6.1, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6.1, utils.py:1223), Var($binop_sub608.9, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $626load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add642.15 = n + post_avg
DEBUG:numba.core.ssa:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const658.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1223), Var($660binary_subscr.19, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1223), Var($674call.20, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add748.33 = avgn + delta
DEBUG:numba.core.ssa:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
DEBUG:numba.core.ssa:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[n] = $binop_iand758.35
DEBUG:numba.core.ssa:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool784 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $784pred, 798, 786
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 786
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1739D490>
DEBUG:numba.core.ssa:on stmt: $const788.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd790.2
DEBUG:numba.core.ssa:replaced with: n.3 = $binop_iadd790.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 798
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1739D490>
DEBUG:numba.core.ssa:on stmt: $const802.2.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add804.3 = wait + $const802.2.3
DEBUG:numba.core.ssa:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd808.4
DEBUG:numba.core.ssa:replaced with: n.4 = $binop_iadd808.4
DEBUG:numba.core.ssa:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const828.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $840compare_op.10 = n < $830binary_subscr.9
DEBUG:numba.core.ssa:on stmt: bool846 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $846pred, 362, 848
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 848
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1739D490>
DEBUG:numba.core.ssa:on stmt: $const848.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $850return_value.1 = cast(value=$const848.0.2)
DEBUG:numba.core.ssa:on stmt: return $850return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 852
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1739D490>
DEBUG:numba.core.ssa:on stmt: $const852.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $854return_value.1 = cast(value=$const852.0.2)
DEBUG:numba.core.ssa:on stmt: return $854return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 853
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1739D490>
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {312: [<numba.core.ir.Assign object at 0x0000019A1739C110>],
             324: [<numba.core.ir.Assign object at 0x0000019A1739C6D0>],
             554: [<numba.core.ir.Assign object at 0x0000019A1739F9D0>],
             786: [<numba.core.ir.Assign object at 0x0000019A162C7090>],
             798: [<numba.core.ir.Assign object at 0x0000019A162C5250>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: pre_max = arg(1, name=pre_max)
DEBUG:numba.core.ssa:on stmt: post_max = arg(2, name=post_max)
DEBUG:numba.core.ssa:on stmt: pre_avg = arg(3, name=pre_avg)
DEBUG:numba.core.ssa:on stmt: post_avg = arg(4, name=post_avg)
DEBUG:numba.core.ssa:on stmt: delta = arg(5, name=delta)
DEBUG:numba.core.ssa:on stmt: wait = arg(6, name=wait)
DEBUG:numba.core.ssa:on stmt: peaks = arg(7, name=peaks)
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
DEBUG:numba.core.ssa:on stmt: $const42.7.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $44load_global.8 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const70.13.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1193), Var($72binary_subscr.14, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7.2, $86call.15, func=$96build_slice.16, args=(Var($const42.7.2, utils.py:1205), Var($86call.15, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
DEBUG:numba.core.ssa:on stmt: $const130.22.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $122compare_op.20
DEBUG:numba.core.ssa:on stmt: $const138.24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const156.27.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
DEBUG:numba.core.ssa:on stmt: $const192.33.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $194load_global.34 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const220.39.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1193), Var($222binary_subscr.40, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33.2, $236call.41, func=$246build_slice.42, args=(Var($const192.33.2, utils.py:1206), Var($236call.41, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_add274.47 = $262call.45 + delta
DEBUG:numba.core.ssa:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
DEBUG:numba.core.ssa:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $binop_iand284.49
DEBUG:numba.core.ssa:on stmt: $const298.51.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool310 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $310pred, 312, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 312
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: $const314.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n = wait + $const314.1.3
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 324
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: n.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const342.3.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $354compare_op.5 = n < $344binary_subscr.4
DEBUG:numba.core.ssa:find_def var='n' stmt=$354compare_op.5 = n < $344binary_subscr.4
DEBUG:numba.core.ssa:find_def_from_top label 328
DEBUG:numba.core.ssa:insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 328
DEBUG:numba.core.ssa:find_def_from_bottom label 312
DEBUG:numba.core.ssa:incoming_def n = wait + $const314.1.3
DEBUG:numba.core.ssa:find_def_from_bottom label 324
DEBUG:numba.core.ssa:incoming_def n.1 = const(int, 1)
DEBUG:numba.core.ssa:find_def_from_bottom label 853
DEBUG:numba.core.ssa:find_def_from_top label 853
DEBUG:numba.core.ssa:insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 853
DEBUG:numba.core.ssa:find_def_from_bottom label 554
DEBUG:numba.core.ssa:incoming_def n.2 = $binop_iadd558.2
DEBUG:numba.core.ssa:find_def_from_bottom label 786
DEBUG:numba.core.ssa:incoming_def n.3 = $binop_iadd790.2
DEBUG:numba.core.ssa:incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1220), Var(n.3, utils.py:1227)], incoming_blocks=[554, 786])
DEBUG:numba.core.ssa:replaced with: $354compare_op.5 = n.5 < $344binary_subscr.4
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 362, 852
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 362
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
DEBUG:numba.core.ssa:on stmt: $386load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const398.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub404.9 = n - pre_max
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_sub404.9 = n - pre_max
DEBUG:numba.core.ssa:find_def_from_top label 362
DEBUG:numba.core.ssa:insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 362
DEBUG:numba.core.ssa:find_def_from_bottom label 328
DEBUG:numba.core.ssa:incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1209), Var(n.1, utils.py:1211), Var(n.6, utils.py:1213)], incoming_blocks=[312, 324, 853])
DEBUG:numba.core.ssa:find_def_from_bottom label 798
DEBUG:numba.core.ssa:incoming_def n.4 = $binop_iadd808.4
DEBUG:numba.core.ssa:replaced with: $binop_sub404.9 = n.7 - pre_max
DEBUG:numba.core.ssa:on stmt: $412call.10 = call $386load_global.4($const398.6.1, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6.1, utils.py:1214), Var($binop_sub404.9, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $422load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add438.15 = n + post_max
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_add438.15 = n + post_max
DEBUG:numba.core.ssa:replaced with: $binop_add438.15 = n.7 + post_max
DEBUG:numba.core.ssa:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const454.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1214), Var($456binary_subscr.19, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1214), Var($470call.20, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: $512binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
DEBUG:numba.core.ssa:on stmt: peaks[n] = $524compare_op.29
DEBUG:numba.core.ssa:find_def var='n' stmt=peaks[n] = $524compare_op.29
DEBUG:numba.core.ssa:replaced with: peaks[n.7] = $524compare_op.29
DEBUG:numba.core.ssa:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: $542binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool552 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $552pred, 566, 554
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 554
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: $const556.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 554
DEBUG:numba.core.ssa:idom 362 from label 554
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.2 = $binop_iadd558.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 566
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
DEBUG:numba.core.ssa:on stmt: $590load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const602.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub608.9 = n - pre_avg
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_sub608.9 = n - pre_avg
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_sub608.9 = n.7 - pre_avg
DEBUG:numba.core.ssa:on stmt: $616call.10 = call $590load_global.4($const602.6.1, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6.1, utils.py:1223), Var($binop_sub608.9, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $626load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add642.15 = n + post_avg
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_add642.15 = n + post_avg
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_add642.15 = n.7 + post_avg
DEBUG:numba.core.ssa:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const658.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1223), Var($660binary_subscr.19, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1223), Var($674call.20, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $720binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $734binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add748.33 = avgn + delta
DEBUG:numba.core.ssa:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
DEBUG:numba.core.ssa:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[n] = $binop_iand758.35
DEBUG:numba.core.ssa:find_def var='n' stmt=peaks[n] = $binop_iand758.35
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: peaks[n.7] = $binop_iand758.35
DEBUG:numba.core.ssa:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $774binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool784 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $784pred, 798, 786
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 786
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: $const788.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 786
DEBUG:numba.core.ssa:idom 566 from label 786
DEBUG:numba.core.ssa:find_def_from_bottom label 566
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.3 = $binop_iadd790.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 798
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: $const802.2.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add804.3 = wait + $const802.2.3
DEBUG:numba.core.ssa:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 798
DEBUG:numba.core.ssa:idom 566 from label 798
DEBUG:numba.core.ssa:find_def_from_bottom label 566
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.4 = $binop_iadd808.4
DEBUG:numba.core.ssa:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const828.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $840compare_op.10 = n < $830binary_subscr.9
DEBUG:numba.core.ssa:find_def var='n' stmt=$840compare_op.10 = n < $830binary_subscr.9
DEBUG:numba.core.ssa:replaced with: $840compare_op.10 = n.4 < $830binary_subscr.9
DEBUG:numba.core.ssa:on stmt: bool846 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $846pred, 362, 848
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 848
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: $const848.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $850return_value.1 = cast(value=$const848.0.2)
DEBUG:numba.core.ssa:on stmt: return $850return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 852
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: $const852.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $854return_value.1 = cast(value=$const852.0.2)
DEBUG:numba.core.ssa:on stmt: return $854return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 853
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17626A50>
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=569)
           2	COPY_FREE_VARS(arg=2, lineno=569)
           4	RESUME(arg=0, lineno=569)
           6	LOAD_FAST(arg=0, lineno=570)
           8	LOAD_ATTR(arg=0, lineno=570)
          18	LOAD_CONST(arg=1, lineno=570)
          20	COMPARE_OP(arg=2, lineno=570)
          26	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=570)
          28	LOAD_GLOBAL(arg=3, lineno=571)
          40	LOAD_CONST(arg=2, lineno=571)
          42	PRECALL(arg=1, lineno=571)
          46	CALL(arg=1, lineno=571)
          56	RAISE_VARARGS(arg=1, lineno=571)
>         58	LOAD_GLOBAL(arg=5, lineno=574)
          70	LOAD_ATTR(arg=3, lineno=574)
          80	LOAD_FAST(arg=0, lineno=574)
          82	PRECALL(arg=1, lineno=574)
          86	CALL(arg=1, lineno=574)
          96	STORE_FAST(arg=1, lineno=574)
          98	LOAD_GLOBAL(arg=9, lineno=575)
         110	LOAD_FAST(arg=1, lineno=575)
         112	PRECALL(arg=1, lineno=575)
         116	CALL(arg=1, lineno=575)
         126	LOAD_METHOD(arg=5, lineno=575)
         148	LOAD_CONST(arg=1, lineno=575)
         150	PRECALL(arg=1, lineno=575)
         154	CALL(arg=1, lineno=575)
         164	STORE_FAST(arg=2, lineno=575)
         166	PUSH_NULL(arg=None, lineno=576)
         168	LOAD_DEREF(arg=6, lineno=576)
         170	LOAD_FAST(arg=2, lineno=576)
         172	PRECALL(arg=1, lineno=576)
         176	CALL(arg=1, lineno=576)
         186	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=576)
         188	LOAD_FAST(arg=2, lineno=577)
         190	RETURN_VALUE(arg=None, lineno=577)
>        192	LOAD_FAST(arg=1, lineno=579)
         194	GET_ITER(arg=None, lineno=579)
>        196	FOR_ITER(arg=51, lineno=579)
         198	STORE_FAST(arg=3, lineno=579)
         200	LOAD_FAST(arg=3, lineno=580)
         202	LOAD_METHOD(arg=6, lineno=580)
         224	PRECALL(arg=0, lineno=580)
         228	CALL(arg=0, lineno=580)
         238	STORE_FAST(arg=4, lineno=580)
         240	PUSH_NULL(arg=None, lineno=581)
         242	LOAD_DEREF(arg=6, lineno=581)
         244	LOAD_FAST(arg=4, lineno=581)
         246	PRECALL(arg=1, lineno=581)
         250	CALL(arg=1, lineno=581)
         260	POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=581)
         262	LOAD_FAST(arg=4, lineno=582)
         264	SWAP(arg=2, lineno=582)
         266	POP_TOP(arg=None, lineno=582)
         268	RETURN_VALUE(arg=None, lineno=582)
>        270	PUSH_NULL(arg=None, lineno=583)
         272	LOAD_DEREF(arg=5, lineno=583)
         274	LOAD_FAST(arg=4, lineno=583)
         276	LOAD_FAST(arg=2, lineno=583)
         278	PRECALL(arg=2, lineno=583)
         282	CALL(arg=2, lineno=583)
         292	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=583)
         294	LOAD_FAST(arg=4, lineno=584)
         296	STORE_FAST(arg=2, lineno=584)
>        298	JUMP_BACKWARD(arg=52, lineno=584)
>        300	LOAD_FAST(arg=2, lineno=585)
         302	RETURN_VALUE(arg=None, lineno=585)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=569)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=569)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=RESUME(arg=0, lineno=569)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=570)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=570)
DEBUG:numba.core.byteflow:stack ['$a6.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=570)
DEBUG:numba.core.byteflow:stack ['$8load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=570)
DEBUG:numba.core.byteflow:stack ['$8load_attr.1', '$const18.2.1']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=570)
DEBUG:numba.core.byteflow:stack ['$20compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=28 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_GLOBAL(arg=3, lineno=571)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=571)
DEBUG:numba.core.byteflow:stack ['$null$28.1', '$28load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=PRECALL(arg=1, lineno=571)
DEBUG:numba.core.byteflow:stack ['$null$28.1', '$28load_global.0', '$const40.2.2']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=CALL(arg=1, lineno=571)
DEBUG:numba.core.byteflow:stack ['$null$28.1', '$28load_global.0', '$const40.2.2']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=571)
DEBUG:numba.core.byteflow:stack ['$46call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=574)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_ATTR(arg=3, lineno=574)
DEBUG:numba.core.byteflow:stack ['$null$58.1', '$58load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=0, lineno=574)
DEBUG:numba.core.byteflow:stack ['$null$58.1', '$70load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=PRECALL(arg=1, lineno=574)
DEBUG:numba.core.byteflow:stack ['$null$58.1', '$70load_attr.2', '$a80.3']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=CALL(arg=1, lineno=574)
DEBUG:numba.core.byteflow:stack ['$null$58.1', '$70load_attr.2', '$a80.3']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=STORE_FAST(arg=1, lineno=574)
DEBUG:numba.core.byteflow:stack ['$86call.4']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_GLOBAL(arg=9, lineno=575)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$98.6', '$98load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=PRECALL(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$98.6', '$98load_global.5', '$it110.7']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=CALL(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$98.6', '$98load_global.5', '$it110.7']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_METHOD(arg=5, lineno=575)
DEBUG:numba.core.byteflow:stack ['$116call.8']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_CONST(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$126.9', '$126load_method.10']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=PRECALL(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$126.9', '$126load_method.10', '$const148.11.1']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=CALL(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$126.9', '$126load_method.10', '$const148.11.1']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=STORE_FAST(arg=2, lineno=575)
DEBUG:numba.core.byteflow:stack ['$154call.12']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=PUSH_NULL(arg=None, lineno=576)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_DEREF(arg=6, lineno=576)
DEBUG:numba.core.byteflow:stack ['$null$166.13']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=576)
DEBUG:numba.core.byteflow:stack ['$null$166.13', '$168load_deref.14']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=PRECALL(arg=1, lineno=576)
DEBUG:numba.core.byteflow:stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=CALL(arg=1, lineno=576)
DEBUG:numba.core.byteflow:stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=576)
DEBUG:numba.core.byteflow:stack ['$176call.16']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=188, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=188 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=577)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=190, inst=RETURN_VALUE(arg=None, lineno=577)
DEBUG:numba.core.byteflow:stack ['$max_value188.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=192 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=192 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_FAST(arg=1, lineno=579)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=194, inst=GET_ITER(arg=None, lineno=579)
DEBUG:numba.core.byteflow:stack ['$it192.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=196, stack=('$194get_iter.1',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=196 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi196.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=196 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=196, inst=FOR_ITER(arg=51, lineno=579)
DEBUG:numba.core.byteflow:stack ['$phi196.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=300, stack=(), blockstack=(), npush=0), Edge(pc=198, stack=('$phi196.0', '$196for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=300 nstack_initial=0), State(pc_initial=198 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=300 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=300, inst=LOAD_FAST(arg=2, lineno=585)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=302, inst=RETURN_VALUE(arg=None, lineno=585)
DEBUG:numba.core.byteflow:stack ['$max_value300.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=198 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi198.0', '$phi198.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=198 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=198, inst=STORE_FAST(arg=3, lineno=579)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$phi198.1']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=LOAD_FAST(arg=3, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=LOAD_METHOD(arg=6, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$view200.2']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=PRECALL(arg=0, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$202.3', '$202load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=CALL(arg=0, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$202.3', '$202load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=STORE_FAST(arg=4, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$228call.5']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=PUSH_NULL(arg=None, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=LOAD_DEREF(arg=6, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$240.6']
DEBUG:numba.core.byteflow:dispatch pc=244, inst=LOAD_FAST(arg=4, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$240.6', '$242load_deref.7']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=PRECALL(arg=1, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
DEBUG:numba.core.byteflow:dispatch pc=250, inst=CALL(arg=1, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$250call.9']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=262, stack=('$phi198.0',), blockstack=(), npush=0), Edge(pc=270, stack=('$phi198.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=262 nstack_initial=1), State(pc_initial=270 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi262.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=262 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=4, lineno=582)
DEBUG:numba.core.byteflow:stack ['$phi262.0']
DEBUG:numba.core.byteflow:dispatch pc=264, inst=SWAP(arg=2, lineno=582)
DEBUG:numba.core.byteflow:stack ['$phi262.0', '$v262.1']
DEBUG:numba.core.byteflow:dispatch pc=266, inst=POP_TOP(arg=None, lineno=582)
DEBUG:numba.core.byteflow:stack ['$v262.1', '$phi262.0']
DEBUG:numba.core.byteflow:dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=582)
DEBUG:numba.core.byteflow:stack ['$v262.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=270 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi270.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=270 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=270, inst=PUSH_NULL(arg=None, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_DEREF(arg=5, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=LOAD_FAST(arg=4, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1', '$272load_deref.2']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=LOAD_FAST(arg=2, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=PRECALL(arg=2, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=CALL(arg=2, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$282call.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=294, stack=('$phi270.0',), blockstack=(), npush=0), Edge(pc=298, stack=('$phi270.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=294 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi294.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=294 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=294, inst=LOAD_FAST(arg=4, lineno=584)
DEBUG:numba.core.byteflow:stack ['$phi294.0']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=STORE_FAST(arg=2, lineno=584)
DEBUG:numba.core.byteflow:stack ['$phi294.0', '$v294.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=298, stack=('$phi294.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi298.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=298 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=298, inst=JUMP_BACKWARD(arg=52, lineno=584)
DEBUG:numba.core.byteflow:stack ['$phi298.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=196, stack=('$phi298.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=196 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=196 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=196 nstack_initial=1): {'$phi196.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=262 nstack_initial=1): set(),
             State(pc_initial=270 nstack_initial=1): set(),
             State(pc_initial=294 nstack_initial=1): set(),
             State(pc_initial=298 nstack_initial=1): set(),
             State(pc_initial=300 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi196.0': State(pc_initial=192 nstack_initial=0),
 '$phi198.1': State(pc_initial=196 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi298.0',
                            State(pc_initial=298 nstack_initial=1))},
             '$phi198.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi270.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi294.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1))},
             '$phi298.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi196.0': {('$194get_iter.1', State(pc_initial=192 nstack_initial=0))},
 '$phi198.1': {('$196for_iter.2', State(pc_initial=196 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=192 nstack_initial=0): {'$phi196.0': '$194get_iter.1'},
             State(pc_initial=196 nstack_initial=1): {'$phi198.1': '$196for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.2.1'}), (20, {'lhs': '$8load_attr.1', 'rhs': '$const18.2.1', 'res': '$20compare_op.3'}), (22, {}), (24, {}), (26, {'pred': '$20compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 58: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'idx': 1, 'res': '$28load_global.0'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$const40.2.2'}), (42, {}), (44, {}), (46, {'func': '$28load_global.0', 'args': ['$const40.2.2'], 'kw_names': None, 'res': '$46call.3'}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'exc': '$46call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'item': '$58load_global.0', 'res': '$70load_attr.2'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$a80.3'}), (82, {}), (84, {}), (86, {'func': '$70load_attr.2', 'args': ['$a80.3'], 'kw_names': None, 'res': '$86call.4'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'value': '$86call.4'}), (98, {'idx': 4, 'res': '$98load_global.5'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {'res': '$it110.7'}), (112, {}), (114, {}), (116, {'func': '$98load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$116call.8'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {'item': '$116call.8', 'res': '$126load_method.10'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {}), (148, {'res': '$const148.11.1'}), (150, {}), (152, {}), (154, {'func': '$126load_method.10', 'args': ['$const148.11.1'], 'kw_names': None, 'res': '$154call.12'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.12'}), (166, {}), (168, {'res': '$168load_deref.14'}), (170, {'res': '$max_value170.15'}), (172, {}), (174, {}), (176, {'func': '$168load_deref.14', 'args': ['$max_value170.15'], 'kw_names': None, 'res': '$176call.16'}), (178, {}), (180, {}), (182, {}), (184, {}), (186, {'pred': '$176call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: (), 192: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$max_value188.0'}), (190, {'retval': '$max_value188.0', 'castval': '$190return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$it192.0'}), (194, {'value': '$it192.0', 'res': '$194get_iter.1'})), outgoing_phis={'$phi196.0': '$194get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$194get_iter.1',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=196 nstack_initial=1):
AdaptBlockInfo(insts=((196, {'iterator': '$phi196.0', 'pair': '$196for_iter.1', 'indval': '$196for_iter.2', 'pred': '$196for_iter.3'}),), outgoing_phis={'$phi198.1': '$196for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={300: (), 198: ('$phi196.0', '$196for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$view200.2'}), (202, {'item': '$view200.2', 'res': '$202load_method.4'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'func': '$202load_method.4', 'args': [], 'kw_names': None, 'res': '$228call.5'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'value': '$228call.5'}), (240, {}), (242, {'res': '$242load_deref.7'}), (244, {'res': '$v244.8'}), (246, {}), (248, {}), (250, {'func': '$242load_deref.7', 'args': ['$v244.8'], 'kw_names': None, 'res': '$250call.9'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'pred': '$250call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={262: ('$phi198.0',), 270: ('$phi198.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=262 nstack_initial=1):
AdaptBlockInfo(insts=((262, {'res': '$v262.1'}), (268, {'retval': '$v262.1', 'castval': '$268return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=270 nstack_initial=1):
AdaptBlockInfo(insts=((270, {}), (272, {'res': '$272load_deref.2'}), (274, {'res': '$v274.3'}), (276, {'res': '$max_value276.4'}), (278, {}), (280, {}), (282, {'func': '$272load_deref.2', 'args': ['$v274.3', '$max_value276.4'], 'kw_names': None, 'res': '$282call.5'}), (284, {}), (286, {}), (288, {}), (290, {}), (292, {'pred': '$282call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi270.0',), 298: ('$phi270.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=294 nstack_initial=1):
AdaptBlockInfo(insts=((294, {'res': '$v294.1'}), (296, {'value': '$v294.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={298: ('$phi294.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=298 nstack_initial=1):
AdaptBlockInfo(insts=((298, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$phi298.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=300 nstack_initial=0):
AdaptBlockInfo(insts=((300, {'res': '$max_value300.0'}), (302, {'retval': '$max_value300.0', 'castval': '$302return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const18.2.1 = const(int, 0)             ['$const18.2.1']
    $20compare_op.3 = $8load_attr.1 == $const18.2.1 ['$20compare_op.3', '$8load_attr.1', '$const18.2.1']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.3', '$26pred', 'bool26']
    branch $26pred, 28, 58                   ['$26pred']
label 28:
    $28load_global.0 = global(ValueError: <class 'ValueError'>) ['$28load_global.0']
    $const40.2.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const40.2.2']
    $46call.3 = call $28load_global.0($const40.2.2, func=$28load_global.0, args=[Var($const40.2.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$46call.3', '$const40.2.2']
    raise $46call.3                          ['$46call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$58load_global.0']
    $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$70load_attr.2']
    it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_attr.2', 'a', 'it']
    $98load_global.5 = global(next: <built-in function next>) ['$98load_global.5']
    $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.8', '$98load_global.5', 'it']
    $126load_method.10 = getattr(value=$116call.8, attr=take) ['$116call.8', '$126load_method.10']
    $const148.11.1 = const(int, 0)           ['$const148.11.1']
    max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_method.10', '$const148.11.1', 'max_value']
    $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>) ['$168load_deref.14']
    $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$168load_deref.14', '$176call.16', 'max_value']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$176call.16', '$186pred', 'bool186']
    branch $186pred, 188, 192                ['$186pred']
label 188:
    $190return_value.1 = cast(value=max_value) ['$190return_value.1', 'max_value']
    return $190return_value.1                ['$190return_value.1']
label 192:
    $194get_iter.1 = getiter(value=it)       ['$194get_iter.1', 'it']
    $phi196.0 = $194get_iter.1               ['$194get_iter.1', '$phi196.0']
    jump 196                                 []
label 196:
    $196for_iter.1 = iternext(value=$phi196.0) ['$196for_iter.1', '$phi196.0']
    $196for_iter.2 = pair_first(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.2']
    $196for_iter.3 = pair_second(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.3']
    $phi198.1 = $196for_iter.2               ['$196for_iter.2', '$phi198.1']
    branch $196for_iter.3, 198, 300          ['$196for_iter.3']
label 198:
    view = $phi198.1                         ['$phi198.1', 'view']
    $202load_method.4 = getattr(value=view, attr=item) ['$202load_method.4', 'view']
    v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$202load_method.4', 'v']
    $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>) ['$242load_deref.7']
    $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$242load_deref.7', '$250call.9', 'v']
    bool260 = global(bool: <class 'bool'>)   ['bool260']
    $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$250call.9', '$260pred', 'bool260']
    branch $260pred, 262, 270                ['$260pred']
label 262:
    $268return_value.2 = cast(value=v)       ['$268return_value.2', 'v']
    return $268return_value.2                ['$268return_value.2']
label 270:
    $272load_deref.2 = freevar(comparator: <function max_comparator at 0x0000019A159372E0>) ['$272load_deref.2']
    $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$272load_deref.2', '$282call.5', 'max_value', 'v']
    bool292 = global(bool: <class 'bool'>)   ['bool292']
    $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$282call.5', '$292pred', 'bool292']
    branch $292pred, 294, 298                ['$292pred']
label 294:
    max_value = v                            ['max_value', 'v']
    jump 298                                 []
label 298:
    jump 196                                 []
label 300:
    $302return_value.1 = cast(value=max_value) ['$302return_value.1', 'max_value']
    return $302return_value.1                ['$302return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B32CD0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 58
DEBUG:numba.core.ssa:==== SSA block analysis pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B32CD0>
DEBUG:numba.core.ssa:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const40.2.2 = const(str, zero-size array to reduction operation maximum which has no identity)
DEBUG:numba.core.ssa:on stmt: $46call.3 = call $28load_global.0($const40.2.2, func=$28load_global.0, args=[Var($const40.2.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B32CD0>
DEBUG:numba.core.ssa:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
DEBUG:numba.core.ssa:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.5 = global(next: <built-in function next>)
DEBUG:numba.core.ssa:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
DEBUG:numba.core.ssa:on stmt: $const148.11.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
DEBUG:numba.core.ssa:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 192
DEBUG:numba.core.ssa:==== SSA block analysis pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B32CD0>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B32CD0>
DEBUG:numba.core.ssa:on stmt: $194get_iter.1 = getiter(value=it)
DEBUG:numba.core.ssa:on stmt: $phi196.0 = $194get_iter.1
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block analysis pass on 196
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B32CD0>
DEBUG:numba.core.ssa:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
DEBUG:numba.core.ssa:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi198.1 = $196for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $196for_iter.3, 198, 300
DEBUG:numba.core.ssa:==== SSA block analysis pass on 198
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B32CD0>
DEBUG:numba.core.ssa:on stmt: view = $phi198.1
DEBUG:numba.core.ssa:on stmt: $202load_method.4 = getattr(value=view, attr=item)
DEBUG:numba.core.ssa:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
DEBUG:numba.core.ssa:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool260 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $260pred, 262, 270
DEBUG:numba.core.ssa:==== SSA block analysis pass on 262
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B32CD0>
DEBUG:numba.core.ssa:on stmt: $268return_value.2 = cast(value=v)
DEBUG:numba.core.ssa:on stmt: return $268return_value.2
DEBUG:numba.core.ssa:==== SSA block analysis pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B32CD0>
DEBUG:numba.core.ssa:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x0000019A159372E0>)
DEBUG:numba.core.ssa:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool292 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $292pred, 294, 298
DEBUG:numba.core.ssa:==== SSA block analysis pass on 294
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B32CD0>
DEBUG:numba.core.ssa:on stmt: max_value = v
DEBUG:numba.core.ssa:on stmt: jump 298
DEBUG:numba.core.ssa:==== SSA block analysis pass on 298
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B32CD0>
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block analysis pass on 300
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B32CD0>
DEBUG:numba.core.ssa:on stmt: $302return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $302return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$116call.8': [(<numba.core.ir.Assign object at 0x0000019A17824350>,
                             58)],
             '$126load_method.10': [(<numba.core.ir.Assign object at 0x0000019A17824A90>,
                                     58)],
             '$168load_deref.14': [(<numba.core.ir.Assign object at 0x0000019A17827E10>,
                                    58)],
             '$176call.16': [(<numba.core.ir.Assign object at 0x0000019A176FB690>,
                              58)],
             '$186pred': [(<numba.core.ir.Assign object at 0x0000019A176F9ED0>,
                           58)],
             '$190return_value.1': [(<numba.core.ir.Assign object at 0x0000019A176FACD0>,
                                     188)],
             '$194get_iter.1': [(<numba.core.ir.Assign object at 0x0000019A176F8690>,
                                 192)],
             '$196for_iter.1': [(<numba.core.ir.Assign object at 0x0000019A176F9450>,
                                 196)],
             '$196for_iter.2': [(<numba.core.ir.Assign object at 0x0000019A176FA010>,
                                 196)],
             '$196for_iter.3': [(<numba.core.ir.Assign object at 0x0000019A176F81D0>,
                                 196)],
             '$202load_method.4': [(<numba.core.ir.Assign object at 0x0000019A176F8550>,
                                    198)],
             '$20compare_op.3': [(<numba.core.ir.Assign object at 0x0000019A1753A390>,
                                  0)],
             '$242load_deref.7': [(<numba.core.ir.Assign object at 0x0000019A176FA850>,
                                   198)],
             '$250call.9': [(<numba.core.ir.Assign object at 0x0000019A176FB410>,
                             198)],
             '$260pred': [(<numba.core.ir.Assign object at 0x0000019A176FBB50>,
                           198)],
             '$268return_value.2': [(<numba.core.ir.Assign object at 0x0000019A176FBE90>,
                                     262)],
             '$26pred': [(<numba.core.ir.Assign object at 0x0000019A1783EE50>,
                          0)],
             '$272load_deref.2': [(<numba.core.ir.Assign object at 0x0000019A176F9790>,
                                   270)],
             '$282call.5': [(<numba.core.ir.Assign object at 0x0000019A176F8950>,
                             270)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17B2B750>,
                                   28)],
             '$292pred': [(<numba.core.ir.Assign object at 0x0000019A176F9690>,
                           270)],
             '$302return_value.1': [(<numba.core.ir.Assign object at 0x0000019A17B30350>,
                                     300)],
             '$46call.3': [(<numba.core.ir.Assign object at 0x0000019A178274D0>,
                            28)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17827DD0>,
                                   58)],
             '$70load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A17827910>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x0000019A178932D0>,
                                0)],
             '$98load_global.5': [(<numba.core.ir.Assign object at 0x0000019A17826910>,
                                   58)],
             '$const148.11.1': [(<numba.core.ir.Assign object at 0x0000019A17825550>,
                                 58)],
             '$const18.2.1': [(<numba.core.ir.Assign object at 0x0000019A17892D10>,
                               0)],
             '$const40.2.2': [(<numba.core.ir.Assign object at 0x0000019A17827850>,
                               28)],
             '$phi196.0': [(<numba.core.ir.Assign object at 0x0000019A176F8D50>,
                            192)],
             '$phi198.1': [(<numba.core.ir.Assign object at 0x0000019A176FAC50>,
                            196)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A17B22E10>, 0)],
             'bool186': [(<numba.core.ir.Assign object at 0x0000019A176FBED0>,
                          58)],
             'bool26': [(<numba.core.ir.Assign object at 0x0000019A17639350>,
                         0)],
             'bool260': [(<numba.core.ir.Assign object at 0x0000019A176FA1D0>,
                          198)],
             'bool292': [(<numba.core.ir.Assign object at 0x0000019A176FAB50>,
                          270)],
             'it': [(<numba.core.ir.Assign object at 0x0000019A17826950>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x0000019A17827A90>,
                            58),
                           (<numba.core.ir.Assign object at 0x0000019A176FAD90>,
                            294)],
             'v': [(<numba.core.ir.Assign object at 0x0000019A176F8E90>, 198)],
             'view': [(<numba.core.ir.Assign object at 0x0000019A176FB750>,
                       198)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17B32CD0>
DEBUG:numba.core.ssa:Fix SSA violator on var max_value
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17639A10>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17639A10>
DEBUG:numba.core.ssa:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const40.2.2 = const(str, zero-size array to reduction operation maximum which has no identity)
DEBUG:numba.core.ssa:on stmt: $46call.3 = call $28load_global.0($const40.2.2, func=$28load_global.0, args=[Var($const40.2.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17639A10>
DEBUG:numba.core.ssa:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
DEBUG:numba.core.ssa:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.5 = global(next: <built-in function next>)
DEBUG:numba.core.ssa:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
DEBUG:numba.core.ssa:on stmt: $const148.11.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:first assign: max_value
DEBUG:numba.core.ssa:replaced with: max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
DEBUG:numba.core.ssa:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17639A10>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17639A10>
DEBUG:numba.core.ssa:on stmt: $194get_iter.1 = getiter(value=it)
DEBUG:numba.core.ssa:on stmt: $phi196.0 = $194get_iter.1
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 196
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17639A10>
DEBUG:numba.core.ssa:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
DEBUG:numba.core.ssa:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi198.1 = $196for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $196for_iter.3, 198, 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 198
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17639A10>
DEBUG:numba.core.ssa:on stmt: view = $phi198.1
DEBUG:numba.core.ssa:on stmt: $202load_method.4 = getattr(value=view, attr=item)
DEBUG:numba.core.ssa:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
DEBUG:numba.core.ssa:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool260 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $260pred, 262, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 262
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17639A10>
DEBUG:numba.core.ssa:on stmt: $268return_value.2 = cast(value=v)
DEBUG:numba.core.ssa:on stmt: return $268return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17639A10>
DEBUG:numba.core.ssa:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x0000019A159372E0>)
DEBUG:numba.core.ssa:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool292 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $292pred, 294, 298
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 294
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17639A10>
DEBUG:numba.core.ssa:on stmt: max_value = v
DEBUG:numba.core.ssa:replaced with: max_value.1 = v
DEBUG:numba.core.ssa:on stmt: jump 298
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 298
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17639A10>
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 300
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17639A10>
DEBUG:numba.core.ssa:on stmt: $302return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $302return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x0000019A162AB150>],
             294: [<numba.core.ir.Assign object at 0x0000019A17B318D0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17824C50>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17824C50>
DEBUG:numba.core.ssa:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const40.2.2 = const(str, zero-size array to reduction operation maximum which has no identity)
DEBUG:numba.core.ssa:on stmt: $46call.3 = call $28load_global.0($const40.2.2, func=$28load_global.0, args=[Var($const40.2.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17824C50>
DEBUG:numba.core.ssa:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
DEBUG:numba.core.ssa:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.5 = global(next: <built-in function next>)
DEBUG:numba.core.ssa:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
DEBUG:numba.core.ssa:on stmt: $const148.11.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $168load_deref.14 = freevar(pre_return_func: <ufunc 'isnan'>)
DEBUG:numba.core.ssa:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17824C50>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$190return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 58 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 58
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17824C50>
DEBUG:numba.core.ssa:on stmt: $194get_iter.1 = getiter(value=it)
DEBUG:numba.core.ssa:on stmt: $phi196.0 = $194get_iter.1
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 196
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17824C50>
DEBUG:numba.core.ssa:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
DEBUG:numba.core.ssa:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi198.1 = $196for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $196for_iter.3, 198, 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 198
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17824C50>
DEBUG:numba.core.ssa:on stmt: view = $phi198.1
DEBUG:numba.core.ssa:on stmt: $202load_method.4 = getattr(value=view, attr=item)
DEBUG:numba.core.ssa:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $242load_deref.7 = freevar(pre_return_func: <ufunc 'isnan'>)
DEBUG:numba.core.ssa:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool260 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $260pred, 262, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 262
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17824C50>
DEBUG:numba.core.ssa:on stmt: $268return_value.2 = cast(value=v)
DEBUG:numba.core.ssa:on stmt: return $268return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17824C50>
DEBUG:numba.core.ssa:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x0000019A159372E0>)
DEBUG:numba.core.ssa:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 198 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 198
DEBUG:numba.core.ssa:find_def_from_top label 198
DEBUG:numba.core.ssa:idom 196 from label 198
DEBUG:numba.core.ssa:find_def_from_bottom label 196
DEBUG:numba.core.ssa:find_def_from_top label 196
DEBUG:numba.core.ssa:insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 196
DEBUG:numba.core.ssa:find_def_from_bottom label 192
DEBUG:numba.core.ssa:find_def_from_top label 192
DEBUG:numba.core.ssa:idom 58 from label 192
DEBUG:numba.core.ssa:find_def_from_bottom label 58
DEBUG:numba.core.ssa:incoming_def max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_bottom label 298
DEBUG:numba.core.ssa:find_def_from_top label 298
DEBUG:numba.core.ssa:insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 298
DEBUG:numba.core.ssa:find_def_from_bottom label 294
DEBUG:numba.core.ssa:incoming_def max_value.1 = v
DEBUG:numba.core.ssa:find_def_from_bottom label 270
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 198 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 198
DEBUG:numba.core.ssa:find_def_from_top label 198
DEBUG:numba.core.ssa:idom 196 from label 198
DEBUG:numba.core.ssa:find_def_from_bottom label 196
DEBUG:numba.core.ssa:incoming_def max_value.2 = phi(incoming_values=[Var(max_value, old_arraymath.py:575)], incoming_blocks=[192])
DEBUG:numba.core.ssa:incoming_def max_value.3 = phi(incoming_values=[Var(max_value.1, old_arraymath.py:584), Var(max_value.2, old_arraymath.py:583)], incoming_blocks=[294, 270])
DEBUG:numba.core.ssa:replaced with: $282call.5 = call $272load_deref.2(v, max_value.2, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value.2, old_arraymath.py:583)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool292 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $292pred, 294, 298
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 294
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17824C50>
DEBUG:numba.core.ssa:on stmt: max_value.1 = v
DEBUG:numba.core.ssa:on stmt: jump 298
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 298
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17824C50>
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 300
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17824C50>
DEBUG:numba.core.ssa:on stmt: $302return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$302return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def_from_top label 300
DEBUG:numba.core.ssa:idom 196 from label 300
DEBUG:numba.core.ssa:find_def_from_bottom label 196
DEBUG:numba.core.ssa:replaced with: $302return_value.1 = cast(value=max_value.2)
DEBUG:numba.core.ssa:on stmt: return $302return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4793)
           2	RESUME(arg=0, lineno=4793)
           4	LOAD_FAST(arg=1, lineno=4794)
           6	LOAD_FAST(arg=0, lineno=4794)
           8	LOAD_ATTR(arg=0, lineno=4794)
          18	LOAD_CONST(arg=1, lineno=4794)
          20	BINARY_OP(arg=10, lineno=4794)
          24	COMPARE_OP(arg=4, lineno=4794)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4794)
          32	LOAD_FAST(arg=1, lineno=4794)
          34	LOAD_FAST(arg=0, lineno=4794)
          36	LOAD_ATTR(arg=0, lineno=4794)
          46	UNARY_NEGATIVE(arg=None, lineno=4794)
          48	COMPARE_OP(arg=0, lineno=4794)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4794)
>         56	LOAD_GLOBAL(arg=3, lineno=4795)
          68	LOAD_CONST(arg=2, lineno=4795)
          70	PRECALL(arg=1, lineno=4795)
          74	CALL(arg=1, lineno=4795)
          84	RAISE_VARARGS(arg=1, lineno=4795)
>         86	LOAD_FAST(arg=0, lineno=4796)
          88	LOAD_METHOD(arg=2, lineno=4796)
         110	PRECALL(arg=0, lineno=4796)
         114	CALL(arg=0, lineno=4796)
         124	LOAD_FAST(arg=1, lineno=4796)
         126	BINARY_SUBSCR(arg=None, lineno=4796)
         136	RETURN_VALUE(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4793)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=4793)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$a6.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$8load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$8load_attr.2', '$const18.3.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$binop_sub20.4']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$24compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$a34.1']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$36load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$46unary_negative.3']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$48compare_op.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=56 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4795)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=PRECALL(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0', '$const68.2.2']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=CALL(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0', '$const68.2.2']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$74call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=86 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$a86.0']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=PRECALL(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$null$88.1', '$88load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=CALL(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$null$88.1', '$88load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$114call.3']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$114call.3', '$indices124.4']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$126binary_subscr.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3.1'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3.1', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    axis = arg(2, name=axis)                 ['axis']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3.1 = const(int, 1)             ['$const18.3.1']
    $binop_sub20.4 = $8load_attr.2 - $const18.3.1 ['$8load_attr.2', '$binop_sub20.4', '$const18.3.1']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2.2 = const(str, Index out of bounds) ['$const68.2.2']
    $74call.3 = call $56load_global.0($const68.2.2, func=$56load_global.0, args=[Var($const68.2.2, arrayobj.py:4795)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17506F90>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: indices = arg(1, name=indices)
DEBUG:numba.core.ssa:on stmt: axis = arg(2, name=axis)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3.1
DEBUG:numba.core.ssa:on stmt: $24compare_op.5 = indices > $binop_sub20.4
DEBUG:numba.core.ssa:on stmt: bool30 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $30pred, 56, 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17506F90>
DEBUG:numba.core.ssa:on stmt: $36load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
DEBUG:numba.core.ssa:on stmt: $48compare_op.4 = indices < $46unary_negative.3
DEBUG:numba.core.ssa:on stmt: bool54 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $54pred, 56, 86
DEBUG:numba.core.ssa:==== SSA block analysis pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17506F90>
DEBUG:numba.core.ssa:on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
DEBUG:numba.core.ssa:on stmt: $const68.2.2 = const(str, Index out of bounds)
DEBUG:numba.core.ssa:on stmt: $74call.3 = call $56load_global.0($const68.2.2, func=$56load_global.0, args=[Var($const68.2.2, arrayobj.py:4795)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17506F90>
DEBUG:numba.core.ssa:on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
DEBUG:numba.core.ssa:on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
DEBUG:numba.core.ssa:on stmt: return $136return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x0000019A17507910>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000019A17504210>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x0000019A16117D10>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x0000019A161A1890>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x0000019A161A13D0>,
                          0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A161A1A10>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x0000019A161A3510>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x0000019A161A3310>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x0000019A161A1490>,
                          32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x0000019A161A3C50>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x0000019A175071D0>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x0000019A17506410>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A161A3850>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x0000019A161A0290>,
                                 0)],
             '$const18.3.1': [(<numba.core.ir.Assign object at 0x0000019A161A0FD0>,
                               0)],
             '$const68.2.2': [(<numba.core.ir.Assign object at 0x0000019A17504A50>,
                               56)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A1617C3D0>, 0)],
             'axis': [(<numba.core.ir.Assign object at 0x0000019A17B30490>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x0000019A161A0AD0>,
                         0)],
             'bool54': [(<numba.core.ir.Assign object at 0x0000019A161A0110>,
                         32)],
             'indices': [(<numba.core.ir.Assign object at 0x0000019A17B20B90>,
                          0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17506F90>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2302)
           2	RESUME(arg=0, lineno=2302)
           4	LOAD_FAST(arg=0, lineno=2304)
           6	LOAD_METHOD(arg=0, lineno=2304)
          28	LOAD_FAST(arg=0, lineno=2304)
          30	LOAD_ATTR(arg=1, lineno=2304)
          40	PRECALL(arg=1, lineno=2304)
          44	CALL(arg=1, lineno=2304)
          54	RETURN_VALUE(arg=None, lineno=2304)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2302)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=2302)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2304)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$ary4.0']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2', '$ary28.3']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=PRECALL(arg=1, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=CALL(arg=1, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$44call.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$ary28.3'}), (30, {'item': '$ary28.3', 'res': '$30load_attr.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {'func': '$6load_method.2', 'args': ['$30load_attr.4'], 'kw_names': None, 'res': '$44call.5'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {'retval': '$44call.5', 'castval': '$54return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_method.2 = getattr(value=ary, attr=reshape) ['$6load_method.2', 'ary']
    $30load_attr.4 = getattr(value=ary, attr=size) ['$30load_attr.4', 'ary']
    $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2304)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_attr.4', '$44call.5', '$6load_method.2']
    $54return_value.6 = cast(value=$44call.5) ['$44call.5', '$54return_value.6']
    return $54return_value.6                 ['$54return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1743F310>
DEBUG:numba.core.ssa:on stmt: ary = arg(0, name=ary)
DEBUG:numba.core.ssa:on stmt: $6load_method.2 = getattr(value=ary, attr=reshape)
DEBUG:numba.core.ssa:on stmt: $30load_attr.4 = getattr(value=ary, attr=size)
DEBUG:numba.core.ssa:on stmt: $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2304)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $54return_value.6 = cast(value=$44call.5)
DEBUG:numba.core.ssa:on stmt: return $54return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$30load_attr.4': [(<numba.core.ir.Assign object at 0x0000019A162CA450>,
                                 0)],
             '$44call.5': [(<numba.core.ir.Assign object at 0x0000019A162CB110>,
                            0)],
             '$54return_value.6': [(<numba.core.ir.Assign object at 0x0000019A162CAF90>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x0000019A162CBC10>,
                                  0)],
             'ary': [(<numba.core.ir.Assign object at 0x0000019A162C84D0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A1743F310>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=480)
           2	RESUME(arg=0, lineno=480)
           4	LOAD_FAST(arg=0, lineno=482)
           6	LOAD_FAST(arg=1, lineno=482)
           8	COMPARE_OP(arg=4, lineno=482)
          14	RETURN_VALUE(arg=None, lineno=482)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=480)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=480)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=482)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=482)
DEBUG:numba.core.byteflow:stack ['$a4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=COMPARE_OP(arg=4, lineno=482)
DEBUG:numba.core.byteflow:stack ['$a4.0', '$min_val6.1']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=482)
DEBUG:numba.core.byteflow:stack ['$8compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (10, {}), (12, {}), (14, {'retval': '$8compare_op.2', 'castval': '$14return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $14return_value.3 = cast(value=$8compare_op.2) ['$14return_value.3', '$8compare_op.2']
    return $14return_value.3                 ['$14return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17586350>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: min_val = arg(1, name=min_val)
DEBUG:numba.core.ssa:on stmt: $8compare_op.2 = a > min_val
DEBUG:numba.core.ssa:on stmt: $14return_value.3 = cast(value=$8compare_op.2)
DEBUG:numba.core.ssa:on stmt: return $14return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$14return_value.3': [(<numba.core.ir.Assign object at 0x0000019A17586ED0>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A17585A10>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A17584A90>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x0000019A175844D0>,
                          0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17586350>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4793)
           2	RESUME(arg=0, lineno=4793)
           4	LOAD_FAST(arg=1, lineno=4794)
           6	LOAD_FAST(arg=0, lineno=4794)
           8	LOAD_ATTR(arg=0, lineno=4794)
          18	LOAD_CONST(arg=1, lineno=4794)
          20	BINARY_OP(arg=10, lineno=4794)
          24	COMPARE_OP(arg=4, lineno=4794)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4794)
          32	LOAD_FAST(arg=1, lineno=4794)
          34	LOAD_FAST(arg=0, lineno=4794)
          36	LOAD_ATTR(arg=0, lineno=4794)
          46	UNARY_NEGATIVE(arg=None, lineno=4794)
          48	COMPARE_OP(arg=0, lineno=4794)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4794)
>         56	LOAD_GLOBAL(arg=3, lineno=4795)
          68	LOAD_CONST(arg=2, lineno=4795)
          70	PRECALL(arg=1, lineno=4795)
          74	CALL(arg=1, lineno=4795)
          84	RAISE_VARARGS(arg=1, lineno=4795)
>         86	LOAD_FAST(arg=0, lineno=4796)
          88	LOAD_METHOD(arg=2, lineno=4796)
         110	PRECALL(arg=0, lineno=4796)
         114	CALL(arg=0, lineno=4796)
         124	LOAD_FAST(arg=1, lineno=4796)
         126	BINARY_SUBSCR(arg=None, lineno=4796)
         136	RETURN_VALUE(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4793)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=4793)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$a6.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$8load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$8load_attr.2', '$const18.3.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$binop_sub20.4']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$24compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$a34.1']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$36load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$46unary_negative.3']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$48compare_op.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=56 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4795)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=PRECALL(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0', '$const68.2.2']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=CALL(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0', '$const68.2.2']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$74call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=86 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$a86.0']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=PRECALL(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$null$88.1', '$88load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=CALL(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$null$88.1', '$88load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$114call.3']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$114call.3', '$indices124.4']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$126binary_subscr.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3.1'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3.1', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    axis = arg(2, name=axis)                 ['axis']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3.1 = const(int, 1)             ['$const18.3.1']
    $binop_sub20.4 = $8load_attr.2 - $const18.3.1 ['$8load_attr.2', '$binop_sub20.4', '$const18.3.1']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2.2 = const(str, Index out of bounds) ['$const68.2.2']
    $74call.3 = call $56load_global.0($const68.2.2, func=$56load_global.0, args=[Var($const68.2.2, arrayobj.py:4795)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1749E490>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: indices = arg(1, name=indices)
DEBUG:numba.core.ssa:on stmt: axis = arg(2, name=axis)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3.1
DEBUG:numba.core.ssa:on stmt: $24compare_op.5 = indices > $binop_sub20.4
DEBUG:numba.core.ssa:on stmt: bool30 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $30pred, 56, 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1749E490>
DEBUG:numba.core.ssa:on stmt: $36load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
DEBUG:numba.core.ssa:on stmt: $48compare_op.4 = indices < $46unary_negative.3
DEBUG:numba.core.ssa:on stmt: bool54 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $54pred, 56, 86
DEBUG:numba.core.ssa:==== SSA block analysis pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1749E490>
DEBUG:numba.core.ssa:on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
DEBUG:numba.core.ssa:on stmt: $const68.2.2 = const(str, Index out of bounds)
DEBUG:numba.core.ssa:on stmt: $74call.3 = call $56load_global.0($const68.2.2, func=$56load_global.0, args=[Var($const68.2.2, arrayobj.py:4795)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1749E490>
DEBUG:numba.core.ssa:on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
DEBUG:numba.core.ssa:on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
DEBUG:numba.core.ssa:on stmt: return $136return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x0000019A162AB690>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000019A175BE890>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x0000019A175BEA10>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x0000019A17631510>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x0000019A17630290>,
                          0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A17587550>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x0000019A17587D50>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x0000019A175856D0>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x0000019A17585150>,
                          32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x0000019A175877D0>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x0000019A175871D0>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x0000019A17587FD0>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A17632B10>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x0000019A17633A50>,
                                 0)],
             '$const18.3.1': [(<numba.core.ir.Assign object at 0x0000019A176326D0>,
                               0)],
             '$const68.2.2': [(<numba.core.ir.Assign object at 0x0000019A17585DD0>,
                               56)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A17630510>, 0)],
             'axis': [(<numba.core.ir.Assign object at 0x0000019A17633510>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x0000019A17633810>,
                         0)],
             'bool54': [(<numba.core.ir.Assign object at 0x0000019A17585D10>,
                         32)],
             'indices': [(<numba.core.ir.Assign object at 0x0000019A17633110>,
                          0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17575C50>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=436)
           2	COPY_FREE_VARS(arg=1, lineno=436)
           4	RESUME(arg=0, lineno=436)
           6	LOAD_DEREF(arg=3, lineno=439)
           8	STORE_FAST(arg=1, lineno=439)
          10	LOAD_GLOBAL(arg=1, lineno=440)
          22	LOAD_ATTR(arg=1, lineno=440)
          32	LOAD_FAST(arg=0, lineno=440)
          34	PRECALL(arg=1, lineno=440)
          38	CALL(arg=1, lineno=440)
          48	GET_ITER(arg=None, lineno=440)
>         50	FOR_ITER(arg=25, lineno=440)
          52	STORE_FAST(arg=2, lineno=440)
          54	LOAD_FAST(arg=1, lineno=441)
          56	LOAD_FAST(arg=2, lineno=441)
          58	LOAD_METHOD(arg=2, lineno=441)
          80	PRECALL(arg=0, lineno=441)
          84	CALL(arg=0, lineno=441)
          94	BINARY_OP(arg=13, lineno=441)
          98	STORE_FAST(arg=1, lineno=441)
         100	JUMP_BACKWARD(arg=26, lineno=441)
>        102	LOAD_FAST(arg=1, lineno=442)
         104	LOAD_FAST(arg=0, lineno=442)
         106	LOAD_ATTR(arg=3, lineno=442)
         116	BINARY_OP(arg=11, lineno=442)
         120	RETURN_VALUE(arg=None, lineno=442)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=436)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=436)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=RESUME(arg=0, lineno=436)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=439)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=1, lineno=439)
DEBUG:numba.core.byteflow:stack ['$6load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_ATTR(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$10load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=440)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$22load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=PRECALL(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$22load_attr.3', '$a32.4']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=CALL(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$22load_attr.3', '$a32.4']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=GET_ITER(arg=None, lineno=440)
DEBUG:numba.core.byteflow:stack ['$38call.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=50, stack=('$48get_iter.6',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi50.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=50 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=50, inst=FOR_ITER(arg=25, lineno=440)
DEBUG:numba.core.byteflow:stack ['$phi50.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=102 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=442)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=442)
DEBUG:numba.core.byteflow:stack ['$c102.0']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_ATTR(arg=3, lineno=442)
DEBUG:numba.core.byteflow:stack ['$c102.0', '$a104.1']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BINARY_OP(arg=11, lineno=442)
DEBUG:numba.core.byteflow:stack ['$c102.0', '$106load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=442)
DEBUG:numba.core.byteflow:stack ['$binop_truediv116.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=52 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi52.0', '$phi52.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=52 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=52, inst=STORE_FAST(arg=2, lineno=440)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$phi52.1']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_METHOD(arg=2, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2', '$v56.3']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=PRECALL(arg=0, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=CALL(arg=0, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=BINARY_OP(arg=13, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2', '$84call.6']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=STORE_FAST(arg=1, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$binop_iadd94.7']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=JUMP_BACKWARD(arg=26, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=50, stack=('$phi52.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=102 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi50.0': {('$48get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.6'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {'item': '$10load_global.1', 'res': '$22load_attr.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$a32.4'}), (34, {}), (36, {}), (38, {'func': '$22load_attr.3', 'args': ['$a32.4'], 'kw_names': None, 'res': '$38call.5'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.5', 'res': '$48get_iter.6'})), outgoing_phis={'$phi50.0': '$48get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.6',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 52: ('$phi50.0', '$50for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$c54.2'}), (56, {'res': '$v56.3'}), (58, {'item': '$v56.3', 'res': '$58load_method.5'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'func': '$58load_method.5', 'args': [], 'kw_names': None, 'res': '$84call.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {'op': '+=', 'lhs': '$c54.2', 'rhs': '$84call.6', 'res': '$binop_iadd94.7'}), (96, {}), (98, {'value': '$binop_iadd94.7'}), (100, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi52.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$c102.0'}), (104, {'res': '$a104.1'}), (106, {'item': '$a104.1', 'res': '$106load_attr.2'}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {'op': '/', 'lhs': '$c102.0', 'rhs': '$106load_attr.2', 'res': '$binop_truediv116.3'}), (118, {}), (120, {'retval': '$binop_truediv116.3', 'castval': '$120return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$10load_global.1']
    $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$22load_attr.3']
    $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.3', '$38call.5', 'a']
    $48get_iter.6 = getiter(value=$38call.5) ['$38call.5', '$48get_iter.6']
    $phi50.0 = $48get_iter.6                 ['$48get_iter.6', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 102            ['$50for_iter.3']
label 52:
    v = $phi52.1                             ['$phi52.1', 'v']
    $58load_method.5 = getattr(value=v, attr=item) ['$58load_method.5', 'v']
    $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_method.5', '$84call.6']
    $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined) ['$84call.6', '$binop_iadd94.7', 'c']
    c = $binop_iadd94.7                      ['$binop_iadd94.7', 'c']
    jump 50                                  []
label 102:
    $106load_attr.2 = getattr(value=a, attr=size) ['$106load_attr.2', 'a']
    $binop_truediv116.3 = c / $106load_attr.2 ['$106load_attr.2', '$binop_truediv116.3', 'c']
    $120return_value.4 = cast(value=$binop_truediv116.3) ['$120return_value.4', '$binop_truediv116.3']
    return $120return_value.4                ['$120return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B31A50>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $48get_iter.6 = getiter(value=$38call.5)
DEBUG:numba.core.ssa:on stmt: $phi50.0 = $48get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block analysis pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B31A50>
DEBUG:numba.core.ssa:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
DEBUG:numba.core.ssa:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi52.1 = $50for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $50for_iter.3, 52, 102
DEBUG:numba.core.ssa:==== SSA block analysis pass on 52
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B31A50>
DEBUG:numba.core.ssa:on stmt: v = $phi52.1
DEBUG:numba.core.ssa:on stmt: $58load_method.5 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c = $binop_iadd94.7
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block analysis pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B31A50>
DEBUG:numba.core.ssa:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $binop_truediv116.3 = c / $106load_attr.2
DEBUG:numba.core.ssa:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
DEBUG:numba.core.ssa:on stmt: return $120return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$106load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A16201AD0>,
                                  102)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x0000019A15FA0BD0>,
                                   0)],
             '$120return_value.4': [(<numba.core.ir.Assign object at 0x0000019A16201850>,
                                     102)],
             '$22load_attr.3': [(<numba.core.ir.Assign object at 0x0000019A15FA0ED0>,
                                 0)],
             '$38call.5': [(<numba.core.ir.Assign object at 0x0000019A15FA3C10>,
                            0)],
             '$48get_iter.6': [(<numba.core.ir.Assign object at 0x0000019A15FA1150>,
                                0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x0000019A15FA2E90>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x0000019A15FA3590>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x0000019A15FA0E10>,
                                50)],
             '$58load_method.5': [(<numba.core.ir.Assign object at 0x0000019A16200B50>,
                                   52)],
             '$84call.6': [(<numba.core.ir.Assign object at 0x0000019A162008D0>,
                            52)],
             '$binop_iadd94.7': [(<numba.core.ir.Assign object at 0x0000019A162009D0>,
                                  52)],
             '$binop_truediv116.3': [(<numba.core.ir.Assign object at 0x0000019A16203490>,
                                      102)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x0000019A15FA2090>,
                           0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x0000019A15FA10D0>,
                           50)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A174B1310>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x0000019A174ED7D0>, 0),
                   (<numba.core.ir.Assign object at 0x0000019A16202190>, 52)],
             'v': [(<numba.core.ir.Assign object at 0x0000019A15FA0F50>, 52)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17B31A50>
DEBUG:numba.core.ssa:Fix SSA violator on var c
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A16203A10>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:first assign: c
DEBUG:numba.core.ssa:replaced with: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $48get_iter.6 = getiter(value=$38call.5)
DEBUG:numba.core.ssa:on stmt: $phi50.0 = $48get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A16203A10>
DEBUG:numba.core.ssa:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
DEBUG:numba.core.ssa:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi52.1 = $50for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $50for_iter.3, 52, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 52
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A16203A10>
DEBUG:numba.core.ssa:on stmt: v = $phi52.1
DEBUG:numba.core.ssa:on stmt: $58load_method.5 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c = $binop_iadd94.7
DEBUG:numba.core.ssa:replaced with: c.1 = $binop_iadd94.7
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A16203A10>
DEBUG:numba.core.ssa:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $binop_truediv116.3 = c / $106load_attr.2
DEBUG:numba.core.ssa:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
DEBUG:numba.core.ssa:on stmt: return $120return_value.4
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000019A16202690>],
             52: [<numba.core.ir.Assign object at 0x0000019A16203E90>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A16203910>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $48get_iter.6 = getiter(value=$38call.5)
DEBUG:numba.core.ssa:on stmt: $phi50.0 = $48get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A16203910>
DEBUG:numba.core.ssa:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
DEBUG:numba.core.ssa:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi52.1 = $50for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $50for_iter.3, 52, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 52
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A16203910>
DEBUG:numba.core.ssa:on stmt: v = $phi52.1
DEBUG:numba.core.ssa:on stmt: $58load_method.5 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='c' stmt=$binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 52
DEBUG:numba.core.ssa:idom 50 from label 52
DEBUG:numba.core.ssa:find_def_from_bottom label 50
DEBUG:numba.core.ssa:find_def_from_top label 50
DEBUG:numba.core.ssa:insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 50
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 52
DEBUG:numba.core.ssa:incoming_def c.1 = $binop_iadd94.7
DEBUG:numba.core.ssa:replaced with: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c.1 = $binop_iadd94.7
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A16203910>
DEBUG:numba.core.ssa:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $binop_truediv116.3 = c / $106load_attr.2
DEBUG:numba.core.ssa:find_def var='c' stmt=$binop_truediv116.3 = c / $106load_attr.2
DEBUG:numba.core.ssa:find_def_from_top label 102
DEBUG:numba.core.ssa:idom 50 from label 102
DEBUG:numba.core.ssa:find_def_from_bottom label 50
DEBUG:numba.core.ssa:replaced with: $binop_truediv116.3 = c.2 / $106load_attr.2
DEBUG:numba.core.ssa:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
DEBUG:numba.core.ssa:on stmt: return $120return_value.4
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1193)
           2	RESUME(arg=0, lineno=1193)
           4	LOAD_FAST(arg=0, lineno=1205)
           6	LOAD_CONST(arg=1, lineno=1205)
           8	BINARY_SUBSCR(arg=None, lineno=1205)
          18	LOAD_GLOBAL(arg=1, lineno=1205)
          30	LOAD_ATTR(arg=1, lineno=1205)
          40	LOAD_FAST(arg=0, lineno=1205)
          42	LOAD_CONST(arg=2, lineno=1205)
          44	LOAD_GLOBAL(arg=5, lineno=1205)
          56	LOAD_FAST(arg=2, lineno=1205)
          58	LOAD_FAST(arg=0, lineno=1205)
          60	LOAD_ATTR(arg=3, lineno=1205)
          70	LOAD_CONST(arg=1, lineno=1205)
          72	BINARY_SUBSCR(arg=None, lineno=1205)
          82	PRECALL(arg=2, lineno=1205)
          86	CALL(arg=2, lineno=1205)
          96	BUILD_SLICE(arg=2, lineno=1205)
          98	BINARY_SUBSCR(arg=None, lineno=1205)
         108	PRECALL(arg=1, lineno=1205)
         112	CALL(arg=1, lineno=1205)
         122	COMPARE_OP(arg=5, lineno=1205)
         128	LOAD_FAST(arg=7, lineno=1205)
         130	LOAD_CONST(arg=1, lineno=1205)
         132	STORE_SUBSCR(arg=None, lineno=1205)
         136	LOAD_FAST(arg=7, lineno=1206)
         138	LOAD_CONST(arg=1, lineno=1206)
         140	COPY(arg=2, lineno=1206)
         142	COPY(arg=2, lineno=1206)
         144	BINARY_SUBSCR(arg=None, lineno=1206)
         154	LOAD_FAST(arg=0, lineno=1206)
         156	LOAD_CONST(arg=1, lineno=1206)
         158	BINARY_SUBSCR(arg=None, lineno=1206)
         168	LOAD_GLOBAL(arg=1, lineno=1206)
         180	LOAD_ATTR(arg=4, lineno=1206)
         190	LOAD_FAST(arg=0, lineno=1206)
         192	LOAD_CONST(arg=2, lineno=1206)
         194	LOAD_GLOBAL(arg=5, lineno=1206)
         206	LOAD_FAST(arg=4, lineno=1206)
         208	LOAD_FAST(arg=0, lineno=1206)
         210	LOAD_ATTR(arg=3, lineno=1206)
         220	LOAD_CONST(arg=1, lineno=1206)
         222	BINARY_SUBSCR(arg=None, lineno=1206)
         232	PRECALL(arg=2, lineno=1206)
         236	CALL(arg=2, lineno=1206)
         246	BUILD_SLICE(arg=2, lineno=1206)
         248	BINARY_SUBSCR(arg=None, lineno=1206)
         258	PRECALL(arg=1, lineno=1206)
         262	CALL(arg=1, lineno=1206)
         272	LOAD_FAST(arg=5, lineno=1206)
         274	BINARY_OP(arg=0, lineno=1206)
         278	COMPARE_OP(arg=5, lineno=1206)
         284	BINARY_OP(arg=14, lineno=1206)
         288	SWAP(arg=3, lineno=1206)
         290	SWAP(arg=2, lineno=1206)
         292	STORE_SUBSCR(arg=None, lineno=1206)
         296	LOAD_FAST(arg=7, lineno=1208)
         298	LOAD_CONST(arg=1, lineno=1208)
         300	BINARY_SUBSCR(arg=None, lineno=1208)
         310	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1208)
         312	LOAD_FAST(arg=6, lineno=1209)
         314	LOAD_CONST(arg=3, lineno=1209)
         316	BINARY_OP(arg=0, lineno=1209)
         320	STORE_FAST(arg=8, lineno=1209)
         322	JUMP_FORWARD(arg=2, lineno=1209)
>        324	LOAD_CONST(arg=3, lineno=1211)
         326	STORE_FAST(arg=8, lineno=1211)
>        328	LOAD_FAST(arg=8, lineno=1213)
         330	LOAD_FAST(arg=0, lineno=1213)
         332	LOAD_ATTR(arg=3, lineno=1213)
         342	LOAD_CONST(arg=1, lineno=1213)
         344	BINARY_SUBSCR(arg=None, lineno=1213)
         354	COMPARE_OP(arg=0, lineno=1213)
         360	POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1213)
>        362	LOAD_GLOBAL(arg=1, lineno=1214)
         374	LOAD_ATTR(arg=1, lineno=1214)
         384	LOAD_FAST(arg=0, lineno=1214)
         386	LOAD_GLOBAL(arg=3, lineno=1214)
         398	LOAD_CONST(arg=1, lineno=1214)
         400	LOAD_FAST(arg=8, lineno=1214)
         402	LOAD_FAST(arg=1, lineno=1214)
         404	BINARY_OP(arg=10, lineno=1214)
         408	PRECALL(arg=2, lineno=1214)
         412	CALL(arg=2, lineno=1214)
         422	LOAD_GLOBAL(arg=5, lineno=1214)
         434	LOAD_FAST(arg=8, lineno=1214)
         436	LOAD_FAST(arg=2, lineno=1214)
         438	BINARY_OP(arg=0, lineno=1214)
         442	LOAD_FAST(arg=0, lineno=1214)
         444	LOAD_ATTR(arg=3, lineno=1214)
         454	LOAD_CONST(arg=1, lineno=1214)
         456	BINARY_SUBSCR(arg=None, lineno=1214)
         466	PRECALL(arg=2, lineno=1214)
         470	CALL(arg=2, lineno=1214)
         480	BUILD_SLICE(arg=2, lineno=1214)
         482	BINARY_SUBSCR(arg=None, lineno=1214)
         492	PRECALL(arg=1, lineno=1214)
         496	CALL(arg=1, lineno=1214)
         506	STORE_FAST(arg=9, lineno=1214)
         508	LOAD_FAST(arg=0, lineno=1217)
         510	LOAD_FAST(arg=8, lineno=1217)
         512	BINARY_SUBSCR(arg=None, lineno=1217)
         522	LOAD_FAST(arg=9, lineno=1217)
         524	COMPARE_OP(arg=2, lineno=1217)
         530	LOAD_FAST(arg=7, lineno=1217)
         532	LOAD_FAST(arg=8, lineno=1217)
         534	STORE_SUBSCR(arg=None, lineno=1217)
         538	LOAD_FAST(arg=7, lineno=1219)
         540	LOAD_FAST(arg=8, lineno=1219)
         542	BINARY_SUBSCR(arg=None, lineno=1219)
         552	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1219)
         554	LOAD_FAST(arg=8, lineno=1220)
         556	LOAD_CONST(arg=3, lineno=1220)
         558	BINARY_OP(arg=13, lineno=1220)
         562	STORE_FAST(arg=8, lineno=1220)
         564	JUMP_BACKWARD(arg=119, lineno=1221)
>        566	LOAD_GLOBAL(arg=1, lineno=1223)
         578	LOAD_ATTR(arg=4, lineno=1223)
         588	LOAD_FAST(arg=0, lineno=1223)
         590	LOAD_GLOBAL(arg=3, lineno=1223)
         602	LOAD_CONST(arg=1, lineno=1223)
         604	LOAD_FAST(arg=8, lineno=1223)
         606	LOAD_FAST(arg=3, lineno=1223)
         608	BINARY_OP(arg=10, lineno=1223)
         612	PRECALL(arg=2, lineno=1223)
         616	CALL(arg=2, lineno=1223)
         626	LOAD_GLOBAL(arg=5, lineno=1223)
         638	LOAD_FAST(arg=8, lineno=1223)
         640	LOAD_FAST(arg=4, lineno=1223)
         642	BINARY_OP(arg=0, lineno=1223)
         646	LOAD_FAST(arg=0, lineno=1223)
         648	LOAD_ATTR(arg=3, lineno=1223)
         658	LOAD_CONST(arg=1, lineno=1223)
         660	BINARY_SUBSCR(arg=None, lineno=1223)
         670	PRECALL(arg=2, lineno=1223)
         674	CALL(arg=2, lineno=1223)
         684	BUILD_SLICE(arg=2, lineno=1223)
         686	BINARY_SUBSCR(arg=None, lineno=1223)
         696	PRECALL(arg=1, lineno=1223)
         700	CALL(arg=1, lineno=1223)
         710	STORE_FAST(arg=10, lineno=1223)
         712	LOAD_FAST(arg=7, lineno=1224)
         714	LOAD_FAST(arg=8, lineno=1224)
         716	COPY(arg=2, lineno=1224)
         718	COPY(arg=2, lineno=1224)
         720	BINARY_SUBSCR(arg=None, lineno=1224)
         730	LOAD_FAST(arg=0, lineno=1224)
         732	LOAD_FAST(arg=8, lineno=1224)
         734	BINARY_SUBSCR(arg=None, lineno=1224)
         744	LOAD_FAST(arg=10, lineno=1224)
         746	LOAD_FAST(arg=5, lineno=1224)
         748	BINARY_OP(arg=0, lineno=1224)
         752	COMPARE_OP(arg=5, lineno=1224)
         758	BINARY_OP(arg=14, lineno=1224)
         762	SWAP(arg=3, lineno=1224)
         764	SWAP(arg=2, lineno=1224)
         766	STORE_SUBSCR(arg=None, lineno=1224)
         770	LOAD_FAST(arg=7, lineno=1226)
         772	LOAD_FAST(arg=8, lineno=1226)
         774	BINARY_SUBSCR(arg=None, lineno=1226)
         784	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1226)
         786	LOAD_FAST(arg=8, lineno=1227)
         788	LOAD_CONST(arg=3, lineno=1227)
         790	BINARY_OP(arg=13, lineno=1227)
         794	STORE_FAST(arg=8, lineno=1227)
         796	JUMP_BACKWARD(arg=235, lineno=1228)
>        798	LOAD_FAST(arg=8, lineno=1231)
         800	LOAD_FAST(arg=6, lineno=1231)
         802	LOAD_CONST(arg=3, lineno=1231)
         804	BINARY_OP(arg=0, lineno=1231)
         808	BINARY_OP(arg=13, lineno=1231)
         812	STORE_FAST(arg=8, lineno=1231)
         814	LOAD_FAST(arg=8, lineno=1213)
         816	LOAD_FAST(arg=0, lineno=1213)
         818	LOAD_ATTR(arg=3, lineno=1213)
         828	LOAD_CONST(arg=1, lineno=1213)
         830	BINARY_SUBSCR(arg=None, lineno=1213)
         840	COMPARE_OP(arg=0, lineno=1213)
         846	POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1213)
         848	LOAD_CONST(arg=2, lineno=1213)
         850	RETURN_VALUE(arg=None, lineno=1213)
>        852	LOAD_CONST(arg=2, lineno=1213)
         854	RETURN_VALUE(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1193)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1193)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1205)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$18load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_GLOBAL(arg=5, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_ATTR(arg=3, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$x58.11']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_CONST(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12', '$const70.13.1']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=PRECALL(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=CALL(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=BUILD_SLICE(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$86call.15']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=BINARY_SUBSCR(arg=None, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$96build_slice.17']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=PRECALL(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=CALL(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=COMPARE_OP(arg=5, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$112call.19']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=7, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$122compare_op.20']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$122compare_op.20', '$peaks128.21']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=STORE_SUBSCR(arg=None, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$122compare_op.20', '$peaks128.21', '$const130.22.1']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_FAST(arg=7, lineno=1206)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=COPY(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=COPY(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$peaks136.23']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=BINARY_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$peaks136.23', '$const138.24.1']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$x154.26']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=BINARY_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$x154.26', '$const156.27.1']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_GLOBAL(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_ATTR(arg=4, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$168load_global.29']
DEBUG:numba.core.byteflow:dispatch pc=190, inst=LOAD_FAST(arg=0, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_GLOBAL(arg=5, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=LOAD_FAST(arg=4, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34']
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=LOAD_ATTR(arg=3, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$x208.37']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=BINARY_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38', '$const220.39.1']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=PRECALL(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=CALL(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=BUILD_SLICE(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$236call.41']
DEBUG:numba.core.byteflow:dispatch pc=248, inst=BINARY_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$246build_slice.43']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=PRECALL(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=CALL(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=BINARY_OP(arg=0, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45', '$delta272.46']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=COMPARE_OP(arg=5, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$binop_add274.47']
DEBUG:numba.core.byteflow:dispatch pc=284, inst=BINARY_OP(arg=14, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$278compare_op.48']
DEBUG:numba.core.byteflow:dispatch pc=288, inst=SWAP(arg=3, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$binop_iand284.49']
DEBUG:numba.core.byteflow:dispatch pc=290, inst=SWAP(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$binop_iand284.49', '$const138.24.1', '$peaks136.23']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=STORE_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$binop_iand284.49', '$peaks136.23', '$const138.24.1']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=LOAD_FAST(arg=7, lineno=1208)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=298, inst=LOAD_CONST(arg=1, lineno=1208)
DEBUG:numba.core.byteflow:stack ['$peaks296.50']
DEBUG:numba.core.byteflow:dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=1208)
DEBUG:numba.core.byteflow:stack ['$peaks296.50', '$const298.51.1']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1208)
DEBUG:numba.core.byteflow:stack ['$300binary_subscr.52']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=324, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=312 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=312, inst=LOAD_FAST(arg=6, lineno=1209)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=314, inst=LOAD_CONST(arg=3, lineno=1209)
DEBUG:numba.core.byteflow:stack ['$wait312.0']
DEBUG:numba.core.byteflow:dispatch pc=316, inst=BINARY_OP(arg=0, lineno=1209)
DEBUG:numba.core.byteflow:stack ['$wait312.0', '$const314.1.3']
DEBUG:numba.core.byteflow:dispatch pc=320, inst=STORE_FAST(arg=8, lineno=1209)
DEBUG:numba.core.byteflow:stack ['$binop_add316.2']
DEBUG:numba.core.byteflow:dispatch pc=322, inst=JUMP_FORWARD(arg=2, lineno=1209)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=324 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=324, inst=LOAD_CONST(arg=3, lineno=1211)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=326, inst=STORE_FAST(arg=8, lineno=1211)
DEBUG:numba.core.byteflow:stack ['$const324.0.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=328 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=328, inst=LOAD_FAST(arg=8, lineno=1213)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=330, inst=LOAD_FAST(arg=0, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0']
DEBUG:numba.core.byteflow:dispatch pc=332, inst=LOAD_ATTR(arg=3, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0', '$x330.1']
DEBUG:numba.core.byteflow:dispatch pc=342, inst=LOAD_CONST(arg=1, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0', '$332load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0', '$332load_attr.2', '$const342.3.1']
DEBUG:numba.core.byteflow:dispatch pc=354, inst=COMPARE_OP(arg=0, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0', '$344binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=360, inst=POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$354compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=362, stack=(), blockstack=(), npush=0), Edge(pc=852, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=362 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=362, inst=LOAD_GLOBAL(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=374, inst=LOAD_ATTR(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$362load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=384, inst=LOAD_FAST(arg=0, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=386, inst=LOAD_GLOBAL(arg=3, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3']
DEBUG:numba.core.byteflow:dispatch pc=398, inst=LOAD_CONST(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=400, inst=LOAD_FAST(arg=8, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1']
DEBUG:numba.core.byteflow:dispatch pc=402, inst=LOAD_FAST(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1', '$n400.7']
DEBUG:numba.core.byteflow:dispatch pc=404, inst=BINARY_OP(arg=10, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1', '$n400.7', '$pre_max402.8']
DEBUG:numba.core.byteflow:dispatch pc=408, inst=PRECALL(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1', '$binop_sub404.9']
DEBUG:numba.core.byteflow:dispatch pc=412, inst=CALL(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1', '$binop_sub404.9']
DEBUG:numba.core.byteflow:dispatch pc=422, inst=LOAD_GLOBAL(arg=5, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10']
DEBUG:numba.core.byteflow:dispatch pc=434, inst=LOAD_FAST(arg=8, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11']
DEBUG:numba.core.byteflow:dispatch pc=436, inst=LOAD_FAST(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13']
DEBUG:numba.core.byteflow:dispatch pc=438, inst=BINARY_OP(arg=0, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13', '$post_max436.14']
DEBUG:numba.core.byteflow:dispatch pc=442, inst=LOAD_FAST(arg=0, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15']
DEBUG:numba.core.byteflow:dispatch pc=444, inst=LOAD_ATTR(arg=3, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$x442.16']
DEBUG:numba.core.byteflow:dispatch pc=454, inst=LOAD_CONST(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17']
DEBUG:numba.core.byteflow:dispatch pc=456, inst=BINARY_SUBSCR(arg=None, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17', '$const454.18.1']
DEBUG:numba.core.byteflow:dispatch pc=466, inst=PRECALL(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=470, inst=CALL(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=480, inst=BUILD_SLICE(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$470call.20']
DEBUG:numba.core.byteflow:dispatch pc=482, inst=BINARY_SUBSCR(arg=None, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$480build_slice.22']
DEBUG:numba.core.byteflow:dispatch pc=492, inst=PRECALL(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
DEBUG:numba.core.byteflow:dispatch pc=496, inst=CALL(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
DEBUG:numba.core.byteflow:dispatch pc=506, inst=STORE_FAST(arg=9, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$496call.24']
DEBUG:numba.core.byteflow:dispatch pc=508, inst=LOAD_FAST(arg=0, lineno=1217)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=510, inst=LOAD_FAST(arg=8, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$x508.25']
DEBUG:numba.core.byteflow:dispatch pc=512, inst=BINARY_SUBSCR(arg=None, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$x508.25', '$n510.26']
DEBUG:numba.core.byteflow:dispatch pc=522, inst=LOAD_FAST(arg=9, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$512binary_subscr.27']
DEBUG:numba.core.byteflow:dispatch pc=524, inst=COMPARE_OP(arg=2, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$512binary_subscr.27', '$maxn522.28']
DEBUG:numba.core.byteflow:dispatch pc=530, inst=LOAD_FAST(arg=7, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$524compare_op.29']
DEBUG:numba.core.byteflow:dispatch pc=532, inst=LOAD_FAST(arg=8, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$524compare_op.29', '$peaks530.30']
DEBUG:numba.core.byteflow:dispatch pc=534, inst=STORE_SUBSCR(arg=None, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$524compare_op.29', '$peaks530.30', '$n532.31']
DEBUG:numba.core.byteflow:dispatch pc=538, inst=LOAD_FAST(arg=7, lineno=1219)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=540, inst=LOAD_FAST(arg=8, lineno=1219)
DEBUG:numba.core.byteflow:stack ['$peaks538.32']
DEBUG:numba.core.byteflow:dispatch pc=542, inst=BINARY_SUBSCR(arg=None, lineno=1219)
DEBUG:numba.core.byteflow:stack ['$peaks538.32', '$n540.33']
DEBUG:numba.core.byteflow:dispatch pc=552, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1219)
DEBUG:numba.core.byteflow:stack ['$542binary_subscr.34']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=554, stack=(), blockstack=(), npush=0), Edge(pc=566, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=852 nstack_initial=0), State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=852 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=852, inst=LOAD_CONST(arg=2, lineno=1213)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=854, inst=RETURN_VALUE(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$const852.0.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=554 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=554, inst=LOAD_FAST(arg=8, lineno=1220)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=556, inst=LOAD_CONST(arg=3, lineno=1220)
DEBUG:numba.core.byteflow:stack ['$n554.0']
DEBUG:numba.core.byteflow:dispatch pc=558, inst=BINARY_OP(arg=13, lineno=1220)
DEBUG:numba.core.byteflow:stack ['$n554.0', '$const556.1.3']
DEBUG:numba.core.byteflow:dispatch pc=562, inst=STORE_FAST(arg=8, lineno=1220)
DEBUG:numba.core.byteflow:stack ['$binop_iadd558.2']
DEBUG:numba.core.byteflow:dispatch pc=564, inst=JUMP_BACKWARD(arg=119, lineno=1221)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=566 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=566 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=566, inst=LOAD_GLOBAL(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=578, inst=LOAD_ATTR(arg=4, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$566load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=588, inst=LOAD_FAST(arg=0, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=590, inst=LOAD_GLOBAL(arg=3, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3']
DEBUG:numba.core.byteflow:dispatch pc=602, inst=LOAD_CONST(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=604, inst=LOAD_FAST(arg=8, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1']
DEBUG:numba.core.byteflow:dispatch pc=606, inst=LOAD_FAST(arg=3, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1', '$n604.7']
DEBUG:numba.core.byteflow:dispatch pc=608, inst=BINARY_OP(arg=10, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1', '$n604.7', '$pre_avg606.8']
DEBUG:numba.core.byteflow:dispatch pc=612, inst=PRECALL(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1', '$binop_sub608.9']
DEBUG:numba.core.byteflow:dispatch pc=616, inst=CALL(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1', '$binop_sub608.9']
DEBUG:numba.core.byteflow:dispatch pc=626, inst=LOAD_GLOBAL(arg=5, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10']
DEBUG:numba.core.byteflow:dispatch pc=638, inst=LOAD_FAST(arg=8, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11']
DEBUG:numba.core.byteflow:dispatch pc=640, inst=LOAD_FAST(arg=4, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13']
DEBUG:numba.core.byteflow:dispatch pc=642, inst=BINARY_OP(arg=0, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13', '$post_avg640.14']
DEBUG:numba.core.byteflow:dispatch pc=646, inst=LOAD_FAST(arg=0, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15']
DEBUG:numba.core.byteflow:dispatch pc=648, inst=LOAD_ATTR(arg=3, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$x646.16']
DEBUG:numba.core.byteflow:dispatch pc=658, inst=LOAD_CONST(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17']
DEBUG:numba.core.byteflow:dispatch pc=660, inst=BINARY_SUBSCR(arg=None, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17', '$const658.18.1']
DEBUG:numba.core.byteflow:dispatch pc=670, inst=PRECALL(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=674, inst=CALL(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=684, inst=BUILD_SLICE(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$674call.20']
DEBUG:numba.core.byteflow:dispatch pc=686, inst=BINARY_SUBSCR(arg=None, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$684build_slice.22']
DEBUG:numba.core.byteflow:dispatch pc=696, inst=PRECALL(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
DEBUG:numba.core.byteflow:dispatch pc=700, inst=CALL(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
DEBUG:numba.core.byteflow:dispatch pc=710, inst=STORE_FAST(arg=10, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$700call.24']
DEBUG:numba.core.byteflow:dispatch pc=712, inst=LOAD_FAST(arg=7, lineno=1224)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=714, inst=LOAD_FAST(arg=8, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25']
DEBUG:numba.core.byteflow:dispatch pc=716, inst=COPY(arg=2, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26']
DEBUG:numba.core.byteflow:dispatch pc=718, inst=COPY(arg=2, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$peaks712.25']
DEBUG:numba.core.byteflow:dispatch pc=720, inst=BINARY_SUBSCR(arg=None, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$peaks712.25', '$n714.26']
DEBUG:numba.core.byteflow:dispatch pc=730, inst=LOAD_FAST(arg=0, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27']
DEBUG:numba.core.byteflow:dispatch pc=732, inst=LOAD_FAST(arg=8, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28']
DEBUG:numba.core.byteflow:dispatch pc=734, inst=BINARY_SUBSCR(arg=None, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28', '$n732.29']
DEBUG:numba.core.byteflow:dispatch pc=744, inst=LOAD_FAST(arg=10, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30']
DEBUG:numba.core.byteflow:dispatch pc=746, inst=LOAD_FAST(arg=5, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31']
DEBUG:numba.core.byteflow:dispatch pc=748, inst=BINARY_OP(arg=0, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31', '$delta746.32']
DEBUG:numba.core.byteflow:dispatch pc=752, inst=COMPARE_OP(arg=5, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$binop_add748.33']
DEBUG:numba.core.byteflow:dispatch pc=758, inst=BINARY_OP(arg=14, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$752compare_op.34']
DEBUG:numba.core.byteflow:dispatch pc=762, inst=SWAP(arg=3, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$binop_iand758.35']
DEBUG:numba.core.byteflow:dispatch pc=764, inst=SWAP(arg=2, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$binop_iand758.35', '$n714.26', '$peaks712.25']
DEBUG:numba.core.byteflow:dispatch pc=766, inst=STORE_SUBSCR(arg=None, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$binop_iand758.35', '$peaks712.25', '$n714.26']
DEBUG:numba.core.byteflow:dispatch pc=770, inst=LOAD_FAST(arg=7, lineno=1226)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=772, inst=LOAD_FAST(arg=8, lineno=1226)
DEBUG:numba.core.byteflow:stack ['$peaks770.36']
DEBUG:numba.core.byteflow:dispatch pc=774, inst=BINARY_SUBSCR(arg=None, lineno=1226)
DEBUG:numba.core.byteflow:stack ['$peaks770.36', '$n772.37']
DEBUG:numba.core.byteflow:dispatch pc=784, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1226)
DEBUG:numba.core.byteflow:stack ['$774binary_subscr.38']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=786, stack=(), blockstack=(), npush=0), Edge(pc=798, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=786 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=786, inst=LOAD_FAST(arg=8, lineno=1227)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=788, inst=LOAD_CONST(arg=3, lineno=1227)
DEBUG:numba.core.byteflow:stack ['$n786.0']
DEBUG:numba.core.byteflow:dispatch pc=790, inst=BINARY_OP(arg=13, lineno=1227)
DEBUG:numba.core.byteflow:stack ['$n786.0', '$const788.1.3']
DEBUG:numba.core.byteflow:dispatch pc=794, inst=STORE_FAST(arg=8, lineno=1227)
DEBUG:numba.core.byteflow:stack ['$binop_iadd790.2']
DEBUG:numba.core.byteflow:dispatch pc=796, inst=JUMP_BACKWARD(arg=235, lineno=1228)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=798 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=798 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=798, inst=LOAD_FAST(arg=8, lineno=1231)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=800, inst=LOAD_FAST(arg=6, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$n798.0']
DEBUG:numba.core.byteflow:dispatch pc=802, inst=LOAD_CONST(arg=3, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$n798.0', '$wait800.1']
DEBUG:numba.core.byteflow:dispatch pc=804, inst=BINARY_OP(arg=0, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$n798.0', '$wait800.1', '$const802.2.3']
DEBUG:numba.core.byteflow:dispatch pc=808, inst=BINARY_OP(arg=13, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$n798.0', '$binop_add804.3']
DEBUG:numba.core.byteflow:dispatch pc=812, inst=STORE_FAST(arg=8, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$binop_iadd808.4']
DEBUG:numba.core.byteflow:dispatch pc=814, inst=LOAD_FAST(arg=8, lineno=1213)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=816, inst=LOAD_FAST(arg=0, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5']
DEBUG:numba.core.byteflow:dispatch pc=818, inst=LOAD_ATTR(arg=3, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5', '$x816.6']
DEBUG:numba.core.byteflow:dispatch pc=828, inst=LOAD_CONST(arg=1, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5', '$818load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=830, inst=BINARY_SUBSCR(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5', '$818load_attr.7', '$const828.8.1']
DEBUG:numba.core.byteflow:dispatch pc=840, inst=COMPARE_OP(arg=0, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5', '$830binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=846, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$840compare_op.10']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=848, stack=(), blockstack=(), npush=0), Edge(pc=362, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=848 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=848, inst=LOAD_CONST(arg=2, lineno=1213)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=850, inst=RETURN_VALUE(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$const848.0.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=362 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=324 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=362 nstack_initial=0): set(),
             State(pc_initial=554 nstack_initial=0): set(),
             State(pc_initial=566 nstack_initial=0): set(),
             State(pc_initial=786 nstack_initial=0): set(),
             State(pc_initial=798 nstack_initial=0): set(),
             State(pc_initial=848 nstack_initial=0): set(),
             State(pc_initial=852 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'idx': 0, 'res': '$18load_global.3'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.3', 'res': '$30load_attr.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$x40.6'}), (42, {'res': '$const42.7.2'}), (44, {'idx': 2, 'res': '$44load_global.8'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'res': '$const70.13.1'}), (72, {'index': '$const70.13.1', 'target': '$60load_attr.12', 'res': '$72binary_subscr.14'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {'func': '$44load_global.8', 'args': ['$post_max56.10', '$72binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'start': '$const42.7.2', 'stop': '$86call.15', 'step': None, 'res': '$96build_slice.17', 'slicevar': '$96build_slice.16'}), (98, {'index': '$96build_slice.17', 'target': '$x40.6', 'res': '$98binary_subscr.18'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'func': '$30load_attr.5', 'args': ['$98binary_subscr.18'], 'kw_names': None, 'res': '$112call.19'}), (114, {}), (116, {}), (118, {}), (120, {}), (122, {'lhs': '$8binary_subscr.2', 'rhs': '$112call.19', 'res': '$122compare_op.20'}), (124, {}), (126, {}), (128, {'res': '$peaks128.21'}), (130, {'res': '$const130.22.1'}), (132, {'target': '$peaks128.21', 'index': '$const130.22.1', 'value': '$122compare_op.20'}), (134, {}), (136, {'res': '$peaks136.23'}), (138, {'res': '$const138.24.1'}), (144, {'index': '$const138.24.1', 'target': '$peaks136.23', 'res': '$144binary_subscr.25'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$x154.26'}), (156, {'res': '$const156.27.1'}), (158, {'index': '$const156.27.1', 'target': '$x154.26', 'res': '$158binary_subscr.28'}), (160, {}), (162, {}), (164, {}), (166, {}), (168, {'idx': 0, 'res': '$168load_global.29'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'item': '$168load_global.29', 'res': '$180load_attr.31'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {'res': '$x190.32'}), (192, {'res': '$const192.33.2'}), (194, {'idx': 2, 'res': '$194load_global.34'}), (196, {}), (198, {}), (200, {}), (202, {}), (204, {}), (206, {'res': '$post_avg206.36'}), (208, {'res': '$x208.37'}), (210, {'item': '$x208.37', 'res': '$210load_attr.38'}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {'res': '$const220.39.1'}), (222, {'index': '$const220.39.1', 'target': '$210load_attr.38', 'res': '$222binary_subscr.40'}), (224, {}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'func': '$194load_global.34', 'args': ['$post_avg206.36', '$222binary_subscr.40'], 'kw_names': None, 'res': '$236call.41'}), (238, {}), (240, {}), (242, {}), (244, {}), (246, {'start': '$const192.33.2', 'stop': '$236call.41', 'step': None, 'res': '$246build_slice.43', 'slicevar': '$246build_slice.42'}), (248, {'index': '$246build_slice.43', 'target': '$x190.32', 'res': '$248binary_subscr.44'}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {}), (262, {'func': '$180load_attr.31', 'args': ['$248binary_subscr.44'], 'kw_names': None, 'res': '$262call.45'}), (264, {}), (266, {}), (268, {}), (270, {}), (272, {'res': '$delta272.46'}), (274, {'op': '+', 'lhs': '$262call.45', 'rhs': '$delta272.46', 'res': '$binop_add274.47'}), (276, {}), (278, {'lhs': '$158binary_subscr.28', 'rhs': '$binop_add274.47', 'res': '$278compare_op.48'}), (280, {}), (282, {}), (284, {'op': '&=', 'lhs': '$144binary_subscr.25', 'rhs': '$278compare_op.48', 'res': '$binop_iand284.49'}), (286, {}), (292, {'target': '$peaks136.23', 'index': '$const138.24.1', 'value': '$binop_iand284.49'}), (294, {}), (296, {'res': '$peaks296.50'}), (298, {'res': '$const298.51.1'}), (300, {'index': '$const298.51.1', 'target': '$peaks296.50', 'res': '$300binary_subscr.52'}), (302, {}), (304, {}), (306, {}), (308, {}), (310, {'pred': '$300binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 324: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'res': '$wait312.0'}), (314, {'res': '$const314.1.3'}), (316, {'op': '+', 'lhs': '$wait312.0', 'rhs': '$const314.1.3', 'res': '$binop_add316.2'}), (318, {}), (320, {'value': '$binop_add316.2'}), (322, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=324 nstack_initial=0):
AdaptBlockInfo(insts=((324, {'res': '$const324.0.3'}), (326, {'value': '$const324.0.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$n328.0'}), (330, {'res': '$x330.1'}), (332, {'item': '$x330.1', 'res': '$332load_attr.2'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'res': '$const342.3.1'}), (344, {'index': '$const342.3.1', 'target': '$332load_attr.2', 'res': '$344binary_subscr.4'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {'lhs': '$n328.0', 'rhs': '$344binary_subscr.4', 'res': '$354compare_op.5'}), (356, {}), (358, {}), (360, {'pred': '$354compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={362: (), 852: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=362 nstack_initial=0):
AdaptBlockInfo(insts=((362, {'idx': 0, 'res': '$362load_global.0'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {}), (374, {'item': '$362load_global.0', 'res': '$374load_attr.2'}), (376, {}), (378, {}), (380, {}), (382, {}), (384, {'res': '$x384.3'}), (386, {'idx': 1, 'res': '$386load_global.4'}), (388, {}), (390, {}), (392, {}), (394, {}), (396, {}), (398, {'res': '$const398.6.1'}), (400, {'res': '$n400.7'}), (402, {'res': '$pre_max402.8'}), (404, {'op': '-', 'lhs': '$n400.7', 'rhs': '$pre_max402.8', 'res': '$binop_sub404.9'}), (406, {}), (408, {}), (410, {}), (412, {'func': '$386load_global.4', 'args': ['$const398.6.1', '$binop_sub404.9'], 'kw_names': None, 'res': '$412call.10'}), (414, {}), (416, {}), (418, {}), (420, {}), (422, {'idx': 2, 'res': '$422load_global.11'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {}), (434, {'res': '$n434.13'}), (436, {'res': '$post_max436.14'}), (438, {'op': '+', 'lhs': '$n434.13', 'rhs': '$post_max436.14', 'res': '$binop_add438.15'}), (440, {}), (442, {'res': '$x442.16'}), (444, {'item': '$x442.16', 'res': '$444load_attr.17'}), (446, {}), (448, {}), (450, {}), (452, {}), (454, {'res': '$const454.18.1'}), (456, {'index': '$const454.18.1', 'target': '$444load_attr.17', 'res': '$456binary_subscr.19'}), (458, {}), (460, {}), (462, {}), (464, {}), (466, {}), (468, {}), (470, {'func': '$422load_global.11', 'args': ['$binop_add438.15', '$456binary_subscr.19'], 'kw_names': None, 'res': '$470call.20'}), (472, {}), (474, {}), (476, {}), (478, {}), (480, {'start': '$412call.10', 'stop': '$470call.20', 'step': None, 'res': '$480build_slice.22', 'slicevar': '$480build_slice.21'}), (482, {'index': '$480build_slice.22', 'target': '$x384.3', 'res': '$482binary_subscr.23'}), (484, {}), (486, {}), (488, {}), (490, {}), (492, {}), (494, {}), (496, {'func': '$374load_attr.2', 'args': ['$482binary_subscr.23'], 'kw_names': None, 'res': '$496call.24'}), (498, {}), (500, {}), (502, {}), (504, {}), (506, {'value': '$496call.24'}), (508, {'res': '$x508.25'}), (510, {'res': '$n510.26'}), (512, {'index': '$n510.26', 'target': '$x508.25', 'res': '$512binary_subscr.27'}), (514, {}), (516, {}), (518, {}), (520, {}), (522, {'res': '$maxn522.28'}), (524, {'lhs': '$512binary_subscr.27', 'rhs': '$maxn522.28', 'res': '$524compare_op.29'}), (526, {}), (528, {}), (530, {'res': '$peaks530.30'}), (532, {'res': '$n532.31'}), (534, {'target': '$peaks530.30', 'index': '$n532.31', 'value': '$524compare_op.29'}), (536, {}), (538, {'res': '$peaks538.32'}), (540, {'res': '$n540.33'}), (542, {'index': '$n540.33', 'target': '$peaks538.32', 'res': '$542binary_subscr.34'}), (544, {}), (546, {}), (548, {}), (550, {}), (552, {'pred': '$542binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={554: (), 566: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=554 nstack_initial=0):
AdaptBlockInfo(insts=((554, {'res': '$n554.0'}), (556, {'res': '$const556.1.3'}), (558, {'op': '+=', 'lhs': '$n554.0', 'rhs': '$const556.1.3', 'res': '$binop_iadd558.2'}), (560, {}), (562, {'value': '$binop_iadd558.2'}), (564, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=566 nstack_initial=0):
AdaptBlockInfo(insts=((566, {'idx': 0, 'res': '$566load_global.0'}), (568, {}), (570, {}), (572, {}), (574, {}), (576, {}), (578, {'item': '$566load_global.0', 'res': '$578load_attr.2'}), (580, {}), (582, {}), (584, {}), (586, {}), (588, {'res': '$x588.3'}), (590, {'idx': 1, 'res': '$590load_global.4'}), (592, {}), (594, {}), (596, {}), (598, {}), (600, {}), (602, {'res': '$const602.6.1'}), (604, {'res': '$n604.7'}), (606, {'res': '$pre_avg606.8'}), (608, {'op': '-', 'lhs': '$n604.7', 'rhs': '$pre_avg606.8', 'res': '$binop_sub608.9'}), (610, {}), (612, {}), (614, {}), (616, {'func': '$590load_global.4', 'args': ['$const602.6.1', '$binop_sub608.9'], 'kw_names': None, 'res': '$616call.10'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {'idx': 2, 'res': '$626load_global.11'}), (628, {}), (630, {}), (632, {}), (634, {}), (636, {}), (638, {'res': '$n638.13'}), (640, {'res': '$post_avg640.14'}), (642, {'op': '+', 'lhs': '$n638.13', 'rhs': '$post_avg640.14', 'res': '$binop_add642.15'}), (644, {}), (646, {'res': '$x646.16'}), (648, {'item': '$x646.16', 'res': '$648load_attr.17'}), (650, {}), (652, {}), (654, {}), (656, {}), (658, {'res': '$const658.18.1'}), (660, {'index': '$const658.18.1', 'target': '$648load_attr.17', 'res': '$660binary_subscr.19'}), (662, {}), (664, {}), (666, {}), (668, {}), (670, {}), (672, {}), (674, {'func': '$626load_global.11', 'args': ['$binop_add642.15', '$660binary_subscr.19'], 'kw_names': None, 'res': '$674call.20'}), (676, {}), (678, {}), (680, {}), (682, {}), (684, {'start': '$616call.10', 'stop': '$674call.20', 'step': None, 'res': '$684build_slice.22', 'slicevar': '$684build_slice.21'}), (686, {'index': '$684build_slice.22', 'target': '$x588.3', 'res': '$686binary_subscr.23'}), (688, {}), (690, {}), (692, {}), (694, {}), (696, {}), (698, {}), (700, {'func': '$578load_attr.2', 'args': ['$686binary_subscr.23'], 'kw_names': None, 'res': '$700call.24'}), (702, {}), (704, {}), (706, {}), (708, {}), (710, {'value': '$700call.24'}), (712, {'res': '$peaks712.25'}), (714, {'res': '$n714.26'}), (720, {'index': '$n714.26', 'target': '$peaks712.25', 'res': '$720binary_subscr.27'}), (722, {}), (724, {}), (726, {}), (728, {}), (730, {'res': '$x730.28'}), (732, {'res': '$n732.29'}), (734, {'index': '$n732.29', 'target': '$x730.28', 'res': '$734binary_subscr.30'}), (736, {}), (738, {}), (740, {}), (742, {}), (744, {'res': '$avgn744.31'}), (746, {'res': '$delta746.32'}), (748, {'op': '+', 'lhs': '$avgn744.31', 'rhs': '$delta746.32', 'res': '$binop_add748.33'}), (750, {}), (752, {'lhs': '$734binary_subscr.30', 'rhs': '$binop_add748.33', 'res': '$752compare_op.34'}), (754, {}), (756, {}), (758, {'op': '&=', 'lhs': '$720binary_subscr.27', 'rhs': '$752compare_op.34', 'res': '$binop_iand758.35'}), (760, {}), (766, {'target': '$peaks712.25', 'index': '$n714.26', 'value': '$binop_iand758.35'}), (768, {}), (770, {'res': '$peaks770.36'}), (772, {'res': '$n772.37'}), (774, {'index': '$n772.37', 'target': '$peaks770.36', 'res': '$774binary_subscr.38'}), (776, {}), (778, {}), (780, {}), (782, {}), (784, {'pred': '$774binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={786: (), 798: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=786 nstack_initial=0):
AdaptBlockInfo(insts=((786, {'res': '$n786.0'}), (788, {'res': '$const788.1.3'}), (790, {'op': '+=', 'lhs': '$n786.0', 'rhs': '$const788.1.3', 'res': '$binop_iadd790.2'}), (792, {}), (794, {'value': '$binop_iadd790.2'}), (796, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=798 nstack_initial=0):
AdaptBlockInfo(insts=((798, {'res': '$n798.0'}), (800, {'res': '$wait800.1'}), (802, {'res': '$const802.2.3'}), (804, {'op': '+', 'lhs': '$wait800.1', 'rhs': '$const802.2.3', 'res': '$binop_add804.3'}), (806, {}), (808, {'op': '+=', 'lhs': '$n798.0', 'rhs': '$binop_add804.3', 'res': '$binop_iadd808.4'}), (810, {}), (812, {'value': '$binop_iadd808.4'}), (814, {'res': '$n814.5'}), (816, {'res': '$x816.6'}), (818, {'item': '$x816.6', 'res': '$818load_attr.7'}), (820, {}), (822, {}), (824, {}), (826, {}), (828, {'res': '$const828.8.1'}), (830, {'index': '$const828.8.1', 'target': '$818load_attr.7', 'res': '$830binary_subscr.9'}), (832, {}), (834, {}), (836, {}), (838, {}), (840, {'lhs': '$n814.5', 'rhs': '$830binary_subscr.9', 'res': '$840compare_op.10'}), (842, {}), (844, {}), (846, {'pred': '$840compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={848: (), 362: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=848 nstack_initial=0):
AdaptBlockInfo(insts=((848, {'res': '$const848.0.2'}), (850, {'retval': '$const848.0.2', 'castval': '$850return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=852 nstack_initial=0):
AdaptBlockInfo(insts=((852, {'res': '$const852.0.2'}), (854, {'retval': '$const852.0.2', 'castval': '$854return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.3']
    $30load_attr.5 = getattr(value=$18load_global.3, attr=max) ['$18load_global.3', '$30load_attr.5']
    $const42.7.2 = const(NoneType, None)     ['$const42.7.2']
    $44load_global.8 = global(min: <built-in function min>) ['$44load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const70.13.1 = const(int, 0)            ['$const70.13.1']
    $72binary_subscr.14 = getitem(value=$60load_attr.12, index=$const70.13.1, fn=<built-in function getitem>) ['$60load_attr.12', '$72binary_subscr.14', '$const70.13.1']
    $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1193), Var($72binary_subscr.14, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_global.8', '$72binary_subscr.14', '$86call.15', 'post_max']
    $96build_slice.16 = global(slice: <class 'slice'>) ['$96build_slice.16']
    $96build_slice.17 = call $96build_slice.16($const42.7.2, $86call.15, func=$96build_slice.16, args=(Var($const42.7.2, utils.py:1205), Var($86call.15, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$96build_slice.16', '$96build_slice.17', '$const42.7.2']
    $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>) ['$96build_slice.17', '$98binary_subscr.18', 'x']
    $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$112call.19', '$30load_attr.5', '$98binary_subscr.18']
    $122compare_op.20 = $8binary_subscr.2 >= $112call.19 ['$112call.19', '$122compare_op.20', '$8binary_subscr.2']
    $const130.22.1 = const(int, 0)           ['$const130.22.1']
    peaks[$const130.22.1] = $122compare_op.20 ['$122compare_op.20', '$const130.22.1', 'peaks']
    $const138.24.1 = const(int, 0)           ['$const138.24.1']
    $144binary_subscr.25 = getitem(value=peaks, index=$const138.24.1, fn=<built-in function getitem>) ['$144binary_subscr.25', '$const138.24.1', 'peaks']
    $const156.27.1 = const(int, 0)           ['$const156.27.1']
    $158binary_subscr.28 = getitem(value=x, index=$const156.27.1, fn=<built-in function getitem>) ['$158binary_subscr.28', '$const156.27.1', 'x']
    $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$168load_global.29']
    $180load_attr.31 = getattr(value=$168load_global.29, attr=mean) ['$168load_global.29', '$180load_attr.31']
    $const192.33.2 = const(NoneType, None)   ['$const192.33.2']
    $194load_global.34 = global(min: <built-in function min>) ['$194load_global.34']
    $210load_attr.38 = getattr(value=x, attr=shape) ['$210load_attr.38', 'x']
    $const220.39.1 = const(int, 0)           ['$const220.39.1']
    $222binary_subscr.40 = getitem(value=$210load_attr.38, index=$const220.39.1, fn=<built-in function getitem>) ['$210load_attr.38', '$222binary_subscr.40', '$const220.39.1']
    $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1193), Var($222binary_subscr.40, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.34', '$222binary_subscr.40', '$236call.41', 'post_avg']
    $246build_slice.42 = global(slice: <class 'slice'>) ['$246build_slice.42']
    $246build_slice.43 = call $246build_slice.42($const192.33.2, $236call.41, func=$246build_slice.42, args=(Var($const192.33.2, utils.py:1206), Var($236call.41, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$236call.41', '$246build_slice.42', '$246build_slice.43', '$const192.33.2']
    $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>) ['$246build_slice.43', '$248binary_subscr.44', 'x']
    $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_attr.31', '$248binary_subscr.44', '$262call.45']
    $binop_add274.47 = $262call.45 + delta   ['$262call.45', '$binop_add274.47', 'delta']
    $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47 ['$158binary_subscr.28', '$278compare_op.48', '$binop_add274.47']
    $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$144binary_subscr.25', '$278compare_op.48', '$binop_iand284.49']
    peaks[$const138.24.1] = $binop_iand284.49 ['$binop_iand284.49', '$const138.24.1', 'peaks']
    $const298.51.1 = const(int, 0)           ['$const298.51.1']
    $300binary_subscr.52 = getitem(value=peaks, index=$const298.51.1, fn=<built-in function getitem>) ['$300binary_subscr.52', '$const298.51.1', 'peaks']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$300binary_subscr.52', '$310pred', 'bool310']
    branch $310pred, 312, 324                ['$310pred']
label 312:
    $const314.1.3 = const(int, 1)            ['$const314.1.3']
    n = wait + $const314.1.3                 ['$const314.1.3', 'n', 'wait']
    jump 328                                 []
label 324:
    n = const(int, 1)                        ['n']
    jump 328                                 []
label 328:
    $332load_attr.2 = getattr(value=x, attr=shape) ['$332load_attr.2', 'x']
    $const342.3.1 = const(int, 0)            ['$const342.3.1']
    $344binary_subscr.4 = getitem(value=$332load_attr.2, index=$const342.3.1, fn=<built-in function getitem>) ['$332load_attr.2', '$344binary_subscr.4', '$const342.3.1']
    $354compare_op.5 = n < $344binary_subscr.4 ['$344binary_subscr.4', '$354compare_op.5', 'n']
    bool360 = global(bool: <class 'bool'>)   ['bool360']
    $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$354compare_op.5', '$360pred', 'bool360']
    branch $360pred, 362, 852                ['$360pred']
label 362:
    $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$362load_global.0']
    $374load_attr.2 = getattr(value=$362load_global.0, attr=max) ['$362load_global.0', '$374load_attr.2']
    $386load_global.4 = global(max: <built-in function max>) ['$386load_global.4']
    $const398.6.1 = const(int, 0)            ['$const398.6.1']
    $binop_sub404.9 = n - pre_max            ['$binop_sub404.9', 'n', 'pre_max']
    $412call.10 = call $386load_global.4($const398.6.1, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6.1, utils.py:1214), Var($binop_sub404.9, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$386load_global.4', '$412call.10', '$binop_sub404.9', '$const398.6.1']
    $422load_global.11 = global(min: <built-in function min>) ['$422load_global.11']
    $binop_add438.15 = n + post_max          ['$binop_add438.15', 'n', 'post_max']
    $444load_attr.17 = getattr(value=x, attr=shape) ['$444load_attr.17', 'x']
    $const454.18.1 = const(int, 0)           ['$const454.18.1']
    $456binary_subscr.19 = getitem(value=$444load_attr.17, index=$const454.18.1, fn=<built-in function getitem>) ['$444load_attr.17', '$456binary_subscr.19', '$const454.18.1']
    $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1214), Var($456binary_subscr.19, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$422load_global.11', '$456binary_subscr.19', '$470call.20', '$binop_add438.15']
    $480build_slice.21 = global(slice: <class 'slice'>) ['$480build_slice.21']
    $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1214), Var($470call.20, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$412call.10', '$470call.20', '$480build_slice.21', '$480build_slice.22']
    $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>) ['$480build_slice.22', '$482binary_subscr.23', 'x']
    maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$374load_attr.2', '$482binary_subscr.23', 'maxn']
    $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$512binary_subscr.27', 'n', 'x']
    $524compare_op.29 = $512binary_subscr.27 == maxn ['$512binary_subscr.27', '$524compare_op.29', 'maxn']
    peaks[n] = $524compare_op.29             ['$524compare_op.29', 'n', 'peaks']
    $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$542binary_subscr.34', 'n', 'peaks']
    bool552 = global(bool: <class 'bool'>)   ['bool552']
    $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$542binary_subscr.34', '$552pred', 'bool552']
    branch $552pred, 566, 554                ['$552pred']
label 554:
    $const556.1.3 = const(int, 1)            ['$const556.1.3']
    $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd558.2', '$const556.1.3', 'n']
    n = $binop_iadd558.2                     ['$binop_iadd558.2', 'n']
    jump 328                                 []
label 566:
    $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$566load_global.0']
    $578load_attr.2 = getattr(value=$566load_global.0, attr=mean) ['$566load_global.0', '$578load_attr.2']
    $590load_global.4 = global(max: <built-in function max>) ['$590load_global.4']
    $const602.6.1 = const(int, 0)            ['$const602.6.1']
    $binop_sub608.9 = n - pre_avg            ['$binop_sub608.9', 'n', 'pre_avg']
    $616call.10 = call $590load_global.4($const602.6.1, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6.1, utils.py:1223), Var($binop_sub608.9, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$590load_global.4', '$616call.10', '$binop_sub608.9', '$const602.6.1']
    $626load_global.11 = global(min: <built-in function min>) ['$626load_global.11']
    $binop_add642.15 = n + post_avg          ['$binop_add642.15', 'n', 'post_avg']
    $648load_attr.17 = getattr(value=x, attr=shape) ['$648load_attr.17', 'x']
    $const658.18.1 = const(int, 0)           ['$const658.18.1']
    $660binary_subscr.19 = getitem(value=$648load_attr.17, index=$const658.18.1, fn=<built-in function getitem>) ['$648load_attr.17', '$660binary_subscr.19', '$const658.18.1']
    $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1223), Var($660binary_subscr.19, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$626load_global.11', '$660binary_subscr.19', '$674call.20', '$binop_add642.15']
    $684build_slice.21 = global(slice: <class 'slice'>) ['$684build_slice.21']
    $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1223), Var($674call.20, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$616call.10', '$674call.20', '$684build_slice.21', '$684build_slice.22']
    $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>) ['$684build_slice.22', '$686binary_subscr.23', 'x']
    avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$578load_attr.2', '$686binary_subscr.23', 'avgn']
    $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$720binary_subscr.27', 'n', 'peaks']
    $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$734binary_subscr.30', 'n', 'x']
    $binop_add748.33 = avgn + delta          ['$binop_add748.33', 'avgn', 'delta']
    $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33 ['$734binary_subscr.30', '$752compare_op.34', '$binop_add748.33']
    $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$720binary_subscr.27', '$752compare_op.34', '$binop_iand758.35']
    peaks[n] = $binop_iand758.35             ['$binop_iand758.35', 'n', 'peaks']
    $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$774binary_subscr.38', 'n', 'peaks']
    bool784 = global(bool: <class 'bool'>)   ['bool784']
    $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$774binary_subscr.38', '$784pred', 'bool784']
    branch $784pred, 798, 786                ['$784pred']
label 786:
    $const788.1.3 = const(int, 1)            ['$const788.1.3']
    $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd790.2', '$const788.1.3', 'n']
    n = $binop_iadd790.2                     ['$binop_iadd790.2', 'n']
    jump 328                                 []
label 798:
    $const802.2.3 = const(int, 1)            ['$const802.2.3']
    $binop_add804.3 = wait + $const802.2.3   ['$binop_add804.3', '$const802.2.3', 'wait']
    $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add804.3', '$binop_iadd808.4', 'n']
    n = $binop_iadd808.4                     ['$binop_iadd808.4', 'n']
    $818load_attr.7 = getattr(value=x, attr=shape) ['$818load_attr.7', 'x']
    $const828.8.1 = const(int, 0)            ['$const828.8.1']
    $830binary_subscr.9 = getitem(value=$818load_attr.7, index=$const828.8.1, fn=<built-in function getitem>) ['$818load_attr.7', '$830binary_subscr.9', '$const828.8.1']
    $840compare_op.10 = n < $830binary_subscr.9 ['$830binary_subscr.9', '$840compare_op.10', 'n']
    bool846 = global(bool: <class 'bool'>)   ['bool846']
    $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$840compare_op.10', '$846pred', 'bool846']
    branch $846pred, 362, 848                ['$846pred']
label 848:
    $const848.0.2 = const(NoneType, None)    ['$const848.0.2']
    $850return_value.1 = cast(value=$const848.0.2) ['$850return_value.1', '$const848.0.2']
    return $850return_value.1                ['$850return_value.1']
label 852:
    $const852.0.2 = const(NoneType, None)    ['$const852.0.2']
    $854return_value.1 = cast(value=$const852.0.2) ['$854return_value.1', '$const852.0.2']
    return $854return_value.1                ['$854return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17824310>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: pre_max = arg(1, name=pre_max)
DEBUG:numba.core.ssa:on stmt: post_max = arg(2, name=post_max)
DEBUG:numba.core.ssa:on stmt: pre_avg = arg(3, name=pre_avg)
DEBUG:numba.core.ssa:on stmt: post_avg = arg(4, name=post_avg)
DEBUG:numba.core.ssa:on stmt: delta = arg(5, name=delta)
DEBUG:numba.core.ssa:on stmt: wait = arg(6, name=wait)
DEBUG:numba.core.ssa:on stmt: peaks = arg(7, name=peaks)
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
DEBUG:numba.core.ssa:on stmt: $const42.7.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $44load_global.8 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const70.13.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1193), Var($72binary_subscr.14, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7.2, $86call.15, func=$96build_slice.16, args=(Var($const42.7.2, utils.py:1205), Var($86call.15, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
DEBUG:numba.core.ssa:on stmt: $const130.22.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $122compare_op.20
DEBUG:numba.core.ssa:on stmt: $const138.24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const156.27.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
DEBUG:numba.core.ssa:on stmt: $const192.33.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $194load_global.34 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const220.39.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1193), Var($222binary_subscr.40, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33.2, $236call.41, func=$246build_slice.42, args=(Var($const192.33.2, utils.py:1206), Var($236call.41, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_add274.47 = $262call.45 + delta
DEBUG:numba.core.ssa:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
DEBUG:numba.core.ssa:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $binop_iand284.49
DEBUG:numba.core.ssa:on stmt: $const298.51.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool310 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $310pred, 312, 324
DEBUG:numba.core.ssa:==== SSA block analysis pass on 312
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17824310>
DEBUG:numba.core.ssa:on stmt: $const314.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n = wait + $const314.1.3
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block analysis pass on 324
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17824310>
DEBUG:numba.core.ssa:on stmt: n = const(int, 1)
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block analysis pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17824310>
DEBUG:numba.core.ssa:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const342.3.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $354compare_op.5 = n < $344binary_subscr.4
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 362, 852
DEBUG:numba.core.ssa:==== SSA block analysis pass on 362
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17824310>
DEBUG:numba.core.ssa:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
DEBUG:numba.core.ssa:on stmt: $386load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const398.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub404.9 = n - pre_max
DEBUG:numba.core.ssa:on stmt: $412call.10 = call $386load_global.4($const398.6.1, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6.1, utils.py:1214), Var($binop_sub404.9, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $422load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add438.15 = n + post_max
DEBUG:numba.core.ssa:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const454.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1214), Var($456binary_subscr.19, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1214), Var($470call.20, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
DEBUG:numba.core.ssa:on stmt: peaks[n] = $524compare_op.29
DEBUG:numba.core.ssa:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool552 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $552pred, 566, 554
DEBUG:numba.core.ssa:==== SSA block analysis pass on 554
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17824310>
DEBUG:numba.core.ssa:on stmt: $const556.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd558.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block analysis pass on 566
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17824310>
DEBUG:numba.core.ssa:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
DEBUG:numba.core.ssa:on stmt: $590load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const602.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub608.9 = n - pre_avg
DEBUG:numba.core.ssa:on stmt: $616call.10 = call $590load_global.4($const602.6.1, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6.1, utils.py:1223), Var($binop_sub608.9, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $626load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add642.15 = n + post_avg
DEBUG:numba.core.ssa:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const658.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1223), Var($660binary_subscr.19, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1223), Var($674call.20, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add748.33 = avgn + delta
DEBUG:numba.core.ssa:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
DEBUG:numba.core.ssa:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[n] = $binop_iand758.35
DEBUG:numba.core.ssa:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool784 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $784pred, 798, 786
DEBUG:numba.core.ssa:==== SSA block analysis pass on 786
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17824310>
DEBUG:numba.core.ssa:on stmt: $const788.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd790.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block analysis pass on 798
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17824310>
DEBUG:numba.core.ssa:on stmt: $const802.2.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add804.3 = wait + $const802.2.3
DEBUG:numba.core.ssa:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd808.4
DEBUG:numba.core.ssa:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const828.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $840compare_op.10 = n < $830binary_subscr.9
DEBUG:numba.core.ssa:on stmt: bool846 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $846pred, 362, 848
DEBUG:numba.core.ssa:==== SSA block analysis pass on 848
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17824310>
DEBUG:numba.core.ssa:on stmt: $const848.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $850return_value.1 = cast(value=$const848.0.2)
DEBUG:numba.core.ssa:on stmt: return $850return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 852
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17824310>
DEBUG:numba.core.ssa:on stmt: $const852.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $854return_value.1 = cast(value=$const852.0.2)
DEBUG:numba.core.ssa:on stmt: return $854return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 853
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17824310>
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$112call.19': [(<numba.core.ir.Assign object at 0x0000019A17D10D10>,
                              0)],
             '$122compare_op.20': [(<numba.core.ir.Assign object at 0x0000019A17D11810>,
                                    0)],
             '$144binary_subscr.25': [(<numba.core.ir.Assign object at 0x0000019A17CE2350>,
                                       0)],
             '$158binary_subscr.28': [(<numba.core.ir.Assign object at 0x0000019A17CE0810>,
                                       0)],
             '$168load_global.29': [(<numba.core.ir.Assign object at 0x0000019A17D12850>,
                                     0)],
             '$180load_attr.31': [(<numba.core.ir.Assign object at 0x0000019A17D13C50>,
                                   0)],
             '$18load_global.3': [(<numba.core.ir.Assign object at 0x0000019A17CE9650>,
                                   0)],
             '$194load_global.34': [(<numba.core.ir.Assign object at 0x0000019A17D120D0>,
                                     0)],
             '$210load_attr.38': [(<numba.core.ir.Assign object at 0x0000019A17D11650>,
                                   0)],
             '$222binary_subscr.40': [(<numba.core.ir.Assign object at 0x0000019A17CE2450>,
                                       0)],
             '$236call.41': [(<numba.core.ir.Assign object at 0x0000019A17D15ED0>,
                              0)],
             '$246build_slice.42': [(<numba.core.ir.Assign object at 0x0000019A17D15C90>,
                                     0)],
             '$246build_slice.43': [(<numba.core.ir.Assign object at 0x0000019A17D15310>,
                                     0)],
             '$248binary_subscr.44': [(<numba.core.ir.Assign object at 0x0000019A17D15B10>,
                                       0)],
             '$262call.45': [(<numba.core.ir.Assign object at 0x0000019A17D15650>,
                              0)],
             '$278compare_op.48': [(<numba.core.ir.Assign object at 0x0000019A17D154D0>,
                                    0)],
             '$300binary_subscr.52': [(<numba.core.ir.Assign object at 0x0000019A17CE2850>,
                                       0)],
             '$30load_attr.5': [(<numba.core.ir.Assign object at 0x0000019A17CEB610>,
                                 0)],
             '$310pred': [(<numba.core.ir.Assign object at 0x0000019A17D14AD0>,
                           0)],
             '$332load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A18D86590>,
                                  328)],
             '$344binary_subscr.4': [(<numba.core.ir.Assign object at 0x0000019A18D84690>,
                                      328)],
             '$354compare_op.5': [(<numba.core.ir.Assign object at 0x0000019A18D86510>,
                                   328)],
             '$360pred': [(<numba.core.ir.Assign object at 0x0000019A18D86990>,
                           328)],
             '$362load_global.0': [(<numba.core.ir.Assign object at 0x0000019A18D84550>,
                                    362)],
             '$374load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A18D84B90>,
                                  362)],
             '$386load_global.4': [(<numba.core.ir.Assign object at 0x0000019A18D85410>,
                                    362)],
             '$412call.10': [(<numba.core.ir.Assign object at 0x0000019A18D875D0>,
                              362)],
             '$422load_global.11': [(<numba.core.ir.Assign object at 0x0000019A18D87E90>,
                                     362)],
             '$444load_attr.17': [(<numba.core.ir.Assign object at 0x0000019A18D87150>,
                                   362)],
             '$44load_global.8': [(<numba.core.ir.Assign object at 0x0000019A17CE8350>,
                                   0)],
             '$456binary_subscr.19': [(<numba.core.ir.Assign object at 0x0000019A18D85D50>,
                                       362)],
             '$470call.20': [(<numba.core.ir.Assign object at 0x0000019A18D87C90>,
                              362)],
             '$480build_slice.21': [(<numba.core.ir.Assign object at 0x0000019A17D4E150>,
                                     362)],
             '$480build_slice.22': [(<numba.core.ir.Assign object at 0x0000019A17D4DF10>,
                                     362)],
             '$482binary_subscr.23': [(<numba.core.ir.Assign object at 0x0000019A17D4C990>,
                                       362)],
             '$512binary_subscr.27': [(<numba.core.ir.Assign object at 0x0000019A17D4D610>,
                                       362)],
             '$524compare_op.29': [(<numba.core.ir.Assign object at 0x0000019A17D4C8D0>,
                                    362)],
             '$542binary_subscr.34': [(<numba.core.ir.Assign object at 0x0000019A17D4CBD0>,
                                       362)],
             '$552pred': [(<numba.core.ir.Assign object at 0x0000019A17D4F3D0>,
                           362)],
             '$566load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17D4FF90>,
                                    566)],
             '$578load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A17D4EB50>,
                                  566)],
             '$590load_global.4': [(<numba.core.ir.Assign object at 0x0000019A17D4EC10>,
                                    566)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x0000019A17CE95D0>,
                                  0)],
             '$616call.10': [(<numba.core.ir.Assign object at 0x0000019A17D4DE90>,
                              566)],
             '$626load_global.11': [(<numba.core.ir.Assign object at 0x0000019A17D4C690>,
                                     566)],
             '$648load_attr.17': [(<numba.core.ir.Assign object at 0x0000019A17D2FA90>,
                                   566)],
             '$660binary_subscr.19': [(<numba.core.ir.Assign object at 0x0000019A17CEB250>,
                                       566)],
             '$674call.20': [(<numba.core.ir.Assign object at 0x0000019A17D2E310>,
                              566)],
             '$684build_slice.21': [(<numba.core.ir.Assign object at 0x0000019A17D2E2D0>,
                                     566)],
             '$684build_slice.22': [(<numba.core.ir.Assign object at 0x0000019A17D2D790>,
                                     566)],
             '$686binary_subscr.23': [(<numba.core.ir.Assign object at 0x0000019A17D2DA90>,
                                       566)],
             '$720binary_subscr.27': [(<numba.core.ir.Assign object at 0x0000019A17D2F410>,
                                       566)],
             '$72binary_subscr.14': [(<numba.core.ir.Assign object at 0x0000019A17CE0D10>,
                                      0)],
             '$734binary_subscr.30': [(<numba.core.ir.Assign object at 0x0000019A17D2F050>,
                                       566)],
             '$752compare_op.34': [(<numba.core.ir.Assign object at 0x0000019A17D2D3D0>,
                                    566)],
             '$774binary_subscr.38': [(<numba.core.ir.Assign object at 0x0000019A17D2F890>,
                                       566)],
             '$784pred': [(<numba.core.ir.Assign object at 0x0000019A17D2C5D0>,
                           566)],
             '$818load_attr.7': [(<numba.core.ir.Assign object at 0x0000019A18E443D0>,
                                  798)],
             '$830binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000019A1783DA50>,
                                      798)],
             '$840compare_op.10': [(<numba.core.ir.Assign object at 0x0000019A18E47C50>,
                                    798)],
             '$846pred': [(<numba.core.ir.Assign object at 0x0000019A18E45F90>,
                           798)],
             '$850return_value.1': [(<numba.core.ir.Assign object at 0x0000019A18E46E50>,
                                     848)],
             '$854return_value.1': [(<numba.core.ir.Assign object at 0x0000019A18E47910>,
                                     852)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x0000019A17CEB8D0>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000019A17CE2E10>,
                                    0)],
             '$96build_slice.16': [(<numba.core.ir.Assign object at 0x0000019A17CE9E50>,
                                    0)],
             '$96build_slice.17': [(<numba.core.ir.Assign object at 0x0000019A17CE85D0>,
                                    0)],
             '$98binary_subscr.18': [(<numba.core.ir.Assign object at 0x0000019A17D12ED0>,
                                      0)],
             '$binop_add274.47': [(<numba.core.ir.Assign object at 0x0000019A17D17010>,
                                   0)],
             '$binop_add438.15': [(<numba.core.ir.Assign object at 0x0000019A18D84650>,
                                   362)],
             '$binop_add642.15': [(<numba.core.ir.Assign object at 0x0000019A17D2C3D0>,
                                   566)],
             '$binop_add748.33': [(<numba.core.ir.Assign object at 0x0000019A17D2EAD0>,
                                   566)],
             '$binop_add804.3': [(<numba.core.ir.Assign object at 0x0000019A17D2DB90>,
                                  798)],
             '$binop_iadd558.2': [(<numba.core.ir.Assign object at 0x0000019A17D4FC90>,
                                   554)],
             '$binop_iadd790.2': [(<numba.core.ir.Assign object at 0x0000019A17D2CC50>,
                                   786)],
             '$binop_iadd808.4': [(<numba.core.ir.Assign object at 0x0000019A17D2CFD0>,
                                   798)],
             '$binop_iand284.49': [(<numba.core.ir.Assign object at 0x0000019A17D17390>,
                                    0)],
             '$binop_iand758.35': [(<numba.core.ir.Assign object at 0x0000019A17D2CBD0>,
                                    566)],
             '$binop_sub404.9': [(<numba.core.ir.Assign object at 0x0000019A18D85FD0>,
                                  362)],
             '$binop_sub608.9': [(<numba.core.ir.Assign object at 0x0000019A17D4C5D0>,
                                  566)],
             '$const130.22.1': [(<numba.core.ir.Assign object at 0x0000019A17D12C50>,
                                 0)],
             '$const138.24.1': [(<numba.core.ir.Assign object at 0x0000019A17D13010>,
                                 0)],
             '$const156.27.1': [(<numba.core.ir.Assign object at 0x0000019A17D133D0>,
                                 0)],
             '$const192.33.2': [(<numba.core.ir.Assign object at 0x0000019A17D10550>,
                                 0)],
             '$const220.39.1': [(<numba.core.ir.Assign object at 0x0000019A17D12E10>,
                                 0)],
             '$const298.51.1': [(<numba.core.ir.Assign object at 0x0000019A17D16F90>,
                                 0)],
             '$const314.1.3': [(<numba.core.ir.Assign object at 0x0000019A17D15AD0>,
                                312)],
             '$const342.3.1': [(<numba.core.ir.Assign object at 0x0000019A18D85650>,
                                328)],
             '$const398.6.1': [(<numba.core.ir.Assign object at 0x0000019A18D85690>,
                                362)],
             '$const42.7.2': [(<numba.core.ir.Assign object at 0x0000019A17CE8E90>,
                               0)],
             '$const454.18.1': [(<numba.core.ir.Assign object at 0x0000019A18D85950>,
                                 362)],
             '$const556.1.3': [(<numba.core.ir.Assign object at 0x0000019A17D4D450>,
                                554)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x0000019A17CE3BD0>,
                              0)],
             '$const602.6.1': [(<numba.core.ir.Assign object at 0x0000019A17D4ED10>,
                                566)],
             '$const658.18.1': [(<numba.core.ir.Assign object at 0x0000019A17D2D490>,
                                 566)],
             '$const70.13.1': [(<numba.core.ir.Assign object at 0x0000019A17CE8550>,
                                0)],
             '$const788.1.3': [(<numba.core.ir.Assign object at 0x0000019A17D2D210>,
                                786)],
             '$const802.2.3': [(<numba.core.ir.Assign object at 0x0000019A17D2DF90>,
                                798)],
             '$const828.8.1': [(<numba.core.ir.Assign object at 0x0000019A18E46690>,
                                798)],
             '$const848.0.2': [(<numba.core.ir.Assign object at 0x0000019A18E47E50>,
                                848)],
             '$const852.0.2': [(<numba.core.ir.Assign object at 0x0000019A18E47D10>,
                                852)],
             'avgn': [(<numba.core.ir.Assign object at 0x0000019A17D2C250>,
                       566)],
             'bool310': [(<numba.core.ir.Assign object at 0x0000019A17D15150>,
                          0)],
             'bool360': [(<numba.core.ir.Assign object at 0x0000019A18D86ED0>,
                          328)],
             'bool552': [(<numba.core.ir.Assign object at 0x0000019A17D4CED0>,
                          362)],
             'bool784': [(<numba.core.ir.Assign object at 0x0000019A17D2D910>,
                          566)],
             'bool846': [(<numba.core.ir.Assign object at 0x0000019A18E461D0>,
                          798)],
             'delta': [(<numba.core.ir.Assign object at 0x0000019A17CE3CD0>,
                        0)],
             'maxn': [(<numba.core.ir.Assign object at 0x0000019A17D4E510>,
                       362)],
             'n': [(<numba.core.ir.Assign object at 0x0000019A18D873D0>, 312),
                   (<numba.core.ir.Assign object at 0x0000019A18D84F10>, 324),
                   (<numba.core.ir.Assign object at 0x0000019A17D4E910>, 554),
                   (<numba.core.ir.Assign object at 0x0000019A17D2CCD0>, 786),
                   (<numba.core.ir.Assign object at 0x0000019A18E44910>, 798)],
             'peaks': [(<numba.core.ir.Assign object at 0x0000019A17CE00D0>,
                        0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x0000019A17CE2610>,
                           0)],
             'post_max': [(<numba.core.ir.Assign object at 0x0000019A15F3F510>,
                           0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x0000019A179437D0>,
                          0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x0000019A17892110>,
                          0)],
             'wait': [(<numba.core.ir.Assign object at 0x0000019A17CE0AD0>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A1620FF50>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A1783C8D0>
DEBUG:numba.core.ssa:Fix SSA violator on var n
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17B22FD0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: pre_max = arg(1, name=pre_max)
DEBUG:numba.core.ssa:on stmt: post_max = arg(2, name=post_max)
DEBUG:numba.core.ssa:on stmt: pre_avg = arg(3, name=pre_avg)
DEBUG:numba.core.ssa:on stmt: post_avg = arg(4, name=post_avg)
DEBUG:numba.core.ssa:on stmt: delta = arg(5, name=delta)
DEBUG:numba.core.ssa:on stmt: wait = arg(6, name=wait)
DEBUG:numba.core.ssa:on stmt: peaks = arg(7, name=peaks)
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
DEBUG:numba.core.ssa:on stmt: $const42.7.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $44load_global.8 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const70.13.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1193), Var($72binary_subscr.14, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7.2, $86call.15, func=$96build_slice.16, args=(Var($const42.7.2, utils.py:1205), Var($86call.15, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
DEBUG:numba.core.ssa:on stmt: $const130.22.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $122compare_op.20
DEBUG:numba.core.ssa:on stmt: $const138.24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const156.27.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
DEBUG:numba.core.ssa:on stmt: $const192.33.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $194load_global.34 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const220.39.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1193), Var($222binary_subscr.40, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33.2, $236call.41, func=$246build_slice.42, args=(Var($const192.33.2, utils.py:1206), Var($236call.41, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_add274.47 = $262call.45 + delta
DEBUG:numba.core.ssa:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
DEBUG:numba.core.ssa:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $binop_iand284.49
DEBUG:numba.core.ssa:on stmt: $const298.51.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool310 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $310pred, 312, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 312
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17B22FD0>
DEBUG:numba.core.ssa:on stmt: $const314.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n = wait + $const314.1.3
DEBUG:numba.core.ssa:first assign: n
DEBUG:numba.core.ssa:replaced with: n = wait + $const314.1.3
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 324
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17B22FD0>
DEBUG:numba.core.ssa:on stmt: n = const(int, 1)
DEBUG:numba.core.ssa:replaced with: n.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17B22FD0>
DEBUG:numba.core.ssa:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const342.3.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $354compare_op.5 = n < $344binary_subscr.4
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 362, 852
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 362
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17B22FD0>
DEBUG:numba.core.ssa:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
DEBUG:numba.core.ssa:on stmt: $386load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const398.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub404.9 = n - pre_max
DEBUG:numba.core.ssa:on stmt: $412call.10 = call $386load_global.4($const398.6.1, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6.1, utils.py:1214), Var($binop_sub404.9, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $422load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add438.15 = n + post_max
DEBUG:numba.core.ssa:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const454.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1214), Var($456binary_subscr.19, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1214), Var($470call.20, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
DEBUG:numba.core.ssa:on stmt: peaks[n] = $524compare_op.29
DEBUG:numba.core.ssa:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool552 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $552pred, 566, 554
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 554
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17B22FD0>
DEBUG:numba.core.ssa:on stmt: $const556.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd558.2
DEBUG:numba.core.ssa:replaced with: n.2 = $binop_iadd558.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 566
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17B22FD0>
DEBUG:numba.core.ssa:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
DEBUG:numba.core.ssa:on stmt: $590load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const602.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub608.9 = n - pre_avg
DEBUG:numba.core.ssa:on stmt: $616call.10 = call $590load_global.4($const602.6.1, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6.1, utils.py:1223), Var($binop_sub608.9, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $626load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add642.15 = n + post_avg
DEBUG:numba.core.ssa:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const658.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1223), Var($660binary_subscr.19, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1223), Var($674call.20, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add748.33 = avgn + delta
DEBUG:numba.core.ssa:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
DEBUG:numba.core.ssa:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[n] = $binop_iand758.35
DEBUG:numba.core.ssa:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool784 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $784pred, 798, 786
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 786
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17B22FD0>
DEBUG:numba.core.ssa:on stmt: $const788.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd790.2
DEBUG:numba.core.ssa:replaced with: n.3 = $binop_iadd790.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 798
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17B22FD0>
DEBUG:numba.core.ssa:on stmt: $const802.2.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add804.3 = wait + $const802.2.3
DEBUG:numba.core.ssa:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd808.4
DEBUG:numba.core.ssa:replaced with: n.4 = $binop_iadd808.4
DEBUG:numba.core.ssa:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const828.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $840compare_op.10 = n < $830binary_subscr.9
DEBUG:numba.core.ssa:on stmt: bool846 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $846pred, 362, 848
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 848
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17B22FD0>
DEBUG:numba.core.ssa:on stmt: $const848.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $850return_value.1 = cast(value=$const848.0.2)
DEBUG:numba.core.ssa:on stmt: return $850return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 852
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17B22FD0>
DEBUG:numba.core.ssa:on stmt: $const852.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $854return_value.1 = cast(value=$const852.0.2)
DEBUG:numba.core.ssa:on stmt: return $854return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 853
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17B22FD0>
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {312: [<numba.core.ir.Assign object at 0x0000019A162D87D0>],
             324: [<numba.core.ir.Assign object at 0x0000019A17631050>],
             554: [<numba.core.ir.Assign object at 0x0000019A17CDC590>],
             786: [<numba.core.ir.Assign object at 0x0000019A18E8F710>],
             798: [<numba.core.ir.Assign object at 0x0000019A18E8CD90>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176E1290>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: pre_max = arg(1, name=pre_max)
DEBUG:numba.core.ssa:on stmt: post_max = arg(2, name=post_max)
DEBUG:numba.core.ssa:on stmt: pre_avg = arg(3, name=pre_avg)
DEBUG:numba.core.ssa:on stmt: post_avg = arg(4, name=post_avg)
DEBUG:numba.core.ssa:on stmt: delta = arg(5, name=delta)
DEBUG:numba.core.ssa:on stmt: wait = arg(6, name=wait)
DEBUG:numba.core.ssa:on stmt: peaks = arg(7, name=peaks)
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
DEBUG:numba.core.ssa:on stmt: $const42.7.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $44load_global.8 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const70.13.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1193), Var($72binary_subscr.14, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7.2, $86call.15, func=$96build_slice.16, args=(Var($const42.7.2, utils.py:1205), Var($86call.15, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
DEBUG:numba.core.ssa:on stmt: $const130.22.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $122compare_op.20
DEBUG:numba.core.ssa:on stmt: $const138.24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const156.27.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
DEBUG:numba.core.ssa:on stmt: $const192.33.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $194load_global.34 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const220.39.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1193), Var($222binary_subscr.40, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33.2, $236call.41, func=$246build_slice.42, args=(Var($const192.33.2, utils.py:1206), Var($236call.41, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_add274.47 = $262call.45 + delta
DEBUG:numba.core.ssa:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
DEBUG:numba.core.ssa:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $binop_iand284.49
DEBUG:numba.core.ssa:on stmt: $const298.51.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool310 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $310pred, 312, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 312
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176E1290>
DEBUG:numba.core.ssa:on stmt: $const314.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n = wait + $const314.1.3
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 324
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176E1290>
DEBUG:numba.core.ssa:on stmt: n.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176E1290>
DEBUG:numba.core.ssa:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const342.3.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $354compare_op.5 = n < $344binary_subscr.4
DEBUG:numba.core.ssa:find_def var='n' stmt=$354compare_op.5 = n < $344binary_subscr.4
DEBUG:numba.core.ssa:find_def_from_top label 328
DEBUG:numba.core.ssa:insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 328
DEBUG:numba.core.ssa:find_def_from_bottom label 312
DEBUG:numba.core.ssa:incoming_def n = wait + $const314.1.3
DEBUG:numba.core.ssa:find_def_from_bottom label 324
DEBUG:numba.core.ssa:incoming_def n.1 = const(int, 1)
DEBUG:numba.core.ssa:find_def_from_bottom label 853
DEBUG:numba.core.ssa:find_def_from_top label 853
DEBUG:numba.core.ssa:insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 853
DEBUG:numba.core.ssa:find_def_from_bottom label 554
DEBUG:numba.core.ssa:incoming_def n.2 = $binop_iadd558.2
DEBUG:numba.core.ssa:find_def_from_bottom label 786
DEBUG:numba.core.ssa:incoming_def n.3 = $binop_iadd790.2
DEBUG:numba.core.ssa:incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1220), Var(n.3, utils.py:1227)], incoming_blocks=[554, 786])
DEBUG:numba.core.ssa:replaced with: $354compare_op.5 = n.5 < $344binary_subscr.4
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 362, 852
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 362
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176E1290>
DEBUG:numba.core.ssa:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
DEBUG:numba.core.ssa:on stmt: $386load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const398.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub404.9 = n - pre_max
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_sub404.9 = n - pre_max
DEBUG:numba.core.ssa:find_def_from_top label 362
DEBUG:numba.core.ssa:insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 362
DEBUG:numba.core.ssa:find_def_from_bottom label 328
DEBUG:numba.core.ssa:incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1209), Var(n.1, utils.py:1211), Var(n.6, utils.py:1213)], incoming_blocks=[312, 324, 853])
DEBUG:numba.core.ssa:find_def_from_bottom label 798
DEBUG:numba.core.ssa:incoming_def n.4 = $binop_iadd808.4
DEBUG:numba.core.ssa:replaced with: $binop_sub404.9 = n.7 - pre_max
DEBUG:numba.core.ssa:on stmt: $412call.10 = call $386load_global.4($const398.6.1, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6.1, utils.py:1214), Var($binop_sub404.9, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $422load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add438.15 = n + post_max
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_add438.15 = n + post_max
DEBUG:numba.core.ssa:replaced with: $binop_add438.15 = n.7 + post_max
DEBUG:numba.core.ssa:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const454.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1214), Var($456binary_subscr.19, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1214), Var($470call.20, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: $512binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
DEBUG:numba.core.ssa:on stmt: peaks[n] = $524compare_op.29
DEBUG:numba.core.ssa:find_def var='n' stmt=peaks[n] = $524compare_op.29
DEBUG:numba.core.ssa:replaced with: peaks[n.7] = $524compare_op.29
DEBUG:numba.core.ssa:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: $542binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool552 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $552pred, 566, 554
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 554
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176E1290>
DEBUG:numba.core.ssa:on stmt: $const556.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 554
DEBUG:numba.core.ssa:idom 362 from label 554
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.2 = $binop_iadd558.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 566
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176E1290>
DEBUG:numba.core.ssa:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
DEBUG:numba.core.ssa:on stmt: $590load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const602.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub608.9 = n - pre_avg
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_sub608.9 = n - pre_avg
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_sub608.9 = n.7 - pre_avg
DEBUG:numba.core.ssa:on stmt: $616call.10 = call $590load_global.4($const602.6.1, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6.1, utils.py:1223), Var($binop_sub608.9, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $626load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add642.15 = n + post_avg
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_add642.15 = n + post_avg
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_add642.15 = n.7 + post_avg
DEBUG:numba.core.ssa:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const658.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1223), Var($660binary_subscr.19, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1223), Var($674call.20, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $720binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $734binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add748.33 = avgn + delta
DEBUG:numba.core.ssa:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
DEBUG:numba.core.ssa:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[n] = $binop_iand758.35
DEBUG:numba.core.ssa:find_def var='n' stmt=peaks[n] = $binop_iand758.35
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: peaks[n.7] = $binop_iand758.35
DEBUG:numba.core.ssa:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $774binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool784 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $784pred, 798, 786
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 786
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176E1290>
DEBUG:numba.core.ssa:on stmt: $const788.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 786
DEBUG:numba.core.ssa:idom 566 from label 786
DEBUG:numba.core.ssa:find_def_from_bottom label 566
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.3 = $binop_iadd790.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 798
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176E1290>
DEBUG:numba.core.ssa:on stmt: $const802.2.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add804.3 = wait + $const802.2.3
DEBUG:numba.core.ssa:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 798
DEBUG:numba.core.ssa:idom 566 from label 798
DEBUG:numba.core.ssa:find_def_from_bottom label 566
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.4 = $binop_iadd808.4
DEBUG:numba.core.ssa:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const828.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $840compare_op.10 = n < $830binary_subscr.9
DEBUG:numba.core.ssa:find_def var='n' stmt=$840compare_op.10 = n < $830binary_subscr.9
DEBUG:numba.core.ssa:replaced with: $840compare_op.10 = n.4 < $830binary_subscr.9
DEBUG:numba.core.ssa:on stmt: bool846 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $846pred, 362, 848
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 848
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176E1290>
DEBUG:numba.core.ssa:on stmt: $const848.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $850return_value.1 = cast(value=$const848.0.2)
DEBUG:numba.core.ssa:on stmt: return $850return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 852
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176E1290>
DEBUG:numba.core.ssa:on stmt: $const852.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $854return_value.1 = cast(value=$const852.0.2)
DEBUG:numba.core.ssa:on stmt: return $854return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 853
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176E1290>
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=569)
           2	COPY_FREE_VARS(arg=2, lineno=569)
           4	RESUME(arg=0, lineno=569)
           6	LOAD_FAST(arg=0, lineno=570)
           8	LOAD_ATTR(arg=0, lineno=570)
          18	LOAD_CONST(arg=1, lineno=570)
          20	COMPARE_OP(arg=2, lineno=570)
          26	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=570)
          28	LOAD_GLOBAL(arg=3, lineno=571)
          40	LOAD_CONST(arg=2, lineno=571)
          42	PRECALL(arg=1, lineno=571)
          46	CALL(arg=1, lineno=571)
          56	RAISE_VARARGS(arg=1, lineno=571)
>         58	LOAD_GLOBAL(arg=5, lineno=574)
          70	LOAD_ATTR(arg=3, lineno=574)
          80	LOAD_FAST(arg=0, lineno=574)
          82	PRECALL(arg=1, lineno=574)
          86	CALL(arg=1, lineno=574)
          96	STORE_FAST(arg=1, lineno=574)
          98	LOAD_GLOBAL(arg=9, lineno=575)
         110	LOAD_FAST(arg=1, lineno=575)
         112	PRECALL(arg=1, lineno=575)
         116	CALL(arg=1, lineno=575)
         126	LOAD_METHOD(arg=5, lineno=575)
         148	LOAD_CONST(arg=1, lineno=575)
         150	PRECALL(arg=1, lineno=575)
         154	CALL(arg=1, lineno=575)
         164	STORE_FAST(arg=2, lineno=575)
         166	PUSH_NULL(arg=None, lineno=576)
         168	LOAD_DEREF(arg=6, lineno=576)
         170	LOAD_FAST(arg=2, lineno=576)
         172	PRECALL(arg=1, lineno=576)
         176	CALL(arg=1, lineno=576)
         186	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=576)
         188	LOAD_FAST(arg=2, lineno=577)
         190	RETURN_VALUE(arg=None, lineno=577)
>        192	LOAD_FAST(arg=1, lineno=579)
         194	GET_ITER(arg=None, lineno=579)
>        196	FOR_ITER(arg=51, lineno=579)
         198	STORE_FAST(arg=3, lineno=579)
         200	LOAD_FAST(arg=3, lineno=580)
         202	LOAD_METHOD(arg=6, lineno=580)
         224	PRECALL(arg=0, lineno=580)
         228	CALL(arg=0, lineno=580)
         238	STORE_FAST(arg=4, lineno=580)
         240	PUSH_NULL(arg=None, lineno=581)
         242	LOAD_DEREF(arg=6, lineno=581)
         244	LOAD_FAST(arg=4, lineno=581)
         246	PRECALL(arg=1, lineno=581)
         250	CALL(arg=1, lineno=581)
         260	POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=581)
         262	LOAD_FAST(arg=4, lineno=582)
         264	SWAP(arg=2, lineno=582)
         266	POP_TOP(arg=None, lineno=582)
         268	RETURN_VALUE(arg=None, lineno=582)
>        270	PUSH_NULL(arg=None, lineno=583)
         272	LOAD_DEREF(arg=5, lineno=583)
         274	LOAD_FAST(arg=4, lineno=583)
         276	LOAD_FAST(arg=2, lineno=583)
         278	PRECALL(arg=2, lineno=583)
         282	CALL(arg=2, lineno=583)
         292	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=583)
         294	LOAD_FAST(arg=4, lineno=584)
         296	STORE_FAST(arg=2, lineno=584)
>        298	JUMP_BACKWARD(arg=52, lineno=584)
>        300	LOAD_FAST(arg=2, lineno=585)
         302	RETURN_VALUE(arg=None, lineno=585)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=569)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=569)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=RESUME(arg=0, lineno=569)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=570)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=570)
DEBUG:numba.core.byteflow:stack ['$a6.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=570)
DEBUG:numba.core.byteflow:stack ['$8load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=570)
DEBUG:numba.core.byteflow:stack ['$8load_attr.1', '$const18.2.1']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=570)
DEBUG:numba.core.byteflow:stack ['$20compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=28 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_GLOBAL(arg=3, lineno=571)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=571)
DEBUG:numba.core.byteflow:stack ['$null$28.1', '$28load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=PRECALL(arg=1, lineno=571)
DEBUG:numba.core.byteflow:stack ['$null$28.1', '$28load_global.0', '$const40.2.2']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=CALL(arg=1, lineno=571)
DEBUG:numba.core.byteflow:stack ['$null$28.1', '$28load_global.0', '$const40.2.2']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=571)
DEBUG:numba.core.byteflow:stack ['$46call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=574)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_ATTR(arg=3, lineno=574)
DEBUG:numba.core.byteflow:stack ['$null$58.1', '$58load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=0, lineno=574)
DEBUG:numba.core.byteflow:stack ['$null$58.1', '$70load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=PRECALL(arg=1, lineno=574)
DEBUG:numba.core.byteflow:stack ['$null$58.1', '$70load_attr.2', '$a80.3']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=CALL(arg=1, lineno=574)
DEBUG:numba.core.byteflow:stack ['$null$58.1', '$70load_attr.2', '$a80.3']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=STORE_FAST(arg=1, lineno=574)
DEBUG:numba.core.byteflow:stack ['$86call.4']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_GLOBAL(arg=9, lineno=575)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$98.6', '$98load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=PRECALL(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$98.6', '$98load_global.5', '$it110.7']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=CALL(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$98.6', '$98load_global.5', '$it110.7']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_METHOD(arg=5, lineno=575)
DEBUG:numba.core.byteflow:stack ['$116call.8']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_CONST(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$126.9', '$126load_method.10']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=PRECALL(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$126.9', '$126load_method.10', '$const148.11.1']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=CALL(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$126.9', '$126load_method.10', '$const148.11.1']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=STORE_FAST(arg=2, lineno=575)
DEBUG:numba.core.byteflow:stack ['$154call.12']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=PUSH_NULL(arg=None, lineno=576)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_DEREF(arg=6, lineno=576)
DEBUG:numba.core.byteflow:stack ['$null$166.13']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=576)
DEBUG:numba.core.byteflow:stack ['$null$166.13', '$168load_deref.14']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=PRECALL(arg=1, lineno=576)
DEBUG:numba.core.byteflow:stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=CALL(arg=1, lineno=576)
DEBUG:numba.core.byteflow:stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=576)
DEBUG:numba.core.byteflow:stack ['$176call.16']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=188, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=188 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=577)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=190, inst=RETURN_VALUE(arg=None, lineno=577)
DEBUG:numba.core.byteflow:stack ['$max_value188.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=192 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=192 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_FAST(arg=1, lineno=579)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=194, inst=GET_ITER(arg=None, lineno=579)
DEBUG:numba.core.byteflow:stack ['$it192.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=196, stack=('$194get_iter.1',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=196 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi196.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=196 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=196, inst=FOR_ITER(arg=51, lineno=579)
DEBUG:numba.core.byteflow:stack ['$phi196.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=300, stack=(), blockstack=(), npush=0), Edge(pc=198, stack=('$phi196.0', '$196for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=300 nstack_initial=0), State(pc_initial=198 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=300 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=300, inst=LOAD_FAST(arg=2, lineno=585)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=302, inst=RETURN_VALUE(arg=None, lineno=585)
DEBUG:numba.core.byteflow:stack ['$max_value300.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=198 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi198.0', '$phi198.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=198 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=198, inst=STORE_FAST(arg=3, lineno=579)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$phi198.1']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=LOAD_FAST(arg=3, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=LOAD_METHOD(arg=6, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$view200.2']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=PRECALL(arg=0, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$202.3', '$202load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=CALL(arg=0, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$202.3', '$202load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=STORE_FAST(arg=4, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$228call.5']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=PUSH_NULL(arg=None, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=LOAD_DEREF(arg=6, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$240.6']
DEBUG:numba.core.byteflow:dispatch pc=244, inst=LOAD_FAST(arg=4, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$240.6', '$242load_deref.7']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=PRECALL(arg=1, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
DEBUG:numba.core.byteflow:dispatch pc=250, inst=CALL(arg=1, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$250call.9']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=262, stack=('$phi198.0',), blockstack=(), npush=0), Edge(pc=270, stack=('$phi198.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=262 nstack_initial=1), State(pc_initial=270 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi262.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=262 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=4, lineno=582)
DEBUG:numba.core.byteflow:stack ['$phi262.0']
DEBUG:numba.core.byteflow:dispatch pc=264, inst=SWAP(arg=2, lineno=582)
DEBUG:numba.core.byteflow:stack ['$phi262.0', '$v262.1']
DEBUG:numba.core.byteflow:dispatch pc=266, inst=POP_TOP(arg=None, lineno=582)
DEBUG:numba.core.byteflow:stack ['$v262.1', '$phi262.0']
DEBUG:numba.core.byteflow:dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=582)
DEBUG:numba.core.byteflow:stack ['$v262.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=270 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi270.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=270 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=270, inst=PUSH_NULL(arg=None, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_DEREF(arg=5, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=LOAD_FAST(arg=4, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1', '$272load_deref.2']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=LOAD_FAST(arg=2, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=PRECALL(arg=2, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=CALL(arg=2, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$282call.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=294, stack=('$phi270.0',), blockstack=(), npush=0), Edge(pc=298, stack=('$phi270.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=294 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi294.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=294 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=294, inst=LOAD_FAST(arg=4, lineno=584)
DEBUG:numba.core.byteflow:stack ['$phi294.0']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=STORE_FAST(arg=2, lineno=584)
DEBUG:numba.core.byteflow:stack ['$phi294.0', '$v294.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=298, stack=('$phi294.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi298.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=298 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=298, inst=JUMP_BACKWARD(arg=52, lineno=584)
DEBUG:numba.core.byteflow:stack ['$phi298.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=196, stack=('$phi298.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=196 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=196 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=196 nstack_initial=1): {'$phi196.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=262 nstack_initial=1): set(),
             State(pc_initial=270 nstack_initial=1): set(),
             State(pc_initial=294 nstack_initial=1): set(),
             State(pc_initial=298 nstack_initial=1): set(),
             State(pc_initial=300 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi196.0': State(pc_initial=192 nstack_initial=0),
 '$phi198.1': State(pc_initial=196 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi298.0',
                            State(pc_initial=298 nstack_initial=1))},
             '$phi198.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi270.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi294.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1))},
             '$phi298.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi196.0': {('$194get_iter.1', State(pc_initial=192 nstack_initial=0))},
 '$phi198.1': {('$196for_iter.2', State(pc_initial=196 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=192 nstack_initial=0): {'$phi196.0': '$194get_iter.1'},
             State(pc_initial=196 nstack_initial=1): {'$phi198.1': '$196for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.2.1'}), (20, {'lhs': '$8load_attr.1', 'rhs': '$const18.2.1', 'res': '$20compare_op.3'}), (22, {}), (24, {}), (26, {'pred': '$20compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 58: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'idx': 1, 'res': '$28load_global.0'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$const40.2.2'}), (42, {}), (44, {}), (46, {'func': '$28load_global.0', 'args': ['$const40.2.2'], 'kw_names': None, 'res': '$46call.3'}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'exc': '$46call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'item': '$58load_global.0', 'res': '$70load_attr.2'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$a80.3'}), (82, {}), (84, {}), (86, {'func': '$70load_attr.2', 'args': ['$a80.3'], 'kw_names': None, 'res': '$86call.4'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'value': '$86call.4'}), (98, {'idx': 4, 'res': '$98load_global.5'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {'res': '$it110.7'}), (112, {}), (114, {}), (116, {'func': '$98load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$116call.8'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {'item': '$116call.8', 'res': '$126load_method.10'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {}), (148, {'res': '$const148.11.1'}), (150, {}), (152, {}), (154, {'func': '$126load_method.10', 'args': ['$const148.11.1'], 'kw_names': None, 'res': '$154call.12'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.12'}), (166, {}), (168, {'res': '$168load_deref.14'}), (170, {'res': '$max_value170.15'}), (172, {}), (174, {}), (176, {'func': '$168load_deref.14', 'args': ['$max_value170.15'], 'kw_names': None, 'res': '$176call.16'}), (178, {}), (180, {}), (182, {}), (184, {}), (186, {'pred': '$176call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: (), 192: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$max_value188.0'}), (190, {'retval': '$max_value188.0', 'castval': '$190return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$it192.0'}), (194, {'value': '$it192.0', 'res': '$194get_iter.1'})), outgoing_phis={'$phi196.0': '$194get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$194get_iter.1',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=196 nstack_initial=1):
AdaptBlockInfo(insts=((196, {'iterator': '$phi196.0', 'pair': '$196for_iter.1', 'indval': '$196for_iter.2', 'pred': '$196for_iter.3'}),), outgoing_phis={'$phi198.1': '$196for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={300: (), 198: ('$phi196.0', '$196for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$view200.2'}), (202, {'item': '$view200.2', 'res': '$202load_method.4'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'func': '$202load_method.4', 'args': [], 'kw_names': None, 'res': '$228call.5'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'value': '$228call.5'}), (240, {}), (242, {'res': '$242load_deref.7'}), (244, {'res': '$v244.8'}), (246, {}), (248, {}), (250, {'func': '$242load_deref.7', 'args': ['$v244.8'], 'kw_names': None, 'res': '$250call.9'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'pred': '$250call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={262: ('$phi198.0',), 270: ('$phi198.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=262 nstack_initial=1):
AdaptBlockInfo(insts=((262, {'res': '$v262.1'}), (268, {'retval': '$v262.1', 'castval': '$268return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=270 nstack_initial=1):
AdaptBlockInfo(insts=((270, {}), (272, {'res': '$272load_deref.2'}), (274, {'res': '$v274.3'}), (276, {'res': '$max_value276.4'}), (278, {}), (280, {}), (282, {'func': '$272load_deref.2', 'args': ['$v274.3', '$max_value276.4'], 'kw_names': None, 'res': '$282call.5'}), (284, {}), (286, {}), (288, {}), (290, {}), (292, {'pred': '$282call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi270.0',), 298: ('$phi270.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=294 nstack_initial=1):
AdaptBlockInfo(insts=((294, {'res': '$v294.1'}), (296, {'value': '$v294.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={298: ('$phi294.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=298 nstack_initial=1):
AdaptBlockInfo(insts=((298, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$phi298.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=300 nstack_initial=0):
AdaptBlockInfo(insts=((300, {'res': '$max_value300.0'}), (302, {'retval': '$max_value300.0', 'castval': '$302return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const18.2.1 = const(int, 0)             ['$const18.2.1']
    $20compare_op.3 = $8load_attr.1 == $const18.2.1 ['$20compare_op.3', '$8load_attr.1', '$const18.2.1']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.3', '$26pred', 'bool26']
    branch $26pred, 28, 58                   ['$26pred']
label 28:
    $28load_global.0 = global(ValueError: <class 'ValueError'>) ['$28load_global.0']
    $const40.2.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const40.2.2']
    $46call.3 = call $28load_global.0($const40.2.2, func=$28load_global.0, args=[Var($const40.2.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$46call.3', '$const40.2.2']
    raise $46call.3                          ['$46call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$58load_global.0']
    $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$70load_attr.2']
    it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_attr.2', 'a', 'it']
    $98load_global.5 = global(next: <built-in function next>) ['$98load_global.5']
    $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.8', '$98load_global.5', 'it']
    $126load_method.10 = getattr(value=$116call.8, attr=take) ['$116call.8', '$126load_method.10']
    $const148.11.1 = const(int, 0)           ['$const148.11.1']
    max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_method.10', '$const148.11.1', 'max_value']
    $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x0000019A15937EC0>) ['$168load_deref.14']
    $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$168load_deref.14', '$176call.16', 'max_value']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$176call.16', '$186pred', 'bool186']
    branch $186pred, 188, 192                ['$186pred']
label 188:
    $190return_value.1 = cast(value=max_value) ['$190return_value.1', 'max_value']
    return $190return_value.1                ['$190return_value.1']
label 192:
    $194get_iter.1 = getiter(value=it)       ['$194get_iter.1', 'it']
    $phi196.0 = $194get_iter.1               ['$194get_iter.1', '$phi196.0']
    jump 196                                 []
label 196:
    $196for_iter.1 = iternext(value=$phi196.0) ['$196for_iter.1', '$phi196.0']
    $196for_iter.2 = pair_first(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.2']
    $196for_iter.3 = pair_second(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.3']
    $phi198.1 = $196for_iter.2               ['$196for_iter.2', '$phi198.1']
    branch $196for_iter.3, 198, 300          ['$196for_iter.3']
label 198:
    view = $phi198.1                         ['$phi198.1', 'view']
    $202load_method.4 = getattr(value=view, attr=item) ['$202load_method.4', 'view']
    v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$202load_method.4', 'v']
    $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x0000019A15937EC0>) ['$242load_deref.7']
    $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$242load_deref.7', '$250call.9', 'v']
    bool260 = global(bool: <class 'bool'>)   ['bool260']
    $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$250call.9', '$260pred', 'bool260']
    branch $260pred, 262, 270                ['$260pred']
label 262:
    $268return_value.2 = cast(value=v)       ['$268return_value.2', 'v']
    return $268return_value.2                ['$268return_value.2']
label 270:
    $272load_deref.2 = freevar(comparator: <function max_comparator at 0x0000019A159372E0>) ['$272load_deref.2']
    $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$272load_deref.2', '$282call.5', 'max_value', 'v']
    bool292 = global(bool: <class 'bool'>)   ['bool292']
    $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$282call.5', '$292pred', 'bool292']
    branch $292pred, 294, 298                ['$292pred']
label 294:
    max_value = v                            ['max_value', 'v']
    jump 298                                 []
label 298:
    jump 196                                 []
label 300:
    $302return_value.1 = cast(value=max_value) ['$302return_value.1', 'max_value']
    return $302return_value.1                ['$302return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D27510>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 58
DEBUG:numba.core.ssa:==== SSA block analysis pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D27510>
DEBUG:numba.core.ssa:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const40.2.2 = const(str, zero-size array to reduction operation maximum which has no identity)
DEBUG:numba.core.ssa:on stmt: $46call.3 = call $28load_global.0($const40.2.2, func=$28load_global.0, args=[Var($const40.2.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D27510>
DEBUG:numba.core.ssa:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
DEBUG:numba.core.ssa:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.5 = global(next: <built-in function next>)
DEBUG:numba.core.ssa:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
DEBUG:numba.core.ssa:on stmt: $const148.11.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x0000019A15937EC0>)
DEBUG:numba.core.ssa:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 192
DEBUG:numba.core.ssa:==== SSA block analysis pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D27510>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D27510>
DEBUG:numba.core.ssa:on stmt: $194get_iter.1 = getiter(value=it)
DEBUG:numba.core.ssa:on stmt: $phi196.0 = $194get_iter.1
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block analysis pass on 196
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D27510>
DEBUG:numba.core.ssa:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
DEBUG:numba.core.ssa:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi198.1 = $196for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $196for_iter.3, 198, 300
DEBUG:numba.core.ssa:==== SSA block analysis pass on 198
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D27510>
DEBUG:numba.core.ssa:on stmt: view = $phi198.1
DEBUG:numba.core.ssa:on stmt: $202load_method.4 = getattr(value=view, attr=item)
DEBUG:numba.core.ssa:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x0000019A15937EC0>)
DEBUG:numba.core.ssa:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool260 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $260pred, 262, 270
DEBUG:numba.core.ssa:==== SSA block analysis pass on 262
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D27510>
DEBUG:numba.core.ssa:on stmt: $268return_value.2 = cast(value=v)
DEBUG:numba.core.ssa:on stmt: return $268return_value.2
DEBUG:numba.core.ssa:==== SSA block analysis pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D27510>
DEBUG:numba.core.ssa:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x0000019A159372E0>)
DEBUG:numba.core.ssa:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool292 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $292pred, 294, 298
DEBUG:numba.core.ssa:==== SSA block analysis pass on 294
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D27510>
DEBUG:numba.core.ssa:on stmt: max_value = v
DEBUG:numba.core.ssa:on stmt: jump 298
DEBUG:numba.core.ssa:==== SSA block analysis pass on 298
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D27510>
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block analysis pass on 300
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D27510>
DEBUG:numba.core.ssa:on stmt: $302return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $302return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$116call.8': [(<numba.core.ir.Assign object at 0x0000019A17D26750>,
                             58)],
             '$126load_method.10': [(<numba.core.ir.Assign object at 0x0000019A17D26B50>,
                                     58)],
             '$168load_deref.14': [(<numba.core.ir.Assign object at 0x0000019A17D27550>,
                                    58)],
             '$176call.16': [(<numba.core.ir.Assign object at 0x0000019A17D24710>,
                              58)],
             '$186pred': [(<numba.core.ir.Assign object at 0x0000019A18E60A90>,
                           58)],
             '$190return_value.1': [(<numba.core.ir.Assign object at 0x0000019A18E61490>,
                                     188)],
             '$194get_iter.1': [(<numba.core.ir.Assign object at 0x0000019A18E60F50>,
                                 192)],
             '$196for_iter.1': [(<numba.core.ir.Assign object at 0x0000019A18E61750>,
                                 196)],
             '$196for_iter.2': [(<numba.core.ir.Assign object at 0x0000019A18E607D0>,
                                 196)],
             '$196for_iter.3': [(<numba.core.ir.Assign object at 0x0000019A18E60850>,
                                 196)],
             '$202load_method.4': [(<numba.core.ir.Assign object at 0x0000019A18E633D0>,
                                    198)],
             '$20compare_op.3': [(<numba.core.ir.Assign object at 0x0000019A17D4EDD0>,
                                  0)],
             '$242load_deref.7': [(<numba.core.ir.Assign object at 0x0000019A18E63410>,
                                   198)],
             '$250call.9': [(<numba.core.ir.Assign object at 0x0000019A18E63ED0>,
                             198)],
             '$260pred': [(<numba.core.ir.Assign object at 0x0000019A18E62890>,
                           198)],
             '$268return_value.2': [(<numba.core.ir.Assign object at 0x0000019A18E62E10>,
                                     262)],
             '$26pred': [(<numba.core.ir.Assign object at 0x0000019A17D24BD0>,
                          0)],
             '$272load_deref.2': [(<numba.core.ir.Assign object at 0x0000019A18E62C90>,
                                   270)],
             '$282call.5': [(<numba.core.ir.Assign object at 0x0000019A18E62F10>,
                             270)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17D26350>,
                                   28)],
             '$292pred': [(<numba.core.ir.Assign object at 0x0000019A18E62A50>,
                           270)],
             '$302return_value.1': [(<numba.core.ir.Assign object at 0x0000019A18E60050>,
                                     300)],
             '$46call.3': [(<numba.core.ir.Assign object at 0x0000019A17D25210>,
                            28)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17D25110>,
                                   58)],
             '$70load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A17D26FD0>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x0000019A17D48B90>,
                                0)],
             '$98load_global.5': [(<numba.core.ir.Assign object at 0x0000019A17D26110>,
                                   58)],
             '$const148.11.1': [(<numba.core.ir.Assign object at 0x0000019A17D24DD0>,
                                 58)],
             '$const18.2.1': [(<numba.core.ir.Assign object at 0x0000019A17A6DC10>,
                               0)],
             '$const40.2.2': [(<numba.core.ir.Assign object at 0x0000019A17D246D0>,
                               28)],
             '$phi196.0': [(<numba.core.ir.Assign object at 0x0000019A18E60450>,
                            192)],
             '$phi198.1': [(<numba.core.ir.Assign object at 0x0000019A18E60810>,
                            196)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A17D4BD10>, 0)],
             'bool186': [(<numba.core.ir.Assign object at 0x0000019A18E60C10>,
                          58)],
             'bool26': [(<numba.core.ir.Assign object at 0x0000019A17D24850>,
                         0)],
             'bool260': [(<numba.core.ir.Assign object at 0x0000019A18E63A90>,
                          198)],
             'bool292': [(<numba.core.ir.Assign object at 0x0000019A18E622D0>,
                          270)],
             'it': [(<numba.core.ir.Assign object at 0x0000019A17D26E50>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x0000019A17D26890>,
                            58),
                           (<numba.core.ir.Assign object at 0x0000019A18E62910>,
                            294)],
             'v': [(<numba.core.ir.Assign object at 0x0000019A18E629D0>, 198)],
             'view': [(<numba.core.ir.Assign object at 0x0000019A18E60AD0>,
                       198)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A176B3490>
DEBUG:numba.core.ssa:Fix SSA violator on var max_value
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A176B3DD0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A176B3DD0>
DEBUG:numba.core.ssa:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const40.2.2 = const(str, zero-size array to reduction operation maximum which has no identity)
DEBUG:numba.core.ssa:on stmt: $46call.3 = call $28load_global.0($const40.2.2, func=$28load_global.0, args=[Var($const40.2.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A176B3DD0>
DEBUG:numba.core.ssa:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
DEBUG:numba.core.ssa:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.5 = global(next: <built-in function next>)
DEBUG:numba.core.ssa:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
DEBUG:numba.core.ssa:on stmt: $const148.11.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:first assign: max_value
DEBUG:numba.core.ssa:replaced with: max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x0000019A15937EC0>)
DEBUG:numba.core.ssa:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A176B3DD0>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A176B3DD0>
DEBUG:numba.core.ssa:on stmt: $194get_iter.1 = getiter(value=it)
DEBUG:numba.core.ssa:on stmt: $phi196.0 = $194get_iter.1
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 196
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A176B3DD0>
DEBUG:numba.core.ssa:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
DEBUG:numba.core.ssa:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi198.1 = $196for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $196for_iter.3, 198, 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 198
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A176B3DD0>
DEBUG:numba.core.ssa:on stmt: view = $phi198.1
DEBUG:numba.core.ssa:on stmt: $202load_method.4 = getattr(value=view, attr=item)
DEBUG:numba.core.ssa:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x0000019A15937EC0>)
DEBUG:numba.core.ssa:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool260 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $260pred, 262, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 262
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A176B3DD0>
DEBUG:numba.core.ssa:on stmt: $268return_value.2 = cast(value=v)
DEBUG:numba.core.ssa:on stmt: return $268return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A176B3DD0>
DEBUG:numba.core.ssa:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x0000019A159372E0>)
DEBUG:numba.core.ssa:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool292 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $292pred, 294, 298
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 294
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A176B3DD0>
DEBUG:numba.core.ssa:on stmt: max_value = v
DEBUG:numba.core.ssa:replaced with: max_value.1 = v
DEBUG:numba.core.ssa:on stmt: jump 298
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 298
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A176B3DD0>
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 300
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A176B3DD0>
DEBUG:numba.core.ssa:on stmt: $302return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $302return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x0000019A176B1D50>],
             294: [<numba.core.ir.Assign object at 0x0000019A176B2D90>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176B3D10>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176B3D10>
DEBUG:numba.core.ssa:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const40.2.2 = const(str, zero-size array to reduction operation maximum which has no identity)
DEBUG:numba.core.ssa:on stmt: $46call.3 = call $28load_global.0($const40.2.2, func=$28load_global.0, args=[Var($const40.2.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176B3D10>
DEBUG:numba.core.ssa:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
DEBUG:numba.core.ssa:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.5 = global(next: <built-in function next>)
DEBUG:numba.core.ssa:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
DEBUG:numba.core.ssa:on stmt: $const148.11.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x0000019A15937EC0>)
DEBUG:numba.core.ssa:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176B3D10>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$190return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 58 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 58
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176B3D10>
DEBUG:numba.core.ssa:on stmt: $194get_iter.1 = getiter(value=it)
DEBUG:numba.core.ssa:on stmt: $phi196.0 = $194get_iter.1
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 196
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176B3D10>
DEBUG:numba.core.ssa:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
DEBUG:numba.core.ssa:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi198.1 = $196for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $196for_iter.3, 198, 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 198
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176B3D10>
DEBUG:numba.core.ssa:on stmt: view = $phi198.1
DEBUG:numba.core.ssa:on stmt: $202load_method.4 = getattr(value=view, attr=item)
DEBUG:numba.core.ssa:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x0000019A15937EC0>)
DEBUG:numba.core.ssa:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool260 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $260pred, 262, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 262
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176B3D10>
DEBUG:numba.core.ssa:on stmt: $268return_value.2 = cast(value=v)
DEBUG:numba.core.ssa:on stmt: return $268return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176B3D10>
DEBUG:numba.core.ssa:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x0000019A159372E0>)
DEBUG:numba.core.ssa:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 198 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 198
DEBUG:numba.core.ssa:find_def_from_top label 198
DEBUG:numba.core.ssa:idom 196 from label 198
DEBUG:numba.core.ssa:find_def_from_bottom label 196
DEBUG:numba.core.ssa:find_def_from_top label 196
DEBUG:numba.core.ssa:insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 196
DEBUG:numba.core.ssa:find_def_from_bottom label 192
DEBUG:numba.core.ssa:find_def_from_top label 192
DEBUG:numba.core.ssa:idom 58 from label 192
DEBUG:numba.core.ssa:find_def_from_bottom label 58
DEBUG:numba.core.ssa:incoming_def max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_bottom label 298
DEBUG:numba.core.ssa:find_def_from_top label 298
DEBUG:numba.core.ssa:insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 298
DEBUG:numba.core.ssa:find_def_from_bottom label 294
DEBUG:numba.core.ssa:incoming_def max_value.1 = v
DEBUG:numba.core.ssa:find_def_from_bottom label 270
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 198 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 198
DEBUG:numba.core.ssa:find_def_from_top label 198
DEBUG:numba.core.ssa:idom 196 from label 198
DEBUG:numba.core.ssa:find_def_from_bottom label 196
DEBUG:numba.core.ssa:incoming_def max_value.2 = phi(incoming_values=[Var(max_value, old_arraymath.py:575)], incoming_blocks=[192])
DEBUG:numba.core.ssa:incoming_def max_value.3 = phi(incoming_values=[Var(max_value.1, old_arraymath.py:584), Var(max_value.2, old_arraymath.py:583)], incoming_blocks=[294, 270])
DEBUG:numba.core.ssa:replaced with: $282call.5 = call $272load_deref.2(v, max_value.2, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value.2, old_arraymath.py:583)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool292 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $292pred, 294, 298
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 294
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176B3D10>
DEBUG:numba.core.ssa:on stmt: max_value.1 = v
DEBUG:numba.core.ssa:on stmt: jump 298
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 298
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176B3D10>
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 300
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A176B3D10>
DEBUG:numba.core.ssa:on stmt: $302return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$302return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def_from_top label 300
DEBUG:numba.core.ssa:idom 196 from label 300
DEBUG:numba.core.ssa:find_def_from_bottom label 196
DEBUG:numba.core.ssa:replaced with: $302return_value.1 = cast(value=max_value.2)
DEBUG:numba.core.ssa:on stmt: return $302return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4793)
           2	RESUME(arg=0, lineno=4793)
           4	LOAD_FAST(arg=1, lineno=4794)
           6	LOAD_FAST(arg=0, lineno=4794)
           8	LOAD_ATTR(arg=0, lineno=4794)
          18	LOAD_CONST(arg=1, lineno=4794)
          20	BINARY_OP(arg=10, lineno=4794)
          24	COMPARE_OP(arg=4, lineno=4794)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4794)
          32	LOAD_FAST(arg=1, lineno=4794)
          34	LOAD_FAST(arg=0, lineno=4794)
          36	LOAD_ATTR(arg=0, lineno=4794)
          46	UNARY_NEGATIVE(arg=None, lineno=4794)
          48	COMPARE_OP(arg=0, lineno=4794)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4794)
>         56	LOAD_GLOBAL(arg=3, lineno=4795)
          68	LOAD_CONST(arg=2, lineno=4795)
          70	PRECALL(arg=1, lineno=4795)
          74	CALL(arg=1, lineno=4795)
          84	RAISE_VARARGS(arg=1, lineno=4795)
>         86	LOAD_FAST(arg=0, lineno=4796)
          88	LOAD_METHOD(arg=2, lineno=4796)
         110	PRECALL(arg=0, lineno=4796)
         114	CALL(arg=0, lineno=4796)
         124	LOAD_FAST(arg=1, lineno=4796)
         126	BINARY_SUBSCR(arg=None, lineno=4796)
         136	RETURN_VALUE(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4793)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=4793)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$a6.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$8load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$8load_attr.2', '$const18.3.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$binop_sub20.4']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$24compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$a34.1']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$36load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$46unary_negative.3']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$48compare_op.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=56 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4795)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=PRECALL(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0', '$const68.2.2']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=CALL(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0', '$const68.2.2']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$74call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=86 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$a86.0']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=PRECALL(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$null$88.1', '$88load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=CALL(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$null$88.1', '$88load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$114call.3']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$114call.3', '$indices124.4']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$126binary_subscr.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3.1'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3.1', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    axis = arg(2, name=axis)                 ['axis']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3.1 = const(int, 1)             ['$const18.3.1']
    $binop_sub20.4 = $8load_attr.2 - $const18.3.1 ['$8load_attr.2', '$binop_sub20.4', '$const18.3.1']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2.2 = const(str, Index out of bounds) ['$const68.2.2']
    $74call.3 = call $56load_global.0($const68.2.2, func=$56load_global.0, args=[Var($const68.2.2, arrayobj.py:4795)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D259D0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: indices = arg(1, name=indices)
DEBUG:numba.core.ssa:on stmt: axis = arg(2, name=axis)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3.1
DEBUG:numba.core.ssa:on stmt: $24compare_op.5 = indices > $binop_sub20.4
DEBUG:numba.core.ssa:on stmt: bool30 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $30pred, 56, 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D259D0>
DEBUG:numba.core.ssa:on stmt: $36load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
DEBUG:numba.core.ssa:on stmt: $48compare_op.4 = indices < $46unary_negative.3
DEBUG:numba.core.ssa:on stmt: bool54 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $54pred, 56, 86
DEBUG:numba.core.ssa:==== SSA block analysis pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D259D0>
DEBUG:numba.core.ssa:on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
DEBUG:numba.core.ssa:on stmt: $const68.2.2 = const(str, Index out of bounds)
DEBUG:numba.core.ssa:on stmt: $74call.3 = call $56load_global.0($const68.2.2, func=$56load_global.0, args=[Var($const68.2.2, arrayobj.py:4795)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D259D0>
DEBUG:numba.core.ssa:on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
DEBUG:numba.core.ssa:on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
DEBUG:numba.core.ssa:on stmt: return $136return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x0000019A18F03E50>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000019A18F00610>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x0000019A18F03BD0>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x0000019A18E99ED0>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x0000019A18E9A390>,
                          0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A18E9A9D0>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x0000019A18E9B110>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x0000019A18E9BD90>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x0000019A18E99E50>,
                          32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x0000019A18E998D0>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x0000019A18E99790>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x0000019A18F00E90>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A18E99050>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x0000019A18E99B10>,
                                 0)],
             '$const18.3.1': [(<numba.core.ir.Assign object at 0x0000019A18E99390>,
                               0)],
             '$const68.2.2': [(<numba.core.ir.Assign object at 0x0000019A18E9ABD0>,
                               56)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A17D26950>, 0)],
             'axis': [(<numba.core.ir.Assign object at 0x0000019A18E98890>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x0000019A18E9B8D0>,
                         0)],
             'bool54': [(<numba.core.ir.Assign object at 0x0000019A18E997D0>,
                         32)],
             'indices': [(<numba.core.ir.Assign object at 0x0000019A18E98A90>,
                          0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17D13B10>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2302)
           2	RESUME(arg=0, lineno=2302)
           4	LOAD_FAST(arg=0, lineno=2304)
           6	LOAD_METHOD(arg=0, lineno=2304)
          28	LOAD_FAST(arg=0, lineno=2304)
          30	LOAD_ATTR(arg=1, lineno=2304)
          40	PRECALL(arg=1, lineno=2304)
          44	CALL(arg=1, lineno=2304)
          54	RETURN_VALUE(arg=None, lineno=2304)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2302)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=2302)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2304)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$ary4.0']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2', '$ary28.3']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=PRECALL(arg=1, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=CALL(arg=1, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$44call.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$ary28.3'}), (30, {'item': '$ary28.3', 'res': '$30load_attr.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {'func': '$6load_method.2', 'args': ['$30load_attr.4'], 'kw_names': None, 'res': '$44call.5'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {'retval': '$44call.5', 'castval': '$54return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_method.2 = getattr(value=ary, attr=reshape) ['$6load_method.2', 'ary']
    $30load_attr.4 = getattr(value=ary, attr=size) ['$30load_attr.4', 'ary']
    $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2304)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_attr.4', '$44call.5', '$6load_method.2']
    $54return_value.6 = cast(value=$44call.5) ['$44call.5', '$54return_value.6']
    return $54return_value.6                 ['$54return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A18F01C90>
DEBUG:numba.core.ssa:on stmt: ary = arg(0, name=ary)
DEBUG:numba.core.ssa:on stmt: $6load_method.2 = getattr(value=ary, attr=reshape)
DEBUG:numba.core.ssa:on stmt: $30load_attr.4 = getattr(value=ary, attr=size)
DEBUG:numba.core.ssa:on stmt: $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2304)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $54return_value.6 = cast(value=$44call.5)
DEBUG:numba.core.ssa:on stmt: return $54return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$30load_attr.4': [(<numba.core.ir.Assign object at 0x0000019A18EBE090>,
                                 0)],
             '$44call.5': [(<numba.core.ir.Assign object at 0x0000019A18EBE0D0>,
                            0)],
             '$54return_value.6': [(<numba.core.ir.Assign object at 0x0000019A18EBCDD0>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x0000019A18EBF1D0>,
                                  0)],
             'ary': [(<numba.core.ir.Assign object at 0x0000019A17CECFD0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A18F01C90>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=485)
           2	RESUME(arg=0, lineno=485)
           4	LOAD_CONST(arg=1, lineno=487)
           6	RETURN_VALUE(arg=None, lineno=487)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=485)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=485)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=487)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=487)
DEBUG:numba.core.byteflow:stack ['$const4.0.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0.1'}), (6, {'retval': '$const4.0.1', 'castval': '$6return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    $const4.0.1 = const(bool, False)         ['$const4.0.1']
    $6return_value.1 = cast(value=$const4.0.1) ['$6return_value.1', '$const4.0.1']
    return $6return_value.1                  ['$6return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17AEA010>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: $const4.0.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: $6return_value.1 = cast(value=$const4.0.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$6return_value.1': [(<numba.core.ir.Assign object at 0x0000019A17AEA110>,
                                   0)],
             '$const4.0.1': [(<numba.core.ir.Assign object at 0x0000019A17AE8650>,
                              0)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A17AE8E90>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17AEA010>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=480)
           2	RESUME(arg=0, lineno=480)
           4	LOAD_FAST(arg=0, lineno=482)
           6	LOAD_FAST(arg=1, lineno=482)
           8	COMPARE_OP(arg=4, lineno=482)
          14	RETURN_VALUE(arg=None, lineno=482)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=480)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=480)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=482)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=482)
DEBUG:numba.core.byteflow:stack ['$a4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=COMPARE_OP(arg=4, lineno=482)
DEBUG:numba.core.byteflow:stack ['$a4.0', '$min_val6.1']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=482)
DEBUG:numba.core.byteflow:stack ['$8compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (10, {}), (12, {}), (14, {'retval': '$8compare_op.2', 'castval': '$14return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $14return_value.3 = cast(value=$8compare_op.2) ['$14return_value.3', '$8compare_op.2']
    return $14return_value.3                 ['$14return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A179DE5D0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: min_val = arg(1, name=min_val)
DEBUG:numba.core.ssa:on stmt: $8compare_op.2 = a > min_val
DEBUG:numba.core.ssa:on stmt: $14return_value.3 = cast(value=$8compare_op.2)
DEBUG:numba.core.ssa:on stmt: return $14return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$14return_value.3': [(<numba.core.ir.Assign object at 0x0000019A15FFBC90>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A15FFB650>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A15FF9F90>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x0000019A15FFBB50>,
                          0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A179DE5D0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4793)
           2	RESUME(arg=0, lineno=4793)
           4	LOAD_FAST(arg=1, lineno=4794)
           6	LOAD_FAST(arg=0, lineno=4794)
           8	LOAD_ATTR(arg=0, lineno=4794)
          18	LOAD_CONST(arg=1, lineno=4794)
          20	BINARY_OP(arg=10, lineno=4794)
          24	COMPARE_OP(arg=4, lineno=4794)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4794)
          32	LOAD_FAST(arg=1, lineno=4794)
          34	LOAD_FAST(arg=0, lineno=4794)
          36	LOAD_ATTR(arg=0, lineno=4794)
          46	UNARY_NEGATIVE(arg=None, lineno=4794)
          48	COMPARE_OP(arg=0, lineno=4794)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4794)
>         56	LOAD_GLOBAL(arg=3, lineno=4795)
          68	LOAD_CONST(arg=2, lineno=4795)
          70	PRECALL(arg=1, lineno=4795)
          74	CALL(arg=1, lineno=4795)
          84	RAISE_VARARGS(arg=1, lineno=4795)
>         86	LOAD_FAST(arg=0, lineno=4796)
          88	LOAD_METHOD(arg=2, lineno=4796)
         110	PRECALL(arg=0, lineno=4796)
         114	CALL(arg=0, lineno=4796)
         124	LOAD_FAST(arg=1, lineno=4796)
         126	BINARY_SUBSCR(arg=None, lineno=4796)
         136	RETURN_VALUE(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4793)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=4793)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$a6.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$8load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$8load_attr.2', '$const18.3.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$binop_sub20.4']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$24compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$a34.1']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$36load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$46unary_negative.3']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$48compare_op.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=56 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4795)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=PRECALL(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0', '$const68.2.2']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=CALL(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0', '$const68.2.2']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$74call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=86 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$a86.0']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=PRECALL(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$null$88.1', '$88load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=CALL(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$null$88.1', '$88load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$114call.3']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$114call.3', '$indices124.4']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$126binary_subscr.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3.1'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3.1', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    axis = arg(2, name=axis)                 ['axis']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3.1 = const(int, 1)             ['$const18.3.1']
    $binop_sub20.4 = $8load_attr.2 - $const18.3.1 ['$8load_attr.2', '$binop_sub20.4', '$const18.3.1']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2.2 = const(str, Index out of bounds) ['$const68.2.2']
    $74call.3 = call $56load_global.0($const68.2.2, func=$56load_global.0, args=[Var($const68.2.2, arrayobj.py:4795)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17A8FCD0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: indices = arg(1, name=indices)
DEBUG:numba.core.ssa:on stmt: axis = arg(2, name=axis)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3.1
DEBUG:numba.core.ssa:on stmt: $24compare_op.5 = indices > $binop_sub20.4
DEBUG:numba.core.ssa:on stmt: bool30 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $30pred, 56, 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17A8FCD0>
DEBUG:numba.core.ssa:on stmt: $36load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
DEBUG:numba.core.ssa:on stmt: $48compare_op.4 = indices < $46unary_negative.3
DEBUG:numba.core.ssa:on stmt: bool54 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $54pred, 56, 86
DEBUG:numba.core.ssa:==== SSA block analysis pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17A8FCD0>
DEBUG:numba.core.ssa:on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
DEBUG:numba.core.ssa:on stmt: $const68.2.2 = const(str, Index out of bounds)
DEBUG:numba.core.ssa:on stmt: $74call.3 = call $56load_global.0($const68.2.2, func=$56load_global.0, args=[Var($const68.2.2, arrayobj.py:4795)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17A8FCD0>
DEBUG:numba.core.ssa:on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
DEBUG:numba.core.ssa:on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
DEBUG:numba.core.ssa:on stmt: return $136return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x0000019A17D42790>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000019A17D42AD0>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x0000019A17D41D10>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x0000019A17A10650>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x0000019A17A10310>,
                          0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A17A107D0>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x0000019A17A12150>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x0000019A17A10850>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x0000019A17A11BD0>,
                          32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17A13850>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x0000019A1742BFD0>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x0000019A17D43A90>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A17A4E9D0>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x0000019A17A12C50>,
                                 0)],
             '$const18.3.1': [(<numba.core.ir.Assign object at 0x0000019A17A4E490>,
                               0)],
             '$const68.2.2': [(<numba.core.ir.Assign object at 0x0000019A17429E50>,
                               56)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A17A4C350>, 0)],
             'axis': [(<numba.core.ir.Assign object at 0x0000019A17A4C7D0>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x0000019A17A10C90>,
                         0)],
             'bool54': [(<numba.core.ir.Assign object at 0x0000019A17A10610>,
                         32)],
             'indices': [(<numba.core.ir.Assign object at 0x0000019A17A4F910>,
                          0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17A8FCD0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=436)
           2	COPY_FREE_VARS(arg=1, lineno=436)
           4	RESUME(arg=0, lineno=436)
           6	LOAD_DEREF(arg=3, lineno=439)
           8	STORE_FAST(arg=1, lineno=439)
          10	LOAD_GLOBAL(arg=1, lineno=440)
          22	LOAD_ATTR(arg=1, lineno=440)
          32	LOAD_FAST(arg=0, lineno=440)
          34	PRECALL(arg=1, lineno=440)
          38	CALL(arg=1, lineno=440)
          48	GET_ITER(arg=None, lineno=440)
>         50	FOR_ITER(arg=25, lineno=440)
          52	STORE_FAST(arg=2, lineno=440)
          54	LOAD_FAST(arg=1, lineno=441)
          56	LOAD_FAST(arg=2, lineno=441)
          58	LOAD_METHOD(arg=2, lineno=441)
          80	PRECALL(arg=0, lineno=441)
          84	CALL(arg=0, lineno=441)
          94	BINARY_OP(arg=13, lineno=441)
          98	STORE_FAST(arg=1, lineno=441)
         100	JUMP_BACKWARD(arg=26, lineno=441)
>        102	LOAD_FAST(arg=1, lineno=442)
         104	LOAD_FAST(arg=0, lineno=442)
         106	LOAD_ATTR(arg=3, lineno=442)
         116	BINARY_OP(arg=11, lineno=442)
         120	RETURN_VALUE(arg=None, lineno=442)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=436)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=436)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=RESUME(arg=0, lineno=436)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=439)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=1, lineno=439)
DEBUG:numba.core.byteflow:stack ['$6load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_ATTR(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$10load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=440)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$22load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=PRECALL(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$22load_attr.3', '$a32.4']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=CALL(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$22load_attr.3', '$a32.4']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=GET_ITER(arg=None, lineno=440)
DEBUG:numba.core.byteflow:stack ['$38call.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=50, stack=('$48get_iter.6',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi50.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=50 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=50, inst=FOR_ITER(arg=25, lineno=440)
DEBUG:numba.core.byteflow:stack ['$phi50.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=102 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=442)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=442)
DEBUG:numba.core.byteflow:stack ['$c102.0']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_ATTR(arg=3, lineno=442)
DEBUG:numba.core.byteflow:stack ['$c102.0', '$a104.1']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BINARY_OP(arg=11, lineno=442)
DEBUG:numba.core.byteflow:stack ['$c102.0', '$106load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=442)
DEBUG:numba.core.byteflow:stack ['$binop_truediv116.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=52 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi52.0', '$phi52.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=52 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=52, inst=STORE_FAST(arg=2, lineno=440)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$phi52.1']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_METHOD(arg=2, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2', '$v56.3']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=PRECALL(arg=0, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=CALL(arg=0, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=BINARY_OP(arg=13, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2', '$84call.6']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=STORE_FAST(arg=1, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$binop_iadd94.7']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=JUMP_BACKWARD(arg=26, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=50, stack=('$phi52.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=102 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi50.0': {('$48get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.6'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {'item': '$10load_global.1', 'res': '$22load_attr.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$a32.4'}), (34, {}), (36, {}), (38, {'func': '$22load_attr.3', 'args': ['$a32.4'], 'kw_names': None, 'res': '$38call.5'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.5', 'res': '$48get_iter.6'})), outgoing_phis={'$phi50.0': '$48get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.6',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 52: ('$phi50.0', '$50for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$c54.2'}), (56, {'res': '$v56.3'}), (58, {'item': '$v56.3', 'res': '$58load_method.5'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'func': '$58load_method.5', 'args': [], 'kw_names': None, 'res': '$84call.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {'op': '+=', 'lhs': '$c54.2', 'rhs': '$84call.6', 'res': '$binop_iadd94.7'}), (96, {}), (98, {'value': '$binop_iadd94.7'}), (100, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi52.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$c102.0'}), (104, {'res': '$a104.1'}), (106, {'item': '$a104.1', 'res': '$106load_attr.2'}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {'op': '/', 'lhs': '$c102.0', 'rhs': '$106load_attr.2', 'res': '$binop_truediv116.3'}), (118, {}), (120, {'retval': '$binop_truediv116.3', 'castval': '$120return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$10load_global.1']
    $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$22load_attr.3']
    $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.3', '$38call.5', 'a']
    $48get_iter.6 = getiter(value=$38call.5) ['$38call.5', '$48get_iter.6']
    $phi50.0 = $48get_iter.6                 ['$48get_iter.6', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 102            ['$50for_iter.3']
label 52:
    v = $phi52.1                             ['$phi52.1', 'v']
    $58load_method.5 = getattr(value=v, attr=item) ['$58load_method.5', 'v']
    $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_method.5', '$84call.6']
    $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined) ['$84call.6', '$binop_iadd94.7', 'c']
    c = $binop_iadd94.7                      ['$binop_iadd94.7', 'c']
    jump 50                                  []
label 102:
    $106load_attr.2 = getattr(value=a, attr=size) ['$106load_attr.2', 'a']
    $binop_truediv116.3 = c / $106load_attr.2 ['$106load_attr.2', '$binop_truediv116.3', 'c']
    $120return_value.4 = cast(value=$binop_truediv116.3) ['$120return_value.4', '$binop_truediv116.3']
    return $120return_value.4                ['$120return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D2F810>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $48get_iter.6 = getiter(value=$38call.5)
DEBUG:numba.core.ssa:on stmt: $phi50.0 = $48get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block analysis pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D2F810>
DEBUG:numba.core.ssa:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
DEBUG:numba.core.ssa:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi52.1 = $50for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $50for_iter.3, 52, 102
DEBUG:numba.core.ssa:==== SSA block analysis pass on 52
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D2F810>
DEBUG:numba.core.ssa:on stmt: v = $phi52.1
DEBUG:numba.core.ssa:on stmt: $58load_method.5 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c = $binop_iadd94.7
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block analysis pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D2F810>
DEBUG:numba.core.ssa:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $binop_truediv116.3 = c / $106load_attr.2
DEBUG:numba.core.ssa:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
DEBUG:numba.core.ssa:on stmt: return $120return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$106load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A18F33290>,
                                  102)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x0000019A17D5A350>,
                                   0)],
             '$120return_value.4': [(<numba.core.ir.Assign object at 0x0000019A18F30350>,
                                     102)],
             '$22load_attr.3': [(<numba.core.ir.Assign object at 0x0000019A17D58290>,
                                 0)],
             '$38call.5': [(<numba.core.ir.Assign object at 0x0000019A17D59D50>,
                            0)],
             '$48get_iter.6': [(<numba.core.ir.Assign object at 0x0000019A17D5A9D0>,
                                0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x0000019A17D5AC10>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x0000019A17D5A750>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x0000019A17D5AD10>,
                                50)],
             '$58load_method.5': [(<numba.core.ir.Assign object at 0x0000019A18F31490>,
                                   52)],
             '$84call.6': [(<numba.core.ir.Assign object at 0x0000019A18F32F10>,
                            52)],
             '$binop_iadd94.7': [(<numba.core.ir.Assign object at 0x0000019A18F33DD0>,
                                  52)],
             '$binop_truediv116.3': [(<numba.core.ir.Assign object at 0x0000019A18F305D0>,
                                      102)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x0000019A17D5AF10>,
                           0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x0000019A17D5BA50>,
                           50)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A15FF9290>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x0000019A17D58090>, 0),
                   (<numba.core.ir.Assign object at 0x0000019A18F30750>, 52)],
             'v': [(<numba.core.ir.Assign object at 0x0000019A17D5B1D0>, 52)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17D2F810>
DEBUG:numba.core.ssa:Fix SSA violator on var c
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1790A9D0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:first assign: c
DEBUG:numba.core.ssa:replaced with: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $48get_iter.6 = getiter(value=$38call.5)
DEBUG:numba.core.ssa:on stmt: $phi50.0 = $48get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1790A9D0>
DEBUG:numba.core.ssa:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
DEBUG:numba.core.ssa:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi52.1 = $50for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $50for_iter.3, 52, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 52
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1790A9D0>
DEBUG:numba.core.ssa:on stmt: v = $phi52.1
DEBUG:numba.core.ssa:on stmt: $58load_method.5 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c = $binop_iadd94.7
DEBUG:numba.core.ssa:replaced with: c.1 = $binop_iadd94.7
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1790A9D0>
DEBUG:numba.core.ssa:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $binop_truediv116.3 = c / $106load_attr.2
DEBUG:numba.core.ssa:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
DEBUG:numba.core.ssa:on stmt: return $120return_value.4
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000019A1790B9D0>],
             52: [<numba.core.ir.Assign object at 0x0000019A1790B110>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1790A3D0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $48get_iter.6 = getiter(value=$38call.5)
DEBUG:numba.core.ssa:on stmt: $phi50.0 = $48get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1790A3D0>
DEBUG:numba.core.ssa:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
DEBUG:numba.core.ssa:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi52.1 = $50for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $50for_iter.3, 52, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 52
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1790A3D0>
DEBUG:numba.core.ssa:on stmt: v = $phi52.1
DEBUG:numba.core.ssa:on stmt: $58load_method.5 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='c' stmt=$binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 52
DEBUG:numba.core.ssa:idom 50 from label 52
DEBUG:numba.core.ssa:find_def_from_bottom label 50
DEBUG:numba.core.ssa:find_def_from_top label 50
DEBUG:numba.core.ssa:insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 50
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 52
DEBUG:numba.core.ssa:incoming_def c.1 = $binop_iadd94.7
DEBUG:numba.core.ssa:replaced with: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c.1 = $binop_iadd94.7
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1790A3D0>
DEBUG:numba.core.ssa:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $binop_truediv116.3 = c / $106load_attr.2
DEBUG:numba.core.ssa:find_def var='c' stmt=$binop_truediv116.3 = c / $106load_attr.2
DEBUG:numba.core.ssa:find_def_from_top label 102
DEBUG:numba.core.ssa:idom 50 from label 102
DEBUG:numba.core.ssa:find_def_from_bottom label 50
DEBUG:numba.core.ssa:replaced with: $binop_truediv116.3 = c.2 / $106load_attr.2
DEBUG:numba.core.ssa:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
DEBUG:numba.core.ssa:on stmt: return $120return_value.4
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1193)
           2	RESUME(arg=0, lineno=1193)
           4	LOAD_FAST(arg=0, lineno=1205)
           6	LOAD_CONST(arg=1, lineno=1205)
           8	BINARY_SUBSCR(arg=None, lineno=1205)
          18	LOAD_GLOBAL(arg=1, lineno=1205)
          30	LOAD_ATTR(arg=1, lineno=1205)
          40	LOAD_FAST(arg=0, lineno=1205)
          42	LOAD_CONST(arg=2, lineno=1205)
          44	LOAD_GLOBAL(arg=5, lineno=1205)
          56	LOAD_FAST(arg=2, lineno=1205)
          58	LOAD_FAST(arg=0, lineno=1205)
          60	LOAD_ATTR(arg=3, lineno=1205)
          70	LOAD_CONST(arg=1, lineno=1205)
          72	BINARY_SUBSCR(arg=None, lineno=1205)
          82	PRECALL(arg=2, lineno=1205)
          86	CALL(arg=2, lineno=1205)
          96	BUILD_SLICE(arg=2, lineno=1205)
          98	BINARY_SUBSCR(arg=None, lineno=1205)
         108	PRECALL(arg=1, lineno=1205)
         112	CALL(arg=1, lineno=1205)
         122	COMPARE_OP(arg=5, lineno=1205)
         128	LOAD_FAST(arg=7, lineno=1205)
         130	LOAD_CONST(arg=1, lineno=1205)
         132	STORE_SUBSCR(arg=None, lineno=1205)
         136	LOAD_FAST(arg=7, lineno=1206)
         138	LOAD_CONST(arg=1, lineno=1206)
         140	COPY(arg=2, lineno=1206)
         142	COPY(arg=2, lineno=1206)
         144	BINARY_SUBSCR(arg=None, lineno=1206)
         154	LOAD_FAST(arg=0, lineno=1206)
         156	LOAD_CONST(arg=1, lineno=1206)
         158	BINARY_SUBSCR(arg=None, lineno=1206)
         168	LOAD_GLOBAL(arg=1, lineno=1206)
         180	LOAD_ATTR(arg=4, lineno=1206)
         190	LOAD_FAST(arg=0, lineno=1206)
         192	LOAD_CONST(arg=2, lineno=1206)
         194	LOAD_GLOBAL(arg=5, lineno=1206)
         206	LOAD_FAST(arg=4, lineno=1206)
         208	LOAD_FAST(arg=0, lineno=1206)
         210	LOAD_ATTR(arg=3, lineno=1206)
         220	LOAD_CONST(arg=1, lineno=1206)
         222	BINARY_SUBSCR(arg=None, lineno=1206)
         232	PRECALL(arg=2, lineno=1206)
         236	CALL(arg=2, lineno=1206)
         246	BUILD_SLICE(arg=2, lineno=1206)
         248	BINARY_SUBSCR(arg=None, lineno=1206)
         258	PRECALL(arg=1, lineno=1206)
         262	CALL(arg=1, lineno=1206)
         272	LOAD_FAST(arg=5, lineno=1206)
         274	BINARY_OP(arg=0, lineno=1206)
         278	COMPARE_OP(arg=5, lineno=1206)
         284	BINARY_OP(arg=14, lineno=1206)
         288	SWAP(arg=3, lineno=1206)
         290	SWAP(arg=2, lineno=1206)
         292	STORE_SUBSCR(arg=None, lineno=1206)
         296	LOAD_FAST(arg=7, lineno=1208)
         298	LOAD_CONST(arg=1, lineno=1208)
         300	BINARY_SUBSCR(arg=None, lineno=1208)
         310	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1208)
         312	LOAD_FAST(arg=6, lineno=1209)
         314	LOAD_CONST(arg=3, lineno=1209)
         316	BINARY_OP(arg=0, lineno=1209)
         320	STORE_FAST(arg=8, lineno=1209)
         322	JUMP_FORWARD(arg=2, lineno=1209)
>        324	LOAD_CONST(arg=3, lineno=1211)
         326	STORE_FAST(arg=8, lineno=1211)
>        328	LOAD_FAST(arg=8, lineno=1213)
         330	LOAD_FAST(arg=0, lineno=1213)
         332	LOAD_ATTR(arg=3, lineno=1213)
         342	LOAD_CONST(arg=1, lineno=1213)
         344	BINARY_SUBSCR(arg=None, lineno=1213)
         354	COMPARE_OP(arg=0, lineno=1213)
         360	POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1213)
>        362	LOAD_GLOBAL(arg=1, lineno=1214)
         374	LOAD_ATTR(arg=1, lineno=1214)
         384	LOAD_FAST(arg=0, lineno=1214)
         386	LOAD_GLOBAL(arg=3, lineno=1214)
         398	LOAD_CONST(arg=1, lineno=1214)
         400	LOAD_FAST(arg=8, lineno=1214)
         402	LOAD_FAST(arg=1, lineno=1214)
         404	BINARY_OP(arg=10, lineno=1214)
         408	PRECALL(arg=2, lineno=1214)
         412	CALL(arg=2, lineno=1214)
         422	LOAD_GLOBAL(arg=5, lineno=1214)
         434	LOAD_FAST(arg=8, lineno=1214)
         436	LOAD_FAST(arg=2, lineno=1214)
         438	BINARY_OP(arg=0, lineno=1214)
         442	LOAD_FAST(arg=0, lineno=1214)
         444	LOAD_ATTR(arg=3, lineno=1214)
         454	LOAD_CONST(arg=1, lineno=1214)
         456	BINARY_SUBSCR(arg=None, lineno=1214)
         466	PRECALL(arg=2, lineno=1214)
         470	CALL(arg=2, lineno=1214)
         480	BUILD_SLICE(arg=2, lineno=1214)
         482	BINARY_SUBSCR(arg=None, lineno=1214)
         492	PRECALL(arg=1, lineno=1214)
         496	CALL(arg=1, lineno=1214)
         506	STORE_FAST(arg=9, lineno=1214)
         508	LOAD_FAST(arg=0, lineno=1217)
         510	LOAD_FAST(arg=8, lineno=1217)
         512	BINARY_SUBSCR(arg=None, lineno=1217)
         522	LOAD_FAST(arg=9, lineno=1217)
         524	COMPARE_OP(arg=2, lineno=1217)
         530	LOAD_FAST(arg=7, lineno=1217)
         532	LOAD_FAST(arg=8, lineno=1217)
         534	STORE_SUBSCR(arg=None, lineno=1217)
         538	LOAD_FAST(arg=7, lineno=1219)
         540	LOAD_FAST(arg=8, lineno=1219)
         542	BINARY_SUBSCR(arg=None, lineno=1219)
         552	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1219)
         554	LOAD_FAST(arg=8, lineno=1220)
         556	LOAD_CONST(arg=3, lineno=1220)
         558	BINARY_OP(arg=13, lineno=1220)
         562	STORE_FAST(arg=8, lineno=1220)
         564	JUMP_BACKWARD(arg=119, lineno=1221)
>        566	LOAD_GLOBAL(arg=1, lineno=1223)
         578	LOAD_ATTR(arg=4, lineno=1223)
         588	LOAD_FAST(arg=0, lineno=1223)
         590	LOAD_GLOBAL(arg=3, lineno=1223)
         602	LOAD_CONST(arg=1, lineno=1223)
         604	LOAD_FAST(arg=8, lineno=1223)
         606	LOAD_FAST(arg=3, lineno=1223)
         608	BINARY_OP(arg=10, lineno=1223)
         612	PRECALL(arg=2, lineno=1223)
         616	CALL(arg=2, lineno=1223)
         626	LOAD_GLOBAL(arg=5, lineno=1223)
         638	LOAD_FAST(arg=8, lineno=1223)
         640	LOAD_FAST(arg=4, lineno=1223)
         642	BINARY_OP(arg=0, lineno=1223)
         646	LOAD_FAST(arg=0, lineno=1223)
         648	LOAD_ATTR(arg=3, lineno=1223)
         658	LOAD_CONST(arg=1, lineno=1223)
         660	BINARY_SUBSCR(arg=None, lineno=1223)
         670	PRECALL(arg=2, lineno=1223)
         674	CALL(arg=2, lineno=1223)
         684	BUILD_SLICE(arg=2, lineno=1223)
         686	BINARY_SUBSCR(arg=None, lineno=1223)
         696	PRECALL(arg=1, lineno=1223)
         700	CALL(arg=1, lineno=1223)
         710	STORE_FAST(arg=10, lineno=1223)
         712	LOAD_FAST(arg=7, lineno=1224)
         714	LOAD_FAST(arg=8, lineno=1224)
         716	COPY(arg=2, lineno=1224)
         718	COPY(arg=2, lineno=1224)
         720	BINARY_SUBSCR(arg=None, lineno=1224)
         730	LOAD_FAST(arg=0, lineno=1224)
         732	LOAD_FAST(arg=8, lineno=1224)
         734	BINARY_SUBSCR(arg=None, lineno=1224)
         744	LOAD_FAST(arg=10, lineno=1224)
         746	LOAD_FAST(arg=5, lineno=1224)
         748	BINARY_OP(arg=0, lineno=1224)
         752	COMPARE_OP(arg=5, lineno=1224)
         758	BINARY_OP(arg=14, lineno=1224)
         762	SWAP(arg=3, lineno=1224)
         764	SWAP(arg=2, lineno=1224)
         766	STORE_SUBSCR(arg=None, lineno=1224)
         770	LOAD_FAST(arg=7, lineno=1226)
         772	LOAD_FAST(arg=8, lineno=1226)
         774	BINARY_SUBSCR(arg=None, lineno=1226)
         784	POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1226)
         786	LOAD_FAST(arg=8, lineno=1227)
         788	LOAD_CONST(arg=3, lineno=1227)
         790	BINARY_OP(arg=13, lineno=1227)
         794	STORE_FAST(arg=8, lineno=1227)
         796	JUMP_BACKWARD(arg=235, lineno=1228)
>        798	LOAD_FAST(arg=8, lineno=1231)
         800	LOAD_FAST(arg=6, lineno=1231)
         802	LOAD_CONST(arg=3, lineno=1231)
         804	BINARY_OP(arg=0, lineno=1231)
         808	BINARY_OP(arg=13, lineno=1231)
         812	STORE_FAST(arg=8, lineno=1231)
         814	LOAD_FAST(arg=8, lineno=1213)
         816	LOAD_FAST(arg=0, lineno=1213)
         818	LOAD_ATTR(arg=3, lineno=1213)
         828	LOAD_CONST(arg=1, lineno=1213)
         830	BINARY_SUBSCR(arg=None, lineno=1213)
         840	COMPARE_OP(arg=0, lineno=1213)
         846	POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1213)
         848	LOAD_CONST(arg=2, lineno=1213)
         850	RETURN_VALUE(arg=None, lineno=1213)
>        852	LOAD_CONST(arg=2, lineno=1213)
         854	RETURN_VALUE(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1193)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1193)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1205)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$18load_global.3']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_GLOBAL(arg=5, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_ATTR(arg=3, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$x58.11']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_CONST(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=BINARY_SUBSCR(arg=None, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$60load_attr.12', '$const70.13.1']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=PRECALL(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=CALL(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$null$44.9', '$44load_global.8', '$post_max56.10', '$72binary_subscr.14']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=BUILD_SLICE(arg=2, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$const42.7.2', '$86call.15']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=BINARY_SUBSCR(arg=None, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$x40.6', '$96build_slice.17']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=PRECALL(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=CALL(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$null$18.4', '$30load_attr.5', '$98binary_subscr.18']
DEBUG:numba.core.byteflow:dispatch pc=122, inst=COMPARE_OP(arg=5, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$112call.19']
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_FAST(arg=7, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$122compare_op.20']
DEBUG:numba.core.byteflow:dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$122compare_op.20', '$peaks128.21']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=STORE_SUBSCR(arg=None, lineno=1205)
DEBUG:numba.core.byteflow:stack ['$122compare_op.20', '$peaks128.21', '$const130.22.1']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=LOAD_FAST(arg=7, lineno=1206)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=COPY(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1']
DEBUG:numba.core.byteflow:dispatch pc=142, inst=COPY(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$peaks136.23']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=BINARY_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$peaks136.23', '$const138.24.1']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_FAST(arg=0, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$x154.26']
DEBUG:numba.core.byteflow:dispatch pc=158, inst=BINARY_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$x154.26', '$const156.27.1']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_GLOBAL(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28']
DEBUG:numba.core.byteflow:dispatch pc=180, inst=LOAD_ATTR(arg=4, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$168load_global.29']
DEBUG:numba.core.byteflow:dispatch pc=190, inst=LOAD_FAST(arg=0, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_CONST(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=LOAD_GLOBAL(arg=5, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2']
DEBUG:numba.core.byteflow:dispatch pc=206, inst=LOAD_FAST(arg=4, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34']
DEBUG:numba.core.byteflow:dispatch pc=208, inst=LOAD_FAST(arg=0, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=LOAD_ATTR(arg=3, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$x208.37']
DEBUG:numba.core.byteflow:dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=BINARY_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$210load_attr.38', '$const220.39.1']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=PRECALL(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
DEBUG:numba.core.byteflow:dispatch pc=236, inst=CALL(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$null$194.35', '$194load_global.34', '$post_avg206.36', '$222binary_subscr.40']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=BUILD_SLICE(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$const192.33.2', '$236call.41']
DEBUG:numba.core.byteflow:dispatch pc=248, inst=BINARY_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$x190.32', '$246build_slice.43']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=PRECALL(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=CALL(arg=1, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$null$168.30', '$180load_attr.31', '$248binary_subscr.44']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=BINARY_OP(arg=0, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$262call.45', '$delta272.46']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=COMPARE_OP(arg=5, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$158binary_subscr.28', '$binop_add274.47']
DEBUG:numba.core.byteflow:dispatch pc=284, inst=BINARY_OP(arg=14, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$144binary_subscr.25', '$278compare_op.48']
DEBUG:numba.core.byteflow:dispatch pc=288, inst=SWAP(arg=3, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$peaks136.23', '$const138.24.1', '$binop_iand284.49']
DEBUG:numba.core.byteflow:dispatch pc=290, inst=SWAP(arg=2, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$binop_iand284.49', '$const138.24.1', '$peaks136.23']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=STORE_SUBSCR(arg=None, lineno=1206)
DEBUG:numba.core.byteflow:stack ['$binop_iand284.49', '$peaks136.23', '$const138.24.1']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=LOAD_FAST(arg=7, lineno=1208)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=298, inst=LOAD_CONST(arg=1, lineno=1208)
DEBUG:numba.core.byteflow:stack ['$peaks296.50']
DEBUG:numba.core.byteflow:dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=1208)
DEBUG:numba.core.byteflow:stack ['$peaks296.50', '$const298.51.1']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1208)
DEBUG:numba.core.byteflow:stack ['$300binary_subscr.52']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=312, stack=(), blockstack=(), npush=0), Edge(pc=324, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=312 nstack_initial=0), State(pc_initial=324 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=312 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=312, inst=LOAD_FAST(arg=6, lineno=1209)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=314, inst=LOAD_CONST(arg=3, lineno=1209)
DEBUG:numba.core.byteflow:stack ['$wait312.0']
DEBUG:numba.core.byteflow:dispatch pc=316, inst=BINARY_OP(arg=0, lineno=1209)
DEBUG:numba.core.byteflow:stack ['$wait312.0', '$const314.1.3']
DEBUG:numba.core.byteflow:dispatch pc=320, inst=STORE_FAST(arg=8, lineno=1209)
DEBUG:numba.core.byteflow:stack ['$binop_add316.2']
DEBUG:numba.core.byteflow:dispatch pc=322, inst=JUMP_FORWARD(arg=2, lineno=1209)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=324 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=324 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=324, inst=LOAD_CONST(arg=3, lineno=1211)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=326, inst=STORE_FAST(arg=8, lineno=1211)
DEBUG:numba.core.byteflow:stack ['$const324.0.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=328 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=328, inst=LOAD_FAST(arg=8, lineno=1213)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=330, inst=LOAD_FAST(arg=0, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0']
DEBUG:numba.core.byteflow:dispatch pc=332, inst=LOAD_ATTR(arg=3, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0', '$x330.1']
DEBUG:numba.core.byteflow:dispatch pc=342, inst=LOAD_CONST(arg=1, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0', '$332load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0', '$332load_attr.2', '$const342.3.1']
DEBUG:numba.core.byteflow:dispatch pc=354, inst=COMPARE_OP(arg=0, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n328.0', '$344binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=360, inst=POP_JUMP_FORWARD_IF_FALSE(arg=245, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$354compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=362, stack=(), blockstack=(), npush=0), Edge(pc=852, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=362 nstack_initial=0), State(pc_initial=852 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=362 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=362, inst=LOAD_GLOBAL(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=374, inst=LOAD_ATTR(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$362load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=384, inst=LOAD_FAST(arg=0, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=386, inst=LOAD_GLOBAL(arg=3, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3']
DEBUG:numba.core.byteflow:dispatch pc=398, inst=LOAD_CONST(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=400, inst=LOAD_FAST(arg=8, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1']
DEBUG:numba.core.byteflow:dispatch pc=402, inst=LOAD_FAST(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1', '$n400.7']
DEBUG:numba.core.byteflow:dispatch pc=404, inst=BINARY_OP(arg=10, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1', '$n400.7', '$pre_max402.8']
DEBUG:numba.core.byteflow:dispatch pc=408, inst=PRECALL(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1', '$binop_sub404.9']
DEBUG:numba.core.byteflow:dispatch pc=412, inst=CALL(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$null$386.5', '$386load_global.4', '$const398.6.1', '$binop_sub404.9']
DEBUG:numba.core.byteflow:dispatch pc=422, inst=LOAD_GLOBAL(arg=5, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10']
DEBUG:numba.core.byteflow:dispatch pc=434, inst=LOAD_FAST(arg=8, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11']
DEBUG:numba.core.byteflow:dispatch pc=436, inst=LOAD_FAST(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13']
DEBUG:numba.core.byteflow:dispatch pc=438, inst=BINARY_OP(arg=0, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$n434.13', '$post_max436.14']
DEBUG:numba.core.byteflow:dispatch pc=442, inst=LOAD_FAST(arg=0, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15']
DEBUG:numba.core.byteflow:dispatch pc=444, inst=LOAD_ATTR(arg=3, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$x442.16']
DEBUG:numba.core.byteflow:dispatch pc=454, inst=LOAD_CONST(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17']
DEBUG:numba.core.byteflow:dispatch pc=456, inst=BINARY_SUBSCR(arg=None, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$444load_attr.17', '$const454.18.1']
DEBUG:numba.core.byteflow:dispatch pc=466, inst=PRECALL(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=470, inst=CALL(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$null$422.12', '$422load_global.11', '$binop_add438.15', '$456binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=480, inst=BUILD_SLICE(arg=2, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$412call.10', '$470call.20']
DEBUG:numba.core.byteflow:dispatch pc=482, inst=BINARY_SUBSCR(arg=None, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$x384.3', '$480build_slice.22']
DEBUG:numba.core.byteflow:dispatch pc=492, inst=PRECALL(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
DEBUG:numba.core.byteflow:dispatch pc=496, inst=CALL(arg=1, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$null$362.1', '$374load_attr.2', '$482binary_subscr.23']
DEBUG:numba.core.byteflow:dispatch pc=506, inst=STORE_FAST(arg=9, lineno=1214)
DEBUG:numba.core.byteflow:stack ['$496call.24']
DEBUG:numba.core.byteflow:dispatch pc=508, inst=LOAD_FAST(arg=0, lineno=1217)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=510, inst=LOAD_FAST(arg=8, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$x508.25']
DEBUG:numba.core.byteflow:dispatch pc=512, inst=BINARY_SUBSCR(arg=None, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$x508.25', '$n510.26']
DEBUG:numba.core.byteflow:dispatch pc=522, inst=LOAD_FAST(arg=9, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$512binary_subscr.27']
DEBUG:numba.core.byteflow:dispatch pc=524, inst=COMPARE_OP(arg=2, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$512binary_subscr.27', '$maxn522.28']
DEBUG:numba.core.byteflow:dispatch pc=530, inst=LOAD_FAST(arg=7, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$524compare_op.29']
DEBUG:numba.core.byteflow:dispatch pc=532, inst=LOAD_FAST(arg=8, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$524compare_op.29', '$peaks530.30']
DEBUG:numba.core.byteflow:dispatch pc=534, inst=STORE_SUBSCR(arg=None, lineno=1217)
DEBUG:numba.core.byteflow:stack ['$524compare_op.29', '$peaks530.30', '$n532.31']
DEBUG:numba.core.byteflow:dispatch pc=538, inst=LOAD_FAST(arg=7, lineno=1219)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=540, inst=LOAD_FAST(arg=8, lineno=1219)
DEBUG:numba.core.byteflow:stack ['$peaks538.32']
DEBUG:numba.core.byteflow:dispatch pc=542, inst=BINARY_SUBSCR(arg=None, lineno=1219)
DEBUG:numba.core.byteflow:stack ['$peaks538.32', '$n540.33']
DEBUG:numba.core.byteflow:dispatch pc=552, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1219)
DEBUG:numba.core.byteflow:stack ['$542binary_subscr.34']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=554, stack=(), blockstack=(), npush=0), Edge(pc=566, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=852 nstack_initial=0), State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=852 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=852, inst=LOAD_CONST(arg=2, lineno=1213)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=854, inst=RETURN_VALUE(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$const852.0.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=554 nstack_initial=0), State(pc_initial=566 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=554 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=554, inst=LOAD_FAST(arg=8, lineno=1220)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=556, inst=LOAD_CONST(arg=3, lineno=1220)
DEBUG:numba.core.byteflow:stack ['$n554.0']
DEBUG:numba.core.byteflow:dispatch pc=558, inst=BINARY_OP(arg=13, lineno=1220)
DEBUG:numba.core.byteflow:stack ['$n554.0', '$const556.1.3']
DEBUG:numba.core.byteflow:dispatch pc=562, inst=STORE_FAST(arg=8, lineno=1220)
DEBUG:numba.core.byteflow:stack ['$binop_iadd558.2']
DEBUG:numba.core.byteflow:dispatch pc=564, inst=JUMP_BACKWARD(arg=119, lineno=1221)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=566 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=566 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=566, inst=LOAD_GLOBAL(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=578, inst=LOAD_ATTR(arg=4, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$566load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=588, inst=LOAD_FAST(arg=0, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=590, inst=LOAD_GLOBAL(arg=3, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3']
DEBUG:numba.core.byteflow:dispatch pc=602, inst=LOAD_CONST(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=604, inst=LOAD_FAST(arg=8, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1']
DEBUG:numba.core.byteflow:dispatch pc=606, inst=LOAD_FAST(arg=3, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1', '$n604.7']
DEBUG:numba.core.byteflow:dispatch pc=608, inst=BINARY_OP(arg=10, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1', '$n604.7', '$pre_avg606.8']
DEBUG:numba.core.byteflow:dispatch pc=612, inst=PRECALL(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1', '$binop_sub608.9']
DEBUG:numba.core.byteflow:dispatch pc=616, inst=CALL(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$null$590.5', '$590load_global.4', '$const602.6.1', '$binop_sub608.9']
DEBUG:numba.core.byteflow:dispatch pc=626, inst=LOAD_GLOBAL(arg=5, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10']
DEBUG:numba.core.byteflow:dispatch pc=638, inst=LOAD_FAST(arg=8, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11']
DEBUG:numba.core.byteflow:dispatch pc=640, inst=LOAD_FAST(arg=4, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13']
DEBUG:numba.core.byteflow:dispatch pc=642, inst=BINARY_OP(arg=0, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$n638.13', '$post_avg640.14']
DEBUG:numba.core.byteflow:dispatch pc=646, inst=LOAD_FAST(arg=0, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15']
DEBUG:numba.core.byteflow:dispatch pc=648, inst=LOAD_ATTR(arg=3, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$x646.16']
DEBUG:numba.core.byteflow:dispatch pc=658, inst=LOAD_CONST(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17']
DEBUG:numba.core.byteflow:dispatch pc=660, inst=BINARY_SUBSCR(arg=None, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$648load_attr.17', '$const658.18.1']
DEBUG:numba.core.byteflow:dispatch pc=670, inst=PRECALL(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=674, inst=CALL(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$null$626.12', '$626load_global.11', '$binop_add642.15', '$660binary_subscr.19']
DEBUG:numba.core.byteflow:dispatch pc=684, inst=BUILD_SLICE(arg=2, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$616call.10', '$674call.20']
DEBUG:numba.core.byteflow:dispatch pc=686, inst=BINARY_SUBSCR(arg=None, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$x588.3', '$684build_slice.22']
DEBUG:numba.core.byteflow:dispatch pc=696, inst=PRECALL(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
DEBUG:numba.core.byteflow:dispatch pc=700, inst=CALL(arg=1, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$null$566.1', '$578load_attr.2', '$686binary_subscr.23']
DEBUG:numba.core.byteflow:dispatch pc=710, inst=STORE_FAST(arg=10, lineno=1223)
DEBUG:numba.core.byteflow:stack ['$700call.24']
DEBUG:numba.core.byteflow:dispatch pc=712, inst=LOAD_FAST(arg=7, lineno=1224)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=714, inst=LOAD_FAST(arg=8, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25']
DEBUG:numba.core.byteflow:dispatch pc=716, inst=COPY(arg=2, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26']
DEBUG:numba.core.byteflow:dispatch pc=718, inst=COPY(arg=2, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$peaks712.25']
DEBUG:numba.core.byteflow:dispatch pc=720, inst=BINARY_SUBSCR(arg=None, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$peaks712.25', '$n714.26']
DEBUG:numba.core.byteflow:dispatch pc=730, inst=LOAD_FAST(arg=0, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27']
DEBUG:numba.core.byteflow:dispatch pc=732, inst=LOAD_FAST(arg=8, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28']
DEBUG:numba.core.byteflow:dispatch pc=734, inst=BINARY_SUBSCR(arg=None, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$x730.28', '$n732.29']
DEBUG:numba.core.byteflow:dispatch pc=744, inst=LOAD_FAST(arg=10, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30']
DEBUG:numba.core.byteflow:dispatch pc=746, inst=LOAD_FAST(arg=5, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31']
DEBUG:numba.core.byteflow:dispatch pc=748, inst=BINARY_OP(arg=0, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$avgn744.31', '$delta746.32']
DEBUG:numba.core.byteflow:dispatch pc=752, inst=COMPARE_OP(arg=5, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$734binary_subscr.30', '$binop_add748.33']
DEBUG:numba.core.byteflow:dispatch pc=758, inst=BINARY_OP(arg=14, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$720binary_subscr.27', '$752compare_op.34']
DEBUG:numba.core.byteflow:dispatch pc=762, inst=SWAP(arg=3, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$peaks712.25', '$n714.26', '$binop_iand758.35']
DEBUG:numba.core.byteflow:dispatch pc=764, inst=SWAP(arg=2, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$binop_iand758.35', '$n714.26', '$peaks712.25']
DEBUG:numba.core.byteflow:dispatch pc=766, inst=STORE_SUBSCR(arg=None, lineno=1224)
DEBUG:numba.core.byteflow:stack ['$binop_iand758.35', '$peaks712.25', '$n714.26']
DEBUG:numba.core.byteflow:dispatch pc=770, inst=LOAD_FAST(arg=7, lineno=1226)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=772, inst=LOAD_FAST(arg=8, lineno=1226)
DEBUG:numba.core.byteflow:stack ['$peaks770.36']
DEBUG:numba.core.byteflow:dispatch pc=774, inst=BINARY_SUBSCR(arg=None, lineno=1226)
DEBUG:numba.core.byteflow:stack ['$peaks770.36', '$n772.37']
DEBUG:numba.core.byteflow:dispatch pc=784, inst=POP_JUMP_FORWARD_IF_TRUE(arg=6, lineno=1226)
DEBUG:numba.core.byteflow:stack ['$774binary_subscr.38']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=786, stack=(), blockstack=(), npush=0), Edge(pc=798, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=786 nstack_initial=0), State(pc_initial=798 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=786 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=786, inst=LOAD_FAST(arg=8, lineno=1227)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=788, inst=LOAD_CONST(arg=3, lineno=1227)
DEBUG:numba.core.byteflow:stack ['$n786.0']
DEBUG:numba.core.byteflow:dispatch pc=790, inst=BINARY_OP(arg=13, lineno=1227)
DEBUG:numba.core.byteflow:stack ['$n786.0', '$const788.1.3']
DEBUG:numba.core.byteflow:dispatch pc=794, inst=STORE_FAST(arg=8, lineno=1227)
DEBUG:numba.core.byteflow:stack ['$binop_iadd790.2']
DEBUG:numba.core.byteflow:dispatch pc=796, inst=JUMP_BACKWARD(arg=235, lineno=1228)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=798 nstack_initial=0), State(pc_initial=328 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=798 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=798, inst=LOAD_FAST(arg=8, lineno=1231)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=800, inst=LOAD_FAST(arg=6, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$n798.0']
DEBUG:numba.core.byteflow:dispatch pc=802, inst=LOAD_CONST(arg=3, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$n798.0', '$wait800.1']
DEBUG:numba.core.byteflow:dispatch pc=804, inst=BINARY_OP(arg=0, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$n798.0', '$wait800.1', '$const802.2.3']
DEBUG:numba.core.byteflow:dispatch pc=808, inst=BINARY_OP(arg=13, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$n798.0', '$binop_add804.3']
DEBUG:numba.core.byteflow:dispatch pc=812, inst=STORE_FAST(arg=8, lineno=1231)
DEBUG:numba.core.byteflow:stack ['$binop_iadd808.4']
DEBUG:numba.core.byteflow:dispatch pc=814, inst=LOAD_FAST(arg=8, lineno=1213)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=816, inst=LOAD_FAST(arg=0, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5']
DEBUG:numba.core.byteflow:dispatch pc=818, inst=LOAD_ATTR(arg=3, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5', '$x816.6']
DEBUG:numba.core.byteflow:dispatch pc=828, inst=LOAD_CONST(arg=1, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5', '$818load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=830, inst=BINARY_SUBSCR(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5', '$818load_attr.7', '$const828.8.1']
DEBUG:numba.core.byteflow:dispatch pc=840, inst=COMPARE_OP(arg=0, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$n814.5', '$830binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=846, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=243, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$840compare_op.10']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=848, stack=(), blockstack=(), npush=0), Edge(pc=362, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=848 nstack_initial=0), State(pc_initial=362 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=848 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=848, inst=LOAD_CONST(arg=2, lineno=1213)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=850, inst=RETURN_VALUE(arg=None, lineno=1213)
DEBUG:numba.core.byteflow:stack ['$const848.0.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=362 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=312 nstack_initial=0): set(),
             State(pc_initial=324 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=362 nstack_initial=0): set(),
             State(pc_initial=554 nstack_initial=0): set(),
             State(pc_initial=566 nstack_initial=0): set(),
             State(pc_initial=786 nstack_initial=0): set(),
             State(pc_initial=798 nstack_initial=0): set(),
             State(pc_initial=848 nstack_initial=0): set(),
             State(pc_initial=852 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'idx': 0, 'res': '$18load_global.3'}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {}), (30, {'item': '$18load_global.3', 'res': '$30load_attr.5'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$x40.6'}), (42, {'res': '$const42.7.2'}), (44, {'idx': 2, 'res': '$44load_global.8'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'res': '$post_max56.10'}), (58, {'res': '$x58.11'}), (60, {'item': '$x58.11', 'res': '$60load_attr.12'}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'res': '$const70.13.1'}), (72, {'index': '$const70.13.1', 'target': '$60load_attr.12', 'res': '$72binary_subscr.14'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {}), (86, {'func': '$44load_global.8', 'args': ['$post_max56.10', '$72binary_subscr.14'], 'kw_names': None, 'res': '$86call.15'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'start': '$const42.7.2', 'stop': '$86call.15', 'step': None, 'res': '$96build_slice.17', 'slicevar': '$96build_slice.16'}), (98, {'index': '$96build_slice.17', 'target': '$x40.6', 'res': '$98binary_subscr.18'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {'func': '$30load_attr.5', 'args': ['$98binary_subscr.18'], 'kw_names': None, 'res': '$112call.19'}), (114, {}), (116, {}), (118, {}), (120, {}), (122, {'lhs': '$8binary_subscr.2', 'rhs': '$112call.19', 'res': '$122compare_op.20'}), (124, {}), (126, {}), (128, {'res': '$peaks128.21'}), (130, {'res': '$const130.22.1'}), (132, {'target': '$peaks128.21', 'index': '$const130.22.1', 'value': '$122compare_op.20'}), (134, {}), (136, {'res': '$peaks136.23'}), (138, {'res': '$const138.24.1'}), (144, {'index': '$const138.24.1', 'target': '$peaks136.23', 'res': '$144binary_subscr.25'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'res': '$x154.26'}), (156, {'res': '$const156.27.1'}), (158, {'index': '$const156.27.1', 'target': '$x154.26', 'res': '$158binary_subscr.28'}), (160, {}), (162, {}), (164, {}), (166, {}), (168, {'idx': 0, 'res': '$168load_global.29'}), (170, {}), (172, {}), (174, {}), (176, {}), (178, {}), (180, {'item': '$168load_global.29', 'res': '$180load_attr.31'}), (182, {}), (184, {}), (186, {}), (188, {}), (190, {'res': '$x190.32'}), (192, {'res': '$const192.33.2'}), (194, {'idx': 2, 'res': '$194load_global.34'}), (196, {}), (198, {}), (200, {}), (202, {}), (204, {}), (206, {'res': '$post_avg206.36'}), (208, {'res': '$x208.37'}), (210, {'item': '$x208.37', 'res': '$210load_attr.38'}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {'res': '$const220.39.1'}), (222, {'index': '$const220.39.1', 'target': '$210load_attr.38', 'res': '$222binary_subscr.40'}), (224, {}), (226, {}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {'func': '$194load_global.34', 'args': ['$post_avg206.36', '$222binary_subscr.40'], 'kw_names': None, 'res': '$236call.41'}), (238, {}), (240, {}), (242, {}), (244, {}), (246, {'start': '$const192.33.2', 'stop': '$236call.41', 'step': None, 'res': '$246build_slice.43', 'slicevar': '$246build_slice.42'}), (248, {'index': '$246build_slice.43', 'target': '$x190.32', 'res': '$248binary_subscr.44'}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {}), (262, {'func': '$180load_attr.31', 'args': ['$248binary_subscr.44'], 'kw_names': None, 'res': '$262call.45'}), (264, {}), (266, {}), (268, {}), (270, {}), (272, {'res': '$delta272.46'}), (274, {'op': '+', 'lhs': '$262call.45', 'rhs': '$delta272.46', 'res': '$binop_add274.47'}), (276, {}), (278, {'lhs': '$158binary_subscr.28', 'rhs': '$binop_add274.47', 'res': '$278compare_op.48'}), (280, {}), (282, {}), (284, {'op': '&=', 'lhs': '$144binary_subscr.25', 'rhs': '$278compare_op.48', 'res': '$binop_iand284.49'}), (286, {}), (292, {'target': '$peaks136.23', 'index': '$const138.24.1', 'value': '$binop_iand284.49'}), (294, {}), (296, {'res': '$peaks296.50'}), (298, {'res': '$const298.51.1'}), (300, {'index': '$const298.51.1', 'target': '$peaks296.50', 'res': '$300binary_subscr.52'}), (302, {}), (304, {}), (306, {}), (308, {}), (310, {'pred': '$300binary_subscr.52'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={312: (), 324: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=312 nstack_initial=0):
AdaptBlockInfo(insts=((312, {'res': '$wait312.0'}), (314, {'res': '$const314.1.3'}), (316, {'op': '+', 'lhs': '$wait312.0', 'rhs': '$const314.1.3', 'res': '$binop_add316.2'}), (318, {}), (320, {'value': '$binop_add316.2'}), (322, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=324 nstack_initial=0):
AdaptBlockInfo(insts=((324, {'res': '$const324.0.3'}), (326, {'value': '$const324.0.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$n328.0'}), (330, {'res': '$x330.1'}), (332, {'item': '$x330.1', 'res': '$332load_attr.2'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'res': '$const342.3.1'}), (344, {'index': '$const342.3.1', 'target': '$332load_attr.2', 'res': '$344binary_subscr.4'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {'lhs': '$n328.0', 'rhs': '$344binary_subscr.4', 'res': '$354compare_op.5'}), (356, {}), (358, {}), (360, {'pred': '$354compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={362: (), 852: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=362 nstack_initial=0):
AdaptBlockInfo(insts=((362, {'idx': 0, 'res': '$362load_global.0'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {}), (374, {'item': '$362load_global.0', 'res': '$374load_attr.2'}), (376, {}), (378, {}), (380, {}), (382, {}), (384, {'res': '$x384.3'}), (386, {'idx': 1, 'res': '$386load_global.4'}), (388, {}), (390, {}), (392, {}), (394, {}), (396, {}), (398, {'res': '$const398.6.1'}), (400, {'res': '$n400.7'}), (402, {'res': '$pre_max402.8'}), (404, {'op': '-', 'lhs': '$n400.7', 'rhs': '$pre_max402.8', 'res': '$binop_sub404.9'}), (406, {}), (408, {}), (410, {}), (412, {'func': '$386load_global.4', 'args': ['$const398.6.1', '$binop_sub404.9'], 'kw_names': None, 'res': '$412call.10'}), (414, {}), (416, {}), (418, {}), (420, {}), (422, {'idx': 2, 'res': '$422load_global.11'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {}), (434, {'res': '$n434.13'}), (436, {'res': '$post_max436.14'}), (438, {'op': '+', 'lhs': '$n434.13', 'rhs': '$post_max436.14', 'res': '$binop_add438.15'}), (440, {}), (442, {'res': '$x442.16'}), (444, {'item': '$x442.16', 'res': '$444load_attr.17'}), (446, {}), (448, {}), (450, {}), (452, {}), (454, {'res': '$const454.18.1'}), (456, {'index': '$const454.18.1', 'target': '$444load_attr.17', 'res': '$456binary_subscr.19'}), (458, {}), (460, {}), (462, {}), (464, {}), (466, {}), (468, {}), (470, {'func': '$422load_global.11', 'args': ['$binop_add438.15', '$456binary_subscr.19'], 'kw_names': None, 'res': '$470call.20'}), (472, {}), (474, {}), (476, {}), (478, {}), (480, {'start': '$412call.10', 'stop': '$470call.20', 'step': None, 'res': '$480build_slice.22', 'slicevar': '$480build_slice.21'}), (482, {'index': '$480build_slice.22', 'target': '$x384.3', 'res': '$482binary_subscr.23'}), (484, {}), (486, {}), (488, {}), (490, {}), (492, {}), (494, {}), (496, {'func': '$374load_attr.2', 'args': ['$482binary_subscr.23'], 'kw_names': None, 'res': '$496call.24'}), (498, {}), (500, {}), (502, {}), (504, {}), (506, {'value': '$496call.24'}), (508, {'res': '$x508.25'}), (510, {'res': '$n510.26'}), (512, {'index': '$n510.26', 'target': '$x508.25', 'res': '$512binary_subscr.27'}), (514, {}), (516, {}), (518, {}), (520, {}), (522, {'res': '$maxn522.28'}), (524, {'lhs': '$512binary_subscr.27', 'rhs': '$maxn522.28', 'res': '$524compare_op.29'}), (526, {}), (528, {}), (530, {'res': '$peaks530.30'}), (532, {'res': '$n532.31'}), (534, {'target': '$peaks530.30', 'index': '$n532.31', 'value': '$524compare_op.29'}), (536, {}), (538, {'res': '$peaks538.32'}), (540, {'res': '$n540.33'}), (542, {'index': '$n540.33', 'target': '$peaks538.32', 'res': '$542binary_subscr.34'}), (544, {}), (546, {}), (548, {}), (550, {}), (552, {'pred': '$542binary_subscr.34'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={554: (), 566: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=554 nstack_initial=0):
AdaptBlockInfo(insts=((554, {'res': '$n554.0'}), (556, {'res': '$const556.1.3'}), (558, {'op': '+=', 'lhs': '$n554.0', 'rhs': '$const556.1.3', 'res': '$binop_iadd558.2'}), (560, {}), (562, {'value': '$binop_iadd558.2'}), (564, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=566 nstack_initial=0):
AdaptBlockInfo(insts=((566, {'idx': 0, 'res': '$566load_global.0'}), (568, {}), (570, {}), (572, {}), (574, {}), (576, {}), (578, {'item': '$566load_global.0', 'res': '$578load_attr.2'}), (580, {}), (582, {}), (584, {}), (586, {}), (588, {'res': '$x588.3'}), (590, {'idx': 1, 'res': '$590load_global.4'}), (592, {}), (594, {}), (596, {}), (598, {}), (600, {}), (602, {'res': '$const602.6.1'}), (604, {'res': '$n604.7'}), (606, {'res': '$pre_avg606.8'}), (608, {'op': '-', 'lhs': '$n604.7', 'rhs': '$pre_avg606.8', 'res': '$binop_sub608.9'}), (610, {}), (612, {}), (614, {}), (616, {'func': '$590load_global.4', 'args': ['$const602.6.1', '$binop_sub608.9'], 'kw_names': None, 'res': '$616call.10'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {'idx': 2, 'res': '$626load_global.11'}), (628, {}), (630, {}), (632, {}), (634, {}), (636, {}), (638, {'res': '$n638.13'}), (640, {'res': '$post_avg640.14'}), (642, {'op': '+', 'lhs': '$n638.13', 'rhs': '$post_avg640.14', 'res': '$binop_add642.15'}), (644, {}), (646, {'res': '$x646.16'}), (648, {'item': '$x646.16', 'res': '$648load_attr.17'}), (650, {}), (652, {}), (654, {}), (656, {}), (658, {'res': '$const658.18.1'}), (660, {'index': '$const658.18.1', 'target': '$648load_attr.17', 'res': '$660binary_subscr.19'}), (662, {}), (664, {}), (666, {}), (668, {}), (670, {}), (672, {}), (674, {'func': '$626load_global.11', 'args': ['$binop_add642.15', '$660binary_subscr.19'], 'kw_names': None, 'res': '$674call.20'}), (676, {}), (678, {}), (680, {}), (682, {}), (684, {'start': '$616call.10', 'stop': '$674call.20', 'step': None, 'res': '$684build_slice.22', 'slicevar': '$684build_slice.21'}), (686, {'index': '$684build_slice.22', 'target': '$x588.3', 'res': '$686binary_subscr.23'}), (688, {}), (690, {}), (692, {}), (694, {}), (696, {}), (698, {}), (700, {'func': '$578load_attr.2', 'args': ['$686binary_subscr.23'], 'kw_names': None, 'res': '$700call.24'}), (702, {}), (704, {}), (706, {}), (708, {}), (710, {'value': '$700call.24'}), (712, {'res': '$peaks712.25'}), (714, {'res': '$n714.26'}), (720, {'index': '$n714.26', 'target': '$peaks712.25', 'res': '$720binary_subscr.27'}), (722, {}), (724, {}), (726, {}), (728, {}), (730, {'res': '$x730.28'}), (732, {'res': '$n732.29'}), (734, {'index': '$n732.29', 'target': '$x730.28', 'res': '$734binary_subscr.30'}), (736, {}), (738, {}), (740, {}), (742, {}), (744, {'res': '$avgn744.31'}), (746, {'res': '$delta746.32'}), (748, {'op': '+', 'lhs': '$avgn744.31', 'rhs': '$delta746.32', 'res': '$binop_add748.33'}), (750, {}), (752, {'lhs': '$734binary_subscr.30', 'rhs': '$binop_add748.33', 'res': '$752compare_op.34'}), (754, {}), (756, {}), (758, {'op': '&=', 'lhs': '$720binary_subscr.27', 'rhs': '$752compare_op.34', 'res': '$binop_iand758.35'}), (760, {}), (766, {'target': '$peaks712.25', 'index': '$n714.26', 'value': '$binop_iand758.35'}), (768, {}), (770, {'res': '$peaks770.36'}), (772, {'res': '$n772.37'}), (774, {'index': '$n772.37', 'target': '$peaks770.36', 'res': '$774binary_subscr.38'}), (776, {}), (778, {}), (780, {}), (782, {}), (784, {'pred': '$774binary_subscr.38'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={786: (), 798: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=786 nstack_initial=0):
AdaptBlockInfo(insts=((786, {'res': '$n786.0'}), (788, {'res': '$const788.1.3'}), (790, {'op': '+=', 'lhs': '$n786.0', 'rhs': '$const788.1.3', 'res': '$binop_iadd790.2'}), (792, {}), (794, {'value': '$binop_iadd790.2'}), (796, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=798 nstack_initial=0):
AdaptBlockInfo(insts=((798, {'res': '$n798.0'}), (800, {'res': '$wait800.1'}), (802, {'res': '$const802.2.3'}), (804, {'op': '+', 'lhs': '$wait800.1', 'rhs': '$const802.2.3', 'res': '$binop_add804.3'}), (806, {}), (808, {'op': '+=', 'lhs': '$n798.0', 'rhs': '$binop_add804.3', 'res': '$binop_iadd808.4'}), (810, {}), (812, {'value': '$binop_iadd808.4'}), (814, {'res': '$n814.5'}), (816, {'res': '$x816.6'}), (818, {'item': '$x816.6', 'res': '$818load_attr.7'}), (820, {}), (822, {}), (824, {}), (826, {}), (828, {'res': '$const828.8.1'}), (830, {'index': '$const828.8.1', 'target': '$818load_attr.7', 'res': '$830binary_subscr.9'}), (832, {}), (834, {}), (836, {}), (838, {}), (840, {'lhs': '$n814.5', 'rhs': '$830binary_subscr.9', 'res': '$840compare_op.10'}), (842, {}), (844, {}), (846, {'pred': '$840compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={848: (), 362: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=848 nstack_initial=0):
AdaptBlockInfo(insts=((848, {'res': '$const848.0.2'}), (850, {'retval': '$const848.0.2', 'castval': '$850return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=852 nstack_initial=0):
AdaptBlockInfo(insts=((852, {'res': '$const852.0.2'}), (854, {'retval': '$const852.0.2', 'castval': '$854return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$18load_global.3']
    $30load_attr.5 = getattr(value=$18load_global.3, attr=max) ['$18load_global.3', '$30load_attr.5']
    $const42.7.2 = const(NoneType, None)     ['$const42.7.2']
    $44load_global.8 = global(min: <built-in function min>) ['$44load_global.8']
    $60load_attr.12 = getattr(value=x, attr=shape) ['$60load_attr.12', 'x']
    $const70.13.1 = const(int, 0)            ['$const70.13.1']
    $72binary_subscr.14 = getitem(value=$60load_attr.12, index=$const70.13.1, fn=<built-in function getitem>) ['$60load_attr.12', '$72binary_subscr.14', '$const70.13.1']
    $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1193), Var($72binary_subscr.14, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_global.8', '$72binary_subscr.14', '$86call.15', 'post_max']
    $96build_slice.16 = global(slice: <class 'slice'>) ['$96build_slice.16']
    $96build_slice.17 = call $96build_slice.16($const42.7.2, $86call.15, func=$96build_slice.16, args=(Var($const42.7.2, utils.py:1205), Var($86call.15, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None) ['$86call.15', '$96build_slice.16', '$96build_slice.17', '$const42.7.2']
    $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>) ['$96build_slice.17', '$98binary_subscr.18', 'x']
    $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None) ['$112call.19', '$30load_attr.5', '$98binary_subscr.18']
    $122compare_op.20 = $8binary_subscr.2 >= $112call.19 ['$112call.19', '$122compare_op.20', '$8binary_subscr.2']
    $const130.22.1 = const(int, 0)           ['$const130.22.1']
    peaks[$const130.22.1] = $122compare_op.20 ['$122compare_op.20', '$const130.22.1', 'peaks']
    $const138.24.1 = const(int, 0)           ['$const138.24.1']
    $144binary_subscr.25 = getitem(value=peaks, index=$const138.24.1, fn=<built-in function getitem>) ['$144binary_subscr.25', '$const138.24.1', 'peaks']
    $const156.27.1 = const(int, 0)           ['$const156.27.1']
    $158binary_subscr.28 = getitem(value=x, index=$const156.27.1, fn=<built-in function getitem>) ['$158binary_subscr.28', '$const156.27.1', 'x']
    $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$168load_global.29']
    $180load_attr.31 = getattr(value=$168load_global.29, attr=mean) ['$168load_global.29', '$180load_attr.31']
    $const192.33.2 = const(NoneType, None)   ['$const192.33.2']
    $194load_global.34 = global(min: <built-in function min>) ['$194load_global.34']
    $210load_attr.38 = getattr(value=x, attr=shape) ['$210load_attr.38', 'x']
    $const220.39.1 = const(int, 0)           ['$const220.39.1']
    $222binary_subscr.40 = getitem(value=$210load_attr.38, index=$const220.39.1, fn=<built-in function getitem>) ['$210load_attr.38', '$222binary_subscr.40', '$const220.39.1']
    $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1193), Var($222binary_subscr.40, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$194load_global.34', '$222binary_subscr.40', '$236call.41', 'post_avg']
    $246build_slice.42 = global(slice: <class 'slice'>) ['$246build_slice.42']
    $246build_slice.43 = call $246build_slice.42($const192.33.2, $236call.41, func=$246build_slice.42, args=(Var($const192.33.2, utils.py:1206), Var($236call.41, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None) ['$236call.41', '$246build_slice.42', '$246build_slice.43', '$const192.33.2']
    $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>) ['$246build_slice.43', '$248binary_subscr.44', 'x']
    $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None) ['$180load_attr.31', '$248binary_subscr.44', '$262call.45']
    $binop_add274.47 = $262call.45 + delta   ['$262call.45', '$binop_add274.47', 'delta']
    $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47 ['$158binary_subscr.28', '$278compare_op.48', '$binop_add274.47']
    $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined) ['$144binary_subscr.25', '$278compare_op.48', '$binop_iand284.49']
    peaks[$const138.24.1] = $binop_iand284.49 ['$binop_iand284.49', '$const138.24.1', 'peaks']
    $const298.51.1 = const(int, 0)           ['$const298.51.1']
    $300binary_subscr.52 = getitem(value=peaks, index=$const298.51.1, fn=<built-in function getitem>) ['$300binary_subscr.52', '$const298.51.1', 'peaks']
    bool310 = global(bool: <class 'bool'>)   ['bool310']
    $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None) ['$300binary_subscr.52', '$310pred', 'bool310']
    branch $310pred, 312, 324                ['$310pred']
label 312:
    $const314.1.3 = const(int, 1)            ['$const314.1.3']
    n = wait + $const314.1.3                 ['$const314.1.3', 'n', 'wait']
    jump 328                                 []
label 324:
    n = const(int, 1)                        ['n']
    jump 328                                 []
label 328:
    $332load_attr.2 = getattr(value=x, attr=shape) ['$332load_attr.2', 'x']
    $const342.3.1 = const(int, 0)            ['$const342.3.1']
    $344binary_subscr.4 = getitem(value=$332load_attr.2, index=$const342.3.1, fn=<built-in function getitem>) ['$332load_attr.2', '$344binary_subscr.4', '$const342.3.1']
    $354compare_op.5 = n < $344binary_subscr.4 ['$344binary_subscr.4', '$354compare_op.5', 'n']
    bool360 = global(bool: <class 'bool'>)   ['bool360']
    $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$354compare_op.5', '$360pred', 'bool360']
    branch $360pred, 362, 852                ['$360pred']
label 362:
    $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$362load_global.0']
    $374load_attr.2 = getattr(value=$362load_global.0, attr=max) ['$362load_global.0', '$374load_attr.2']
    $386load_global.4 = global(max: <built-in function max>) ['$386load_global.4']
    $const398.6.1 = const(int, 0)            ['$const398.6.1']
    $binop_sub404.9 = n - pre_max            ['$binop_sub404.9', 'n', 'pre_max']
    $412call.10 = call $386load_global.4($const398.6.1, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6.1, utils.py:1214), Var($binop_sub404.9, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$386load_global.4', '$412call.10', '$binop_sub404.9', '$const398.6.1']
    $422load_global.11 = global(min: <built-in function min>) ['$422load_global.11']
    $binop_add438.15 = n + post_max          ['$binop_add438.15', 'n', 'post_max']
    $444load_attr.17 = getattr(value=x, attr=shape) ['$444load_attr.17', 'x']
    $const454.18.1 = const(int, 0)           ['$const454.18.1']
    $456binary_subscr.19 = getitem(value=$444load_attr.17, index=$const454.18.1, fn=<built-in function getitem>) ['$444load_attr.17', '$456binary_subscr.19', '$const454.18.1']
    $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1214), Var($456binary_subscr.19, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$422load_global.11', '$456binary_subscr.19', '$470call.20', '$binop_add438.15']
    $480build_slice.21 = global(slice: <class 'slice'>) ['$480build_slice.21']
    $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1214), Var($470call.20, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None) ['$412call.10', '$470call.20', '$480build_slice.21', '$480build_slice.22']
    $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>) ['$480build_slice.22', '$482binary_subscr.23', 'x']
    maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None) ['$374load_attr.2', '$482binary_subscr.23', 'maxn']
    $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$512binary_subscr.27', 'n', 'x']
    $524compare_op.29 = $512binary_subscr.27 == maxn ['$512binary_subscr.27', '$524compare_op.29', 'maxn']
    peaks[n] = $524compare_op.29             ['$524compare_op.29', 'n', 'peaks']
    $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$542binary_subscr.34', 'n', 'peaks']
    bool552 = global(bool: <class 'bool'>)   ['bool552']
    $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None) ['$542binary_subscr.34', '$552pred', 'bool552']
    branch $552pred, 566, 554                ['$552pred']
label 554:
    $const556.1.3 = const(int, 1)            ['$const556.1.3']
    $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd558.2', '$const556.1.3', 'n']
    n = $binop_iadd558.2                     ['$binop_iadd558.2', 'n']
    jump 328                                 []
label 566:
    $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$566load_global.0']
    $578load_attr.2 = getattr(value=$566load_global.0, attr=mean) ['$566load_global.0', '$578load_attr.2']
    $590load_global.4 = global(max: <built-in function max>) ['$590load_global.4']
    $const602.6.1 = const(int, 0)            ['$const602.6.1']
    $binop_sub608.9 = n - pre_avg            ['$binop_sub608.9', 'n', 'pre_avg']
    $616call.10 = call $590load_global.4($const602.6.1, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6.1, utils.py:1223), Var($binop_sub608.9, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$590load_global.4', '$616call.10', '$binop_sub608.9', '$const602.6.1']
    $626load_global.11 = global(min: <built-in function min>) ['$626load_global.11']
    $binop_add642.15 = n + post_avg          ['$binop_add642.15', 'n', 'post_avg']
    $648load_attr.17 = getattr(value=x, attr=shape) ['$648load_attr.17', 'x']
    $const658.18.1 = const(int, 0)           ['$const658.18.1']
    $660binary_subscr.19 = getitem(value=$648load_attr.17, index=$const658.18.1, fn=<built-in function getitem>) ['$648load_attr.17', '$660binary_subscr.19', '$const658.18.1']
    $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1223), Var($660binary_subscr.19, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$626load_global.11', '$660binary_subscr.19', '$674call.20', '$binop_add642.15']
    $684build_slice.21 = global(slice: <class 'slice'>) ['$684build_slice.21']
    $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1223), Var($674call.20, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None) ['$616call.10', '$674call.20', '$684build_slice.21', '$684build_slice.22']
    $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>) ['$684build_slice.22', '$686binary_subscr.23', 'x']
    avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None) ['$578load_attr.2', '$686binary_subscr.23', 'avgn']
    $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$720binary_subscr.27', 'n', 'peaks']
    $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$734binary_subscr.30', 'n', 'x']
    $binop_add748.33 = avgn + delta          ['$binop_add748.33', 'avgn', 'delta']
    $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33 ['$734binary_subscr.30', '$752compare_op.34', '$binop_add748.33']
    $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined) ['$720binary_subscr.27', '$752compare_op.34', '$binop_iand758.35']
    peaks[n] = $binop_iand758.35             ['$binop_iand758.35', 'n', 'peaks']
    $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$774binary_subscr.38', 'n', 'peaks']
    bool784 = global(bool: <class 'bool'>)   ['bool784']
    $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None) ['$774binary_subscr.38', '$784pred', 'bool784']
    branch $784pred, 798, 786                ['$784pred']
label 786:
    $const788.1.3 = const(int, 1)            ['$const788.1.3']
    $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_iadd790.2', '$const788.1.3', 'n']
    n = $binop_iadd790.2                     ['$binop_iadd790.2', 'n']
    jump 328                                 []
label 798:
    $const802.2.3 = const(int, 1)            ['$const802.2.3']
    $binop_add804.3 = wait + $const802.2.3   ['$binop_add804.3', '$const802.2.3', 'wait']
    $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined) ['$binop_add804.3', '$binop_iadd808.4', 'n']
    n = $binop_iadd808.4                     ['$binop_iadd808.4', 'n']
    $818load_attr.7 = getattr(value=x, attr=shape) ['$818load_attr.7', 'x']
    $const828.8.1 = const(int, 0)            ['$const828.8.1']
    $830binary_subscr.9 = getitem(value=$818load_attr.7, index=$const828.8.1, fn=<built-in function getitem>) ['$818load_attr.7', '$830binary_subscr.9', '$const828.8.1']
    $840compare_op.10 = n < $830binary_subscr.9 ['$830binary_subscr.9', '$840compare_op.10', 'n']
    bool846 = global(bool: <class 'bool'>)   ['bool846']
    $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None) ['$840compare_op.10', '$846pred', 'bool846']
    branch $846pred, 362, 848                ['$846pred']
label 848:
    $const848.0.2 = const(NoneType, None)    ['$const848.0.2']
    $850return_value.1 = cast(value=$const848.0.2) ['$850return_value.1', '$const848.0.2']
    return $850return_value.1                ['$850return_value.1']
label 852:
    $const852.0.2 = const(NoneType, None)    ['$const852.0.2']
    $854return_value.1 = cast(value=$const852.0.2) ['$854return_value.1', '$const852.0.2']
    return $854return_value.1                ['$854return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17825D90>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: pre_max = arg(1, name=pre_max)
DEBUG:numba.core.ssa:on stmt: post_max = arg(2, name=post_max)
DEBUG:numba.core.ssa:on stmt: pre_avg = arg(3, name=pre_avg)
DEBUG:numba.core.ssa:on stmt: post_avg = arg(4, name=post_avg)
DEBUG:numba.core.ssa:on stmt: delta = arg(5, name=delta)
DEBUG:numba.core.ssa:on stmt: wait = arg(6, name=wait)
DEBUG:numba.core.ssa:on stmt: peaks = arg(7, name=peaks)
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
DEBUG:numba.core.ssa:on stmt: $const42.7.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $44load_global.8 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const70.13.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1193), Var($72binary_subscr.14, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7.2, $86call.15, func=$96build_slice.16, args=(Var($const42.7.2, utils.py:1205), Var($86call.15, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
DEBUG:numba.core.ssa:on stmt: $const130.22.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $122compare_op.20
DEBUG:numba.core.ssa:on stmt: $const138.24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const156.27.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
DEBUG:numba.core.ssa:on stmt: $const192.33.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $194load_global.34 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const220.39.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1193), Var($222binary_subscr.40, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33.2, $236call.41, func=$246build_slice.42, args=(Var($const192.33.2, utils.py:1206), Var($236call.41, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_add274.47 = $262call.45 + delta
DEBUG:numba.core.ssa:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
DEBUG:numba.core.ssa:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $binop_iand284.49
DEBUG:numba.core.ssa:on stmt: $const298.51.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool310 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $310pred, 312, 324
DEBUG:numba.core.ssa:==== SSA block analysis pass on 312
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17825D90>
DEBUG:numba.core.ssa:on stmt: $const314.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n = wait + $const314.1.3
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block analysis pass on 324
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17825D90>
DEBUG:numba.core.ssa:on stmt: n = const(int, 1)
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block analysis pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17825D90>
DEBUG:numba.core.ssa:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const342.3.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $354compare_op.5 = n < $344binary_subscr.4
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 362, 852
DEBUG:numba.core.ssa:==== SSA block analysis pass on 362
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17825D90>
DEBUG:numba.core.ssa:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
DEBUG:numba.core.ssa:on stmt: $386load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const398.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub404.9 = n - pre_max
DEBUG:numba.core.ssa:on stmt: $412call.10 = call $386load_global.4($const398.6.1, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6.1, utils.py:1214), Var($binop_sub404.9, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $422load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add438.15 = n + post_max
DEBUG:numba.core.ssa:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const454.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1214), Var($456binary_subscr.19, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1214), Var($470call.20, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
DEBUG:numba.core.ssa:on stmt: peaks[n] = $524compare_op.29
DEBUG:numba.core.ssa:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool552 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $552pred, 566, 554
DEBUG:numba.core.ssa:==== SSA block analysis pass on 554
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17825D90>
DEBUG:numba.core.ssa:on stmt: $const556.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd558.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block analysis pass on 566
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17825D90>
DEBUG:numba.core.ssa:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
DEBUG:numba.core.ssa:on stmt: $590load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const602.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub608.9 = n - pre_avg
DEBUG:numba.core.ssa:on stmt: $616call.10 = call $590load_global.4($const602.6.1, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6.1, utils.py:1223), Var($binop_sub608.9, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $626load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add642.15 = n + post_avg
DEBUG:numba.core.ssa:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const658.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1223), Var($660binary_subscr.19, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1223), Var($674call.20, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add748.33 = avgn + delta
DEBUG:numba.core.ssa:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
DEBUG:numba.core.ssa:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[n] = $binop_iand758.35
DEBUG:numba.core.ssa:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool784 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $784pred, 798, 786
DEBUG:numba.core.ssa:==== SSA block analysis pass on 786
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17825D90>
DEBUG:numba.core.ssa:on stmt: $const788.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd790.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block analysis pass on 798
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17825D90>
DEBUG:numba.core.ssa:on stmt: $const802.2.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add804.3 = wait + $const802.2.3
DEBUG:numba.core.ssa:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd808.4
DEBUG:numba.core.ssa:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const828.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $840compare_op.10 = n < $830binary_subscr.9
DEBUG:numba.core.ssa:on stmt: bool846 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $846pred, 362, 848
DEBUG:numba.core.ssa:==== SSA block analysis pass on 848
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17825D90>
DEBUG:numba.core.ssa:on stmt: $const848.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $850return_value.1 = cast(value=$const848.0.2)
DEBUG:numba.core.ssa:on stmt: return $850return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 852
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17825D90>
DEBUG:numba.core.ssa:on stmt: $const852.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $854return_value.1 = cast(value=$const852.0.2)
DEBUG:numba.core.ssa:on stmt: return $854return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 853
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17825D90>
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$112call.19': [(<numba.core.ir.Assign object at 0x0000019A19238690>,
                              0)],
             '$122compare_op.20': [(<numba.core.ir.Assign object at 0x0000019A19238890>,
                                    0)],
             '$144binary_subscr.25': [(<numba.core.ir.Assign object at 0x0000019A19230990>,
                                       0)],
             '$158binary_subscr.28': [(<numba.core.ir.Assign object at 0x0000019A19230790>,
                                       0)],
             '$168load_global.29': [(<numba.core.ir.Assign object at 0x0000019A19239A10>,
                                     0)],
             '$180load_attr.31': [(<numba.core.ir.Assign object at 0x0000019A19239C10>,
                                   0)],
             '$18load_global.3': [(<numba.core.ir.Assign object at 0x0000019A19232990>,
                                   0)],
             '$194load_global.34': [(<numba.core.ir.Assign object at 0x0000019A1923A150>,
                                     0)],
             '$210load_attr.38': [(<numba.core.ir.Assign object at 0x0000019A1923A710>,
                                   0)],
             '$222binary_subscr.40': [(<numba.core.ir.Assign object at 0x0000019A19230350>,
                                       0)],
             '$236call.41': [(<numba.core.ir.Assign object at 0x0000019A1923AE10>,
                              0)],
             '$246build_slice.42': [(<numba.core.ir.Assign object at 0x0000019A1923B110>,
                                     0)],
             '$246build_slice.43': [(<numba.core.ir.Assign object at 0x0000019A1923B290>,
                                     0)],
             '$248binary_subscr.44': [(<numba.core.ir.Assign object at 0x0000019A1923B450>,
                                       0)],
             '$262call.45': [(<numba.core.ir.Assign object at 0x0000019A1923B6D0>,
                              0)],
             '$278compare_op.48': [(<numba.core.ir.Assign object at 0x0000019A1923BD10>,
                                    0)],
             '$300binary_subscr.52': [(<numba.core.ir.Assign object at 0x0000019A19231710>,
                                       0)],
             '$30load_attr.5': [(<numba.core.ir.Assign object at 0x0000019A19232C90>,
                                 0)],
             '$310pred': [(<numba.core.ir.Assign object at 0x0000019A19240AD0>,
                           0)],
             '$332load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A192417D0>,
                                  328)],
             '$344binary_subscr.4': [(<numba.core.ir.Assign object at 0x0000019A1922DAD0>,
                                      328)],
             '$354compare_op.5': [(<numba.core.ir.Assign object at 0x0000019A19241DD0>,
                                   328)],
             '$360pred': [(<numba.core.ir.Assign object at 0x0000019A19242190>,
                           328)],
             '$362load_global.0': [(<numba.core.ir.Assign object at 0x0000019A19242350>,
                                    362)],
             '$374load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A19242550>,
                                  362)],
             '$386load_global.4': [(<numba.core.ir.Assign object at 0x0000019A19242850>,
                                    362)],
             '$412call.10': [(<numba.core.ir.Assign object at 0x0000019A19243210>,
                              362)],
             '$422load_global.11': [(<numba.core.ir.Assign object at 0x0000019A19243390>,
                                     362)],
             '$444load_attr.17': [(<numba.core.ir.Assign object at 0x0000019A19243C90>,
                                   362)],
             '$44load_global.8': [(<numba.core.ir.Assign object at 0x0000019A19233250>,
                                   0)],
             '$456binary_subscr.19': [(<numba.core.ir.Assign object at 0x0000019A1922D150>,
                                       362)],
             '$470call.20': [(<numba.core.ir.Assign object at 0x0000019A19244390>,
                              362)],
             '$480build_slice.21': [(<numba.core.ir.Assign object at 0x0000019A19244550>,
                                     362)],
             '$480build_slice.22': [(<numba.core.ir.Assign object at 0x0000019A192446D0>,
                                     362)],
             '$482binary_subscr.23': [(<numba.core.ir.Assign object at 0x0000019A19244850>,
                                       362)],
             '$512binary_subscr.27': [(<numba.core.ir.Assign object at 0x0000019A19245190>,
                                       362)],
             '$524compare_op.29': [(<numba.core.ir.Assign object at 0x0000019A19245610>,
                                    362)],
             '$542binary_subscr.34': [(<numba.core.ir.Assign object at 0x0000019A19245F50>,
                                       362)],
             '$552pred': [(<numba.core.ir.Assign object at 0x0000019A19246310>,
                           362)],
             '$566load_global.0': [(<numba.core.ir.Assign object at 0x0000019A192469D0>,
                                    566)],
             '$578load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A19246C10>,
                                  566)],
             '$590load_global.4': [(<numba.core.ir.Assign object at 0x0000019A19246FD0>,
                                    566)],
             '$60load_attr.12': [(<numba.core.ir.Assign object at 0x0000019A192337D0>,
                                  0)],
             '$616call.10': [(<numba.core.ir.Assign object at 0x0000019A19247B50>,
                              566)],
             '$626load_global.11': [(<numba.core.ir.Assign object at 0x0000019A19247DD0>,
                                     566)],
             '$648load_attr.17': [(<numba.core.ir.Assign object at 0x0000019A1924C7D0>,
                                   566)],
             '$660binary_subscr.19': [(<numba.core.ir.Assign object at 0x0000019A18DCA190>,
                                       566)],
             '$674call.20': [(<numba.core.ir.Assign object at 0x0000019A1924CED0>,
                              566)],
             '$684build_slice.21': [(<numba.core.ir.Assign object at 0x0000019A1924D090>,
                                     566)],
             '$684build_slice.22': [(<numba.core.ir.Assign object at 0x0000019A1924D210>,
                                     566)],
             '$686binary_subscr.23': [(<numba.core.ir.Assign object at 0x0000019A1924D390>,
                                       566)],
             '$720binary_subscr.27': [(<numba.core.ir.Assign object at 0x0000019A1924DCD0>,
                                       566)],
             '$72binary_subscr.14': [(<numba.core.ir.Assign object at 0x0000019A19230210>,
                                      0)],
             '$734binary_subscr.30': [(<numba.core.ir.Assign object at 0x0000019A1924E190>,
                                       566)],
             '$752compare_op.34': [(<numba.core.ir.Assign object at 0x0000019A1924EA90>,
                                    566)],
             '$774binary_subscr.38': [(<numba.core.ir.Assign object at 0x0000019A1924F2D0>,
                                       566)],
             '$784pred': [(<numba.core.ir.Assign object at 0x0000019A1924F710>,
                           566)],
             '$818load_attr.7': [(<numba.core.ir.Assign object at 0x0000019A19250A50>,
                                  798)],
             '$830binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000019A17D48D90>,
                                      798)],
             '$840compare_op.10': [(<numba.core.ir.Assign object at 0x0000019A192510D0>,
                                    798)],
             '$846pred': [(<numba.core.ir.Assign object at 0x0000019A192514D0>,
                           798)],
             '$850return_value.1': [(<numba.core.ir.Assign object at 0x0000019A19251810>,
                                     848)],
             '$854return_value.1': [(<numba.core.ir.Assign object at 0x0000019A19251CD0>,
                                     852)],
             '$86call.15': [(<numba.core.ir.Assign object at 0x0000019A19233DD0>,
                             0)],
             '$8binary_subscr.2': [(<numba.core.ir.Assign object at 0x0000019A192308D0>,
                                    0)],
             '$96build_slice.16': [(<numba.core.ir.Assign object at 0x0000019A19238090>,
                                    0)],
             '$96build_slice.17': [(<numba.core.ir.Assign object at 0x0000019A19238190>,
                                    0)],
             '$98binary_subscr.18': [(<numba.core.ir.Assign object at 0x0000019A19238350>,
                                      0)],
             '$binop_add274.47': [(<numba.core.ir.Assign object at 0x0000019A1923BB10>,
                                   0)],
             '$binop_add438.15': [(<numba.core.ir.Assign object at 0x0000019A19243910>,
                                   362)],
             '$binop_add642.15': [(<numba.core.ir.Assign object at 0x0000019A1924C410>,
                                   566)],
             '$binop_add748.33': [(<numba.core.ir.Assign object at 0x0000019A1924E850>,
                                   566)],
             '$binop_add804.3': [(<numba.core.ir.Assign object at 0x0000019A19250190>,
                                  798)],
             '$binop_iadd558.2': [(<numba.core.ir.Assign object at 0x0000019A19246550>,
                                   554)],
             '$binop_iadd790.2': [(<numba.core.ir.Assign object at 0x0000019A1924F890>,
                                   786)],
             '$binop_iadd808.4': [(<numba.core.ir.Assign object at 0x0000019A192503D0>,
                                   798)],
             '$binop_iand284.49': [(<numba.core.ir.Assign object at 0x0000019A1923BF90>,
                                    0)],
             '$binop_iand758.35': [(<numba.core.ir.Assign object at 0x0000019A1924ECD0>,
                                    566)],
             '$binop_sub404.9': [(<numba.core.ir.Assign object at 0x0000019A19242F90>,
                                  362)],
             '$binop_sub608.9': [(<numba.core.ir.Assign object at 0x0000019A19247850>,
                                  566)],
             '$const130.22.1': [(<numba.core.ir.Assign object at 0x0000019A19238C10>,
                                 0)],
             '$const138.24.1': [(<numba.core.ir.Assign object at 0x0000019A19239090>,
                                 0)],
             '$const156.27.1': [(<numba.core.ir.Assign object at 0x0000019A192395D0>,
                                 0)],
             '$const192.33.2': [(<numba.core.ir.Assign object at 0x0000019A19239FD0>,
                                 0)],
             '$const220.39.1': [(<numba.core.ir.Assign object at 0x0000019A1923A910>,
                                 0)],
             '$const298.51.1': [(<numba.core.ir.Assign object at 0x0000019A19240490>,
                                 0)],
             '$const314.1.3': [(<numba.core.ir.Assign object at 0x0000019A19240BD0>,
                                312)],
             '$const342.3.1': [(<numba.core.ir.Assign object at 0x0000019A19241950>,
                                328)],
             '$const398.6.1': [(<numba.core.ir.Assign object at 0x0000019A19242A10>,
                                362)],
             '$const42.7.2': [(<numba.core.ir.Assign object at 0x0000019A19233090>,
                               0)],
             '$const454.18.1': [(<numba.core.ir.Assign object at 0x0000019A19243E50>,
                                 362)],
             '$const556.1.3': [(<numba.core.ir.Assign object at 0x0000019A19245B10>,
                                554)],
             '$const6.1.1': [(<numba.core.ir.Assign object at 0x0000019A18D84650>,
                              0)],
             '$const602.6.1': [(<numba.core.ir.Assign object at 0x0000019A19247250>,
                                566)],
             '$const658.18.1': [(<numba.core.ir.Assign object at 0x0000019A1924CA10>,
                                 566)],
             '$const70.13.1': [(<numba.core.ir.Assign object at 0x0000019A192339D0>,
                                0)],
             '$const788.1.3': [(<numba.core.ir.Assign object at 0x0000019A1924E450>,
                                786)],
             '$const802.2.3': [(<numba.core.ir.Assign object at 0x0000019A1924FF10>,
                                798)],
             '$const828.8.1': [(<numba.core.ir.Assign object at 0x0000019A19250C50>,
                                798)],
             '$const848.0.2': [(<numba.core.ir.Assign object at 0x0000019A19251650>,
                                848)],
             '$const852.0.2': [(<numba.core.ir.Assign object at 0x0000019A19251A90>,
                                852)],
             'avgn': [(<numba.core.ir.Assign object at 0x0000019A1924D6D0>,
                       566)],
             'bool310': [(<numba.core.ir.Assign object at 0x0000019A19240910>,
                          0)],
             'bool360': [(<numba.core.ir.Assign object at 0x0000019A19241FD0>,
                          328)],
             'bool552': [(<numba.core.ir.Assign object at 0x0000019A19246150>,
                          362)],
             'bool784': [(<numba.core.ir.Assign object at 0x0000019A1924F550>,
                          566)],
             'bool846': [(<numba.core.ir.Assign object at 0x0000019A19251310>,
                          798)],
             'delta': [(<numba.core.ir.Assign object at 0x0000019A18E33A50>,
                        0)],
             'maxn': [(<numba.core.ir.Assign object at 0x0000019A19244AD0>,
                       362)],
             'n': [(<numba.core.ir.Assign object at 0x0000019A19240D90>, 312),
                   (<numba.core.ir.Assign object at 0x0000019A19241190>, 324),
                   (<numba.core.ir.Assign object at 0x0000019A192466D0>, 554),
                   (<numba.core.ir.Assign object at 0x0000019A1924F910>, 786),
                   (<numba.core.ir.Assign object at 0x0000019A19250490>, 798)],
             'peaks': [(<numba.core.ir.Assign object at 0x0000019A17A4DE90>,
                        0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x0000019A18E33A90>,
                           0)],
             'post_max': [(<numba.core.ir.Assign object at 0x0000019A1922B950>,
                           0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x0000019A1922BA90>,
                          0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x0000019A18F2F2D0>,
                          0)],
             'wait': [(<numba.core.ir.Assign object at 0x0000019A18E32290>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A1922C050>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A1922D490>
DEBUG:numba.core.ssa:Fix SSA violator on var n
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1924C1D0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: pre_max = arg(1, name=pre_max)
DEBUG:numba.core.ssa:on stmt: post_max = arg(2, name=post_max)
DEBUG:numba.core.ssa:on stmt: pre_avg = arg(3, name=pre_avg)
DEBUG:numba.core.ssa:on stmt: post_avg = arg(4, name=post_avg)
DEBUG:numba.core.ssa:on stmt: delta = arg(5, name=delta)
DEBUG:numba.core.ssa:on stmt: wait = arg(6, name=wait)
DEBUG:numba.core.ssa:on stmt: peaks = arg(7, name=peaks)
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
DEBUG:numba.core.ssa:on stmt: $const42.7.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $44load_global.8 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const70.13.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1193), Var($72binary_subscr.14, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7.2, $86call.15, func=$96build_slice.16, args=(Var($const42.7.2, utils.py:1205), Var($86call.15, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
DEBUG:numba.core.ssa:on stmt: $const130.22.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $122compare_op.20
DEBUG:numba.core.ssa:on stmt: $const138.24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const156.27.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
DEBUG:numba.core.ssa:on stmt: $const192.33.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $194load_global.34 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const220.39.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1193), Var($222binary_subscr.40, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33.2, $236call.41, func=$246build_slice.42, args=(Var($const192.33.2, utils.py:1206), Var($236call.41, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_add274.47 = $262call.45 + delta
DEBUG:numba.core.ssa:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
DEBUG:numba.core.ssa:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $binop_iand284.49
DEBUG:numba.core.ssa:on stmt: $const298.51.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool310 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $310pred, 312, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 312
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1924C1D0>
DEBUG:numba.core.ssa:on stmt: $const314.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n = wait + $const314.1.3
DEBUG:numba.core.ssa:first assign: n
DEBUG:numba.core.ssa:replaced with: n = wait + $const314.1.3
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 324
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1924C1D0>
DEBUG:numba.core.ssa:on stmt: n = const(int, 1)
DEBUG:numba.core.ssa:replaced with: n.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1924C1D0>
DEBUG:numba.core.ssa:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const342.3.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $354compare_op.5 = n < $344binary_subscr.4
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 362, 852
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 362
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1924C1D0>
DEBUG:numba.core.ssa:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
DEBUG:numba.core.ssa:on stmt: $386load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const398.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub404.9 = n - pre_max
DEBUG:numba.core.ssa:on stmt: $412call.10 = call $386load_global.4($const398.6.1, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6.1, utils.py:1214), Var($binop_sub404.9, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $422load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add438.15 = n + post_max
DEBUG:numba.core.ssa:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const454.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1214), Var($456binary_subscr.19, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1214), Var($470call.20, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
DEBUG:numba.core.ssa:on stmt: peaks[n] = $524compare_op.29
DEBUG:numba.core.ssa:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool552 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $552pred, 566, 554
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 554
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1924C1D0>
DEBUG:numba.core.ssa:on stmt: $const556.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd558.2
DEBUG:numba.core.ssa:replaced with: n.2 = $binop_iadd558.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 566
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1924C1D0>
DEBUG:numba.core.ssa:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
DEBUG:numba.core.ssa:on stmt: $590load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const602.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub608.9 = n - pre_avg
DEBUG:numba.core.ssa:on stmt: $616call.10 = call $590load_global.4($const602.6.1, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6.1, utils.py:1223), Var($binop_sub608.9, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $626load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add642.15 = n + post_avg
DEBUG:numba.core.ssa:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const658.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1223), Var($660binary_subscr.19, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1223), Var($674call.20, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add748.33 = avgn + delta
DEBUG:numba.core.ssa:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
DEBUG:numba.core.ssa:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[n] = $binop_iand758.35
DEBUG:numba.core.ssa:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool784 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $784pred, 798, 786
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 786
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1924C1D0>
DEBUG:numba.core.ssa:on stmt: $const788.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd790.2
DEBUG:numba.core.ssa:replaced with: n.3 = $binop_iadd790.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 798
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1924C1D0>
DEBUG:numba.core.ssa:on stmt: $const802.2.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add804.3 = wait + $const802.2.3
DEBUG:numba.core.ssa:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n = $binop_iadd808.4
DEBUG:numba.core.ssa:replaced with: n.4 = $binop_iadd808.4
DEBUG:numba.core.ssa:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const828.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $840compare_op.10 = n < $830binary_subscr.9
DEBUG:numba.core.ssa:on stmt: bool846 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $846pred, 362, 848
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 848
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1924C1D0>
DEBUG:numba.core.ssa:on stmt: $const848.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $850return_value.1 = cast(value=$const848.0.2)
DEBUG:numba.core.ssa:on stmt: return $850return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 852
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1924C1D0>
DEBUG:numba.core.ssa:on stmt: $const852.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $854return_value.1 = cast(value=$const852.0.2)
DEBUG:numba.core.ssa:on stmt: return $854return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 853
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A1924C1D0>
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {312: [<numba.core.ir.Assign object at 0x0000019A1924E210>],
             324: [<numba.core.ir.Assign object at 0x0000019A1922D850>],
             554: [<numba.core.ir.Assign object at 0x0000019A1922E310>],
             786: [<numba.core.ir.Assign object at 0x0000019A1922E7D0>],
             798: [<numba.core.ir.Assign object at 0x0000019A1922E550>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1924D950>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: pre_max = arg(1, name=pre_max)
DEBUG:numba.core.ssa:on stmt: post_max = arg(2, name=post_max)
DEBUG:numba.core.ssa:on stmt: pre_avg = arg(3, name=pre_avg)
DEBUG:numba.core.ssa:on stmt: post_avg = arg(4, name=post_avg)
DEBUG:numba.core.ssa:on stmt: delta = arg(5, name=delta)
DEBUG:numba.core.ssa:on stmt: wait = arg(6, name=wait)
DEBUG:numba.core.ssa:on stmt: peaks = arg(7, name=peaks)
DEBUG:numba.core.ssa:on stmt: $const6.1.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $8binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const6.1.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $18load_global.3 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $30load_attr.5 = getattr(value=$18load_global.3, attr=max)
DEBUG:numba.core.ssa:on stmt: $const42.7.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $44load_global.8 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $60load_attr.12 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const70.13.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $72binary_subscr.14 = static_getitem(value=$60load_attr.12, index=0, index_var=$const70.13.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $86call.15 = call $44load_global.8(post_max, $72binary_subscr.14, func=$44load_global.8, args=[Var(post_max, utils.py:1193), Var($72binary_subscr.14, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $96build_slice.16 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $96build_slice.17 = call $96build_slice.16($const42.7.2, $86call.15, func=$96build_slice.16, args=(Var($const42.7.2, utils.py:1205), Var($86call.15, utils.py:1205)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98binary_subscr.18 = getitem(value=x, index=$96build_slice.17, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $112call.19 = call $30load_attr.5($98binary_subscr.18, func=$30load_attr.5, args=[Var($98binary_subscr.18, utils.py:1205)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $122compare_op.20 = $8binary_subscr.2 >= $112call.19
DEBUG:numba.core.ssa:on stmt: $const130.22.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $122compare_op.20
DEBUG:numba.core.ssa:on stmt: $const138.24.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $144binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const138.24.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $const156.27.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $158binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const156.27.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $168load_global.29 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $180load_attr.31 = getattr(value=$168load_global.29, attr=mean)
DEBUG:numba.core.ssa:on stmt: $const192.33.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $194load_global.34 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $210load_attr.38 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const220.39.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $222binary_subscr.40 = static_getitem(value=$210load_attr.38, index=0, index_var=$const220.39.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $236call.41 = call $194load_global.34(post_avg, $222binary_subscr.40, func=$194load_global.34, args=[Var(post_avg, utils.py:1193), Var($222binary_subscr.40, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $246build_slice.42 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $246build_slice.43 = call $246build_slice.42($const192.33.2, $236call.41, func=$246build_slice.42, args=(Var($const192.33.2, utils.py:1206), Var($236call.41, utils.py:1206)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $248binary_subscr.44 = getitem(value=x, index=$246build_slice.43, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $262call.45 = call $180load_attr.31($248binary_subscr.44, func=$180load_attr.31, args=[Var($248binary_subscr.44, utils.py:1206)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_add274.47 = $262call.45 + delta
DEBUG:numba.core.ssa:on stmt: $278compare_op.48 = $158binary_subscr.28 >= $binop_add274.47
DEBUG:numba.core.ssa:on stmt: $binop_iand284.49 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$144binary_subscr.25, rhs=$278compare_op.48, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[0] = $binop_iand284.49
DEBUG:numba.core.ssa:on stmt: $const298.51.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $300binary_subscr.52 = static_getitem(value=peaks, index=0, index_var=$const298.51.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool310 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $310pred = call bool310($300binary_subscr.52, func=bool310, args=(Var($300binary_subscr.52, utils.py:1208),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $310pred, 312, 324
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 312
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1924D950>
DEBUG:numba.core.ssa:on stmt: $const314.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: n = wait + $const314.1.3
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 324
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1924D950>
DEBUG:numba.core.ssa:on stmt: n.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 328
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1924D950>
DEBUG:numba.core.ssa:on stmt: $332load_attr.2 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const342.3.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $344binary_subscr.4 = static_getitem(value=$332load_attr.2, index=0, index_var=$const342.3.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $354compare_op.5 = n < $344binary_subscr.4
DEBUG:numba.core.ssa:find_def var='n' stmt=$354compare_op.5 = n < $344binary_subscr.4
DEBUG:numba.core.ssa:find_def_from_top label 328
DEBUG:numba.core.ssa:insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 328
DEBUG:numba.core.ssa:find_def_from_bottom label 312
DEBUG:numba.core.ssa:incoming_def n = wait + $const314.1.3
DEBUG:numba.core.ssa:find_def_from_bottom label 324
DEBUG:numba.core.ssa:incoming_def n.1 = const(int, 1)
DEBUG:numba.core.ssa:find_def_from_bottom label 853
DEBUG:numba.core.ssa:find_def_from_top label 853
DEBUG:numba.core.ssa:insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 853
DEBUG:numba.core.ssa:find_def_from_bottom label 554
DEBUG:numba.core.ssa:incoming_def n.2 = $binop_iadd558.2
DEBUG:numba.core.ssa:find_def_from_bottom label 786
DEBUG:numba.core.ssa:incoming_def n.3 = $binop_iadd790.2
DEBUG:numba.core.ssa:incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1220), Var(n.3, utils.py:1227)], incoming_blocks=[554, 786])
DEBUG:numba.core.ssa:replaced with: $354compare_op.5 = n.5 < $344binary_subscr.4
DEBUG:numba.core.ssa:on stmt: bool360 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $360pred = call bool360($354compare_op.5, func=bool360, args=(Var($354compare_op.5, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $360pred, 362, 852
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 362
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1924D950>
DEBUG:numba.core.ssa:on stmt: $362load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $374load_attr.2 = getattr(value=$362load_global.0, attr=max)
DEBUG:numba.core.ssa:on stmt: $386load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const398.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub404.9 = n - pre_max
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_sub404.9 = n - pre_max
DEBUG:numba.core.ssa:find_def_from_top label 362
DEBUG:numba.core.ssa:insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 362
DEBUG:numba.core.ssa:find_def_from_bottom label 328
DEBUG:numba.core.ssa:incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1209), Var(n.1, utils.py:1211), Var(n.6, utils.py:1213)], incoming_blocks=[312, 324, 853])
DEBUG:numba.core.ssa:find_def_from_bottom label 798
DEBUG:numba.core.ssa:incoming_def n.4 = $binop_iadd808.4
DEBUG:numba.core.ssa:replaced with: $binop_sub404.9 = n.7 - pre_max
DEBUG:numba.core.ssa:on stmt: $412call.10 = call $386load_global.4($const398.6.1, $binop_sub404.9, func=$386load_global.4, args=[Var($const398.6.1, utils.py:1214), Var($binop_sub404.9, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $422load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add438.15 = n + post_max
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_add438.15 = n + post_max
DEBUG:numba.core.ssa:replaced with: $binop_add438.15 = n.7 + post_max
DEBUG:numba.core.ssa:on stmt: $444load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const454.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $456binary_subscr.19 = static_getitem(value=$444load_attr.17, index=0, index_var=$const454.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $470call.20 = call $422load_global.11($binop_add438.15, $456binary_subscr.19, func=$422load_global.11, args=[Var($binop_add438.15, utils.py:1214), Var($456binary_subscr.19, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $480build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $480build_slice.22 = call $480build_slice.21($412call.10, $470call.20, func=$480build_slice.21, args=(Var($412call.10, utils.py:1214), Var($470call.20, utils.py:1214)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $482binary_subscr.23 = getitem(value=x, index=$480build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: maxn = call $374load_attr.2($482binary_subscr.23, func=$374load_attr.2, args=[Var($482binary_subscr.23, utils.py:1214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$512binary_subscr.27 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: $512binary_subscr.27 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $524compare_op.29 = $512binary_subscr.27 == maxn
DEBUG:numba.core.ssa:on stmt: peaks[n] = $524compare_op.29
DEBUG:numba.core.ssa:find_def var='n' stmt=peaks[n] = $524compare_op.29
DEBUG:numba.core.ssa:replaced with: peaks[n.7] = $524compare_op.29
DEBUG:numba.core.ssa:on stmt: $542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$542binary_subscr.34 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: $542binary_subscr.34 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool552 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $552pred = call bool552($542binary_subscr.34, func=bool552, args=(Var($542binary_subscr.34, utils.py:1219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $552pred, 566, 554
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 554
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1924D950>
DEBUG:numba.core.ssa:on stmt: $const556.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 554
DEBUG:numba.core.ssa:idom 362 from label 554
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_iadd558.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const556.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.2 = $binop_iadd558.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 566
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1924D950>
DEBUG:numba.core.ssa:on stmt: $566load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $578load_attr.2 = getattr(value=$566load_global.0, attr=mean)
DEBUG:numba.core.ssa:on stmt: $590load_global.4 = global(max: <built-in function max>)
DEBUG:numba.core.ssa:on stmt: $const602.6.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $binop_sub608.9 = n - pre_avg
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_sub608.9 = n - pre_avg
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_sub608.9 = n.7 - pre_avg
DEBUG:numba.core.ssa:on stmt: $616call.10 = call $590load_global.4($const602.6.1, $binop_sub608.9, func=$590load_global.4, args=[Var($const602.6.1, utils.py:1223), Var($binop_sub608.9, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $626load_global.11 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_add642.15 = n + post_avg
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_add642.15 = n + post_avg
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_add642.15 = n.7 + post_avg
DEBUG:numba.core.ssa:on stmt: $648load_attr.17 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const658.18.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $660binary_subscr.19 = static_getitem(value=$648load_attr.17, index=0, index_var=$const658.18.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $674call.20 = call $626load_global.11($binop_add642.15, $660binary_subscr.19, func=$626load_global.11, args=[Var($binop_add642.15, utils.py:1223), Var($660binary_subscr.19, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $684build_slice.21 = global(slice: <class 'slice'>)
DEBUG:numba.core.ssa:on stmt: $684build_slice.22 = call $684build_slice.21($616call.10, $674call.20, func=$684build_slice.21, args=(Var($616call.10, utils.py:1223), Var($674call.20, utils.py:1223)), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $686binary_subscr.23 = getitem(value=x, index=$684build_slice.22, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: avgn = call $578load_attr.2($686binary_subscr.23, func=$578load_attr.2, args=[Var($686binary_subscr.23, utils.py:1223)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$720binary_subscr.27 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $720binary_subscr.27 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$734binary_subscr.30 = getitem(value=x, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $734binary_subscr.30 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add748.33 = avgn + delta
DEBUG:numba.core.ssa:on stmt: $752compare_op.34 = $734binary_subscr.30 >= $binop_add748.33
DEBUG:numba.core.ssa:on stmt: $binop_iand758.35 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$720binary_subscr.27, rhs=$752compare_op.34, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: peaks[n] = $binop_iand758.35
DEBUG:numba.core.ssa:find_def var='n' stmt=peaks[n] = $binop_iand758.35
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: peaks[n.7] = $binop_iand758.35
DEBUG:numba.core.ssa:on stmt: $774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def var='n' stmt=$774binary_subscr.38 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $774binary_subscr.38 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: bool784 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $784pred = call bool784($774binary_subscr.38, func=bool784, args=(Var($774binary_subscr.38, utils.py:1226),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $784pred, 798, 786
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 786
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1924D950>
DEBUG:numba.core.ssa:on stmt: $const788.1.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 786
DEBUG:numba.core.ssa:idom 566 from label 786
DEBUG:numba.core.ssa:find_def_from_bottom label 566
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_iadd790.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const788.1.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.3 = $binop_iadd790.2
DEBUG:numba.core.ssa:on stmt: jump 853
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 798
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1924D950>
DEBUG:numba.core.ssa:on stmt: $const802.2.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add804.3 = wait + $const802.2.3
DEBUG:numba.core.ssa:on stmt: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 798
DEBUG:numba.core.ssa:idom 566 from label 798
DEBUG:numba.core.ssa:find_def_from_bottom label 566
DEBUG:numba.core.ssa:find_def_from_top label 566
DEBUG:numba.core.ssa:idom 362 from label 566
DEBUG:numba.core.ssa:find_def_from_bottom label 362
DEBUG:numba.core.ssa:replaced with: $binop_iadd808.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$binop_add804.3, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: n.4 = $binop_iadd808.4
DEBUG:numba.core.ssa:on stmt: $818load_attr.7 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const828.8.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $830binary_subscr.9 = static_getitem(value=$818load_attr.7, index=0, index_var=$const828.8.1, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $840compare_op.10 = n < $830binary_subscr.9
DEBUG:numba.core.ssa:find_def var='n' stmt=$840compare_op.10 = n < $830binary_subscr.9
DEBUG:numba.core.ssa:replaced with: $840compare_op.10 = n.4 < $830binary_subscr.9
DEBUG:numba.core.ssa:on stmt: bool846 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $846pred = call bool846($840compare_op.10, func=bool846, args=(Var($840compare_op.10, utils.py:1213),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $846pred, 362, 848
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 848
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1924D950>
DEBUG:numba.core.ssa:on stmt: $const848.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $850return_value.1 = cast(value=$const848.0.2)
DEBUG:numba.core.ssa:on stmt: return $850return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 852
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1924D950>
DEBUG:numba.core.ssa:on stmt: $const852.0.2 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $854return_value.1 = cast(value=$const852.0.2)
DEBUG:numba.core.ssa:on stmt: return $854return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 853
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1924D950>
DEBUG:numba.core.ssa:on stmt: jump 328
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=569)
           2	COPY_FREE_VARS(arg=2, lineno=569)
           4	RESUME(arg=0, lineno=569)
           6	LOAD_FAST(arg=0, lineno=570)
           8	LOAD_ATTR(arg=0, lineno=570)
          18	LOAD_CONST(arg=1, lineno=570)
          20	COMPARE_OP(arg=2, lineno=570)
          26	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=570)
          28	LOAD_GLOBAL(arg=3, lineno=571)
          40	LOAD_CONST(arg=2, lineno=571)
          42	PRECALL(arg=1, lineno=571)
          46	CALL(arg=1, lineno=571)
          56	RAISE_VARARGS(arg=1, lineno=571)
>         58	LOAD_GLOBAL(arg=5, lineno=574)
          70	LOAD_ATTR(arg=3, lineno=574)
          80	LOAD_FAST(arg=0, lineno=574)
          82	PRECALL(arg=1, lineno=574)
          86	CALL(arg=1, lineno=574)
          96	STORE_FAST(arg=1, lineno=574)
          98	LOAD_GLOBAL(arg=9, lineno=575)
         110	LOAD_FAST(arg=1, lineno=575)
         112	PRECALL(arg=1, lineno=575)
         116	CALL(arg=1, lineno=575)
         126	LOAD_METHOD(arg=5, lineno=575)
         148	LOAD_CONST(arg=1, lineno=575)
         150	PRECALL(arg=1, lineno=575)
         154	CALL(arg=1, lineno=575)
         164	STORE_FAST(arg=2, lineno=575)
         166	PUSH_NULL(arg=None, lineno=576)
         168	LOAD_DEREF(arg=6, lineno=576)
         170	LOAD_FAST(arg=2, lineno=576)
         172	PRECALL(arg=1, lineno=576)
         176	CALL(arg=1, lineno=576)
         186	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=576)
         188	LOAD_FAST(arg=2, lineno=577)
         190	RETURN_VALUE(arg=None, lineno=577)
>        192	LOAD_FAST(arg=1, lineno=579)
         194	GET_ITER(arg=None, lineno=579)
>        196	FOR_ITER(arg=51, lineno=579)
         198	STORE_FAST(arg=3, lineno=579)
         200	LOAD_FAST(arg=3, lineno=580)
         202	LOAD_METHOD(arg=6, lineno=580)
         224	PRECALL(arg=0, lineno=580)
         228	CALL(arg=0, lineno=580)
         238	STORE_FAST(arg=4, lineno=580)
         240	PUSH_NULL(arg=None, lineno=581)
         242	LOAD_DEREF(arg=6, lineno=581)
         244	LOAD_FAST(arg=4, lineno=581)
         246	PRECALL(arg=1, lineno=581)
         250	CALL(arg=1, lineno=581)
         260	POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=581)
         262	LOAD_FAST(arg=4, lineno=582)
         264	SWAP(arg=2, lineno=582)
         266	POP_TOP(arg=None, lineno=582)
         268	RETURN_VALUE(arg=None, lineno=582)
>        270	PUSH_NULL(arg=None, lineno=583)
         272	LOAD_DEREF(arg=5, lineno=583)
         274	LOAD_FAST(arg=4, lineno=583)
         276	LOAD_FAST(arg=2, lineno=583)
         278	PRECALL(arg=2, lineno=583)
         282	CALL(arg=2, lineno=583)
         292	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=583)
         294	LOAD_FAST(arg=4, lineno=584)
         296	STORE_FAST(arg=2, lineno=584)
>        298	JUMP_BACKWARD(arg=52, lineno=584)
>        300	LOAD_FAST(arg=2, lineno=585)
         302	RETURN_VALUE(arg=None, lineno=585)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=569)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=COPY_FREE_VARS(arg=2, lineno=569)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=RESUME(arg=0, lineno=569)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=570)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=570)
DEBUG:numba.core.byteflow:stack ['$a6.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=570)
DEBUG:numba.core.byteflow:stack ['$8load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=COMPARE_OP(arg=2, lineno=570)
DEBUG:numba.core.byteflow:stack ['$8load_attr.1', '$const18.2.1']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=570)
DEBUG:numba.core.byteflow:stack ['$20compare_op.3']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=28 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_GLOBAL(arg=3, lineno=571)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=2, lineno=571)
DEBUG:numba.core.byteflow:stack ['$null$28.1', '$28load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=PRECALL(arg=1, lineno=571)
DEBUG:numba.core.byteflow:stack ['$null$28.1', '$28load_global.0', '$const40.2.2']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=CALL(arg=1, lineno=571)
DEBUG:numba.core.byteflow:stack ['$null$28.1', '$28load_global.0', '$const40.2.2']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=571)
DEBUG:numba.core.byteflow:stack ['$46call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_GLOBAL(arg=5, lineno=574)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_ATTR(arg=3, lineno=574)
DEBUG:numba.core.byteflow:stack ['$null$58.1', '$58load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_FAST(arg=0, lineno=574)
DEBUG:numba.core.byteflow:stack ['$null$58.1', '$70load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=PRECALL(arg=1, lineno=574)
DEBUG:numba.core.byteflow:stack ['$null$58.1', '$70load_attr.2', '$a80.3']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=CALL(arg=1, lineno=574)
DEBUG:numba.core.byteflow:stack ['$null$58.1', '$70load_attr.2', '$a80.3']
DEBUG:numba.core.byteflow:dispatch pc=96, inst=STORE_FAST(arg=1, lineno=574)
DEBUG:numba.core.byteflow:stack ['$86call.4']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_GLOBAL(arg=9, lineno=575)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=LOAD_FAST(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$98.6', '$98load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=PRECALL(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$98.6', '$98load_global.5', '$it110.7']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=CALL(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$98.6', '$98load_global.5', '$it110.7']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=LOAD_METHOD(arg=5, lineno=575)
DEBUG:numba.core.byteflow:stack ['$116call.8']
DEBUG:numba.core.byteflow:dispatch pc=148, inst=LOAD_CONST(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$126.9', '$126load_method.10']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=PRECALL(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$126.9', '$126load_method.10', '$const148.11.1']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=CALL(arg=1, lineno=575)
DEBUG:numba.core.byteflow:stack ['$null$126.9', '$126load_method.10', '$const148.11.1']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=STORE_FAST(arg=2, lineno=575)
DEBUG:numba.core.byteflow:stack ['$154call.12']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=PUSH_NULL(arg=None, lineno=576)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=168, inst=LOAD_DEREF(arg=6, lineno=576)
DEBUG:numba.core.byteflow:stack ['$null$166.13']
DEBUG:numba.core.byteflow:dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=576)
DEBUG:numba.core.byteflow:stack ['$null$166.13', '$168load_deref.14']
DEBUG:numba.core.byteflow:dispatch pc=172, inst=PRECALL(arg=1, lineno=576)
DEBUG:numba.core.byteflow:stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=CALL(arg=1, lineno=576)
DEBUG:numba.core.byteflow:stack ['$null$166.13', '$168load_deref.14', '$max_value170.15']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=576)
DEBUG:numba.core.byteflow:stack ['$176call.16']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=188, stack=(), blockstack=(), npush=0), Edge(pc=192, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=188 nstack_initial=0), State(pc_initial=192 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=188 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=188, inst=LOAD_FAST(arg=2, lineno=577)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=190, inst=RETURN_VALUE(arg=None, lineno=577)
DEBUG:numba.core.byteflow:stack ['$max_value188.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=192 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=192 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_FAST(arg=1, lineno=579)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=194, inst=GET_ITER(arg=None, lineno=579)
DEBUG:numba.core.byteflow:stack ['$it192.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=196, stack=('$194get_iter.1',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=196 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi196.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=196 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=196, inst=FOR_ITER(arg=51, lineno=579)
DEBUG:numba.core.byteflow:stack ['$phi196.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=300, stack=(), blockstack=(), npush=0), Edge(pc=198, stack=('$phi196.0', '$196for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=300 nstack_initial=0), State(pc_initial=198 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=300 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=300, inst=LOAD_FAST(arg=2, lineno=585)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=302, inst=RETURN_VALUE(arg=None, lineno=585)
DEBUG:numba.core.byteflow:stack ['$max_value300.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=198 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi198.0', '$phi198.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=198 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=198, inst=STORE_FAST(arg=3, lineno=579)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$phi198.1']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=LOAD_FAST(arg=3, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0']
DEBUG:numba.core.byteflow:dispatch pc=202, inst=LOAD_METHOD(arg=6, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$view200.2']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=PRECALL(arg=0, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$202.3', '$202load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=CALL(arg=0, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$202.3', '$202load_method.4']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=STORE_FAST(arg=4, lineno=580)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$228call.5']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=PUSH_NULL(arg=None, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=LOAD_DEREF(arg=6, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$240.6']
DEBUG:numba.core.byteflow:dispatch pc=244, inst=LOAD_FAST(arg=4, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$240.6', '$242load_deref.7']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=PRECALL(arg=1, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
DEBUG:numba.core.byteflow:dispatch pc=250, inst=CALL(arg=1, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$null$240.6', '$242load_deref.7', '$v244.8']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=POP_JUMP_FORWARD_IF_FALSE(arg=4, lineno=581)
DEBUG:numba.core.byteflow:stack ['$phi198.0', '$250call.9']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=262, stack=('$phi198.0',), blockstack=(), npush=0), Edge(pc=270, stack=('$phi198.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=262 nstack_initial=1), State(pc_initial=270 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi262.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=262 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=262, inst=LOAD_FAST(arg=4, lineno=582)
DEBUG:numba.core.byteflow:stack ['$phi262.0']
DEBUG:numba.core.byteflow:dispatch pc=264, inst=SWAP(arg=2, lineno=582)
DEBUG:numba.core.byteflow:stack ['$phi262.0', '$v262.1']
DEBUG:numba.core.byteflow:dispatch pc=266, inst=POP_TOP(arg=None, lineno=582)
DEBUG:numba.core.byteflow:stack ['$v262.1', '$phi262.0']
DEBUG:numba.core.byteflow:dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=582)
DEBUG:numba.core.byteflow:stack ['$v262.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=270 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi270.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=270 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=270, inst=PUSH_NULL(arg=None, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_DEREF(arg=5, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=LOAD_FAST(arg=4, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1', '$272load_deref.2']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=LOAD_FAST(arg=2, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3']
DEBUG:numba.core.byteflow:dispatch pc=278, inst=PRECALL(arg=2, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=CALL(arg=2, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$null$270.1', '$272load_deref.2', '$v274.3', '$max_value276.4']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=583)
DEBUG:numba.core.byteflow:stack ['$phi270.0', '$282call.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=294, stack=('$phi270.0',), blockstack=(), npush=0), Edge(pc=298, stack=('$phi270.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=294 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi294.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=294 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=294, inst=LOAD_FAST(arg=4, lineno=584)
DEBUG:numba.core.byteflow:stack ['$phi294.0']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=STORE_FAST(arg=2, lineno=584)
DEBUG:numba.core.byteflow:stack ['$phi294.0', '$v294.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=298, stack=('$phi294.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=298 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi298.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=298 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=298, inst=JUMP_BACKWARD(arg=52, lineno=584)
DEBUG:numba.core.byteflow:stack ['$phi298.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=196, stack=('$phi298.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=298 nstack_initial=1), State(pc_initial=196 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=196 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=188 nstack_initial=0): set(),
             State(pc_initial=192 nstack_initial=0): set(),
             State(pc_initial=196 nstack_initial=1): {'$phi196.0'},
             State(pc_initial=198 nstack_initial=2): {'$phi198.1'},
             State(pc_initial=262 nstack_initial=1): set(),
             State(pc_initial=270 nstack_initial=1): set(),
             State(pc_initial=294 nstack_initial=1): set(),
             State(pc_initial=298 nstack_initial=1): set(),
             State(pc_initial=300 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi196.0': State(pc_initial=192 nstack_initial=0),
 '$phi198.1': State(pc_initial=196 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi298.0',
                            State(pc_initial=298 nstack_initial=1))},
             '$phi198.0': {('$phi196.0',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi270.0': {('$phi198.0',
                            State(pc_initial=198 nstack_initial=2))},
             '$phi294.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1))},
             '$phi298.0': {('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi270.0',
                            State(pc_initial=270 nstack_initial=1)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0)),
                           ('$phi294.0',
                            State(pc_initial=294 nstack_initial=1))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi196.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi198.1': {('$196for_iter.2',
                            State(pc_initial=196 nstack_initial=1))},
             '$phi262.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi270.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi294.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))},
             '$phi298.0': {('$194get_iter.1',
                            State(pc_initial=192 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi196.0': {('$194get_iter.1', State(pc_initial=192 nstack_initial=0))},
 '$phi198.1': {('$196for_iter.2', State(pc_initial=196 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=192 nstack_initial=0): {'$phi196.0': '$194get_iter.1'},
             State(pc_initial=196 nstack_initial=1): {'$phi198.1': '$196for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$a6.0'}), (8, {'item': '$a6.0', 'res': '$8load_attr.1'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.2.1'}), (20, {'lhs': '$8load_attr.1', 'rhs': '$const18.2.1', 'res': '$20compare_op.3'}), (22, {}), (24, {}), (26, {'pred': '$20compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 58: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'idx': 1, 'res': '$28load_global.0'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {'res': '$const40.2.2'}), (42, {}), (44, {}), (46, {'func': '$28load_global.0', 'args': ['$const40.2.2'], 'kw_names': None, 'res': '$46call.3'}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'exc': '$46call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'idx': 2, 'res': '$58load_global.0'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {'item': '$58load_global.0', 'res': '$70load_attr.2'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$a80.3'}), (82, {}), (84, {}), (86, {'func': '$70load_attr.2', 'args': ['$a80.3'], 'kw_names': None, 'res': '$86call.4'}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'value': '$86call.4'}), (98, {'idx': 4, 'res': '$98load_global.5'}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {'res': '$it110.7'}), (112, {}), (114, {}), (116, {'func': '$98load_global.5', 'args': ['$it110.7'], 'kw_names': None, 'res': '$116call.8'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {'item': '$116call.8', 'res': '$126load_method.10'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {}), (146, {}), (148, {'res': '$const148.11.1'}), (150, {}), (152, {}), (154, {'func': '$126load_method.10', 'args': ['$const148.11.1'], 'kw_names': None, 'res': '$154call.12'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {'value': '$154call.12'}), (166, {}), (168, {'res': '$168load_deref.14'}), (170, {'res': '$max_value170.15'}), (172, {}), (174, {}), (176, {'func': '$168load_deref.14', 'args': ['$max_value170.15'], 'kw_names': None, 'res': '$176call.16'}), (178, {}), (180, {}), (182, {}), (184, {}), (186, {'pred': '$176call.16'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={188: (), 192: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=188 nstack_initial=0):
AdaptBlockInfo(insts=((188, {'res': '$max_value188.0'}), (190, {'retval': '$max_value188.0', 'castval': '$190return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=192 nstack_initial=0):
AdaptBlockInfo(insts=((192, {'res': '$it192.0'}), (194, {'value': '$it192.0', 'res': '$194get_iter.1'})), outgoing_phis={'$phi196.0': '$194get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$194get_iter.1',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=196 nstack_initial=1):
AdaptBlockInfo(insts=((196, {'iterator': '$phi196.0', 'pair': '$196for_iter.1', 'indval': '$196for_iter.2', 'pred': '$196for_iter.3'}),), outgoing_phis={'$phi198.1': '$196for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={300: (), 198: ('$phi196.0', '$196for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=198 nstack_initial=2):
AdaptBlockInfo(insts=((198, {'value': '$phi198.1'}), (200, {'res': '$view200.2'}), (202, {'item': '$view200.2', 'res': '$202load_method.4'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {}), (228, {'func': '$202load_method.4', 'args': [], 'kw_names': None, 'res': '$228call.5'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'value': '$228call.5'}), (240, {}), (242, {'res': '$242load_deref.7'}), (244, {'res': '$v244.8'}), (246, {}), (248, {}), (250, {'func': '$242load_deref.7', 'args': ['$v244.8'], 'kw_names': None, 'res': '$250call.9'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'pred': '$250call.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={262: ('$phi198.0',), 270: ('$phi198.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=262 nstack_initial=1):
AdaptBlockInfo(insts=((262, {'res': '$v262.1'}), (268, {'retval': '$v262.1', 'castval': '$268return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=270 nstack_initial=1):
AdaptBlockInfo(insts=((270, {}), (272, {'res': '$272load_deref.2'}), (274, {'res': '$v274.3'}), (276, {'res': '$max_value276.4'}), (278, {}), (280, {}), (282, {'func': '$272load_deref.2', 'args': ['$v274.3', '$max_value276.4'], 'kw_names': None, 'res': '$282call.5'}), (284, {}), (286, {}), (288, {}), (290, {}), (292, {'pred': '$282call.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={294: ('$phi270.0',), 298: ('$phi270.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=294 nstack_initial=1):
AdaptBlockInfo(insts=((294, {'res': '$v294.1'}), (296, {'value': '$v294.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={298: ('$phi294.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=298 nstack_initial=1):
AdaptBlockInfo(insts=((298, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={196: ('$phi298.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=300 nstack_initial=0):
AdaptBlockInfo(insts=((300, {'res': '$max_value300.0'}), (302, {'retval': '$max_value300.0', 'castval': '$302return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    $8load_attr.1 = getattr(value=a, attr=size) ['$8load_attr.1', 'a']
    $const18.2.1 = const(int, 0)             ['$const18.2.1']
    $20compare_op.3 = $8load_attr.1 == $const18.2.1 ['$20compare_op.3', '$8load_attr.1', '$const18.2.1']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.3', '$26pred', 'bool26']
    branch $26pred, 28, 58                   ['$26pred']
label 28:
    $28load_global.0 = global(ValueError: <class 'ValueError'>) ['$28load_global.0']
    $const40.2.2 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const40.2.2']
    $46call.3 = call $28load_global.0($const40.2.2, func=$28load_global.0, args=[Var($const40.2.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$46call.3', '$const40.2.2']
    raise $46call.3                          ['$46call.3']
label 58:
    $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$58load_global.0']
    $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer) ['$58load_global.0', '$70load_attr.2']
    it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None) ['$70load_attr.2', 'a', 'it']
    $98load_global.5 = global(next: <built-in function next>) ['$98load_global.5']
    $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None) ['$116call.8', '$98load_global.5', 'it']
    $126load_method.10 = getattr(value=$116call.8, attr=take) ['$116call.8', '$126load_method.10']
    $const148.11.1 = const(int, 0)           ['$const148.11.1']
    max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$126load_method.10', '$const148.11.1', 'max_value']
    $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x0000019A15937EC0>) ['$168load_deref.14']
    $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$168load_deref.14', '$176call.16', 'max_value']
    bool186 = global(bool: <class 'bool'>)   ['bool186']
    $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None) ['$176call.16', '$186pred', 'bool186']
    branch $186pred, 188, 192                ['$186pred']
label 188:
    $190return_value.1 = cast(value=max_value) ['$190return_value.1', 'max_value']
    return $190return_value.1                ['$190return_value.1']
label 192:
    $194get_iter.1 = getiter(value=it)       ['$194get_iter.1', 'it']
    $phi196.0 = $194get_iter.1               ['$194get_iter.1', '$phi196.0']
    jump 196                                 []
label 196:
    $196for_iter.1 = iternext(value=$phi196.0) ['$196for_iter.1', '$phi196.0']
    $196for_iter.2 = pair_first(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.2']
    $196for_iter.3 = pair_second(value=$196for_iter.1) ['$196for_iter.1', '$196for_iter.3']
    $phi198.1 = $196for_iter.2               ['$196for_iter.2', '$phi198.1']
    branch $196for_iter.3, 198, 300          ['$196for_iter.3']
label 198:
    view = $phi198.1                         ['$phi198.1', 'view']
    $202load_method.4 = getattr(value=view, attr=item) ['$202load_method.4', 'view']
    v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$202load_method.4', 'v']
    $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x0000019A15937EC0>) ['$242load_deref.7']
    $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None) ['$242load_deref.7', '$250call.9', 'v']
    bool260 = global(bool: <class 'bool'>)   ['bool260']
    $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None) ['$250call.9', '$260pred', 'bool260']
    branch $260pred, 262, 270                ['$260pred']
label 262:
    $268return_value.2 = cast(value=v)       ['$268return_value.2', 'v']
    return $268return_value.2                ['$268return_value.2']
label 270:
    $272load_deref.2 = freevar(comparator: <function max_comparator at 0x0000019A159372E0>) ['$272load_deref.2']
    $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$272load_deref.2', '$282call.5', 'max_value', 'v']
    bool292 = global(bool: <class 'bool'>)   ['bool292']
    $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None) ['$282call.5', '$292pred', 'bool292']
    branch $292pred, 294, 298                ['$292pred']
label 294:
    max_value = v                            ['max_value', 'v']
    jump 298                                 []
label 298:
    jump 196                                 []
label 300:
    $302return_value.1 = cast(value=max_value) ['$302return_value.1', 'max_value']
    return $302return_value.1                ['$302return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A191B3CD0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 58
DEBUG:numba.core.ssa:==== SSA block analysis pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A191B3CD0>
DEBUG:numba.core.ssa:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const40.2.2 = const(str, zero-size array to reduction operation maximum which has no identity)
DEBUG:numba.core.ssa:on stmt: $46call.3 = call $28load_global.0($const40.2.2, func=$28load_global.0, args=[Var($const40.2.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A191B3CD0>
DEBUG:numba.core.ssa:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
DEBUG:numba.core.ssa:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.5 = global(next: <built-in function next>)
DEBUG:numba.core.ssa:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
DEBUG:numba.core.ssa:on stmt: $const148.11.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x0000019A15937EC0>)
DEBUG:numba.core.ssa:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 192
DEBUG:numba.core.ssa:==== SSA block analysis pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A191B3CD0>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:==== SSA block analysis pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A191B3CD0>
DEBUG:numba.core.ssa:on stmt: $194get_iter.1 = getiter(value=it)
DEBUG:numba.core.ssa:on stmt: $phi196.0 = $194get_iter.1
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block analysis pass on 196
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A191B3CD0>
DEBUG:numba.core.ssa:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
DEBUG:numba.core.ssa:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi198.1 = $196for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $196for_iter.3, 198, 300
DEBUG:numba.core.ssa:==== SSA block analysis pass on 198
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A191B3CD0>
DEBUG:numba.core.ssa:on stmt: view = $phi198.1
DEBUG:numba.core.ssa:on stmt: $202load_method.4 = getattr(value=view, attr=item)
DEBUG:numba.core.ssa:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x0000019A15937EC0>)
DEBUG:numba.core.ssa:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool260 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $260pred, 262, 270
DEBUG:numba.core.ssa:==== SSA block analysis pass on 262
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A191B3CD0>
DEBUG:numba.core.ssa:on stmt: $268return_value.2 = cast(value=v)
DEBUG:numba.core.ssa:on stmt: return $268return_value.2
DEBUG:numba.core.ssa:==== SSA block analysis pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A191B3CD0>
DEBUG:numba.core.ssa:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x0000019A159372E0>)
DEBUG:numba.core.ssa:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool292 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $292pred, 294, 298
DEBUG:numba.core.ssa:==== SSA block analysis pass on 294
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A191B3CD0>
DEBUG:numba.core.ssa:on stmt: max_value = v
DEBUG:numba.core.ssa:on stmt: jump 298
DEBUG:numba.core.ssa:==== SSA block analysis pass on 298
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A191B3CD0>
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block analysis pass on 300
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A191B3CD0>
DEBUG:numba.core.ssa:on stmt: $302return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $302return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$116call.8': [(<numba.core.ir.Assign object at 0x0000019A18E30510>,
                             58)],
             '$126load_method.10': [(<numba.core.ir.Assign object at 0x0000019A18E30110>,
                                     58)],
             '$168load_deref.14': [(<numba.core.ir.Assign object at 0x0000019A18E33D10>,
                                    58)],
             '$176call.16': [(<numba.core.ir.Assign object at 0x0000019A18E31090>,
                              58)],
             '$186pred': [(<numba.core.ir.Assign object at 0x0000019A18E33FD0>,
                           58)],
             '$190return_value.1': [(<numba.core.ir.Assign object at 0x0000019A18DCF1D0>,
                                     188)],
             '$194get_iter.1': [(<numba.core.ir.Assign object at 0x0000019A18DCF490>,
                                 192)],
             '$196for_iter.1': [(<numba.core.ir.Assign object at 0x0000019A18DCF390>,
                                 196)],
             '$196for_iter.2': [(<numba.core.ir.Assign object at 0x0000019A18DCF410>,
                                 196)],
             '$196for_iter.3': [(<numba.core.ir.Assign object at 0x0000019A18DCF250>,
                                 196)],
             '$202load_method.4': [(<numba.core.ir.Assign object at 0x0000019A18DCD850>,
                                    198)],
             '$20compare_op.3': [(<numba.core.ir.Assign object at 0x0000019A191B2090>,
                                  0)],
             '$242load_deref.7': [(<numba.core.ir.Assign object at 0x0000019A18DCD610>,
                                   198)],
             '$250call.9': [(<numba.core.ir.Assign object at 0x0000019A18DCC490>,
                             198)],
             '$260pred': [(<numba.core.ir.Assign object at 0x0000019A18DCFD10>,
                           198)],
             '$268return_value.2': [(<numba.core.ir.Assign object at 0x0000019A18DCC6D0>,
                                     262)],
             '$26pred': [(<numba.core.ir.Assign object at 0x0000019A191B0E50>,
                          0)],
             '$272load_deref.2': [(<numba.core.ir.Assign object at 0x0000019A18DCC990>,
                                   270)],
             '$282call.5': [(<numba.core.ir.Assign object at 0x0000019A18DCCF50>,
                             270)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x0000019A191B2410>,
                                   28)],
             '$292pred': [(<numba.core.ir.Assign object at 0x0000019A18DCD390>,
                           270)],
             '$302return_value.1': [(<numba.core.ir.Assign object at 0x0000019A18DCED10>,
                                     300)],
             '$46call.3': [(<numba.core.ir.Assign object at 0x0000019A18E33010>,
                            28)],
             '$58load_global.0': [(<numba.core.ir.Assign object at 0x0000019A18E30390>,
                                   58)],
             '$70load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A18E32DD0>,
                                 58)],
             '$8load_attr.1': [(<numba.core.ir.Assign object at 0x0000019A191F5310>,
                                0)],
             '$98load_global.5': [(<numba.core.ir.Assign object at 0x0000019A18E30E90>,
                                   58)],
             '$const148.11.1': [(<numba.core.ir.Assign object at 0x0000019A18E30690>,
                                 58)],
             '$const18.2.1': [(<numba.core.ir.Assign object at 0x0000019A191B1E90>,
                               0)],
             '$const40.2.2': [(<numba.core.ir.Assign object at 0x0000019A191B0510>,
                               28)],
             '$phi196.0': [(<numba.core.ir.Assign object at 0x0000019A18DCEAD0>,
                            192)],
             '$phi198.1': [(<numba.core.ir.Assign object at 0x0000019A18DCF150>,
                            196)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A1920EDD0>, 0)],
             'bool186': [(<numba.core.ir.Assign object at 0x0000019A18E30410>,
                          58)],
             'bool26': [(<numba.core.ir.Assign object at 0x0000019A191B2990>,
                         0)],
             'bool260': [(<numba.core.ir.Assign object at 0x0000019A18DCF990>,
                          198)],
             'bool292': [(<numba.core.ir.Assign object at 0x0000019A18DCC3D0>,
                          270)],
             'it': [(<numba.core.ir.Assign object at 0x0000019A18E30D90>, 58)],
             'max_value': [(<numba.core.ir.Assign object at 0x0000019A18E319D0>,
                            58),
                           (<numba.core.ir.Assign object at 0x0000019A18DCE350>,
                            294)],
             'v': [(<numba.core.ir.Assign object at 0x0000019A18DCDB90>, 198)],
             'view': [(<numba.core.ir.Assign object at 0x0000019A18DCED90>,
                       198)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A191B3CD0>
DEBUG:numba.core.ssa:Fix SSA violator on var max_value
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A191F7050>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A191F7050>
DEBUG:numba.core.ssa:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const40.2.2 = const(str, zero-size array to reduction operation maximum which has no identity)
DEBUG:numba.core.ssa:on stmt: $46call.3 = call $28load_global.0($const40.2.2, func=$28load_global.0, args=[Var($const40.2.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A191F7050>
DEBUG:numba.core.ssa:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
DEBUG:numba.core.ssa:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.5 = global(next: <built-in function next>)
DEBUG:numba.core.ssa:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
DEBUG:numba.core.ssa:on stmt: $const148.11.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:first assign: max_value
DEBUG:numba.core.ssa:replaced with: max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x0000019A15937EC0>)
DEBUG:numba.core.ssa:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A191F7050>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A191F7050>
DEBUG:numba.core.ssa:on stmt: $194get_iter.1 = getiter(value=it)
DEBUG:numba.core.ssa:on stmt: $phi196.0 = $194get_iter.1
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 196
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A191F7050>
DEBUG:numba.core.ssa:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
DEBUG:numba.core.ssa:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi198.1 = $196for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $196for_iter.3, 198, 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 198
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A191F7050>
DEBUG:numba.core.ssa:on stmt: view = $phi198.1
DEBUG:numba.core.ssa:on stmt: $202load_method.4 = getattr(value=view, attr=item)
DEBUG:numba.core.ssa:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x0000019A15937EC0>)
DEBUG:numba.core.ssa:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool260 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $260pred, 262, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 262
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A191F7050>
DEBUG:numba.core.ssa:on stmt: $268return_value.2 = cast(value=v)
DEBUG:numba.core.ssa:on stmt: return $268return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A191F7050>
DEBUG:numba.core.ssa:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x0000019A159372E0>)
DEBUG:numba.core.ssa:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool292 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $292pred, 294, 298
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 294
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A191F7050>
DEBUG:numba.core.ssa:on stmt: max_value = v
DEBUG:numba.core.ssa:replaced with: max_value.1 = v
DEBUG:numba.core.ssa:on stmt: jump 298
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 298
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A191F7050>
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 300
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A191F7050>
DEBUG:numba.core.ssa:on stmt: $302return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:on stmt: return $302return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {58: [<numba.core.ir.Assign object at 0x0000019A191F7D90>],
             294: [<numba.core.ir.Assign object at 0x0000019A191F6510>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1920D910>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: $8load_attr.1 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.2.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $20compare_op.3 = $8load_attr.1 == $const18.2.1
DEBUG:numba.core.ssa:on stmt: bool26 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $26pred = call bool26($20compare_op.3, func=bool26, args=(Var($20compare_op.3, old_arraymath.py:570),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $26pred, 28, 58
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 28
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1920D910>
DEBUG:numba.core.ssa:on stmt: $28load_global.0 = global(ValueError: <class 'ValueError'>)
DEBUG:numba.core.ssa:on stmt: $const40.2.2 = const(str, zero-size array to reduction operation maximum which has no identity)
DEBUG:numba.core.ssa:on stmt: $46call.3 = call $28load_global.0($const40.2.2, func=$28load_global.0, args=[Var($const40.2.2, old_arraymath.py:571)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 58
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1920D910>
DEBUG:numba.core.ssa:on stmt: $58load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $70load_attr.2 = getattr(value=$58load_global.0, attr=nditer)
DEBUG:numba.core.ssa:on stmt: it = call $70load_attr.2(a, func=$70load_attr.2, args=[Var(a, old_arraymath.py:569)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $98load_global.5 = global(next: <built-in function next>)
DEBUG:numba.core.ssa:on stmt: $116call.8 = call $98load_global.5(it, func=$98load_global.5, args=[Var(it, old_arraymath.py:574)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126load_method.10 = getattr(value=$116call.8, attr=take)
DEBUG:numba.core.ssa:on stmt: $const148.11.1 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $168load_deref.14 = freevar(pre_return_func: <function return_false at 0x0000019A15937EC0>)
DEBUG:numba.core.ssa:on stmt: $176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$176call.16 = call $168load_deref.14(max_value, func=$168load_deref.14, args=[Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool186 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $186pred = call bool186($176call.16, func=bool186, args=(Var($176call.16, old_arraymath.py:576),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $186pred, 188, 192
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 188
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1920D910>
DEBUG:numba.core.ssa:on stmt: $190return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$190return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def_from_top label 188
DEBUG:numba.core.ssa:idom 58 from label 188
DEBUG:numba.core.ssa:find_def_from_bottom label 58
DEBUG:numba.core.ssa:on stmt: return $190return_value.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 192
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1920D910>
DEBUG:numba.core.ssa:on stmt: $194get_iter.1 = getiter(value=it)
DEBUG:numba.core.ssa:on stmt: $phi196.0 = $194get_iter.1
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 196
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1920D910>
DEBUG:numba.core.ssa:on stmt: $196for_iter.1 = iternext(value=$phi196.0)
DEBUG:numba.core.ssa:on stmt: $196for_iter.2 = pair_first(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $196for_iter.3 = pair_second(value=$196for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi198.1 = $196for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $196for_iter.3, 198, 300
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 198
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1920D910>
DEBUG:numba.core.ssa:on stmt: view = $phi198.1
DEBUG:numba.core.ssa:on stmt: $202load_method.4 = getattr(value=view, attr=item)
DEBUG:numba.core.ssa:on stmt: v = call $202load_method.4(func=$202load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $242load_deref.7 = freevar(pre_return_func: <function return_false at 0x0000019A15937EC0>)
DEBUG:numba.core.ssa:on stmt: $250call.9 = call $242load_deref.7(v, func=$242load_deref.7, args=[Var(v, old_arraymath.py:580)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool260 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $260pred = call bool260($250call.9, func=bool260, args=(Var($250call.9, old_arraymath.py:581),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $260pred, 262, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 262
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1920D910>
DEBUG:numba.core.ssa:on stmt: $268return_value.2 = cast(value=v)
DEBUG:numba.core.ssa:on stmt: return $268return_value.2
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1920D910>
DEBUG:numba.core.ssa:on stmt: $272load_deref.2 = freevar(comparator: <function max_comparator at 0x0000019A159372E0>)
DEBUG:numba.core.ssa:on stmt: $282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$282call.5 = call $272load_deref.2(v, max_value, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 198 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 198
DEBUG:numba.core.ssa:find_def_from_top label 198
DEBUG:numba.core.ssa:idom 196 from label 198
DEBUG:numba.core.ssa:find_def_from_bottom label 196
DEBUG:numba.core.ssa:find_def_from_top label 196
DEBUG:numba.core.ssa:insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 196
DEBUG:numba.core.ssa:find_def_from_bottom label 192
DEBUG:numba.core.ssa:find_def_from_top label 192
DEBUG:numba.core.ssa:idom 58 from label 192
DEBUG:numba.core.ssa:find_def_from_bottom label 58
DEBUG:numba.core.ssa:incoming_def max_value = call $126load_method.10($const148.11.1, func=$126load_method.10, args=[Var($const148.11.1, old_arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_bottom label 298
DEBUG:numba.core.ssa:find_def_from_top label 298
DEBUG:numba.core.ssa:insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 298
DEBUG:numba.core.ssa:find_def_from_bottom label 294
DEBUG:numba.core.ssa:incoming_def max_value.1 = v
DEBUG:numba.core.ssa:find_def_from_bottom label 270
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 198 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 198
DEBUG:numba.core.ssa:find_def_from_top label 198
DEBUG:numba.core.ssa:idom 196 from label 198
DEBUG:numba.core.ssa:find_def_from_bottom label 196
DEBUG:numba.core.ssa:incoming_def max_value.2 = phi(incoming_values=[Var(max_value, old_arraymath.py:575)], incoming_blocks=[192])
DEBUG:numba.core.ssa:incoming_def max_value.3 = phi(incoming_values=[Var(max_value.1, old_arraymath.py:584), Var(max_value.2, old_arraymath.py:583)], incoming_blocks=[294, 270])
DEBUG:numba.core.ssa:replaced with: $282call.5 = call $272load_deref.2(v, max_value.2, func=$272load_deref.2, args=[Var(v, old_arraymath.py:580), Var(max_value.2, old_arraymath.py:583)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: bool292 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $292pred = call bool292($282call.5, func=bool292, args=(Var($282call.5, old_arraymath.py:583),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $292pred, 294, 298
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 294
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1920D910>
DEBUG:numba.core.ssa:on stmt: max_value.1 = v
DEBUG:numba.core.ssa:on stmt: jump 298
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 298
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1920D910>
DEBUG:numba.core.ssa:on stmt: jump 196
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 300
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A1920D910>
DEBUG:numba.core.ssa:on stmt: $302return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def var='max_value' stmt=$302return_value.1 = cast(value=max_value)
DEBUG:numba.core.ssa:find_def_from_top label 300
DEBUG:numba.core.ssa:idom 196 from label 300
DEBUG:numba.core.ssa:find_def_from_bottom label 196
DEBUG:numba.core.ssa:replaced with: $302return_value.1 = cast(value=max_value.2)
DEBUG:numba.core.ssa:on stmt: return $302return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4793)
           2	RESUME(arg=0, lineno=4793)
           4	LOAD_FAST(arg=1, lineno=4794)
           6	LOAD_FAST(arg=0, lineno=4794)
           8	LOAD_ATTR(arg=0, lineno=4794)
          18	LOAD_CONST(arg=1, lineno=4794)
          20	BINARY_OP(arg=10, lineno=4794)
          24	COMPARE_OP(arg=4, lineno=4794)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4794)
          32	LOAD_FAST(arg=1, lineno=4794)
          34	LOAD_FAST(arg=0, lineno=4794)
          36	LOAD_ATTR(arg=0, lineno=4794)
          46	UNARY_NEGATIVE(arg=None, lineno=4794)
          48	COMPARE_OP(arg=0, lineno=4794)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4794)
>         56	LOAD_GLOBAL(arg=3, lineno=4795)
          68	LOAD_CONST(arg=2, lineno=4795)
          70	PRECALL(arg=1, lineno=4795)
          74	CALL(arg=1, lineno=4795)
          84	RAISE_VARARGS(arg=1, lineno=4795)
>         86	LOAD_FAST(arg=0, lineno=4796)
          88	LOAD_METHOD(arg=2, lineno=4796)
         110	PRECALL(arg=0, lineno=4796)
         114	CALL(arg=0, lineno=4796)
         124	LOAD_FAST(arg=1, lineno=4796)
         126	BINARY_SUBSCR(arg=None, lineno=4796)
         136	RETURN_VALUE(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4793)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=4793)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$a6.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$8load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$8load_attr.2', '$const18.3.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$binop_sub20.4']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$24compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$a34.1']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$36load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$46unary_negative.3']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$48compare_op.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=56 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4795)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=PRECALL(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0', '$const68.2.2']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=CALL(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0', '$const68.2.2']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$74call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=86 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$a86.0']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=PRECALL(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$null$88.1', '$88load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=CALL(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$null$88.1', '$88load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$114call.3']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$114call.3', '$indices124.4']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$126binary_subscr.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3.1'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3.1', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    axis = arg(2, name=axis)                 ['axis']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3.1 = const(int, 1)             ['$const18.3.1']
    $binop_sub20.4 = $8load_attr.2 - $const18.3.1 ['$8load_attr.2', '$binop_sub20.4', '$const18.3.1']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2.2 = const(str, Index out of bounds) ['$const68.2.2']
    $74call.3 = call $56load_global.0($const68.2.2, func=$56load_global.0, args=[Var($const68.2.2, arrayobj.py:4795)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B16ED0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: indices = arg(1, name=indices)
DEBUG:numba.core.ssa:on stmt: axis = arg(2, name=axis)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3.1
DEBUG:numba.core.ssa:on stmt: $24compare_op.5 = indices > $binop_sub20.4
DEBUG:numba.core.ssa:on stmt: bool30 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $30pred, 56, 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B16ED0>
DEBUG:numba.core.ssa:on stmt: $36load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
DEBUG:numba.core.ssa:on stmt: $48compare_op.4 = indices < $46unary_negative.3
DEBUG:numba.core.ssa:on stmt: bool54 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $54pred, 56, 86
DEBUG:numba.core.ssa:==== SSA block analysis pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B16ED0>
DEBUG:numba.core.ssa:on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
DEBUG:numba.core.ssa:on stmt: $const68.2.2 = const(str, Index out of bounds)
DEBUG:numba.core.ssa:on stmt: $74call.3 = call $56load_global.0($const68.2.2, func=$56load_global.0, args=[Var($const68.2.2, arrayobj.py:4795)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17B16ED0>
DEBUG:numba.core.ssa:on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
DEBUG:numba.core.ssa:on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
DEBUG:numba.core.ssa:on stmt: return $136return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x0000019A18D96090>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000019A17B14050>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x0000019A17B14210>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x0000019A18D975D0>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x0000019A18D96B90>,
                          0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A18D95B50>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x0000019A18D96790>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x0000019A18D96850>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x0000019A18D94950>,
                          32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x0000019A18D97610>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x0000019A18D94250>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x0000019A18D97BD0>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A18D95FD0>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x0000019A18D96F50>,
                                 0)],
             '$const18.3.1': [(<numba.core.ir.Assign object at 0x0000019A18D97A50>,
                               0)],
             '$const68.2.2': [(<numba.core.ir.Assign object at 0x0000019A18D94D10>,
                               56)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A191B2150>, 0)],
             'axis': [(<numba.core.ir.Assign object at 0x0000019A18DCE110>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x0000019A18D953D0>,
                         0)],
             'bool54': [(<numba.core.ir.Assign object at 0x0000019A18D94890>,
                         32)],
             'indices': [(<numba.core.ir.Assign object at 0x0000019A1923AE50>,
                          0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A18D960D0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2302)
           2	RESUME(arg=0, lineno=2302)
           4	LOAD_FAST(arg=0, lineno=2304)
           6	LOAD_METHOD(arg=0, lineno=2304)
          28	LOAD_FAST(arg=0, lineno=2304)
          30	LOAD_ATTR(arg=1, lineno=2304)
          40	PRECALL(arg=1, lineno=2304)
          44	CALL(arg=1, lineno=2304)
          54	RETURN_VALUE(arg=None, lineno=2304)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2302)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=2302)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2304)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_METHOD(arg=0, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$ary4.0']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=0, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_ATTR(arg=1, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2', '$ary28.3']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=PRECALL(arg=1, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=CALL(arg=1, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$null$6.1', '$6load_method.2', '$30load_attr.4']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=2304)
DEBUG:numba.core.byteflow:stack ['$44call.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$ary4.0'}), (6, {'item': '$ary4.0', 'res': '$6load_method.2'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {}), (28, {'res': '$ary28.3'}), (30, {'item': '$ary28.3', 'res': '$30load_attr.4'}), (32, {}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {}), (44, {'func': '$6load_method.2', 'args': ['$30load_attr.4'], 'kw_names': None, 'res': '$44call.5'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {'retval': '$44call.5', 'castval': '$54return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    ary = arg(0, name=ary)                   ['ary']
    $6load_method.2 = getattr(value=ary, attr=reshape) ['$6load_method.2', 'ary']
    $30load_attr.4 = getattr(value=ary, attr=size) ['$30load_attr.4', 'ary']
    $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2304)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_attr.4', '$44call.5', '$6load_method.2']
    $54return_value.6 = cast(value=$44call.5) ['$44call.5', '$54return_value.6']
    return $54return_value.6                 ['$54return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1919E3D0>
DEBUG:numba.core.ssa:on stmt: ary = arg(0, name=ary)
DEBUG:numba.core.ssa:on stmt: $6load_method.2 = getattr(value=ary, attr=reshape)
DEBUG:numba.core.ssa:on stmt: $30load_attr.4 = getattr(value=ary, attr=size)
DEBUG:numba.core.ssa:on stmt: $44call.5 = call $6load_method.2($30load_attr.4, func=$6load_method.2, args=[Var($30load_attr.4, arrayobj.py:2304)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $54return_value.6 = cast(value=$44call.5)
DEBUG:numba.core.ssa:on stmt: return $54return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$30load_attr.4': [(<numba.core.ir.Assign object at 0x0000019A19170450>,
                                 0)],
             '$44call.5': [(<numba.core.ir.Assign object at 0x0000019A19170110>,
                            0)],
             '$54return_value.6': [(<numba.core.ir.Assign object at 0x0000019A19170690>,
                                    0)],
             '$6load_method.2': [(<numba.core.ir.Assign object at 0x0000019A19172850>,
                                  0)],
             'ary': [(<numba.core.ir.Assign object at 0x0000019A18D69E90>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A1919E3D0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=485)
           2	RESUME(arg=0, lineno=485)
           4	LOAD_CONST(arg=1, lineno=487)
           6	RETURN_VALUE(arg=None, lineno=487)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=485)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=485)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=487)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=RETURN_VALUE(arg=None, lineno=487)
DEBUG:numba.core.byteflow:stack ['$const4.0.1']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$const4.0.1'}), (6, {'retval': '$const4.0.1', 'castval': '$6return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    $const4.0.1 = const(bool, False)         ['$const4.0.1']
    $6return_value.1 = cast(value=$const4.0.1) ['$6return_value.1', '$const4.0.1']
    return $6return_value.1                  ['$6return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D3EE50>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: $const4.0.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: $6return_value.1 = cast(value=$const4.0.1)
DEBUG:numba.core.ssa:on stmt: return $6return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$6return_value.1': [(<numba.core.ir.Assign object at 0x0000019A17D3EFD0>,
                                   0)],
             '$const4.0.1': [(<numba.core.ir.Assign object at 0x0000019A17D3DE50>,
                              0)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A17D3C890>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17D3EE50>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=480)
           2	RESUME(arg=0, lineno=480)
           4	LOAD_FAST(arg=0, lineno=482)
           6	LOAD_FAST(arg=1, lineno=482)
           8	COMPARE_OP(arg=4, lineno=482)
          14	RETURN_VALUE(arg=None, lineno=482)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=480)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=480)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=482)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=482)
DEBUG:numba.core.byteflow:stack ['$a4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=COMPARE_OP(arg=4, lineno=482)
DEBUG:numba.core.byteflow:stack ['$a4.0', '$min_val6.1']
DEBUG:numba.core.byteflow:dispatch pc=14, inst=RETURN_VALUE(arg=None, lineno=482)
DEBUG:numba.core.byteflow:stack ['$8compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$a4.0'}), (6, {'res': '$min_val6.1'}), (8, {'lhs': '$a4.0', 'rhs': '$min_val6.1', 'res': '$8compare_op.2'}), (10, {}), (12, {}), (14, {'retval': '$8compare_op.2', 'castval': '$14return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $8compare_op.2 = a > min_val             ['$8compare_op.2', 'a', 'min_val']
    $14return_value.3 = cast(value=$8compare_op.2) ['$14return_value.3', '$8compare_op.2']
    return $14return_value.3                 ['$14return_value.3']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1919BDD0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: min_val = arg(1, name=min_val)
DEBUG:numba.core.ssa:on stmt: $8compare_op.2 = a > min_val
DEBUG:numba.core.ssa:on stmt: $14return_value.3 = cast(value=$8compare_op.2)
DEBUG:numba.core.ssa:on stmt: return $14return_value.3
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$14return_value.3': [(<numba.core.ir.Assign object at 0x0000019A19198DD0>,
                                    0)],
             '$8compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A19198490>,
                                 0)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A19199690>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x0000019A19199410>,
                          0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A1919BDD0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=4793)
           2	RESUME(arg=0, lineno=4793)
           4	LOAD_FAST(arg=1, lineno=4794)
           6	LOAD_FAST(arg=0, lineno=4794)
           8	LOAD_ATTR(arg=0, lineno=4794)
          18	LOAD_CONST(arg=1, lineno=4794)
          20	BINARY_OP(arg=10, lineno=4794)
          24	COMPARE_OP(arg=4, lineno=4794)
          30	POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4794)
          32	LOAD_FAST(arg=1, lineno=4794)
          34	LOAD_FAST(arg=0, lineno=4794)
          36	LOAD_ATTR(arg=0, lineno=4794)
          46	UNARY_NEGATIVE(arg=None, lineno=4794)
          48	COMPARE_OP(arg=0, lineno=4794)
          54	POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4794)
>         56	LOAD_GLOBAL(arg=3, lineno=4795)
          68	LOAD_CONST(arg=2, lineno=4795)
          70	PRECALL(arg=1, lineno=4795)
          74	CALL(arg=1, lineno=4795)
          84	RAISE_VARARGS(arg=1, lineno=4795)
>         86	LOAD_FAST(arg=0, lineno=4796)
          88	LOAD_METHOD(arg=2, lineno=4796)
         110	PRECALL(arg=0, lineno=4796)
         114	CALL(arg=0, lineno=4796)
         124	LOAD_FAST(arg=1, lineno=4796)
         126	BINARY_SUBSCR(arg=None, lineno=4796)
         136	RETURN_VALUE(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=4793)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=4793)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_ATTR(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$a6.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$8load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_OP(arg=10, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$8load_attr.2', '$const18.3.1']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=COMPARE_OP(arg=4, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices4.0', '$binop_sub20.4']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=POP_JUMP_FORWARD_IF_TRUE(arg=12, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$24compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=32, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=32 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=32 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=4794)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_FAST(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=LOAD_ATTR(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$a34.1']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=UNARY_NEGATIVE(arg=None, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$36load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=COMPARE_OP(arg=0, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$indices32.0', '$46unary_negative.3']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=POP_JUMP_FORWARD_IF_FALSE(arg=15, lineno=4794)
DEBUG:numba.core.byteflow:stack ['$48compare_op.4']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=56, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=56 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_GLOBAL(arg=3, lineno=4795)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=PRECALL(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0', '$const68.2.2']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=CALL(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$null$56.1', '$56load_global.0', '$const68.2.2']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=RAISE_VARARGS(arg=1, lineno=4795)
DEBUG:numba.core.byteflow:stack ['$74call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=56 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=86 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=86 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=86, inst=LOAD_FAST(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=88, inst=LOAD_METHOD(arg=2, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$a86.0']
DEBUG:numba.core.byteflow:dispatch pc=110, inst=PRECALL(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$null$88.1', '$88load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=114, inst=CALL(arg=0, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$null$88.1', '$88load_method.2']
DEBUG:numba.core.byteflow:dispatch pc=124, inst=LOAD_FAST(arg=1, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$114call.3']
DEBUG:numba.core.byteflow:dispatch pc=126, inst=BINARY_SUBSCR(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$114call.3', '$indices124.4']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=RETURN_VALUE(arg=None, lineno=4796)
DEBUG:numba.core.byteflow:stack ['$126binary_subscr.5']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$indices4.0'}), (6, {'res': '$a6.1'}), (8, {'item': '$a6.1', 'res': '$8load_attr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$const18.3.1'}), (20, {'op': '-', 'lhs': '$8load_attr.2', 'rhs': '$const18.3.1', 'res': '$binop_sub20.4'}), (22, {}), (24, {'lhs': '$indices4.0', 'rhs': '$binop_sub20.4', 'res': '$24compare_op.5'}), (26, {}), (28, {}), (30, {'pred': '$24compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={32: (), 56: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=32 nstack_initial=0):
AdaptBlockInfo(insts=((32, {'res': '$indices32.0'}), (34, {'res': '$a34.1'}), (36, {'item': '$a34.1', 'res': '$36load_attr.2'}), (38, {}), (40, {}), (42, {}), (44, {}), (46, {'value': '$36load_attr.2', 'res': '$46unary_negative.3'}), (48, {'lhs': '$indices32.0', 'rhs': '$46unary_negative.3', 'res': '$48compare_op.4'}), (50, {}), (52, {}), (54, {'pred': '$48compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={56: (), 86: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'idx': 1, 'res': '$56load_global.0'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {'res': '$const68.2.2'}), (70, {}), (72, {}), (74, {'func': '$56load_global.0', 'args': ['$const68.2.2'], 'kw_names': None, 'res': '$74call.3'}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'exc': '$74call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$a86.0'}), (88, {'item': '$a86.0', 'res': '$88load_method.2'}), (90, {}), (92, {}), (94, {}), (96, {}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {}), (108, {}), (110, {}), (112, {}), (114, {'func': '$88load_method.2', 'args': [], 'kw_names': None, 'res': '$114call.3'}), (116, {}), (118, {}), (120, {}), (122, {}), (124, {'res': '$indices124.4'}), (126, {'index': '$indices124.4', 'target': '$114call.3', 'res': '$126binary_subscr.5'}), (128, {}), (130, {}), (132, {}), (134, {}), (136, {'retval': '$126binary_subscr.5', 'castval': '$136return_value.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    axis = arg(2, name=axis)                 ['axis']
    $8load_attr.2 = getattr(value=a, attr=size) ['$8load_attr.2', 'a']
    $const18.3.1 = const(int, 1)             ['$const18.3.1']
    $binop_sub20.4 = $8load_attr.2 - $const18.3.1 ['$8load_attr.2', '$binop_sub20.4', '$const18.3.1']
    $24compare_op.5 = indices > $binop_sub20.4 ['$24compare_op.5', '$binop_sub20.4', 'indices']
    bool30 = global(bool: <class 'bool'>)    ['bool30']
    $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.5', '$30pred', 'bool30']
    branch $30pred, 56, 32                   ['$30pred']
label 32:
    $36load_attr.2 = getattr(value=a, attr=size) ['$36load_attr.2', 'a']
    $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2) ['$36load_attr.2', '$46unary_negative.3']
    $48compare_op.4 = indices < $46unary_negative.3 ['$46unary_negative.3', '$48compare_op.4', 'indices']
    bool54 = global(bool: <class 'bool'>)    ['bool54']
    $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None) ['$48compare_op.4', '$54pred', 'bool54']
    branch $54pred, 56, 86                   ['$54pred']
label 56:
    $56load_global.0 = global(IndexError: <class 'IndexError'>) ['$56load_global.0']
    $const68.2.2 = const(str, Index out of bounds) ['$const68.2.2']
    $74call.3 = call $56load_global.0($const68.2.2, func=$56load_global.0, args=[Var($const68.2.2, arrayobj.py:4795)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_global.0', '$74call.3', '$const68.2.2']
    raise $74call.3                          ['$74call.3']
label 86:
    $88load_method.2 = getattr(value=a, attr=ravel) ['$88load_method.2', 'a']
    $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$114call.3', '$88load_method.2']
    $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>) ['$114call.3', '$126binary_subscr.5', 'indices']
    $136return_value.6 = cast(value=$126binary_subscr.5) ['$126binary_subscr.5', '$136return_value.6']
    return $136return_value.6                ['$136return_value.6']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1791FA50>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: indices = arg(1, name=indices)
DEBUG:numba.core.ssa:on stmt: axis = arg(2, name=axis)
DEBUG:numba.core.ssa:on stmt: $8load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $const18.3.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub20.4 = $8load_attr.2 - $const18.3.1
DEBUG:numba.core.ssa:on stmt: $24compare_op.5 = indices > $binop_sub20.4
DEBUG:numba.core.ssa:on stmt: bool30 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $30pred = call bool30($24compare_op.5, func=bool30, args=(Var($24compare_op.5, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $30pred, 56, 32
DEBUG:numba.core.ssa:==== SSA block analysis pass on 32
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1791FA50>
DEBUG:numba.core.ssa:on stmt: $36load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $46unary_negative.3 = unary(fn=<built-in function neg>, value=$36load_attr.2)
DEBUG:numba.core.ssa:on stmt: $48compare_op.4 = indices < $46unary_negative.3
DEBUG:numba.core.ssa:on stmt: bool54 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $54pred = call bool54($48compare_op.4, func=bool54, args=(Var($48compare_op.4, arrayobj.py:4794),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $54pred, 56, 86
DEBUG:numba.core.ssa:==== SSA block analysis pass on 56
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1791FA50>
DEBUG:numba.core.ssa:on stmt: $56load_global.0 = global(IndexError: <class 'IndexError'>)
DEBUG:numba.core.ssa:on stmt: $const68.2.2 = const(str, Index out of bounds)
DEBUG:numba.core.ssa:on stmt: $74call.3 = call $56load_global.0($const68.2.2, func=$56load_global.0, args=[Var($const68.2.2, arrayobj.py:4795)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
DEBUG:numba.core.ssa:==== SSA block analysis pass on 86
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1791FA50>
DEBUG:numba.core.ssa:on stmt: $88load_method.2 = getattr(value=a, attr=ravel)
DEBUG:numba.core.ssa:on stmt: $114call.3 = call $88load_method.2(func=$88load_method.2, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $126binary_subscr.5 = getitem(value=$114call.3, index=indices, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $136return_value.6 = cast(value=$126binary_subscr.5)
DEBUG:numba.core.ssa:on stmt: return $136return_value.6
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$114call.3': [(<numba.core.ir.Assign object at 0x0000019A17CCC090>,
                             86)],
             '$126binary_subscr.5': [(<numba.core.ir.Assign object at 0x0000019A17CCF510>,
                                      86)],
             '$136return_value.6': [(<numba.core.ir.Assign object at 0x0000019A17CCF550>,
                                     86)],
             '$24compare_op.5': [(<numba.core.ir.Assign object at 0x0000019A1791C250>,
                                  0)],
             '$30pred': [(<numba.core.ir.Assign object at 0x0000019A1791CD10>,
                          0)],
             '$36load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A1791C610>,
                                 32)],
             '$46unary_negative.3': [(<numba.core.ir.Assign object at 0x0000019A1791DD90>,
                                      32)],
             '$48compare_op.4': [(<numba.core.ir.Assign object at 0x0000019A17CCE990>,
                                  32)],
             '$54pred': [(<numba.core.ir.Assign object at 0x0000019A17CCEB10>,
                          32)],
             '$56load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17CCC150>,
                                   56)],
             '$74call.3': [(<numba.core.ir.Assign object at 0x0000019A17CCD510>,
                            56)],
             '$88load_method.2': [(<numba.core.ir.Assign object at 0x0000019A17CCE690>,
                                   86)],
             '$8load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A1791F8D0>,
                                0)],
             '$binop_sub20.4': [(<numba.core.ir.Assign object at 0x0000019A1791D350>,
                                 0)],
             '$const18.3.1': [(<numba.core.ir.Assign object at 0x0000019A1791D310>,
                               0)],
             '$const68.2.2': [(<numba.core.ir.Assign object at 0x0000019A17CCD0D0>,
                               56)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A1791D750>, 0)],
             'axis': [(<numba.core.ir.Assign object at 0x0000019A1791FBD0>, 0)],
             'bool30': [(<numba.core.ir.Assign object at 0x0000019A1791CC90>,
                         0)],
             'bool54': [(<numba.core.ir.Assign object at 0x0000019A17CCC590>,
                         32)],
             'indices': [(<numba.core.ir.Assign object at 0x0000019A1791CAD0>,
                          0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A1791FA50>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=436)
           2	COPY_FREE_VARS(arg=1, lineno=436)
           4	RESUME(arg=0, lineno=436)
           6	LOAD_DEREF(arg=3, lineno=439)
           8	STORE_FAST(arg=1, lineno=439)
          10	LOAD_GLOBAL(arg=1, lineno=440)
          22	LOAD_ATTR(arg=1, lineno=440)
          32	LOAD_FAST(arg=0, lineno=440)
          34	PRECALL(arg=1, lineno=440)
          38	CALL(arg=1, lineno=440)
          48	GET_ITER(arg=None, lineno=440)
>         50	FOR_ITER(arg=25, lineno=440)
          52	STORE_FAST(arg=2, lineno=440)
          54	LOAD_FAST(arg=1, lineno=441)
          56	LOAD_FAST(arg=2, lineno=441)
          58	LOAD_METHOD(arg=2, lineno=441)
          80	PRECALL(arg=0, lineno=441)
          84	CALL(arg=0, lineno=441)
          94	BINARY_OP(arg=13, lineno=441)
          98	STORE_FAST(arg=1, lineno=441)
         100	JUMP_BACKWARD(arg=26, lineno=441)
>        102	LOAD_FAST(arg=1, lineno=442)
         104	LOAD_FAST(arg=0, lineno=442)
         106	LOAD_ATTR(arg=3, lineno=442)
         116	BINARY_OP(arg=11, lineno=442)
         120	RETURN_VALUE(arg=None, lineno=442)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=436)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=COPY_FREE_VARS(arg=1, lineno=436)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=RESUME(arg=0, lineno=436)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_DEREF(arg=3, lineno=439)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=STORE_FAST(arg=1, lineno=439)
DEBUG:numba.core.byteflow:stack ['$6load_deref.0']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_ATTR(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$10load_global.1']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=440)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$22load_attr.3']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=PRECALL(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$22load_attr.3', '$a32.4']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=CALL(arg=1, lineno=440)
DEBUG:numba.core.byteflow:stack ['$null$10.2', '$22load_attr.3', '$a32.4']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=GET_ITER(arg=None, lineno=440)
DEBUG:numba.core.byteflow:stack ['$38call.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=50, stack=('$48get_iter.6',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi50.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=50 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=50, inst=FOR_ITER(arg=25, lineno=440)
DEBUG:numba.core.byteflow:stack ['$phi50.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=102 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=442)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_FAST(arg=0, lineno=442)
DEBUG:numba.core.byteflow:stack ['$c102.0']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_ATTR(arg=3, lineno=442)
DEBUG:numba.core.byteflow:stack ['$c102.0', '$a104.1']
DEBUG:numba.core.byteflow:dispatch pc=116, inst=BINARY_OP(arg=11, lineno=442)
DEBUG:numba.core.byteflow:stack ['$c102.0', '$106load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=442)
DEBUG:numba.core.byteflow:stack ['$binop_truediv116.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=52 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi52.0', '$phi52.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=52 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=52, inst=STORE_FAST(arg=2, lineno=440)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$phi52.1']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_FAST(arg=2, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2']
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_METHOD(arg=2, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2', '$v56.3']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=PRECALL(arg=0, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=CALL(arg=0, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2', '$null$58.4', '$58load_method.5']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=BINARY_OP(arg=13, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$c54.2', '$84call.6']
DEBUG:numba.core.byteflow:dispatch pc=98, inst=STORE_FAST(arg=1, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0', '$binop_iadd94.7']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=JUMP_BACKWARD(arg=26, lineno=441)
DEBUG:numba.core.byteflow:stack ['$phi52.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=50, stack=('$phi52.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=102 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi50.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi50.0': {('$48get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.6'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {'res': '$6load_deref.0'}), (8, {'value': '$6load_deref.0'}), (10, {'idx': 0, 'res': '$10load_global.1'}), (12, {}), (14, {}), (16, {}), (18, {}), (20, {}), (22, {'item': '$10load_global.1', 'res': '$22load_attr.3'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'res': '$a32.4'}), (34, {}), (36, {}), (38, {'func': '$22load_attr.3', 'args': ['$a32.4'], 'kw_names': None, 'res': '$38call.5'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.5', 'res': '$48get_iter.6'})), outgoing_phis={'$phi50.0': '$48get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.6',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 52: ('$phi50.0', '$50for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$c54.2'}), (56, {'res': '$v56.3'}), (58, {'item': '$v56.3', 'res': '$58load_method.5'}), (60, {}), (62, {}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {}), (84, {'func': '$58load_method.5', 'args': [], 'kw_names': None, 'res': '$84call.6'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {'op': '+=', 'lhs': '$c54.2', 'rhs': '$84call.6', 'res': '$binop_iadd94.7'}), (96, {}), (98, {'value': '$binop_iadd94.7'}), (100, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi52.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$c102.0'}), (104, {'res': '$a104.1'}), (106, {'item': '$a104.1', 'res': '$106load_attr.2'}), (108, {}), (110, {}), (112, {}), (114, {}), (116, {'op': '/', 'lhs': '$c102.0', 'rhs': '$106load_attr.2', 'res': '$binop_truediv116.3'}), (118, {}), (120, {'retval': '$binop_truediv116.3', 'castval': '$120return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$10load_global.1']
    $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer) ['$10load_global.1', '$22load_attr.3']
    $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_attr.3', '$38call.5', 'a']
    $48get_iter.6 = getiter(value=$38call.5) ['$38call.5', '$48get_iter.6']
    $phi50.0 = $48get_iter.6                 ['$48get_iter.6', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 102            ['$50for_iter.3']
label 52:
    v = $phi52.1                             ['$phi52.1', 'v']
    $58load_method.5 = getattr(value=v, attr=item) ['$58load_method.5', 'v']
    $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$58load_method.5', '$84call.6']
    $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined) ['$84call.6', '$binop_iadd94.7', 'c']
    c = $binop_iadd94.7                      ['$binop_iadd94.7', 'c']
    jump 50                                  []
label 102:
    $106load_attr.2 = getattr(value=a, attr=size) ['$106load_attr.2', 'a']
    $binop_truediv116.3 = c / $106load_attr.2 ['$106load_attr.2', '$binop_truediv116.3', 'c']
    $120return_value.4 = cast(value=$binop_truediv116.3) ['$120return_value.4', '$binop_truediv116.3']
    return $120return_value.4                ['$120return_value.4']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1919AB90>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $48get_iter.6 = getiter(value=$38call.5)
DEBUG:numba.core.ssa:on stmt: $phi50.0 = $48get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block analysis pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1919AB90>
DEBUG:numba.core.ssa:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
DEBUG:numba.core.ssa:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi52.1 = $50for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $50for_iter.3, 52, 102
DEBUG:numba.core.ssa:==== SSA block analysis pass on 52
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1919AB90>
DEBUG:numba.core.ssa:on stmt: v = $phi52.1
DEBUG:numba.core.ssa:on stmt: $58load_method.5 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c = $binop_iadd94.7
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block analysis pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1919AB90>
DEBUG:numba.core.ssa:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $binop_truediv116.3 = c / $106load_attr.2
DEBUG:numba.core.ssa:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
DEBUG:numba.core.ssa:on stmt: return $120return_value.4
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$106load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A15FB5550>,
                                  102)],
             '$10load_global.1': [(<numba.core.ir.Assign object at 0x0000019A17CC36D0>,
                                   0)],
             '$120return_value.4': [(<numba.core.ir.Assign object at 0x0000019A15FB5510>,
                                     102)],
             '$22load_attr.3': [(<numba.core.ir.Assign object at 0x0000019A17D426D0>,
                                 0)],
             '$38call.5': [(<numba.core.ir.Assign object at 0x0000019A17D42C50>,
                            0)],
             '$48get_iter.6': [(<numba.core.ir.Assign object at 0x0000019A17D43C50>,
                                0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x0000019A17D43D50>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x0000019A17D417D0>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x0000019A17D40810>,
                                50)],
             '$58load_method.5': [(<numba.core.ir.Assign object at 0x0000019A15FB7050>,
                                   52)],
             '$84call.6': [(<numba.core.ir.Assign object at 0x0000019A18E33290>,
                            52)],
             '$binop_iadd94.7': [(<numba.core.ir.Assign object at 0x0000019A17CC1610>,
                                  52)],
             '$binop_truediv116.3': [(<numba.core.ir.Assign object at 0x0000019A15FB51D0>,
                                      102)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x0000019A17D43850>,
                           0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x0000019A17D418D0>,
                           50)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A191F5190>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x0000019A17CC3A50>, 0),
                   (<numba.core.ir.Assign object at 0x0000019A15FB4F50>, 52)],
             'v': [(<numba.core.ir.Assign object at 0x0000019A17D40B50>, 52)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A1919AB90>
DEBUG:numba.core.ssa:Fix SSA violator on var c
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A16144790>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:first assign: c
DEBUG:numba.core.ssa:replaced with: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $48get_iter.6 = getiter(value=$38call.5)
DEBUG:numba.core.ssa:on stmt: $phi50.0 = $48get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A16144790>
DEBUG:numba.core.ssa:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
DEBUG:numba.core.ssa:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi52.1 = $50for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $50for_iter.3, 52, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 52
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A16144790>
DEBUG:numba.core.ssa:on stmt: v = $phi52.1
DEBUG:numba.core.ssa:on stmt: $58load_method.5 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c = $binop_iadd94.7
DEBUG:numba.core.ssa:replaced with: c.1 = $binop_iadd94.7
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A16144790>
DEBUG:numba.core.ssa:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $binop_truediv116.3 = c / $106load_attr.2
DEBUG:numba.core.ssa:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
DEBUG:numba.core.ssa:on stmt: return $120return_value.4
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000019A16146710>],
             52: [<numba.core.ir.Assign object at 0x0000019A16144E10>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161460D0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:on stmt: $10load_global.1 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $22load_attr.3 = getattr(value=$10load_global.1, attr=nditer)
DEBUG:numba.core.ssa:on stmt: $38call.5 = call $22load_attr.3(a, func=$22load_attr.3, args=[Var(a, old_arraymath.py:436)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $48get_iter.6 = getiter(value=$38call.5)
DEBUG:numba.core.ssa:on stmt: $phi50.0 = $48get_iter.6
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 50
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161460D0>
DEBUG:numba.core.ssa:on stmt: $50for_iter.1 = iternext(value=$phi50.0)
DEBUG:numba.core.ssa:on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi52.1 = $50for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $50for_iter.3, 52, 102
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 52
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161460D0>
DEBUG:numba.core.ssa:on stmt: v = $phi52.1
DEBUG:numba.core.ssa:on stmt: $58load_method.5 = getattr(value=v, attr=item)
DEBUG:numba.core.ssa:on stmt: $84call.6 = call $58load_method.5(func=$58load_method.5, args=[], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='c' stmt=$binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 52
DEBUG:numba.core.ssa:idom 50 from label 52
DEBUG:numba.core.ssa:find_def_from_bottom label 50
DEBUG:numba.core.ssa:find_def_from_top label 50
DEBUG:numba.core.ssa:insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 50
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def c = freevar(acc_init: 0.0)
DEBUG:numba.core.ssa:find_def_from_bottom label 52
DEBUG:numba.core.ssa:incoming_def c.1 = $binop_iadd94.7
DEBUG:numba.core.ssa:replaced with: $binop_iadd94.7 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$84call.6, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: c.1 = $binop_iadd94.7
DEBUG:numba.core.ssa:on stmt: jump 50
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 102
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161460D0>
DEBUG:numba.core.ssa:on stmt: $106load_attr.2 = getattr(value=a, attr=size)
DEBUG:numba.core.ssa:on stmt: $binop_truediv116.3 = c / $106load_attr.2
DEBUG:numba.core.ssa:find_def var='c' stmt=$binop_truediv116.3 = c / $106load_attr.2
DEBUG:numba.core.ssa:find_def_from_top label 102
DEBUG:numba.core.ssa:idom 50 from label 102
DEBUG:numba.core.ssa:find_def_from_bottom label 50
DEBUG:numba.core.ssa:replaced with: $binop_truediv116.3 = c.2 / $106load_attr.2
DEBUG:numba.core.ssa:on stmt: $120return_value.4 = cast(value=$binop_truediv116.3)
DEBUG:numba.core.ssa:on stmt: return $120return_value.4
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2436)
           2	RESUME(arg=0, lineno=2436)
           4	LOAD_FAST(arg=0, lineno=2441)
           6	LOAD_ATTR(arg=0, lineno=2441)
          16	LOAD_CONST(arg=1, lineno=2441)
          18	BINARY_OP(arg=8, lineno=2441)
          22	LOAD_FAST(arg=0, lineno=2441)
          24	LOAD_ATTR(arg=1, lineno=2441)
          34	LOAD_CONST(arg=1, lineno=2441)
          36	BINARY_OP(arg=8, lineno=2441)
          40	BINARY_OP(arg=0, lineno=2441)
          44	RETURN_VALUE(arg=None, lineno=2441)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2436)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=2436)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2441)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2441)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=2441)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=BINARY_OP(arg=8, lineno=2441)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1', '$const16.2.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=2441)
DEBUG:numba.core.byteflow:stack ['$binop_pow18.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_ATTR(arg=1, lineno=2441)
DEBUG:numba.core.byteflow:stack ['$binop_pow18.3', '$x22.4']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=2441)
DEBUG:numba.core.byteflow:stack ['$binop_pow18.3', '$24load_attr.5']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_OP(arg=8, lineno=2441)
DEBUG:numba.core.byteflow:stack ['$binop_pow18.3', '$24load_attr.5', '$const34.6.1']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BINARY_OP(arg=0, lineno=2441)
DEBUG:numba.core.byteflow:stack ['$binop_pow18.3', '$binop_pow36.7']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=RETURN_VALUE(arg=None, lineno=2441)
DEBUG:numba.core.byteflow:stack ['$binop_add40.8']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$const16.2.1'}), (18, {'op': '**', 'lhs': '$6load_attr.1', 'rhs': '$const16.2.1', 'res': '$binop_pow18.3'}), (20, {}), (22, {'res': '$x22.4'}), (24, {'item': '$x22.4', 'res': '$24load_attr.5'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'res': '$const34.6.1'}), (36, {'op': '**', 'lhs': '$24load_attr.5', 'rhs': '$const34.6.1', 'res': '$binop_pow36.7'}), (38, {}), (40, {'op': '+', 'lhs': '$binop_pow18.3', 'rhs': '$binop_pow36.7', 'res': '$binop_add40.8'}), (42, {}), (44, {'retval': '$binop_add40.8', 'castval': '$44return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    $6load_attr.1 = getattr(value=x, attr=real) ['$6load_attr.1', 'x']
    $const16.2.1 = const(int, 2)             ['$const16.2.1']
    $binop_pow18.3 = $6load_attr.1 ** $const16.2.1 ['$6load_attr.1', '$binop_pow18.3', '$const16.2.1']
    $24load_attr.5 = getattr(value=x, attr=imag) ['$24load_attr.5', 'x']
    $const34.6.1 = const(int, 2)             ['$const34.6.1']
    $binop_pow36.7 = $24load_attr.5 ** $const34.6.1 ['$24load_attr.5', '$binop_pow36.7', '$const34.6.1']
    $binop_add40.8 = $binop_pow18.3 + $binop_pow36.7 ['$binop_add40.8', '$binop_pow18.3', '$binop_pow36.7']
    $44return_value.9 = cast(value=$binop_add40.8) ['$44return_value.9', '$binop_add40.8']
    return $44return_value.9                 ['$44return_value.9']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1748FCD0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: $6load_attr.1 = getattr(value=x, attr=real)
DEBUG:numba.core.ssa:on stmt: $const16.2.1 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $binop_pow18.3 = $6load_attr.1 ** $const16.2.1
DEBUG:numba.core.ssa:on stmt: $24load_attr.5 = getattr(value=x, attr=imag)
DEBUG:numba.core.ssa:on stmt: $const34.6.1 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $binop_pow36.7 = $24load_attr.5 ** $const34.6.1
DEBUG:numba.core.ssa:on stmt: $binop_add40.8 = $binop_pow18.3 + $binop_pow36.7
DEBUG:numba.core.ssa:on stmt: $44return_value.9 = cast(value=$binop_add40.8)
DEBUG:numba.core.ssa:on stmt: return $44return_value.9
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$24load_attr.5': [(<numba.core.ir.Assign object at 0x0000019A1748DED0>,
                                 0)],
             '$44return_value.9': [(<numba.core.ir.Assign object at 0x0000019A1748D550>,
                                    0)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x0000019A17548B50>,
                                0)],
             '$binop_add40.8': [(<numba.core.ir.Assign object at 0x0000019A1748D510>,
                                 0)],
             '$binop_pow18.3': [(<numba.core.ir.Assign object at 0x0000019A175491D0>,
                                 0)],
             '$binop_pow36.7': [(<numba.core.ir.Assign object at 0x0000019A1748D150>,
                                 0)],
             '$const16.2.1': [(<numba.core.ir.Assign object at 0x0000019A17548F90>,
                               0)],
             '$const34.6.1': [(<numba.core.ir.Assign object at 0x0000019A1748C410>,
                               0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A17548190>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A1748FCD0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	COPY_FREE_VARS(arg=3, lineno=214)
           4	RESUME(arg=0, lineno=214)
           6	PUSH_NULL(arg=None, lineno=216)
           8	LOAD_DEREF(arg=6, lineno=216)
          10	LOAD_CONST(arg=1, lineno=216)
          12	PRECALL(arg=1, lineno=216)
          16	CALL(arg=1, lineno=216)
          26	STORE_FAST(arg=2, lineno=216)
          28	PUSH_NULL(arg=None, lineno=217)
          30	LOAD_DEREF(arg=6, lineno=217)
          32	LOAD_FAST(arg=0, lineno=217)
          34	PRECALL(arg=1, lineno=217)
          38	CALL(arg=1, lineno=217)
          48	STORE_FAST(arg=0, lineno=217)
          50	LOAD_FAST(arg=1, lineno=218)
          52	LOAD_CONST(arg=2, lineno=218)
          54	COMPARE_OP(arg=0, lineno=218)
          60	POP_JUMP_FORWARD_IF_FALSE(arg=60, lineno=218)
          62	LOAD_CONST(arg=3, lineno=219)
          64	STORE_FAST(arg=3, lineno=219)
          66	LOAD_FAST(arg=1, lineno=220)
          68	UNARY_NEGATIVE(arg=None, lineno=220)
          70	STORE_FAST(arg=4, lineno=220)
          72	LOAD_FAST(arg=4, lineno=221)
          74	LOAD_CONST(arg=2, lineno=221)
          76	COMPARE_OP(arg=0, lineno=221)
          82	POP_JUMP_FORWARD_IF_FALSE(arg=7, lineno=221)
          84	LOAD_GLOBAL(arg=0, lineno=222)
          96	RAISE_VARARGS(arg=1, lineno=222)
>         98	LOAD_DEREF(arg=5, lineno=223)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=39, lineno=223)
         102	LOAD_FAST(arg=0, lineno=224)
         104	LOAD_CONST(arg=2, lineno=224)
         106	COMPARE_OP(arg=2, lineno=224)
         112	POP_JUMP_FORWARD_IF_FALSE(arg=19, lineno=224)
         114	LOAD_DEREF(arg=7, lineno=225)
         116	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=225)
         118	LOAD_DEREF(arg=7, lineno=226)
         120	RETURN_VALUE(arg=None, lineno=226)
>        122	LOAD_GLOBAL(arg=3, lineno=228)
         134	LOAD_CONST(arg=4, lineno=228)
         136	PRECALL(arg=1, lineno=228)
         140	CALL(arg=1, lineno=228)
         150	RAISE_VARARGS(arg=1, lineno=228)
>        152	LOAD_FAST(arg=0, lineno=229)
         154	LOAD_CONST(arg=1, lineno=229)
         156	COMPARE_OP(arg=3, lineno=229)
         162	POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=229)
         164	LOAD_FAST(arg=0, lineno=229)
         166	LOAD_CONST(arg=5, lineno=229)
         168	COMPARE_OP(arg=3, lineno=229)
         174	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=229)
         176	LOAD_CONST(arg=2, lineno=230)
         178	RETURN_VALUE(arg=None, lineno=230)
>        180	JUMP_FORWARD(arg=4, lineno=230)
>        182	LOAD_CONST(arg=6, lineno=232)
         184	STORE_FAST(arg=3, lineno=232)
         186	LOAD_FAST(arg=1, lineno=233)
         188	STORE_FAST(arg=4, lineno=233)
>        190	LOAD_FAST(arg=4, lineno=234)
         192	LOAD_CONST(arg=7, lineno=234)
         194	COMPARE_OP(arg=4, lineno=234)
         200	POP_JUMP_FORWARD_IF_FALSE(arg=34, lineno=234)
         202	LOAD_GLOBAL(arg=5, lineno=236)
         214	LOAD_ATTR(arg=3, lineno=236)
         224	LOAD_FAST(arg=0, lineno=236)
         226	LOAD_GLOBAL(arg=9, lineno=236)
         238	LOAD_FAST(arg=1, lineno=236)
         240	PRECALL(arg=1, lineno=236)
         244	CALL(arg=1, lineno=236)
         254	PRECALL(arg=2, lineno=236)
         258	CALL(arg=2, lineno=236)
         268	RETURN_VALUE(arg=None, lineno=236)
>        270	LOAD_FAST(arg=4, lineno=237)
         272	LOAD_CONST(arg=2, lineno=237)
         274	COMPARE_OP(arg=3, lineno=237)
         280	POP_JUMP_FORWARD_IF_FALSE(arg=26, lineno=237)
>        282	LOAD_FAST(arg=4, lineno=238)
         284	LOAD_CONST(arg=1, lineno=238)
         286	BINARY_OP(arg=1, lineno=238)
         290	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=238)
         292	LOAD_FAST(arg=2, lineno=239)
         294	LOAD_FAST(arg=0, lineno=239)
         296	BINARY_OP(arg=18, lineno=239)
         300	STORE_FAST(arg=2, lineno=239)
>        302	LOAD_FAST(arg=4, lineno=240)
         304	LOAD_CONST(arg=1, lineno=240)
         306	BINARY_OP(arg=22, lineno=240)
         310	STORE_FAST(arg=4, lineno=240)
         312	LOAD_FAST(arg=0, lineno=241)
         314	LOAD_FAST(arg=0, lineno=241)
         316	BINARY_OP(arg=18, lineno=241)
         320	STORE_FAST(arg=0, lineno=241)
         322	LOAD_FAST(arg=4, lineno=237)
         324	LOAD_CONST(arg=2, lineno=237)
         326	COMPARE_OP(arg=3, lineno=237)
         332	POP_JUMP_BACKWARD_IF_TRUE(arg=26, lineno=237)
>        334	LOAD_FAST(arg=3, lineno=243)
         336	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=243)
         338	LOAD_CONST(arg=8, lineno=243)
         340	LOAD_FAST(arg=2, lineno=243)
         342	BINARY_OP(arg=11, lineno=243)
         346	JUMP_FORWARD(arg=1, lineno=243)
>        348	LOAD_FAST(arg=2, lineno=243)
>        350	RETURN_VALUE(arg=None, lineno=243)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=214)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=COPY_FREE_VARS(arg=3, lineno=214)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=RESUME(arg=0, lineno=214)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=PUSH_NULL(arg=None, lineno=216)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_DEREF(arg=6, lineno=216)
DEBUG:numba.core.byteflow:stack ['$null$6.0']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=216)
DEBUG:numba.core.byteflow:stack ['$null$6.0', '$8load_deref.1']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=PRECALL(arg=1, lineno=216)
DEBUG:numba.core.byteflow:stack ['$null$6.0', '$8load_deref.1', '$const10.2.1']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=CALL(arg=1, lineno=216)
DEBUG:numba.core.byteflow:stack ['$null$6.0', '$8load_deref.1', '$const10.2.1']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=STORE_FAST(arg=2, lineno=216)
DEBUG:numba.core.byteflow:stack ['$16call.3']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=PUSH_NULL(arg=None, lineno=217)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_DEREF(arg=6, lineno=217)
DEBUG:numba.core.byteflow:stack ['$null$28.4']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=217)
DEBUG:numba.core.byteflow:stack ['$null$28.4', '$30load_deref.5']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=PRECALL(arg=1, lineno=217)
DEBUG:numba.core.byteflow:stack ['$null$28.4', '$30load_deref.5', '$a32.6']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=CALL(arg=1, lineno=217)
DEBUG:numba.core.byteflow:stack ['$null$28.4', '$30load_deref.5', '$a32.6']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=STORE_FAST(arg=0, lineno=217)
DEBUG:numba.core.byteflow:stack ['$38call.7']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=1, lineno=218)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=218)
DEBUG:numba.core.byteflow:stack ['$b50.8']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=COMPARE_OP(arg=0, lineno=218)
DEBUG:numba.core.byteflow:stack ['$b50.8', '$const52.9.2']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=POP_JUMP_FORWARD_IF_FALSE(arg=60, lineno=218)
DEBUG:numba.core.byteflow:stack ['$54compare_op.10']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=62, stack=(), blockstack=(), npush=0), Edge(pc=182, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=182 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=62 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_CONST(arg=3, lineno=219)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=64, inst=STORE_FAST(arg=3, lineno=219)
DEBUG:numba.core.byteflow:stack ['$const62.0.3']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=1, lineno=220)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=UNARY_NEGATIVE(arg=None, lineno=220)
DEBUG:numba.core.byteflow:stack ['$b66.1']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=STORE_FAST(arg=4, lineno=220)
DEBUG:numba.core.byteflow:stack ['$68unary_negative.2']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=4, lineno=221)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_CONST(arg=2, lineno=221)
DEBUG:numba.core.byteflow:stack ['$exp72.3']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=COMPARE_OP(arg=0, lineno=221)
DEBUG:numba.core.byteflow:stack ['$exp72.3', '$const74.4.2']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=POP_JUMP_FORWARD_IF_FALSE(arg=7, lineno=221)
DEBUG:numba.core.byteflow:stack ['$76compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=182 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=182 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=182, inst=LOAD_CONST(arg=6, lineno=232)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=184, inst=STORE_FAST(arg=3, lineno=232)
DEBUG:numba.core.byteflow:stack ['$const182.0.6']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=LOAD_FAST(arg=1, lineno=233)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=188, inst=STORE_FAST(arg=4, lineno=233)
DEBUG:numba.core.byteflow:stack ['$b186.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=190, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=84 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_GLOBAL(arg=0, lineno=222)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=RAISE_VARARGS(arg=1, lineno=222)
DEBUG:numba.core.byteflow:stack ['$84load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=98 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_DEREF(arg=5, lineno=223)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=39, lineno=223)
DEBUG:numba.core.byteflow:stack ['$98load_deref.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=190 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=190, inst=LOAD_FAST(arg=4, lineno=234)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_CONST(arg=7, lineno=234)
DEBUG:numba.core.byteflow:stack ['$exp190.0']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=COMPARE_OP(arg=4, lineno=234)
DEBUG:numba.core.byteflow:stack ['$exp190.0', '$const192.1.7']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=POP_JUMP_FORWARD_IF_FALSE(arg=34, lineno=234)
DEBUG:numba.core.byteflow:stack ['$194compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=202, stack=(), blockstack=(), npush=0), Edge(pc=270, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=102 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=0, lineno=224)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_CONST(arg=2, lineno=224)
DEBUG:numba.core.byteflow:stack ['$a102.0']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=COMPARE_OP(arg=2, lineno=224)
DEBUG:numba.core.byteflow:stack ['$a102.0', '$const104.1.2']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=POP_JUMP_FORWARD_IF_FALSE(arg=19, lineno=224)
DEBUG:numba.core.byteflow:stack ['$106compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=152, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=180 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=180, inst=JUMP_FORWARD(arg=4, lineno=230)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=190, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=202 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=202, inst=LOAD_GLOBAL(arg=5, lineno=236)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=214, inst=LOAD_ATTR(arg=3, lineno=236)
DEBUG:numba.core.byteflow:stack ['$null$202.1', '$202load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=LOAD_FAST(arg=0, lineno=236)
DEBUG:numba.core.byteflow:stack ['$null$202.1', '$214load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=LOAD_GLOBAL(arg=9, lineno=236)
DEBUG:numba.core.byteflow:stack ['$null$202.1', '$214load_attr.2', '$a224.3']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=LOAD_FAST(arg=1, lineno=236)
DEBUG:numba.core.byteflow:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=PRECALL(arg=1, lineno=236)
DEBUG:numba.core.byteflow:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4', '$b238.6']
DEBUG:numba.core.byteflow:dispatch pc=244, inst=CALL(arg=1, lineno=236)
DEBUG:numba.core.byteflow:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4', '$b238.6']
DEBUG:numba.core.byteflow:dispatch pc=254, inst=PRECALL(arg=2, lineno=236)
DEBUG:numba.core.byteflow:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$244call.7']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=CALL(arg=2, lineno=236)
DEBUG:numba.core.byteflow:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$244call.7']
DEBUG:numba.core.byteflow:dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=236)
DEBUG:numba.core.byteflow:stack ['$258call.8']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=270 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=270, inst=LOAD_FAST(arg=4, lineno=237)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_CONST(arg=2, lineno=237)
DEBUG:numba.core.byteflow:stack ['$exp270.0']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=COMPARE_OP(arg=3, lineno=237)
DEBUG:numba.core.byteflow:stack ['$exp270.0', '$const272.1.2']
DEBUG:numba.core.byteflow:dispatch pc=280, inst=POP_JUMP_FORWARD_IF_FALSE(arg=26, lineno=237)
DEBUG:numba.core.byteflow:stack ['$274compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=282, stack=(), blockstack=(), npush=0), Edge(pc=334, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=114 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_DEREF(arg=7, lineno=225)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=116, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=225)
DEBUG:numba.core.byteflow:stack ['$114load_deref.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=118, stack=(), blockstack=(), npush=0), Edge(pc=122, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=152 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_FAST(arg=0, lineno=229)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_CONST(arg=1, lineno=229)
DEBUG:numba.core.byteflow:stack ['$a152.0']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=COMPARE_OP(arg=3, lineno=229)
DEBUG:numba.core.byteflow:stack ['$a152.0', '$const154.1.1']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=229)
DEBUG:numba.core.byteflow:stack ['$156compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=164, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=282 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=282, inst=LOAD_FAST(arg=4, lineno=238)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=284, inst=LOAD_CONST(arg=1, lineno=238)
DEBUG:numba.core.byteflow:stack ['$exp282.0']
DEBUG:numba.core.byteflow:dispatch pc=286, inst=BINARY_OP(arg=1, lineno=238)
DEBUG:numba.core.byteflow:stack ['$exp282.0', '$const284.1.1']
DEBUG:numba.core.byteflow:dispatch pc=290, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=238)
DEBUG:numba.core.byteflow:stack ['$binop_and_286.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=334 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=334, inst=LOAD_FAST(arg=3, lineno=243)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=336, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=243)
DEBUG:numba.core.byteflow:stack ['$invert334.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=338, stack=(), blockstack=(), npush=0), Edge(pc=348, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=118 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_DEREF(arg=7, lineno=226)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=226)
DEBUG:numba.core.byteflow:stack ['$118load_deref.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=122 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_GLOBAL(arg=3, lineno=228)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_CONST(arg=4, lineno=228)
DEBUG:numba.core.byteflow:stack ['$null$122.1', '$122load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=PRECALL(arg=1, lineno=228)
DEBUG:numba.core.byteflow:stack ['$null$122.1', '$122load_global.0', '$const134.2.4']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=CALL(arg=1, lineno=228)
DEBUG:numba.core.byteflow:stack ['$null$122.1', '$122load_global.0', '$const134.2.4']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=RAISE_VARARGS(arg=1, lineno=228)
DEBUG:numba.core.byteflow:stack ['$140call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=164 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=229)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_CONST(arg=5, lineno=229)
DEBUG:numba.core.byteflow:stack ['$a164.0']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=COMPARE_OP(arg=3, lineno=229)
DEBUG:numba.core.byteflow:stack ['$a164.0', '$const166.1.5']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=229)
DEBUG:numba.core.byteflow:stack ['$168compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=292 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=292, inst=LOAD_FAST(arg=2, lineno=239)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=294, inst=LOAD_FAST(arg=0, lineno=239)
DEBUG:numba.core.byteflow:stack ['$r292.0']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=BINARY_OP(arg=18, lineno=239)
DEBUG:numba.core.byteflow:stack ['$r292.0', '$a294.1']
DEBUG:numba.core.byteflow:dispatch pc=300, inst=STORE_FAST(arg=2, lineno=239)
DEBUG:numba.core.byteflow:stack ['$binop_imul296.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=302, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=302 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=302, inst=LOAD_FAST(arg=4, lineno=240)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=304, inst=LOAD_CONST(arg=1, lineno=240)
DEBUG:numba.core.byteflow:stack ['$exp302.0']
DEBUG:numba.core.byteflow:dispatch pc=306, inst=BINARY_OP(arg=22, lineno=240)
DEBUG:numba.core.byteflow:stack ['$exp302.0', '$const304.1.1']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=STORE_FAST(arg=4, lineno=240)
DEBUG:numba.core.byteflow:stack ['$binop_irshift306.2']
DEBUG:numba.core.byteflow:dispatch pc=312, inst=LOAD_FAST(arg=0, lineno=241)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=314, inst=LOAD_FAST(arg=0, lineno=241)
DEBUG:numba.core.byteflow:stack ['$a312.3']
DEBUG:numba.core.byteflow:dispatch pc=316, inst=BINARY_OP(arg=18, lineno=241)
DEBUG:numba.core.byteflow:stack ['$a312.3', '$a314.4']
DEBUG:numba.core.byteflow:dispatch pc=320, inst=STORE_FAST(arg=0, lineno=241)
DEBUG:numba.core.byteflow:stack ['$binop_imul316.5']
DEBUG:numba.core.byteflow:dispatch pc=322, inst=LOAD_FAST(arg=4, lineno=237)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=324, inst=LOAD_CONST(arg=2, lineno=237)
DEBUG:numba.core.byteflow:stack ['$exp322.6']
DEBUG:numba.core.byteflow:dispatch pc=326, inst=COMPARE_OP(arg=3, lineno=237)
DEBUG:numba.core.byteflow:stack ['$exp322.6', '$const324.7.2']
DEBUG:numba.core.byteflow:dispatch pc=332, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=26, lineno=237)
DEBUG:numba.core.byteflow:stack ['$326compare_op.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=334, stack=(), blockstack=(), npush=0), Edge(pc=282, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=338 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=338, inst=LOAD_CONST(arg=8, lineno=243)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=340, inst=LOAD_FAST(arg=2, lineno=243)
DEBUG:numba.core.byteflow:stack ['$const338.0.8']
DEBUG:numba.core.byteflow:dispatch pc=342, inst=BINARY_OP(arg=11, lineno=243)
DEBUG:numba.core.byteflow:stack ['$const338.0.8', '$r340.1']
DEBUG:numba.core.byteflow:dispatch pc=346, inst=JUMP_FORWARD(arg=1, lineno=243)
DEBUG:numba.core.byteflow:stack ['$binop_truediv342.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=350, stack=('$binop_truediv342.2',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=348 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=348, inst=LOAD_FAST(arg=2, lineno=243)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=350, stack=('$r348.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=176 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=176, inst=LOAD_CONST(arg=2, lineno=230)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=178, inst=RETURN_VALUE(arg=None, lineno=230)
DEBUG:numba.core.byteflow:stack ['$const176.0.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi350.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=350 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=350, inst=RETURN_VALUE(arg=None, lineno=243)
DEBUG:numba.core.byteflow:stack ['$phi350.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=118 nstack_initial=0): set(),
             State(pc_initial=122 nstack_initial=0): set(),
             State(pc_initial=152 nstack_initial=0): set(),
             State(pc_initial=164 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=180 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=270 nstack_initial=0): set(),
             State(pc_initial=282 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set(),
             State(pc_initial=334 nstack_initial=0): set(),
             State(pc_initial=338 nstack_initial=0): set(),
             State(pc_initial=348 nstack_initial=0): set(),
             State(pc_initial=350 nstack_initial=1): {'$phi350.0'}})
DEBUG:numba.core.byteflow:defmap: {'$phi350.0': State(pc_initial=348 nstack_initial=0)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi350.0': {('$binop_truediv342.2',
                            State(pc_initial=338 nstack_initial=0)),
                           ('$r348.0',
                            State(pc_initial=348 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi350.0': {('$binop_truediv342.2',
                            State(pc_initial=338 nstack_initial=0)),
                           ('$r348.0',
                            State(pc_initial=348 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi350.0': {('$binop_truediv342.2', State(pc_initial=338 nstack_initial=0)),
               ('$r348.0', State(pc_initial=348 nstack_initial=0))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=338 nstack_initial=0): {'$phi350.0': '$binop_truediv342.2'},
             State(pc_initial=348 nstack_initial=0): {'$phi350.0': '$r348.0'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {}), (8, {'res': '$8load_deref.1'}), (10, {'res': '$const10.2.1'}), (12, {}), (14, {}), (16, {'func': '$8load_deref.1', 'args': ['$const10.2.1'], 'kw_names': None, 'res': '$16call.3'}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {'value': '$16call.3'}), (28, {}), (30, {'res': '$30load_deref.5'}), (32, {'res': '$a32.6'}), (34, {}), (36, {}), (38, {'func': '$30load_deref.5', 'args': ['$a32.6'], 'kw_names': None, 'res': '$38call.7'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.7'}), (50, {'res': '$b50.8'}), (52, {'res': '$const52.9.2'}), (54, {'lhs': '$b50.8', 'rhs': '$const52.9.2', 'res': '$54compare_op.10'}), (56, {}), (58, {}), (60, {'pred': '$54compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: (), 182: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=((62, {'res': '$const62.0.3'}), (64, {'value': '$const62.0.3'}), (66, {'res': '$b66.1'}), (68, {'value': '$b66.1', 'res': '$68unary_negative.2'}), (70, {'value': '$68unary_negative.2'}), (72, {'res': '$exp72.3'}), (74, {'res': '$const74.4.2'}), (76, {'lhs': '$exp72.3', 'rhs': '$const74.4.2', 'res': '$76compare_op.5'}), (78, {}), (80, {}), (82, {'pred': '$76compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 98: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'idx': 0, 'res': '$84load_global.0'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'exc': '$84load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$98load_deref.0'}), (100, {'pred': '$98load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 180: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$a102.0'}), (104, {'res': '$const104.1.2'}), (106, {'lhs': '$a102.0', 'rhs': '$const104.1.2', 'res': '$106compare_op.2'}), (108, {}), (110, {}), (112, {'pred': '$106compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 152: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_deref.0'}), (116, {'pred': '$114load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={118: (), 122: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=118 nstack_initial=0):
AdaptBlockInfo(insts=((118, {'res': '$118load_deref.0'}), (120, {'retval': '$118load_deref.0', 'castval': '$120return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'idx': 1, 'res': '$122load_global.0'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'res': '$const134.2.4'}), (136, {}), (138, {}), (140, {'func': '$122load_global.0', 'args': ['$const134.2.4'], 'kw_names': None, 'res': '$140call.3'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {'exc': '$140call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=152 nstack_initial=0):
AdaptBlockInfo(insts=((152, {'res': '$a152.0'}), (154, {'res': '$const154.1.1'}), (156, {'lhs': '$a152.0', 'rhs': '$const154.1.1', 'res': '$156compare_op.2'}), (158, {}), (160, {}), (162, {'pred': '$156compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={164: (), 180: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=164 nstack_initial=0):
AdaptBlockInfo(insts=((164, {'res': '$a164.0'}), (166, {'res': '$const166.1.5'}), (168, {'lhs': '$a164.0', 'rhs': '$const166.1.5', 'res': '$168compare_op.2'}), (170, {}), (172, {}), (174, {'pred': '$168compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 180: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0.2'}), (178, {'retval': '$const176.0.2', 'castval': '$178return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=180 nstack_initial=0):
AdaptBlockInfo(insts=((180, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={190: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'res': '$const182.0.6'}), (184, {'value': '$const182.0.6'}), (186, {'res': '$b186.1'}), (188, {'value': '$b186.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={190: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$exp190.0'}), (192, {'res': '$const192.1.7'}), (194, {'lhs': '$exp190.0', 'rhs': '$const192.1.7', 'res': '$194compare_op.2'}), (196, {}), (198, {}), (200, {'pred': '$194compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: (), 270: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'idx': 2, 'res': '$202load_global.0'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {'item': '$202load_global.0', 'res': '$214load_attr.2'}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {'res': '$a224.3'}), (226, {'idx': 4, 'res': '$226load_global.4'}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'res': '$b238.6'}), (240, {}), (242, {}), (244, {'func': '$226load_global.4', 'args': ['$b238.6'], 'kw_names': None, 'res': '$244call.7'}), (246, {}), (248, {}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {'func': '$214load_attr.2', 'args': ['$a224.3', '$244call.7'], 'kw_names': None, 'res': '$258call.8'}), (260, {}), (262, {}), (264, {}), (266, {}), (268, {'retval': '$258call.8', 'castval': '$268return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=270 nstack_initial=0):
AdaptBlockInfo(insts=((270, {'res': '$exp270.0'}), (272, {'res': '$const272.1.2'}), (274, {'lhs': '$exp270.0', 'rhs': '$const272.1.2', 'res': '$274compare_op.2'}), (276, {}), (278, {}), (280, {'pred': '$274compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={282: (), 334: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=282 nstack_initial=0):
AdaptBlockInfo(insts=((282, {'res': '$exp282.0'}), (284, {'res': '$const284.1.1'}), (286, {'op': '&', 'lhs': '$exp282.0', 'rhs': '$const284.1.1', 'res': '$binop_and_286.2'}), (288, {}), (290, {'pred': '$binop_and_286.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 302: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$r292.0'}), (294, {'res': '$a294.1'}), (296, {'op': '*=', 'lhs': '$r292.0', 'rhs': '$a294.1', 'res': '$binop_imul296.2'}), (298, {}), (300, {'value': '$binop_imul296.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={302: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$exp302.0'}), (304, {'res': '$const304.1.1'}), (306, {'op': '>>=', 'lhs': '$exp302.0', 'rhs': '$const304.1.1', 'res': '$binop_irshift306.2'}), (308, {}), (310, {'value': '$binop_irshift306.2'}), (312, {'res': '$a312.3'}), (314, {'res': '$a314.4'}), (316, {'op': '*=', 'lhs': '$a312.3', 'rhs': '$a314.4', 'res': '$binop_imul316.5'}), (318, {}), (320, {'value': '$binop_imul316.5'}), (322, {'res': '$exp322.6'}), (324, {'res': '$const324.7.2'}), (326, {'lhs': '$exp322.6', 'rhs': '$const324.7.2', 'res': '$326compare_op.8'}), (328, {}), (330, {}), (332, {'pred': '$326compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={334: (), 282: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=334 nstack_initial=0):
AdaptBlockInfo(insts=((334, {'res': '$invert334.0'}), (336, {'pred': '$invert334.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={338: (), 348: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=338 nstack_initial=0):
AdaptBlockInfo(insts=((338, {'res': '$const338.0.8'}), (340, {'res': '$r340.1'}), (342, {'op': '/', 'lhs': '$const338.0.8', 'rhs': '$r340.1', 'res': '$binop_truediv342.2'}), (344, {}), (346, {})), outgoing_phis={'$phi350.0': '$binop_truediv342.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$binop_truediv342.2',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=348 nstack_initial=0):
AdaptBlockInfo(insts=((348, {'res': '$r348.0'}),), outgoing_phis={'$phi350.0': '$r348.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$r348.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'retval': '$phi350.0', 'castval': '$350return_value.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $8load_deref.1 = freevar(tp: float32)    ['$8load_deref.1']
    $const10.2.1 = const(int, 1)             ['$const10.2.1']
    r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$8load_deref.1', '$const10.2.1', 'r']
    $30load_deref.5 = freevar(tp: float32)   ['$30load_deref.5']
    a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_deref.5', 'a', 'a.1']
    $const52.9.2 = const(int, 0)             ['$const52.9.2']
    $54compare_op.10 = b < $const52.9.2      ['$54compare_op.10', '$const52.9.2', 'b']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$54compare_op.10', '$60pred', 'bool60']
    branch $60pred, 62, 182                  ['$60pred']
label 62:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const74.4.2 = const(int, 0)             ['$const74.4.2']
    $76compare_op.5 = exp < $const74.4.2     ['$76compare_op.5', '$const74.4.2', 'exp']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$76compare_op.5', '$82pred', 'bool82']
    branch $82pred, 84, 98                   ['$82pred']
label 84:
    $84load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$84load_global.0']
    raise $84load_global.0                   ['$84load_global.0']
label 98:
    $98load_deref.0 = freevar(is_integer: False) ['$98load_deref.0']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98load_deref.0', 'bool100']
    branch $100pred, 102, 180                ['$100pred']
label 102:
    $const104.1.2 = const(int, 0)            ['$const104.1.2']
    $106compare_op.2 = a.1 == $const104.1.2  ['$106compare_op.2', '$const104.1.2', 'a.1']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($106compare_op.2, func=bool112, args=(Var($106compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$106compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 152                ['$112pred']
label 114:
    $114load_deref.0 = freevar(zerodiv_return: False) ['$114load_deref.0']
    bool116 = global(bool: <class 'bool'>)   ['bool116']
    $116pred = call bool116($114load_deref.0, func=bool116, args=(Var($114load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$114load_deref.0', '$116pred', 'bool116']
    branch $116pred, 118, 122                ['$116pred']
label 118:
    $118load_deref.0 = freevar(zerodiv_return: False) ['$118load_deref.0']
    $120return_value.1 = cast(value=$118load_deref.0) ['$118load_deref.0', '$120return_value.1']
    return $120return_value.1                ['$120return_value.1']
label 122:
    $122load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$122load_global.0']
    $const134.2.4 = const(str, 0 cannot be raised to a negative power) ['$const134.2.4']
    $140call.3 = call $122load_global.0($const134.2.4, func=$122load_global.0, args=[Var($const134.2.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.0', '$140call.3', '$const134.2.4']
    raise $140call.3                         ['$140call.3']
label 152:
    $const154.1.1 = const(int, 1)            ['$const154.1.1']
    $156compare_op.2 = a.1 != $const154.1.1  ['$156compare_op.2', '$const154.1.1', 'a.1']
    bool162 = global(bool: <class 'bool'>)   ['bool162']
    $162pred = call bool162($156compare_op.2, func=bool162, args=(Var($156compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$156compare_op.2', '$162pred', 'bool162']
    branch $162pred, 164, 180                ['$162pred']
label 164:
    $const166.1.5 = const(int, -1)           ['$const166.1.5']
    $168compare_op.2 = a.1 != $const166.1.5  ['$168compare_op.2', '$const166.1.5', 'a.1']
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174($168compare_op.2, func=bool174, args=(Var($168compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$168compare_op.2', '$174pred', 'bool174']
    branch $174pred, 176, 180                ['$174pred']
label 176:
    $const176.0.2 = const(int, 0)            ['$const176.0.2']
    $178return_value.1 = cast(value=$const176.0.2) ['$178return_value.1', '$const176.0.2']
    return $178return_value.1                ['$178return_value.1']
label 180:
    jump 190                                 []
label 182:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 190                                 []
label 190:
    $const192.1.7 = const(int, 65536)        ['$const192.1.7']
    $194compare_op.2 = exp > $const192.1.7   ['$194compare_op.2', '$const192.1.7', 'exp']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$194compare_op.2', '$200pred', 'bool200']
    branch $200pred, 202, 270                ['$200pred']
label 202:
    $202load_global.0 = global(math: <module 'math' (built-in)>) ['$202load_global.0']
    $214load_attr.2 = getattr(value=$202load_global.0, attr=pow) ['$202load_global.0', '$214load_attr.2']
    $226load_global.4 = global(float: <class 'float'>) ['$226load_global.4']
    $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$226load_global.4', '$244call.7', 'b']
    $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.2', '$244call.7', '$258call.8', 'a.1']
    $268return_value.9 = cast(value=$258call.8) ['$258call.8', '$268return_value.9']
    return $268return_value.9                ['$268return_value.9']
label 270:
    $const272.1.2 = const(int, 0)            ['$const272.1.2']
    $274compare_op.2 = exp != $const272.1.2  ['$274compare_op.2', '$const272.1.2', 'exp']
    bool280 = global(bool: <class 'bool'>)   ['bool280']
    $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$274compare_op.2', '$280pred', 'bool280']
    branch $280pred, 282, 334                ['$280pred']
label 282:
    $const284.1.1 = const(int, 1)            ['$const284.1.1']
    $binop_and_286.2 = exp & $const284.1.1   ['$binop_and_286.2', '$const284.1.1', 'exp']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$290pred', '$binop_and_286.2', 'bool290']
    branch $290pred, 292, 302                ['$290pred']
label 292:
    $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul296.2', 'a.1', 'r']
    r = $binop_imul296.2                     ['$binop_imul296.2', 'r']
    jump 302                                 []
label 302:
    $const304.1.1 = const(int, 1)            ['$const304.1.1']
    $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_irshift306.2', '$const304.1.1', 'exp']
    exp = $binop_irshift306.2                ['$binop_irshift306.2', 'exp']
    $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul316.5', 'a.1', 'a.1']
    a.1 = $binop_imul316.5                   ['$binop_imul316.5', 'a.1']
    $const324.7.2 = const(int, 0)            ['$const324.7.2']
    $326compare_op.8 = exp != $const324.7.2  ['$326compare_op.8', '$const324.7.2', 'exp']
    bool332 = global(bool: <class 'bool'>)   ['bool332']
    $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$326compare_op.8', '$332pred', 'bool332']
    branch $332pred, 282, 334                ['$332pred']
label 334:
    bool336 = global(bool: <class 'bool'>)   ['bool336']
    $336pred = call bool336(invert, func=bool336, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$336pred', 'bool336', 'invert']
    branch $336pred, 338, 348                ['$336pred']
label 338:
    $const338.0.8 = const(float, 1.0)        ['$const338.0.8']
    $binop_truediv342.2 = $const338.0.8 / r  ['$binop_truediv342.2', '$const338.0.8', 'r']
    $phi350.0 = $binop_truediv342.2          ['$binop_truediv342.2', '$phi350.0']
    jump 350                                 []
label 348:
    $phi350.0 = r                            ['$phi350.0', 'r']
    jump 350                                 []
label 350:
    $350return_value.1 = cast(value=$phi350.0) ['$350return_value.1', '$phi350.0']
    return $350return_value.1                ['$350return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D02B50>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block analysis pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D02B50>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block analysis pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D02B50>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block analysis pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D02B50>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block analysis pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D02B50>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block analysis pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D02B50>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block analysis pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D02B50>
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block analysis pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D02B50>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block analysis pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D02B50>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block analysis pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D02B50>
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block analysis pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D02B50>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block analysis pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D02B50>
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block analysis pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D02B50>
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block analysis pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D02B50>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block analysis pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D02B50>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block analysis pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17D02B50>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x0000019A161F4B90>,
                           98)],
             '$194compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A17AD8A90>,
                                   190)],
             '$200pred': [(<numba.core.ir.Assign object at 0x0000019A179401D0>,
                           190)],
             '$202load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17941DD0>,
                                    202)],
             '$214load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A17941150>,
                                  202)],
             '$226load_global.4': [(<numba.core.ir.Assign object at 0x0000019A17940550>,
                                    202)],
             '$244call.7': [(<numba.core.ir.Assign object at 0x0000019A17942210>,
                             202)],
             '$258call.8': [(<numba.core.ir.Assign object at 0x0000019A17940510>,
                             202)],
             '$268return_value.9': [(<numba.core.ir.Assign object at 0x0000019A17943210>,
                                     202)],
             '$274compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A17943A10>,
                                   270)],
             '$280pred': [(<numba.core.ir.Assign object at 0x0000019A17940050>,
                           270)],
             '$290pred': [(<numba.core.ir.Assign object at 0x0000019A17942150>,
                           282)],
             '$30load_deref.5': [(<numba.core.ir.Assign object at 0x0000019A179D4E10>,
                                  0)],
             '$326compare_op.8': [(<numba.core.ir.Assign object at 0x0000019A17D1AA10>,
                                   302)],
             '$332pred': [(<numba.core.ir.Assign object at 0x0000019A17D1AE50>,
                           302)],
             '$336pred': [(<numba.core.ir.Assign object at 0x0000019A17D1B950>,
                           334)],
             '$350return_value.1': [(<numba.core.ir.Assign object at 0x0000019A17D18A50>,
                                     350)],
             '$54compare_op.10': [(<numba.core.ir.Assign object at 0x0000019A161F4FD0>,
                                   0)],
             '$60pred': [(<numba.core.ir.Assign object at 0x0000019A161F5390>,
                          0)],
             '$76compare_op.5': [(<numba.core.ir.Assign object at 0x0000019A161F7990>,
                                  62)],
             '$82pred': [(<numba.core.ir.Assign object at 0x0000019A161F7690>,
                          62)],
             '$84load_global.0': [(<numba.core.ir.Assign object at 0x0000019A161F7B50>,
                                   84)],
             '$8load_deref.1': [(<numba.core.ir.Assign object at 0x0000019A1754B450>,
                                 0)],
             '$98load_deref.0': [(<numba.core.ir.Assign object at 0x0000019A161F5CD0>,
                                  98)],
             '$binop_and_286.2': [(<numba.core.ir.Assign object at 0x0000019A17943C50>,
                                   282)],
             '$binop_imul296.2': [(<numba.core.ir.Assign object at 0x0000019A17942DD0>,
                                   292)],
             '$binop_imul316.5': [(<numba.core.ir.Assign object at 0x0000019A17940450>,
                                   302)],
             '$binop_irshift306.2': [(<numba.core.ir.Assign object at 0x0000019A179409D0>,
                                      302)],
             '$binop_truediv342.2': [(<numba.core.ir.Assign object at 0x0000019A17D1BBD0>,
                                      338)],
             '$const10.2.1': [(<numba.core.ir.Assign object at 0x0000019A17D089D0>,
                               0)],
             '$const192.1.7': [(<numba.core.ir.Assign object at 0x0000019A17ADAFD0>,
                                190)],
             '$const272.1.2': [(<numba.core.ir.Assign object at 0x0000019A17940E90>,
                                270)],
             '$const284.1.1': [(<numba.core.ir.Assign object at 0x0000019A17943B90>,
                                282)],
             '$const304.1.1': [(<numba.core.ir.Assign object at 0x0000019A17942F10>,
                                302)],
             '$const324.7.2': [(<numba.core.ir.Assign object at 0x0000019A17D19E50>,
                                302)],
             '$const338.0.8': [(<numba.core.ir.Assign object at 0x0000019A17D18A90>,
                                338)],
             '$const52.9.2': [(<numba.core.ir.Assign object at 0x0000019A161F49D0>,
                               0)],
             '$const74.4.2': [(<numba.core.ir.Assign object at 0x0000019A161F7DD0>,
                               62)],
             '$phi350.0': [(<numba.core.ir.Assign object at 0x0000019A17D1BE90>,
                            338),
                           (<numba.core.ir.Assign object at 0x0000019A17D1ACD0>,
                            348)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A17A1BD50>, 0)],
             'a.1': [(<numba.core.ir.Assign object at 0x0000019A1748FF50>, 0),
                     (<numba.core.ir.Assign object at 0x0000019A17AD9C50>,
                      302)],
             'b': [(<numba.core.ir.Assign object at 0x0000019A17A19C50>, 0)],
             'bool100': [(<numba.core.ir.Assign object at 0x0000019A161F4D90>,
                          98)],
             'bool200': [(<numba.core.ir.Assign object at 0x0000019A17941110>,
                          190)],
             'bool280': [(<numba.core.ir.Assign object at 0x0000019A17943B10>,
                          270)],
             'bool290': [(<numba.core.ir.Assign object at 0x0000019A17940B50>,
                          282)],
             'bool332': [(<numba.core.ir.Assign object at 0x0000019A17D1AF10>,
                          302)],
             'bool336': [(<numba.core.ir.Assign object at 0x0000019A17D19350>,
                          334)],
             'bool60': [(<numba.core.ir.Assign object at 0x0000019A161F7010>,
                         0)],
             'bool82': [(<numba.core.ir.Assign object at 0x0000019A161F73D0>,
                         62)],
             'exp': [(<numba.core.ir.Assign object at 0x0000019A161F7C10>, 62),
                     (<numba.core.ir.Assign object at 0x0000019A17AD8950>, 182),
                     (<numba.core.ir.Assign object at 0x0000019A17942610>,
                      302)],
             'invert': [(<numba.core.ir.Assign object at 0x0000019A161F46D0>,
                         62),
                        (<numba.core.ir.Assign object at 0x0000019A17AD8150>,
                         182)],
             'r': [(<numba.core.ir.Assign object at 0x0000019A179D5850>, 0),
                   (<numba.core.ir.Assign object at 0x0000019A17942B50>, 292)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17549E10>
DEBUG:numba.core.ssa:Fix SSA violator on var r
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17943290>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:first assign: r
DEBUG:numba.core.ssa:replaced with: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17943290>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17943290>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17943290>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17943290>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17943290>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17943290>
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17943290>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17943290>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17943290>
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17943290>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r = $binop_imul296.2
DEBUG:numba.core.ssa:replaced with: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17943290>
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17943290>
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17943290>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17943290>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17943290>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000019A17940790>],
             292: [<numba.core.ir.Assign object at 0x0000019A17D0AF10>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D0A250>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D0A250>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D0A250>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D0A250>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D0A250>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D0A250>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D0A250>
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D0A250>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D0A250>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D0A250>
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D0A250>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='r' stmt=$binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 292
DEBUG:numba.core.ssa:idom 282 from label 292
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:find_def_from_top label 282
DEBUG:numba.core.ssa:insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 282
DEBUG:numba.core.ssa:find_def_from_bottom label 302
DEBUG:numba.core.ssa:find_def_from_top label 302
DEBUG:numba.core.ssa:insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 302
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:incoming_def r.2 = phi(incoming_values=[], incoming_blocks=[])
DEBUG:numba.core.ssa:find_def_from_bottom label 292
DEBUG:numba.core.ssa:incoming_def r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:incoming_def r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:find_def_from_bottom label 270
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 190 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 190
DEBUG:numba.core.ssa:find_def_from_top label 190
DEBUG:numba.core.ssa:idom 0 from label 190
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D0A250>
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D0A250>
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D0A250>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r
DEBUG:numba.core.ssa:find_def var='r' stmt=$binop_truediv342.2 = $const338.0.8 / r
DEBUG:numba.core.ssa:find_def_from_top label 338
DEBUG:numba.core.ssa:idom 334 from label 338
DEBUG:numba.core.ssa:find_def_from_bottom label 334
DEBUG:numba.core.ssa:find_def_from_top label 334
DEBUG:numba.core.ssa:insert phi node r.4 = phi(incoming_values=[], incoming_blocks=[]) at 334
DEBUG:numba.core.ssa:find_def_from_bottom label 302
DEBUG:numba.core.ssa:incoming_def r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:find_def_from_bottom label 270
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 190 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 190
DEBUG:numba.core.ssa:find_def_from_top label 190
DEBUG:numba.core.ssa:idom 0 from label 190
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: $binop_truediv342.2 = $const338.0.8 / r.4
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D0A250>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r
DEBUG:numba.core.ssa:find_def var='r' stmt=$phi350.0 = r
DEBUG:numba.core.ssa:find_def_from_top label 348
DEBUG:numba.core.ssa:idom 334 from label 348
DEBUG:numba.core.ssa:find_def_from_bottom label 334
DEBUG:numba.core.ssa:replaced with: $phi350.0 = r.4
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D0A250>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var a.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:first assign: a.1
DEBUG:numba.core.ssa:replaced with: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1 = $binop_imul316.5
DEBUG:numba.core.ssa:replaced with: a.1.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r.4
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r.4
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000019A17D0BA90>],
             302: [<numba.core.ir.Assign object at 0x0000019A17CDD110>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17ADB410>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17ADB410>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17ADB410>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17ADB410>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17ADB410>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17ADB410>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17ADB410>
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17ADB410>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='a.1' stmt=$258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 202
DEBUG:numba.core.ssa:idom 190 from label 202
DEBUG:numba.core.ssa:find_def_from_bottom label 190
DEBUG:numba.core.ssa:find_def_from_top label 190
DEBUG:numba.core.ssa:idom 0 from label 190
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17ADB410>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17ADB410>
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17ADB410>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='a.1' stmt=$binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 292
DEBUG:numba.core.ssa:idom 282 from label 292
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:find_def_from_top label 282
DEBUG:numba.core.ssa:insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 282
DEBUG:numba.core.ssa:find_def_from_bottom label 302
DEBUG:numba.core.ssa:incoming_def a.1.1 = $binop_imul316.5
DEBUG:numba.core.ssa:find_def_from_bottom label 270
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 190 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 190
DEBUG:numba.core.ssa:find_def_from_top label 190
DEBUG:numba.core.ssa:idom 0 from label 190
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17ADB410>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='a.1' stmt=$binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 302
DEBUG:numba.core.ssa:idom 282 from label 302
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:replaced with: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17ADB410>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17ADB410>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r.4
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17ADB410>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r.4
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17ADB410>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var invert
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:first assign: invert
DEBUG:numba.core.ssa:replaced with: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, False)
DEBUG:numba.core.ssa:replaced with: invert.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, old_numbers.py:241), Var(a.1, old_numbers.py:217)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r.4
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r.4
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {62: [<numba.core.ir.Assign object at 0x0000019A17D0B090>],
             182: [<numba.core.ir.Assign object at 0x0000019A17D0BD50>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: invert.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, old_numbers.py:241), Var(a.1, old_numbers.py:217)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='invert' stmt=$336pred = call bool336(invert, func=bool336, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 334
DEBUG:numba.core.ssa:idom 270 from label 334
DEBUG:numba.core.ssa:find_def_from_bottom label 270
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 190 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 190
DEBUG:numba.core.ssa:find_def_from_top label 190
DEBUG:numba.core.ssa:insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 190
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:find_def_from_top label 180
DEBUG:numba.core.ssa:idom 98 from label 180
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 62 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 62
DEBUG:numba.core.ssa:incoming_def invert = const(bool, True)
DEBUG:numba.core.ssa:find_def_from_bottom label 182
DEBUG:numba.core.ssa:incoming_def invert.1 = const(bool, False)
DEBUG:numba.core.ssa:replaced with: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, old_numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r.4
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r.4
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A179D4210>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var exp
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D0B710>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D0B710>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:first assign: exp
DEBUG:numba.core.ssa:replaced with: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D0B710>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D0B710>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D0B710>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D0B710>
DEBUG:numba.core.ssa:on stmt: invert.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:replaced with: exp.1 = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D0B710>
DEBUG:numba.core.ssa:on stmt: invert.2 = phi(incoming_values=[Var(invert, old_numbers.py:219), Var(invert.1, old_numbers.py:232)], incoming_blocks=[180, 182])
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D0B710>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D0B710>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D0B710>
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, old_numbers.py:241), Var(a.1, old_numbers.py:217)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D0B710>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D0B710>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $binop_irshift306.2
DEBUG:numba.core.ssa:replaced with: exp.2 = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D0B710>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, old_numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D0B710>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r.4
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D0B710>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r.4
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D0B710>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {62: [<numba.core.ir.Assign object at 0x0000019A179D4210>],
             182: [<numba.core.ir.Assign object at 0x0000019A17CDE1D0>],
             302: [<numba.core.ir.Assign object at 0x0000019A17CDCD50>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D1B0D0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D1B0D0>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:find_def var='exp' stmt=$76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D1B0D0>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D1B0D0>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D1B0D0>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D1B0D0>
DEBUG:numba.core.ssa:on stmt: invert.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp.1 = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D1B0D0>
DEBUG:numba.core.ssa:on stmt: invert.2 = phi(incoming_values=[Var(invert, old_numbers.py:219), Var(invert.1, old_numbers.py:232)], incoming_blocks=[180, 182])
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:find_def var='exp' stmt=$194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:find_def_from_top label 190
DEBUG:numba.core.ssa:insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 190
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:find_def_from_top label 180
DEBUG:numba.core.ssa:idom 98 from label 180
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 62 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 62
DEBUG:numba.core.ssa:incoming_def exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:find_def_from_bottom label 182
DEBUG:numba.core.ssa:incoming_def exp.1 = b
DEBUG:numba.core.ssa:replaced with: $194compare_op.2 = exp.3 > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D1B0D0>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D1B0D0>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:find_def var='exp' stmt=$274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 190 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 190
DEBUG:numba.core.ssa:replaced with: $274compare_op.2 = exp.3 != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D1B0D0>
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, old_numbers.py:241), Var(a.1, old_numbers.py:217)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:find_def var='exp' stmt=$binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:find_def_from_top label 282
DEBUG:numba.core.ssa:insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 282
DEBUG:numba.core.ssa:find_def_from_bottom label 302
DEBUG:numba.core.ssa:incoming_def exp.2 = $binop_irshift306.2
DEBUG:numba.core.ssa:find_def_from_bottom label 270
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 190 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 190
DEBUG:numba.core.ssa:incoming_def exp.3 = phi(incoming_values=[Var(exp, old_numbers.py:220), Var(exp.1, old_numbers.py:233)], incoming_blocks=[180, 182])
DEBUG:numba.core.ssa:replaced with: $binop_and_286.2 = exp.4 & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D1B0D0>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D1B0D0>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='exp' stmt=$binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 302
DEBUG:numba.core.ssa:idom 282 from label 302
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:replaced with: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp.2 = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:find_def var='exp' stmt=$326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:replaced with: $326compare_op.8 = exp.2 != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D1B0D0>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, old_numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D1B0D0>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r.4
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D1B0D0>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r.4
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D1B0D0>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var $phi350.0
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D033D0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D033D0>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D033D0>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D033D0>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D033D0>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D033D0>
DEBUG:numba.core.ssa:on stmt: invert.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp.1 = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D033D0>
DEBUG:numba.core.ssa:on stmt: exp.3 = phi(incoming_values=[Var(exp, old_numbers.py:220), Var(exp.1, old_numbers.py:233)], incoming_blocks=[180, 182])
DEBUG:numba.core.ssa:on stmt: invert.2 = phi(incoming_values=[Var(invert, old_numbers.py:219), Var(invert.1, old_numbers.py:232)], incoming_blocks=[180, 182])
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp.3 > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D033D0>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D033D0>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp.3 != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D033D0>
DEBUG:numba.core.ssa:on stmt: exp.4 = phi(incoming_values=[Var(exp.2, old_numbers.py:240), Var(exp.3, old_numbers.py:234)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, old_numbers.py:241), Var(a.1, old_numbers.py:217)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp.4 & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D033D0>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D033D0>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp.2 = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp.2 != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D033D0>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, old_numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D033D0>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r.4
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:first assign: $phi350.0
DEBUG:numba.core.ssa:replaced with: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D033D0>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r.4
DEBUG:numba.core.ssa:replaced with: $phi350.0.1 = r.4
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D033D0>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {338: [<numba.core.ir.Assign object at 0x0000019A17CDEF90>],
             348: [<numba.core.ir.Assign object at 0x0000019A17CDFC50>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float32)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: invert.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp.1 = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: exp.3 = phi(incoming_values=[Var(exp, old_numbers.py:220), Var(exp.1, old_numbers.py:233)], incoming_blocks=[180, 182])
DEBUG:numba.core.ssa:on stmt: invert.2 = phi(incoming_values=[Var(invert, old_numbers.py:219), Var(invert.1, old_numbers.py:232)], incoming_blocks=[180, 182])
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp.3 > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp.3 != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: exp.4 = phi(incoming_values=[Var(exp.2, old_numbers.py:240), Var(exp.3, old_numbers.py:234)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, old_numbers.py:241), Var(a.1, old_numbers.py:217)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp.4 & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp.2 = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp.2 != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, old_numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r.4
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: $phi350.0.1 = r.4
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17D08F90>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:find_def var='$phi350.0' stmt=$350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:find_def_from_top label 350
DEBUG:numba.core.ssa:insert phi node $phi350.0.2 = phi(incoming_values=[], incoming_blocks=[]) at 350
DEBUG:numba.core.ssa:find_def_from_bottom label 338
DEBUG:numba.core.ssa:incoming_def $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:find_def_from_bottom label 348
DEBUG:numba.core.ssa:incoming_def $phi350.0.1 = r.4
DEBUG:numba.core.ssa:replaced with: $350return_value.1 = cast(value=$phi350.0.2)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2436)
           2	RESUME(arg=0, lineno=2436)
           4	LOAD_FAST(arg=0, lineno=2441)
           6	LOAD_ATTR(arg=0, lineno=2441)
          16	LOAD_CONST(arg=1, lineno=2441)
          18	BINARY_OP(arg=8, lineno=2441)
          22	LOAD_FAST(arg=0, lineno=2441)
          24	LOAD_ATTR(arg=1, lineno=2441)
          34	LOAD_CONST(arg=1, lineno=2441)
          36	BINARY_OP(arg=8, lineno=2441)
          40	BINARY_OP(arg=0, lineno=2441)
          44	RETURN_VALUE(arg=None, lineno=2441)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2436)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=2436)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=2441)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=2441)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_CONST(arg=1, lineno=2441)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=BINARY_OP(arg=8, lineno=2441)
DEBUG:numba.core.byteflow:stack ['$6load_attr.1', '$const16.2.1']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=2441)
DEBUG:numba.core.byteflow:stack ['$binop_pow18.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_ATTR(arg=1, lineno=2441)
DEBUG:numba.core.byteflow:stack ['$binop_pow18.3', '$x22.4']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=2441)
DEBUG:numba.core.byteflow:stack ['$binop_pow18.3', '$24load_attr.5']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=BINARY_OP(arg=8, lineno=2441)
DEBUG:numba.core.byteflow:stack ['$binop_pow18.3', '$24load_attr.5', '$const34.6.1']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=BINARY_OP(arg=0, lineno=2441)
DEBUG:numba.core.byteflow:stack ['$binop_pow18.3', '$binop_pow36.7']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=RETURN_VALUE(arg=None, lineno=2441)
DEBUG:numba.core.byteflow:stack ['$binop_add40.8']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'item': '$x4.0', 'res': '$6load_attr.1'}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$const16.2.1'}), (18, {'op': '**', 'lhs': '$6load_attr.1', 'rhs': '$const16.2.1', 'res': '$binop_pow18.3'}), (20, {}), (22, {'res': '$x22.4'}), (24, {'item': '$x22.4', 'res': '$24load_attr.5'}), (26, {}), (28, {}), (30, {}), (32, {}), (34, {'res': '$const34.6.1'}), (36, {'op': '**', 'lhs': '$24load_attr.5', 'rhs': '$const34.6.1', 'res': '$binop_pow36.7'}), (38, {}), (40, {'op': '+', 'lhs': '$binop_pow18.3', 'rhs': '$binop_pow36.7', 'res': '$binop_add40.8'}), (42, {}), (44, {'retval': '$binop_add40.8', 'castval': '$44return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    $6load_attr.1 = getattr(value=x, attr=real) ['$6load_attr.1', 'x']
    $const16.2.1 = const(int, 2)             ['$const16.2.1']
    $binop_pow18.3 = $6load_attr.1 ** $const16.2.1 ['$6load_attr.1', '$binop_pow18.3', '$const16.2.1']
    $24load_attr.5 = getattr(value=x, attr=imag) ['$24load_attr.5', 'x']
    $const34.6.1 = const(int, 2)             ['$const34.6.1']
    $binop_pow36.7 = $24load_attr.5 ** $const34.6.1 ['$24load_attr.5', '$binop_pow36.7', '$const34.6.1']
    $binop_add40.8 = $binop_pow18.3 + $binop_pow36.7 ['$binop_add40.8', '$binop_pow18.3', '$binop_pow36.7']
    $44return_value.9 = cast(value=$binop_add40.8) ['$44return_value.9', '$binop_add40.8']
    return $44return_value.9                 ['$44return_value.9']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17570050>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: $6load_attr.1 = getattr(value=x, attr=real)
DEBUG:numba.core.ssa:on stmt: $const16.2.1 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $binop_pow18.3 = $6load_attr.1 ** $const16.2.1
DEBUG:numba.core.ssa:on stmt: $24load_attr.5 = getattr(value=x, attr=imag)
DEBUG:numba.core.ssa:on stmt: $const34.6.1 = const(int, 2)
DEBUG:numba.core.ssa:on stmt: $binop_pow36.7 = $24load_attr.5 ** $const34.6.1
DEBUG:numba.core.ssa:on stmt: $binop_add40.8 = $binop_pow18.3 + $binop_pow36.7
DEBUG:numba.core.ssa:on stmt: $44return_value.9 = cast(value=$binop_add40.8)
DEBUG:numba.core.ssa:on stmt: return $44return_value.9
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$24load_attr.5': [(<numba.core.ir.Assign object at 0x0000019A176DC1D0>,
                                 0)],
             '$44return_value.9': [(<numba.core.ir.Assign object at 0x0000019A176DD210>,
                                    0)],
             '$6load_attr.1': [(<numba.core.ir.Assign object at 0x0000019A176DD910>,
                                0)],
             '$binop_add40.8': [(<numba.core.ir.Assign object at 0x0000019A176DFE50>,
                                 0)],
             '$binop_pow18.3': [(<numba.core.ir.Assign object at 0x0000019A176DCB50>,
                                 0)],
             '$binop_pow36.7': [(<numba.core.ir.Assign object at 0x0000019A176DDA90>,
                                 0)],
             '$const16.2.1': [(<numba.core.ir.Assign object at 0x0000019A176DD650>,
                               0)],
             '$const34.6.1': [(<numba.core.ir.Assign object at 0x0000019A176DFE90>,
                               0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A176DC450>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17570050>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	COPY_FREE_VARS(arg=3, lineno=214)
           4	RESUME(arg=0, lineno=214)
           6	PUSH_NULL(arg=None, lineno=216)
           8	LOAD_DEREF(arg=6, lineno=216)
          10	LOAD_CONST(arg=1, lineno=216)
          12	PRECALL(arg=1, lineno=216)
          16	CALL(arg=1, lineno=216)
          26	STORE_FAST(arg=2, lineno=216)
          28	PUSH_NULL(arg=None, lineno=217)
          30	LOAD_DEREF(arg=6, lineno=217)
          32	LOAD_FAST(arg=0, lineno=217)
          34	PRECALL(arg=1, lineno=217)
          38	CALL(arg=1, lineno=217)
          48	STORE_FAST(arg=0, lineno=217)
          50	LOAD_FAST(arg=1, lineno=218)
          52	LOAD_CONST(arg=2, lineno=218)
          54	COMPARE_OP(arg=0, lineno=218)
          60	POP_JUMP_FORWARD_IF_FALSE(arg=60, lineno=218)
          62	LOAD_CONST(arg=3, lineno=219)
          64	STORE_FAST(arg=3, lineno=219)
          66	LOAD_FAST(arg=1, lineno=220)
          68	UNARY_NEGATIVE(arg=None, lineno=220)
          70	STORE_FAST(arg=4, lineno=220)
          72	LOAD_FAST(arg=4, lineno=221)
          74	LOAD_CONST(arg=2, lineno=221)
          76	COMPARE_OP(arg=0, lineno=221)
          82	POP_JUMP_FORWARD_IF_FALSE(arg=7, lineno=221)
          84	LOAD_GLOBAL(arg=0, lineno=222)
          96	RAISE_VARARGS(arg=1, lineno=222)
>         98	LOAD_DEREF(arg=5, lineno=223)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=39, lineno=223)
         102	LOAD_FAST(arg=0, lineno=224)
         104	LOAD_CONST(arg=2, lineno=224)
         106	COMPARE_OP(arg=2, lineno=224)
         112	POP_JUMP_FORWARD_IF_FALSE(arg=19, lineno=224)
         114	LOAD_DEREF(arg=7, lineno=225)
         116	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=225)
         118	LOAD_DEREF(arg=7, lineno=226)
         120	RETURN_VALUE(arg=None, lineno=226)
>        122	LOAD_GLOBAL(arg=3, lineno=228)
         134	LOAD_CONST(arg=4, lineno=228)
         136	PRECALL(arg=1, lineno=228)
         140	CALL(arg=1, lineno=228)
         150	RAISE_VARARGS(arg=1, lineno=228)
>        152	LOAD_FAST(arg=0, lineno=229)
         154	LOAD_CONST(arg=1, lineno=229)
         156	COMPARE_OP(arg=3, lineno=229)
         162	POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=229)
         164	LOAD_FAST(arg=0, lineno=229)
         166	LOAD_CONST(arg=5, lineno=229)
         168	COMPARE_OP(arg=3, lineno=229)
         174	POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=229)
         176	LOAD_CONST(arg=2, lineno=230)
         178	RETURN_VALUE(arg=None, lineno=230)
>        180	JUMP_FORWARD(arg=4, lineno=230)
>        182	LOAD_CONST(arg=6, lineno=232)
         184	STORE_FAST(arg=3, lineno=232)
         186	LOAD_FAST(arg=1, lineno=233)
         188	STORE_FAST(arg=4, lineno=233)
>        190	LOAD_FAST(arg=4, lineno=234)
         192	LOAD_CONST(arg=7, lineno=234)
         194	COMPARE_OP(arg=4, lineno=234)
         200	POP_JUMP_FORWARD_IF_FALSE(arg=34, lineno=234)
         202	LOAD_GLOBAL(arg=5, lineno=236)
         214	LOAD_ATTR(arg=3, lineno=236)
         224	LOAD_FAST(arg=0, lineno=236)
         226	LOAD_GLOBAL(arg=9, lineno=236)
         238	LOAD_FAST(arg=1, lineno=236)
         240	PRECALL(arg=1, lineno=236)
         244	CALL(arg=1, lineno=236)
         254	PRECALL(arg=2, lineno=236)
         258	CALL(arg=2, lineno=236)
         268	RETURN_VALUE(arg=None, lineno=236)
>        270	LOAD_FAST(arg=4, lineno=237)
         272	LOAD_CONST(arg=2, lineno=237)
         274	COMPARE_OP(arg=3, lineno=237)
         280	POP_JUMP_FORWARD_IF_FALSE(arg=26, lineno=237)
>        282	LOAD_FAST(arg=4, lineno=238)
         284	LOAD_CONST(arg=1, lineno=238)
         286	BINARY_OP(arg=1, lineno=238)
         290	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=238)
         292	LOAD_FAST(arg=2, lineno=239)
         294	LOAD_FAST(arg=0, lineno=239)
         296	BINARY_OP(arg=18, lineno=239)
         300	STORE_FAST(arg=2, lineno=239)
>        302	LOAD_FAST(arg=4, lineno=240)
         304	LOAD_CONST(arg=1, lineno=240)
         306	BINARY_OP(arg=22, lineno=240)
         310	STORE_FAST(arg=4, lineno=240)
         312	LOAD_FAST(arg=0, lineno=241)
         314	LOAD_FAST(arg=0, lineno=241)
         316	BINARY_OP(arg=18, lineno=241)
         320	STORE_FAST(arg=0, lineno=241)
         322	LOAD_FAST(arg=4, lineno=237)
         324	LOAD_CONST(arg=2, lineno=237)
         326	COMPARE_OP(arg=3, lineno=237)
         332	POP_JUMP_BACKWARD_IF_TRUE(arg=26, lineno=237)
>        334	LOAD_FAST(arg=3, lineno=243)
         336	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=243)
         338	LOAD_CONST(arg=8, lineno=243)
         340	LOAD_FAST(arg=2, lineno=243)
         342	BINARY_OP(arg=11, lineno=243)
         346	JUMP_FORWARD(arg=1, lineno=243)
>        348	LOAD_FAST(arg=2, lineno=243)
>        350	RETURN_VALUE(arg=None, lineno=243)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=214)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=COPY_FREE_VARS(arg=3, lineno=214)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=RESUME(arg=0, lineno=214)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=PUSH_NULL(arg=None, lineno=216)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=8, inst=LOAD_DEREF(arg=6, lineno=216)
DEBUG:numba.core.byteflow:stack ['$null$6.0']
DEBUG:numba.core.byteflow:dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=216)
DEBUG:numba.core.byteflow:stack ['$null$6.0', '$8load_deref.1']
DEBUG:numba.core.byteflow:dispatch pc=12, inst=PRECALL(arg=1, lineno=216)
DEBUG:numba.core.byteflow:stack ['$null$6.0', '$8load_deref.1', '$const10.2.1']
DEBUG:numba.core.byteflow:dispatch pc=16, inst=CALL(arg=1, lineno=216)
DEBUG:numba.core.byteflow:stack ['$null$6.0', '$8load_deref.1', '$const10.2.1']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=STORE_FAST(arg=2, lineno=216)
DEBUG:numba.core.byteflow:stack ['$16call.3']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=PUSH_NULL(arg=None, lineno=217)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=30, inst=LOAD_DEREF(arg=6, lineno=217)
DEBUG:numba.core.byteflow:stack ['$null$28.4']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=LOAD_FAST(arg=0, lineno=217)
DEBUG:numba.core.byteflow:stack ['$null$28.4', '$30load_deref.5']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=PRECALL(arg=1, lineno=217)
DEBUG:numba.core.byteflow:stack ['$null$28.4', '$30load_deref.5', '$a32.6']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=CALL(arg=1, lineno=217)
DEBUG:numba.core.byteflow:stack ['$null$28.4', '$30load_deref.5', '$a32.6']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=STORE_FAST(arg=0, lineno=217)
DEBUG:numba.core.byteflow:stack ['$38call.7']
DEBUG:numba.core.byteflow:dispatch pc=50, inst=LOAD_FAST(arg=1, lineno=218)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=218)
DEBUG:numba.core.byteflow:stack ['$b50.8']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=COMPARE_OP(arg=0, lineno=218)
DEBUG:numba.core.byteflow:stack ['$b50.8', '$const52.9.2']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=POP_JUMP_FORWARD_IF_FALSE(arg=60, lineno=218)
DEBUG:numba.core.byteflow:stack ['$54compare_op.10']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=62, stack=(), blockstack=(), npush=0), Edge(pc=182, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=62 nstack_initial=0), State(pc_initial=182 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=62 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=62, inst=LOAD_CONST(arg=3, lineno=219)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=64, inst=STORE_FAST(arg=3, lineno=219)
DEBUG:numba.core.byteflow:stack ['$const62.0.3']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=1, lineno=220)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=68, inst=UNARY_NEGATIVE(arg=None, lineno=220)
DEBUG:numba.core.byteflow:stack ['$b66.1']
DEBUG:numba.core.byteflow:dispatch pc=70, inst=STORE_FAST(arg=4, lineno=220)
DEBUG:numba.core.byteflow:stack ['$68unary_negative.2']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=LOAD_FAST(arg=4, lineno=221)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_CONST(arg=2, lineno=221)
DEBUG:numba.core.byteflow:stack ['$exp72.3']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=COMPARE_OP(arg=0, lineno=221)
DEBUG:numba.core.byteflow:stack ['$exp72.3', '$const74.4.2']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=POP_JUMP_FORWARD_IF_FALSE(arg=7, lineno=221)
DEBUG:numba.core.byteflow:stack ['$76compare_op.5']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=182 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=182 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=182, inst=LOAD_CONST(arg=6, lineno=232)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=184, inst=STORE_FAST(arg=3, lineno=232)
DEBUG:numba.core.byteflow:stack ['$const182.0.6']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=LOAD_FAST(arg=1, lineno=233)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=188, inst=STORE_FAST(arg=4, lineno=233)
DEBUG:numba.core.byteflow:stack ['$b186.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=190, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=98 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=84 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=84, inst=LOAD_GLOBAL(arg=0, lineno=222)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=RAISE_VARARGS(arg=1, lineno=222)
DEBUG:numba.core.byteflow:stack ['$84load_global.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=98 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=98, inst=LOAD_DEREF(arg=5, lineno=223)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=39, lineno=223)
DEBUG:numba.core.byteflow:stack ['$98load_deref.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=190 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=190, inst=LOAD_FAST(arg=4, lineno=234)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=192, inst=LOAD_CONST(arg=7, lineno=234)
DEBUG:numba.core.byteflow:stack ['$exp190.0']
DEBUG:numba.core.byteflow:dispatch pc=194, inst=COMPARE_OP(arg=4, lineno=234)
DEBUG:numba.core.byteflow:stack ['$exp190.0', '$const192.1.7']
DEBUG:numba.core.byteflow:dispatch pc=200, inst=POP_JUMP_FORWARD_IF_FALSE(arg=34, lineno=234)
DEBUG:numba.core.byteflow:stack ['$194compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=202, stack=(), blockstack=(), npush=0), Edge(pc=270, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=102 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=102, inst=LOAD_FAST(arg=0, lineno=224)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=104, inst=LOAD_CONST(arg=2, lineno=224)
DEBUG:numba.core.byteflow:stack ['$a102.0']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=COMPARE_OP(arg=2, lineno=224)
DEBUG:numba.core.byteflow:stack ['$a102.0', '$const104.1.2']
DEBUG:numba.core.byteflow:dispatch pc=112, inst=POP_JUMP_FORWARD_IF_FALSE(arg=19, lineno=224)
DEBUG:numba.core.byteflow:stack ['$106compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=152, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=180 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=180, inst=JUMP_FORWARD(arg=4, lineno=230)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=190, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=202 nstack_initial=0), State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=202 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=202, inst=LOAD_GLOBAL(arg=5, lineno=236)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=214, inst=LOAD_ATTR(arg=3, lineno=236)
DEBUG:numba.core.byteflow:stack ['$null$202.1', '$202load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=LOAD_FAST(arg=0, lineno=236)
DEBUG:numba.core.byteflow:stack ['$null$202.1', '$214load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=LOAD_GLOBAL(arg=9, lineno=236)
DEBUG:numba.core.byteflow:stack ['$null$202.1', '$214load_attr.2', '$a224.3']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=LOAD_FAST(arg=1, lineno=236)
DEBUG:numba.core.byteflow:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4']
DEBUG:numba.core.byteflow:dispatch pc=240, inst=PRECALL(arg=1, lineno=236)
DEBUG:numba.core.byteflow:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4', '$b238.6']
DEBUG:numba.core.byteflow:dispatch pc=244, inst=CALL(arg=1, lineno=236)
DEBUG:numba.core.byteflow:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$null$226.5', '$226load_global.4', '$b238.6']
DEBUG:numba.core.byteflow:dispatch pc=254, inst=PRECALL(arg=2, lineno=236)
DEBUG:numba.core.byteflow:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$244call.7']
DEBUG:numba.core.byteflow:dispatch pc=258, inst=CALL(arg=2, lineno=236)
DEBUG:numba.core.byteflow:stack ['$null$202.1', '$214load_attr.2', '$a224.3', '$244call.7']
DEBUG:numba.core.byteflow:dispatch pc=268, inst=RETURN_VALUE(arg=None, lineno=236)
DEBUG:numba.core.byteflow:stack ['$258call.8']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=270 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=270 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=270, inst=LOAD_FAST(arg=4, lineno=237)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=272, inst=LOAD_CONST(arg=2, lineno=237)
DEBUG:numba.core.byteflow:stack ['$exp270.0']
DEBUG:numba.core.byteflow:dispatch pc=274, inst=COMPARE_OP(arg=3, lineno=237)
DEBUG:numba.core.byteflow:stack ['$exp270.0', '$const272.1.2']
DEBUG:numba.core.byteflow:dispatch pc=280, inst=POP_JUMP_FORWARD_IF_FALSE(arg=26, lineno=237)
DEBUG:numba.core.byteflow:stack ['$274compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=282, stack=(), blockstack=(), npush=0), Edge(pc=334, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=114 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=114, inst=LOAD_DEREF(arg=7, lineno=225)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=116, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=225)
DEBUG:numba.core.byteflow:stack ['$114load_deref.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=118, stack=(), blockstack=(), npush=0), Edge(pc=122, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=152 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=152 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=152, inst=LOAD_FAST(arg=0, lineno=229)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_CONST(arg=1, lineno=229)
DEBUG:numba.core.byteflow:stack ['$a152.0']
DEBUG:numba.core.byteflow:dispatch pc=156, inst=COMPARE_OP(arg=3, lineno=229)
DEBUG:numba.core.byteflow:stack ['$a152.0', '$const154.1.1']
DEBUG:numba.core.byteflow:dispatch pc=162, inst=POP_JUMP_FORWARD_IF_FALSE(arg=8, lineno=229)
DEBUG:numba.core.byteflow:stack ['$156compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=164, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=282 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=282 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=282, inst=LOAD_FAST(arg=4, lineno=238)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=284, inst=LOAD_CONST(arg=1, lineno=238)
DEBUG:numba.core.byteflow:stack ['$exp282.0']
DEBUG:numba.core.byteflow:dispatch pc=286, inst=BINARY_OP(arg=1, lineno=238)
DEBUG:numba.core.byteflow:stack ['$exp282.0', '$const284.1.1']
DEBUG:numba.core.byteflow:dispatch pc=290, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=238)
DEBUG:numba.core.byteflow:stack ['$binop_and_286.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=334 nstack_initial=0), State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=334 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=334, inst=LOAD_FAST(arg=3, lineno=243)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=336, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=243)
DEBUG:numba.core.byteflow:stack ['$invert334.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=338, stack=(), blockstack=(), npush=0), Edge(pc=348, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=118 nstack_initial=0), State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=118 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=118, inst=LOAD_DEREF(arg=7, lineno=226)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=226)
DEBUG:numba.core.byteflow:stack ['$118load_deref.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=122 nstack_initial=0), State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=122 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_GLOBAL(arg=3, lineno=228)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=134, inst=LOAD_CONST(arg=4, lineno=228)
DEBUG:numba.core.byteflow:stack ['$null$122.1', '$122load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=136, inst=PRECALL(arg=1, lineno=228)
DEBUG:numba.core.byteflow:stack ['$null$122.1', '$122load_global.0', '$const134.2.4']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=CALL(arg=1, lineno=228)
DEBUG:numba.core.byteflow:stack ['$null$122.1', '$122load_global.0', '$const134.2.4']
DEBUG:numba.core.byteflow:dispatch pc=150, inst=RAISE_VARARGS(arg=1, lineno=228)
DEBUG:numba.core.byteflow:stack ['$140call.3']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=164 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=164 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=229)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_CONST(arg=5, lineno=229)
DEBUG:numba.core.byteflow:stack ['$a164.0']
DEBUG:numba.core.byteflow:dispatch pc=168, inst=COMPARE_OP(arg=3, lineno=229)
DEBUG:numba.core.byteflow:stack ['$a164.0', '$const166.1.5']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=POP_JUMP_FORWARD_IF_FALSE(arg=2, lineno=229)
DEBUG:numba.core.byteflow:stack ['$168compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=176, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=292 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=292, inst=LOAD_FAST(arg=2, lineno=239)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=294, inst=LOAD_FAST(arg=0, lineno=239)
DEBUG:numba.core.byteflow:stack ['$r292.0']
DEBUG:numba.core.byteflow:dispatch pc=296, inst=BINARY_OP(arg=18, lineno=239)
DEBUG:numba.core.byteflow:stack ['$r292.0', '$a294.1']
DEBUG:numba.core.byteflow:dispatch pc=300, inst=STORE_FAST(arg=2, lineno=239)
DEBUG:numba.core.byteflow:stack ['$binop_imul296.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=302, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=302 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=302, inst=LOAD_FAST(arg=4, lineno=240)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=304, inst=LOAD_CONST(arg=1, lineno=240)
DEBUG:numba.core.byteflow:stack ['$exp302.0']
DEBUG:numba.core.byteflow:dispatch pc=306, inst=BINARY_OP(arg=22, lineno=240)
DEBUG:numba.core.byteflow:stack ['$exp302.0', '$const304.1.1']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=STORE_FAST(arg=4, lineno=240)
DEBUG:numba.core.byteflow:stack ['$binop_irshift306.2']
DEBUG:numba.core.byteflow:dispatch pc=312, inst=LOAD_FAST(arg=0, lineno=241)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=314, inst=LOAD_FAST(arg=0, lineno=241)
DEBUG:numba.core.byteflow:stack ['$a312.3']
DEBUG:numba.core.byteflow:dispatch pc=316, inst=BINARY_OP(arg=18, lineno=241)
DEBUG:numba.core.byteflow:stack ['$a312.3', '$a314.4']
DEBUG:numba.core.byteflow:dispatch pc=320, inst=STORE_FAST(arg=0, lineno=241)
DEBUG:numba.core.byteflow:stack ['$binop_imul316.5']
DEBUG:numba.core.byteflow:dispatch pc=322, inst=LOAD_FAST(arg=4, lineno=237)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=324, inst=LOAD_CONST(arg=2, lineno=237)
DEBUG:numba.core.byteflow:stack ['$exp322.6']
DEBUG:numba.core.byteflow:dispatch pc=326, inst=COMPARE_OP(arg=3, lineno=237)
DEBUG:numba.core.byteflow:stack ['$exp322.6', '$const324.7.2']
DEBUG:numba.core.byteflow:dispatch pc=332, inst=POP_JUMP_BACKWARD_IF_TRUE(arg=26, lineno=237)
DEBUG:numba.core.byteflow:stack ['$326compare_op.8']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=334, stack=(), blockstack=(), npush=0), Edge(pc=282, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=338 nstack_initial=0), State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=338 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=338, inst=LOAD_CONST(arg=8, lineno=243)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=340, inst=LOAD_FAST(arg=2, lineno=243)
DEBUG:numba.core.byteflow:stack ['$const338.0.8']
DEBUG:numba.core.byteflow:dispatch pc=342, inst=BINARY_OP(arg=11, lineno=243)
DEBUG:numba.core.byteflow:stack ['$const338.0.8', '$r340.1']
DEBUG:numba.core.byteflow:dispatch pc=346, inst=JUMP_FORWARD(arg=1, lineno=243)
DEBUG:numba.core.byteflow:stack ['$binop_truediv342.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=350, stack=('$binop_truediv342.2',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=348 nstack_initial=0), State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=348 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=348, inst=LOAD_FAST(arg=2, lineno=243)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=350, stack=('$r348.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=176 nstack_initial=0), State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=176 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=176, inst=LOAD_CONST(arg=2, lineno=230)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=178, inst=RETURN_VALUE(arg=None, lineno=230)
DEBUG:numba.core.byteflow:stack ['$const176.0.2']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=180 nstack_initial=0), State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=334 nstack_initial=0), State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=282 nstack_initial=0), State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi350.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=350 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=350, inst=RETURN_VALUE(arg=None, lineno=243)
DEBUG:numba.core.byteflow:stack ['$phi350.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=350 nstack_initial=1)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=118 nstack_initial=0): set(),
             State(pc_initial=122 nstack_initial=0): set(),
             State(pc_initial=152 nstack_initial=0): set(),
             State(pc_initial=164 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=0): set(),
             State(pc_initial=180 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=270 nstack_initial=0): set(),
             State(pc_initial=282 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set(),
             State(pc_initial=334 nstack_initial=0): set(),
             State(pc_initial=338 nstack_initial=0): set(),
             State(pc_initial=348 nstack_initial=0): set(),
             State(pc_initial=350 nstack_initial=1): {'$phi350.0'}})
DEBUG:numba.core.byteflow:defmap: {'$phi350.0': State(pc_initial=348 nstack_initial=0)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi350.0': {('$binop_truediv342.2',
                            State(pc_initial=338 nstack_initial=0)),
                           ('$r348.0',
                            State(pc_initial=348 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi350.0': {('$binop_truediv342.2',
                            State(pc_initial=338 nstack_initial=0)),
                           ('$r348.0',
                            State(pc_initial=348 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi350.0': {('$binop_truediv342.2', State(pc_initial=338 nstack_initial=0)),
               ('$r348.0', State(pc_initial=348 nstack_initial=0))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=338 nstack_initial=0): {'$phi350.0': '$binop_truediv342.2'},
             State(pc_initial=348 nstack_initial=0): {'$phi350.0': '$r348.0'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {}), (6, {}), (8, {'res': '$8load_deref.1'}), (10, {'res': '$const10.2.1'}), (12, {}), (14, {}), (16, {'func': '$8load_deref.1', 'args': ['$const10.2.1'], 'kw_names': None, 'res': '$16call.3'}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {'value': '$16call.3'}), (28, {}), (30, {'res': '$30load_deref.5'}), (32, {'res': '$a32.6'}), (34, {}), (36, {}), (38, {'func': '$30load_deref.5', 'args': ['$a32.6'], 'kw_names': None, 'res': '$38call.7'}), (40, {}), (42, {}), (44, {}), (46, {}), (48, {'value': '$38call.7'}), (50, {'res': '$b50.8'}), (52, {'res': '$const52.9.2'}), (54, {'lhs': '$b50.8', 'rhs': '$const52.9.2', 'res': '$54compare_op.10'}), (56, {}), (58, {}), (60, {'pred': '$54compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: (), 182: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=62 nstack_initial=0):
AdaptBlockInfo(insts=((62, {'res': '$const62.0.3'}), (64, {'value': '$const62.0.3'}), (66, {'res': '$b66.1'}), (68, {'value': '$b66.1', 'res': '$68unary_negative.2'}), (70, {'value': '$68unary_negative.2'}), (72, {'res': '$exp72.3'}), (74, {'res': '$const74.4.2'}), (76, {'lhs': '$exp72.3', 'rhs': '$const74.4.2', 'res': '$76compare_op.5'}), (78, {}), (80, {}), (82, {'pred': '$76compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 98: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'idx': 0, 'res': '$84load_global.0'}), (86, {}), (88, {}), (90, {}), (92, {}), (94, {}), (96, {'exc': '$84load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$98load_deref.0'}), (100, {'pred': '$98load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 180: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$a102.0'}), (104, {'res': '$const104.1.2'}), (106, {'lhs': '$a102.0', 'rhs': '$const104.1.2', 'res': '$106compare_op.2'}), (108, {}), (110, {}), (112, {'pred': '$106compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 152: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_deref.0'}), (116, {'pred': '$114load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={118: (), 122: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=118 nstack_initial=0):
AdaptBlockInfo(insts=((118, {'res': '$118load_deref.0'}), (120, {'retval': '$118load_deref.0', 'castval': '$120return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=122 nstack_initial=0):
AdaptBlockInfo(insts=((122, {'idx': 1, 'res': '$122load_global.0'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {}), (134, {'res': '$const134.2.4'}), (136, {}), (138, {}), (140, {'func': '$122load_global.0', 'args': ['$const134.2.4'], 'kw_names': None, 'res': '$140call.3'}), (142, {}), (144, {}), (146, {}), (148, {}), (150, {'exc': '$140call.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=152 nstack_initial=0):
AdaptBlockInfo(insts=((152, {'res': '$a152.0'}), (154, {'res': '$const154.1.1'}), (156, {'lhs': '$a152.0', 'rhs': '$const154.1.1', 'res': '$156compare_op.2'}), (158, {}), (160, {}), (162, {'pred': '$156compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={164: (), 180: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=164 nstack_initial=0):
AdaptBlockInfo(insts=((164, {'res': '$a164.0'}), (166, {'res': '$const166.1.5'}), (168, {'lhs': '$a164.0', 'rhs': '$const166.1.5', 'res': '$168compare_op.2'}), (170, {}), (172, {}), (174, {'pred': '$168compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: (), 180: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=176 nstack_initial=0):
AdaptBlockInfo(insts=((176, {'res': '$const176.0.2'}), (178, {'retval': '$const176.0.2', 'castval': '$178return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=180 nstack_initial=0):
AdaptBlockInfo(insts=((180, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={190: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'res': '$const182.0.6'}), (184, {'value': '$const182.0.6'}), (186, {'res': '$b186.1'}), (188, {'value': '$b186.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={190: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$exp190.0'}), (192, {'res': '$const192.1.7'}), (194, {'lhs': '$exp190.0', 'rhs': '$const192.1.7', 'res': '$194compare_op.2'}), (196, {}), (198, {}), (200, {'pred': '$194compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: (), 270: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'idx': 2, 'res': '$202load_global.0'}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {}), (214, {'item': '$202load_global.0', 'res': '$214load_attr.2'}), (216, {}), (218, {}), (220, {}), (222, {}), (224, {'res': '$a224.3'}), (226, {'idx': 4, 'res': '$226load_global.4'}), (228, {}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'res': '$b238.6'}), (240, {}), (242, {}), (244, {'func': '$226load_global.4', 'args': ['$b238.6'], 'kw_names': None, 'res': '$244call.7'}), (246, {}), (248, {}), (250, {}), (252, {}), (254, {}), (256, {}), (258, {'func': '$214load_attr.2', 'args': ['$a224.3', '$244call.7'], 'kw_names': None, 'res': '$258call.8'}), (260, {}), (262, {}), (264, {}), (266, {}), (268, {'retval': '$258call.8', 'castval': '$268return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=270 nstack_initial=0):
AdaptBlockInfo(insts=((270, {'res': '$exp270.0'}), (272, {'res': '$const272.1.2'}), (274, {'lhs': '$exp270.0', 'rhs': '$const272.1.2', 'res': '$274compare_op.2'}), (276, {}), (278, {}), (280, {'pred': '$274compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={282: (), 334: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=282 nstack_initial=0):
AdaptBlockInfo(insts=((282, {'res': '$exp282.0'}), (284, {'res': '$const284.1.1'}), (286, {'op': '&', 'lhs': '$exp282.0', 'rhs': '$const284.1.1', 'res': '$binop_and_286.2'}), (288, {}), (290, {'pred': '$binop_and_286.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 302: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$r292.0'}), (294, {'res': '$a294.1'}), (296, {'op': '*=', 'lhs': '$r292.0', 'rhs': '$a294.1', 'res': '$binop_imul296.2'}), (298, {}), (300, {'value': '$binop_imul296.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={302: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$exp302.0'}), (304, {'res': '$const304.1.1'}), (306, {'op': '>>=', 'lhs': '$exp302.0', 'rhs': '$const304.1.1', 'res': '$binop_irshift306.2'}), (308, {}), (310, {'value': '$binop_irshift306.2'}), (312, {'res': '$a312.3'}), (314, {'res': '$a314.4'}), (316, {'op': '*=', 'lhs': '$a312.3', 'rhs': '$a314.4', 'res': '$binop_imul316.5'}), (318, {}), (320, {'value': '$binop_imul316.5'}), (322, {'res': '$exp322.6'}), (324, {'res': '$const324.7.2'}), (326, {'lhs': '$exp322.6', 'rhs': '$const324.7.2', 'res': '$326compare_op.8'}), (328, {}), (330, {}), (332, {'pred': '$326compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={334: (), 282: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=334 nstack_initial=0):
AdaptBlockInfo(insts=((334, {'res': '$invert334.0'}), (336, {'pred': '$invert334.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={338: (), 348: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=338 nstack_initial=0):
AdaptBlockInfo(insts=((338, {'res': '$const338.0.8'}), (340, {'res': '$r340.1'}), (342, {'op': '/', 'lhs': '$const338.0.8', 'rhs': '$r340.1', 'res': '$binop_truediv342.2'}), (344, {}), (346, {})), outgoing_phis={'$phi350.0': '$binop_truediv342.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$binop_truediv342.2',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=348 nstack_initial=0):
AdaptBlockInfo(insts=((348, {'res': '$r348.0'}),), outgoing_phis={'$phi350.0': '$r348.0'}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$r348.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'retval': '$phi350.0', 'castval': '$350return_value.1'}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $8load_deref.1 = freevar(tp: float64)    ['$8load_deref.1']
    $const10.2.1 = const(int, 1)             ['$const10.2.1']
    r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$8load_deref.1', '$const10.2.1', 'r']
    $30load_deref.5 = freevar(tp: float64)   ['$30load_deref.5']
    a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_deref.5', 'a', 'a.1']
    $const52.9.2 = const(int, 0)             ['$const52.9.2']
    $54compare_op.10 = b < $const52.9.2      ['$54compare_op.10', '$const52.9.2', 'b']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$54compare_op.10', '$60pred', 'bool60']
    branch $60pred, 62, 182                  ['$60pred']
label 62:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const74.4.2 = const(int, 0)             ['$const74.4.2']
    $76compare_op.5 = exp < $const74.4.2     ['$76compare_op.5', '$const74.4.2', 'exp']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$76compare_op.5', '$82pred', 'bool82']
    branch $82pred, 84, 98                   ['$82pred']
label 84:
    $84load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$84load_global.0']
    raise $84load_global.0                   ['$84load_global.0']
label 98:
    $98load_deref.0 = freevar(is_integer: False) ['$98load_deref.0']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98load_deref.0', 'bool100']
    branch $100pred, 102, 180                ['$100pred']
label 102:
    $const104.1.2 = const(int, 0)            ['$const104.1.2']
    $106compare_op.2 = a.1 == $const104.1.2  ['$106compare_op.2', '$const104.1.2', 'a.1']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($106compare_op.2, func=bool112, args=(Var($106compare_op.2, old_numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$106compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 152                ['$112pred']
label 114:
    $114load_deref.0 = freevar(zerodiv_return: False) ['$114load_deref.0']
    bool116 = global(bool: <class 'bool'>)   ['bool116']
    $116pred = call bool116($114load_deref.0, func=bool116, args=(Var($114load_deref.0, old_numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$114load_deref.0', '$116pred', 'bool116']
    branch $116pred, 118, 122                ['$116pred']
label 118:
    $118load_deref.0 = freevar(zerodiv_return: False) ['$118load_deref.0']
    $120return_value.1 = cast(value=$118load_deref.0) ['$118load_deref.0', '$120return_value.1']
    return $120return_value.1                ['$120return_value.1']
label 122:
    $122load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$122load_global.0']
    $const134.2.4 = const(str, 0 cannot be raised to a negative power) ['$const134.2.4']
    $140call.3 = call $122load_global.0($const134.2.4, func=$122load_global.0, args=[Var($const134.2.4, old_numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$122load_global.0', '$140call.3', '$const134.2.4']
    raise $140call.3                         ['$140call.3']
label 152:
    $const154.1.1 = const(int, 1)            ['$const154.1.1']
    $156compare_op.2 = a.1 != $const154.1.1  ['$156compare_op.2', '$const154.1.1', 'a.1']
    bool162 = global(bool: <class 'bool'>)   ['bool162']
    $162pred = call bool162($156compare_op.2, func=bool162, args=(Var($156compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$156compare_op.2', '$162pred', 'bool162']
    branch $162pred, 164, 180                ['$162pred']
label 164:
    $const166.1.5 = const(int, -1)           ['$const166.1.5']
    $168compare_op.2 = a.1 != $const166.1.5  ['$168compare_op.2', '$const166.1.5', 'a.1']
    bool174 = global(bool: <class 'bool'>)   ['bool174']
    $174pred = call bool174($168compare_op.2, func=bool174, args=(Var($168compare_op.2, old_numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$168compare_op.2', '$174pred', 'bool174']
    branch $174pred, 176, 180                ['$174pred']
label 176:
    $const176.0.2 = const(int, 0)            ['$const176.0.2']
    $178return_value.1 = cast(value=$const176.0.2) ['$178return_value.1', '$const176.0.2']
    return $178return_value.1                ['$178return_value.1']
label 180:
    jump 190                                 []
label 182:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 190                                 []
label 190:
    $const192.1.7 = const(int, 65536)        ['$const192.1.7']
    $194compare_op.2 = exp > $const192.1.7   ['$194compare_op.2', '$const192.1.7', 'exp']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$194compare_op.2', '$200pred', 'bool200']
    branch $200pred, 202, 270                ['$200pred']
label 202:
    $202load_global.0 = global(math: <module 'math' (built-in)>) ['$202load_global.0']
    $214load_attr.2 = getattr(value=$202load_global.0, attr=pow) ['$202load_global.0', '$214load_attr.2']
    $226load_global.4 = global(float: <class 'float'>) ['$226load_global.4']
    $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$226load_global.4', '$244call.7', 'b']
    $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_attr.2', '$244call.7', '$258call.8', 'a.1']
    $268return_value.9 = cast(value=$258call.8) ['$258call.8', '$268return_value.9']
    return $268return_value.9                ['$268return_value.9']
label 270:
    $const272.1.2 = const(int, 0)            ['$const272.1.2']
    $274compare_op.2 = exp != $const272.1.2  ['$274compare_op.2', '$const272.1.2', 'exp']
    bool280 = global(bool: <class 'bool'>)   ['bool280']
    $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$274compare_op.2', '$280pred', 'bool280']
    branch $280pred, 282, 334                ['$280pred']
label 282:
    $const284.1.1 = const(int, 1)            ['$const284.1.1']
    $binop_and_286.2 = exp & $const284.1.1   ['$binop_and_286.2', '$const284.1.1', 'exp']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$290pred', '$binop_and_286.2', 'bool290']
    branch $290pred, 292, 302                ['$290pred']
label 292:
    $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul296.2', 'a.1', 'r']
    r = $binop_imul296.2                     ['$binop_imul296.2', 'r']
    jump 302                                 []
label 302:
    $const304.1.1 = const(int, 1)            ['$const304.1.1']
    $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_irshift306.2', '$const304.1.1', 'exp']
    exp = $binop_irshift306.2                ['$binop_irshift306.2', 'exp']
    $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$binop_imul316.5', 'a.1', 'a.1']
    a.1 = $binop_imul316.5                   ['$binop_imul316.5', 'a.1']
    $const324.7.2 = const(int, 0)            ['$const324.7.2']
    $326compare_op.8 = exp != $const324.7.2  ['$326compare_op.8', '$const324.7.2', 'exp']
    bool332 = global(bool: <class 'bool'>)   ['bool332']
    $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$326compare_op.8', '$332pred', 'bool332']
    branch $332pred, 282, 334                ['$332pred']
label 334:
    bool336 = global(bool: <class 'bool'>)   ['bool336']
    $336pred = call bool336(invert, func=bool336, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$336pred', 'bool336', 'invert']
    branch $336pred, 338, 348                ['$336pred']
label 338:
    $const338.0.8 = const(float, 1.0)        ['$const338.0.8']
    $binop_truediv342.2 = $const338.0.8 / r  ['$binop_truediv342.2', '$const338.0.8', 'r']
    $phi350.0 = $binop_truediv342.2          ['$binop_truediv342.2', '$phi350.0']
    jump 350                                 []
label 348:
    $phi350.0 = r                            ['$phi350.0', 'r']
    jump 350                                 []
label 350:
    $350return_value.1 = cast(value=$phi350.0) ['$350return_value.1', '$phi350.0']
    return $350return_value.1                ['$350return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175E5B90>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block analysis pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175E5B90>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block analysis pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175E5B90>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block analysis pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175E5B90>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block analysis pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175E5B90>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block analysis pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175E5B90>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block analysis pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175E5B90>
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block analysis pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175E5B90>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block analysis pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175E5B90>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block analysis pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175E5B90>
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block analysis pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175E5B90>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block analysis pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175E5B90>
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block analysis pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175E5B90>
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block analysis pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175E5B90>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block analysis pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175E5B90>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block analysis pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A175E5B90>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x0000019A161F5FD0>,
                           98)],
             '$194compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A179599D0>,
                                   190)],
             '$200pred': [(<numba.core.ir.Assign object at 0x0000019A1795AA50>,
                           190)],
             '$202load_global.0': [(<numba.core.ir.Assign object at 0x0000019A19198E10>,
                                    202)],
             '$214load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A17D4D510>,
                                  202)],
             '$226load_global.4': [(<numba.core.ir.Assign object at 0x0000019A17D194D0>,
                                    202)],
             '$244call.7': [(<numba.core.ir.Assign object at 0x0000019A17D19DD0>,
                             202)],
             '$258call.8': [(<numba.core.ir.Assign object at 0x0000019A17D1AFD0>,
                             202)],
             '$268return_value.9': [(<numba.core.ir.Assign object at 0x0000019A17D19C90>,
                                     202)],
             '$274compare_op.2': [(<numba.core.ir.Assign object at 0x0000019A17D18FD0>,
                                   270)],
             '$280pred': [(<numba.core.ir.Assign object at 0x0000019A179D5050>,
                           270)],
             '$290pred': [(<numba.core.ir.Assign object at 0x0000019A179D7550>,
                           282)],
             '$30load_deref.5': [(<numba.core.ir.Assign object at 0x0000019A17569DD0>,
                                  0)],
             '$326compare_op.8': [(<numba.core.ir.Assign object at 0x0000019A17CDD190>,
                                   302)],
             '$332pred': [(<numba.core.ir.Assign object at 0x0000019A17CDFDD0>,
                           302)],
             '$336pred': [(<numba.core.ir.Assign object at 0x0000019A17CDD490>,
                           334)],
             '$350return_value.1': [(<numba.core.ir.Assign object at 0x0000019A175E4DD0>,
                                     350)],
             '$54compare_op.10': [(<numba.core.ir.Assign object at 0x0000019A17A5C890>,
                                   0)],
             '$60pred': [(<numba.core.ir.Assign object at 0x0000019A17A5D310>,
                          0)],
             '$76compare_op.5': [(<numba.core.ir.Assign object at 0x0000019A161F6210>,
                                  62)],
             '$82pred': [(<numba.core.ir.Assign object at 0x0000019A161F5B50>,
                          62)],
             '$84load_global.0': [(<numba.core.ir.Assign object at 0x0000019A161F4890>,
                                   84)],
             '$8load_deref.1': [(<numba.core.ir.Assign object at 0x0000019A17940F90>,
                                 0)],
             '$98load_deref.0': [(<numba.core.ir.Assign object at 0x0000019A161F5C50>,
                                  98)],
             '$binop_and_286.2': [(<numba.core.ir.Assign object at 0x0000019A179D7BD0>,
                                   282)],
             '$binop_imul296.2': [(<numba.core.ir.Assign object at 0x0000019A179D6610>,
                                   292)],
             '$binop_imul316.5': [(<numba.core.ir.Assign object at 0x0000019A17CDD650>,
                                   302)],
             '$binop_irshift306.2': [(<numba.core.ir.Assign object at 0x0000019A179D5A50>,
                                      302)],
             '$binop_truediv342.2': [(<numba.core.ir.Assign object at 0x0000019A17CDF090>,
                                      338)],
             '$const10.2.1': [(<numba.core.ir.Assign object at 0x0000019A17942E50>,
                               0)],
             '$const192.1.7': [(<numba.core.ir.Assign object at 0x0000019A1795AF90>,
                                190)],
             '$const272.1.2': [(<numba.core.ir.Assign object at 0x0000019A17D1B750>,
                                270)],
             '$const284.1.1': [(<numba.core.ir.Assign object at 0x0000019A179D60D0>,
                                282)],
             '$const304.1.1': [(<numba.core.ir.Assign object at 0x0000019A179D5B90>,
                                302)],
             '$const324.7.2': [(<numba.core.ir.Assign object at 0x0000019A17CDD150>,
                                302)],
             '$const338.0.8': [(<numba.core.ir.Assign object at 0x0000019A17CDC550>,
                                338)],
             '$const52.9.2': [(<numba.core.ir.Assign object at 0x0000019A17A5F250>,
                               0)],
             '$const74.4.2': [(<numba.core.ir.Assign object at 0x0000019A161F7550>,
                               62)],
             '$phi350.0': [(<numba.core.ir.Assign object at 0x0000019A17CDDA50>,
                            338),
                           (<numba.core.ir.Assign object at 0x0000019A17CDD850>,
                            348)],
             'a': [(<numba.core.ir.Assign object at 0x0000019A17941F50>, 0)],
             'a.1': [(<numba.core.ir.Assign object at 0x0000019A17573890>, 0),
                     (<numba.core.ir.Assign object at 0x0000019A17CDD5D0>,
                      302)],
             'b': [(<numba.core.ir.Assign object at 0x0000019A17940450>, 0)],
             'bool100': [(<numba.core.ir.Assign object at 0x0000019A161F72D0>,
                          98)],
             'bool200': [(<numba.core.ir.Assign object at 0x0000019A17958D10>,
                          190)],
             'bool280': [(<numba.core.ir.Assign object at 0x0000019A179D5810>,
                          270)],
             'bool290': [(<numba.core.ir.Assign object at 0x0000019A179D6D10>,
                          282)],
             'bool332': [(<numba.core.ir.Assign object at 0x0000019A17CDD1D0>,
                          302)],
             'bool336': [(<numba.core.ir.Assign object at 0x0000019A17CDF950>,
                          334)],
             'bool60': [(<numba.core.ir.Assign object at 0x0000019A17A5FA50>,
                         0)],
             'bool82': [(<numba.core.ir.Assign object at 0x0000019A161F5950>,
                         62)],
             'exp': [(<numba.core.ir.Assign object at 0x0000019A161F7950>, 62),
                     (<numba.core.ir.Assign object at 0x0000019A17958190>, 182),
                     (<numba.core.ir.Assign object at 0x0000019A179D45D0>,
                      302)],
             'invert': [(<numba.core.ir.Assign object at 0x0000019A17A5F3D0>,
                         62),
                        (<numba.core.ir.Assign object at 0x0000019A17958150>,
                         182)],
             'r': [(<numba.core.ir.Assign object at 0x0000019A175693D0>, 0),
                   (<numba.core.ir.Assign object at 0x0000019A179D7050>, 292)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17A5EA50>
DEBUG:numba.core.ssa:Fix SSA violator on var r
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179431D0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:first assign: r
DEBUG:numba.core.ssa:replaced with: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179431D0>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179431D0>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179431D0>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179431D0>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179431D0>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179431D0>
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179431D0>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179431D0>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179431D0>
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179431D0>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r = $binop_imul296.2
DEBUG:numba.core.ssa:replaced with: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179431D0>
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179431D0>
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179431D0>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179431D0>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A179431D0>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000019A17940F10>],
             292: [<numba.core.ir.Assign object at 0x0000019A17A5F810>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A5E9D0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A5E9D0>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A5E9D0>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A5E9D0>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A5E9D0>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A5E9D0>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A5E9D0>
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A5E9D0>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A5E9D0>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A5E9D0>
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A5E9D0>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='r' stmt=$binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 292
DEBUG:numba.core.ssa:idom 282 from label 292
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:find_def_from_top label 282
DEBUG:numba.core.ssa:insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 282
DEBUG:numba.core.ssa:find_def_from_bottom label 302
DEBUG:numba.core.ssa:find_def_from_top label 302
DEBUG:numba.core.ssa:insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 302
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:incoming_def r.2 = phi(incoming_values=[], incoming_blocks=[])
DEBUG:numba.core.ssa:find_def_from_bottom label 292
DEBUG:numba.core.ssa:incoming_def r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:incoming_def r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:find_def_from_bottom label 270
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 190 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 190
DEBUG:numba.core.ssa:find_def_from_top label 190
DEBUG:numba.core.ssa:idom 0 from label 190
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A5E9D0>
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A5E9D0>
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A5E9D0>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r
DEBUG:numba.core.ssa:find_def var='r' stmt=$binop_truediv342.2 = $const338.0.8 / r
DEBUG:numba.core.ssa:find_def_from_top label 338
DEBUG:numba.core.ssa:idom 334 from label 338
DEBUG:numba.core.ssa:find_def_from_bottom label 334
DEBUG:numba.core.ssa:find_def_from_top label 334
DEBUG:numba.core.ssa:insert phi node r.4 = phi(incoming_values=[], incoming_blocks=[]) at 334
DEBUG:numba.core.ssa:find_def_from_bottom label 302
DEBUG:numba.core.ssa:incoming_def r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:find_def_from_bottom label 270
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 190 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 190
DEBUG:numba.core.ssa:find_def_from_top label 190
DEBUG:numba.core.ssa:idom 0 from label 190
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: $binop_truediv342.2 = $const338.0.8 / r.4
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A5E9D0>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r
DEBUG:numba.core.ssa:find_def var='r' stmt=$phi350.0 = r
DEBUG:numba.core.ssa:find_def_from_top label 348
DEBUG:numba.core.ssa:idom 334 from label 348
DEBUG:numba.core.ssa:find_def_from_bottom label 334
DEBUG:numba.core.ssa:replaced with: $phi350.0 = r.4
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17A5E9D0>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var a.1
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175E6250>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:first assign: a.1
DEBUG:numba.core.ssa:replaced with: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175E6250>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175E6250>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175E6250>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175E6250>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175E6250>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175E6250>
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175E6250>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175E6250>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175E6250>
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175E6250>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175E6250>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1 = $binop_imul316.5
DEBUG:numba.core.ssa:replaced with: a.1.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175E6250>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175E6250>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r.4
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175E6250>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r.4
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175E6250>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000019A176DC7D0>],
             302: [<numba.core.ir.Assign object at 0x0000019A17AD9910>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17AD8790>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17AD8790>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17AD8790>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17AD8790>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17AD8790>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17AD8790>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17AD8790>
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17AD8790>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='a.1' stmt=$258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 202
DEBUG:numba.core.ssa:idom 190 from label 202
DEBUG:numba.core.ssa:find_def_from_bottom label 190
DEBUG:numba.core.ssa:find_def_from_top label 190
DEBUG:numba.core.ssa:idom 0 from label 190
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17AD8790>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17AD8790>
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17AD8790>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='a.1' stmt=$binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 292
DEBUG:numba.core.ssa:idom 282 from label 292
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:find_def_from_top label 282
DEBUG:numba.core.ssa:insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 282
DEBUG:numba.core.ssa:find_def_from_bottom label 302
DEBUG:numba.core.ssa:incoming_def a.1.1 = $binop_imul316.5
DEBUG:numba.core.ssa:find_def_from_bottom label 270
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 190 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 190
DEBUG:numba.core.ssa:find_def_from_top label 190
DEBUG:numba.core.ssa:idom 0 from label 190
DEBUG:numba.core.ssa:find_def_from_bottom label 0
DEBUG:numba.core.ssa:incoming_def a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17AD8790>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='a.1' stmt=$binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 302
DEBUG:numba.core.ssa:idom 282 from label 302
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:replaced with: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17AD8790>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17AD8790>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r.4
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17AD8790>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r.4
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17AD8790>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var invert
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17844A90>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17844A90>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:first assign: invert
DEBUG:numba.core.ssa:replaced with: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17844A90>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17844A90>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17844A90>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17844A90>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, False)
DEBUG:numba.core.ssa:replaced with: invert.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17844A90>
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17844A90>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17844A90>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17844A90>
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, old_numbers.py:241), Var(a.1, old_numbers.py:217)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17844A90>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17844A90>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17844A90>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17844A90>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r.4
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17844A90>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r.4
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17844A90>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {62: [<numba.core.ir.Assign object at 0x0000019A17A5FB90>],
             182: [<numba.core.ir.Assign object at 0x0000019A1756AF10>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17571650>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17571650>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17571650>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17571650>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17571650>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17571650>
DEBUG:numba.core.ssa:on stmt: invert.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17571650>
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17571650>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17571650>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17571650>
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, old_numbers.py:241), Var(a.1, old_numbers.py:217)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17571650>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17571650>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17571650>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert, func=bool336, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='invert' stmt=$336pred = call bool336(invert, func=bool336, args=(Var(invert, old_numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def_from_top label 334
DEBUG:numba.core.ssa:idom 270 from label 334
DEBUG:numba.core.ssa:find_def_from_bottom label 270
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 190 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 190
DEBUG:numba.core.ssa:find_def_from_top label 190
DEBUG:numba.core.ssa:insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 190
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:find_def_from_top label 180
DEBUG:numba.core.ssa:idom 98 from label 180
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 62 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 62
DEBUG:numba.core.ssa:incoming_def invert = const(bool, True)
DEBUG:numba.core.ssa:find_def_from_bottom label 182
DEBUG:numba.core.ssa:incoming_def invert.1 = const(bool, False)
DEBUG:numba.core.ssa:replaced with: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, old_numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17571650>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r.4
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17571650>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r.4
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A17571650>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var exp
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D18390>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D18390>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:first assign: exp
DEBUG:numba.core.ssa:replaced with: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D18390>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D18390>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D18390>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D18390>
DEBUG:numba.core.ssa:on stmt: invert.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp = b
DEBUG:numba.core.ssa:replaced with: exp.1 = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D18390>
DEBUG:numba.core.ssa:on stmt: invert.2 = phi(incoming_values=[Var(invert, old_numbers.py:219), Var(invert.1, old_numbers.py:232)], incoming_blocks=[180, 182])
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D18390>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D18390>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D18390>
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, old_numbers.py:241), Var(a.1, old_numbers.py:217)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D18390>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D18390>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp = $binop_irshift306.2
DEBUG:numba.core.ssa:replaced with: exp.2 = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D18390>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, old_numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D18390>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r.4
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D18390>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r.4
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A17D18390>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {62: [<numba.core.ir.Assign object at 0x0000019A1748F390>],
             182: [<numba.core.ir.Assign object at 0x0000019A17A5F750>],
             302: [<numba.core.ir.Assign object at 0x0000019A17549E90>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161F6510>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161F6510>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:find_def var='exp' stmt=$76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161F6510>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161F6510>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161F6510>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161F6510>
DEBUG:numba.core.ssa:on stmt: invert.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp.1 = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161F6510>
DEBUG:numba.core.ssa:on stmt: invert.2 = phi(incoming_values=[Var(invert, old_numbers.py:219), Var(invert.1, old_numbers.py:232)], incoming_blocks=[180, 182])
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:find_def var='exp' stmt=$194compare_op.2 = exp > $const192.1.7
DEBUG:numba.core.ssa:find_def_from_top label 190
DEBUG:numba.core.ssa:insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 190
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:find_def_from_top label 180
DEBUG:numba.core.ssa:idom 98 from label 180
DEBUG:numba.core.ssa:find_def_from_bottom label 98
DEBUG:numba.core.ssa:find_def_from_top label 98
DEBUG:numba.core.ssa:idom 62 from label 98
DEBUG:numba.core.ssa:find_def_from_bottom label 62
DEBUG:numba.core.ssa:incoming_def exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:find_def_from_bottom label 182
DEBUG:numba.core.ssa:incoming_def exp.1 = b
DEBUG:numba.core.ssa:replaced with: $194compare_op.2 = exp.3 > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161F6510>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161F6510>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:find_def var='exp' stmt=$274compare_op.2 = exp != $const272.1.2
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 190 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 190
DEBUG:numba.core.ssa:replaced with: $274compare_op.2 = exp.3 != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161F6510>
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, old_numbers.py:241), Var(a.1, old_numbers.py:217)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:find_def var='exp' stmt=$binop_and_286.2 = exp & $const284.1.1
DEBUG:numba.core.ssa:find_def_from_top label 282
DEBUG:numba.core.ssa:insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 282
DEBUG:numba.core.ssa:find_def_from_bottom label 302
DEBUG:numba.core.ssa:incoming_def exp.2 = $binop_irshift306.2
DEBUG:numba.core.ssa:find_def_from_bottom label 270
DEBUG:numba.core.ssa:find_def_from_top label 270
DEBUG:numba.core.ssa:idom 190 from label 270
DEBUG:numba.core.ssa:find_def_from_bottom label 190
DEBUG:numba.core.ssa:incoming_def exp.3 = phi(incoming_values=[Var(exp, old_numbers.py:220), Var(exp.1, old_numbers.py:233)], incoming_blocks=[180, 182])
DEBUG:numba.core.ssa:replaced with: $binop_and_286.2 = exp.4 & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161F6510>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161F6510>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def var='exp' stmt=$binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:find_def_from_top label 302
DEBUG:numba.core.ssa:idom 282 from label 302
DEBUG:numba.core.ssa:find_def_from_bottom label 282
DEBUG:numba.core.ssa:replaced with: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp.2 = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:find_def var='exp' stmt=$326compare_op.8 = exp != $const324.7.2
DEBUG:numba.core.ssa:replaced with: $326compare_op.8 = exp.2 != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161F6510>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, old_numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161F6510>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r.4
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161F6510>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r.4
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A161F6510>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var $phi350.0
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175481D0>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175481D0>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175481D0>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175481D0>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175481D0>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175481D0>
DEBUG:numba.core.ssa:on stmt: invert.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp.1 = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175481D0>
DEBUG:numba.core.ssa:on stmt: exp.3 = phi(incoming_values=[Var(exp, old_numbers.py:220), Var(exp.1, old_numbers.py:233)], incoming_blocks=[180, 182])
DEBUG:numba.core.ssa:on stmt: invert.2 = phi(incoming_values=[Var(invert, old_numbers.py:219), Var(invert.1, old_numbers.py:232)], incoming_blocks=[180, 182])
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp.3 > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175481D0>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175481D0>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp.3 != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175481D0>
DEBUG:numba.core.ssa:on stmt: exp.4 = phi(incoming_values=[Var(exp.2, old_numbers.py:240), Var(exp.3, old_numbers.py:234)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, old_numbers.py:241), Var(a.1, old_numbers.py:217)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp.4 & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175481D0>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175481D0>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp.2 = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp.2 != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175481D0>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, old_numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175481D0>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r.4
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:first assign: $phi350.0
DEBUG:numba.core.ssa:replaced with: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175481D0>
DEBUG:numba.core.ssa:on stmt: $phi350.0 = r.4
DEBUG:numba.core.ssa:replaced with: $phi350.0.1 = r.4
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000019A175481D0>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {338: [<numba.core.ir.Assign object at 0x0000019A1755A750>],
             348: [<numba.core.ir.Assign object at 0x0000019A1755A4D0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A160FF210>
DEBUG:numba.core.ssa:on stmt: a = arg(0, name=a)
DEBUG:numba.core.ssa:on stmt: b = arg(1, name=b)
DEBUG:numba.core.ssa:on stmt: $8load_deref.1 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: $const10.2.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: r = call $8load_deref.1($const10.2.1, func=$8load_deref.1, args=[Var($const10.2.1, old_numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $30load_deref.5 = freevar(tp: float64)
DEBUG:numba.core.ssa:on stmt: a.1 = call $30load_deref.5(a, func=$30load_deref.5, args=[Var(a, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const52.9.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $54compare_op.10 = b < $const52.9.2
DEBUG:numba.core.ssa:on stmt: bool60 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $60pred = call bool60($54compare_op.10, func=bool60, args=(Var($54compare_op.10, old_numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $60pred, 62, 182
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 62
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A160FF210>
DEBUG:numba.core.ssa:on stmt: invert = const(bool, True)
DEBUG:numba.core.ssa:on stmt: exp = unary(fn=<built-in function neg>, value=b)
DEBUG:numba.core.ssa:on stmt: $const74.4.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $76compare_op.5 = exp < $const74.4.2
DEBUG:numba.core.ssa:on stmt: bool82 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $82pred = call bool82($76compare_op.5, func=bool82, args=(Var($76compare_op.5, old_numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $82pred, 84, 98
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 84
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A160FF210>
DEBUG:numba.core.ssa:on stmt: $84load_global.0 = global(OverflowError: <class 'OverflowError'>)
DEBUG:numba.core.ssa:on stmt: <static> raise <class 'OverflowError'>
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 98
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A160FF210>
DEBUG:numba.core.ssa:on stmt: $98load_deref.0 = freevar(is_integer: False)
DEBUG:numba.core.ssa:on stmt: bool100 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $100pred = call bool100($98load_deref.0, func=bool100, args=(Var($98load_deref.0, old_numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: jump 180
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A160FF210>
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 182
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A160FF210>
DEBUG:numba.core.ssa:on stmt: invert.1 = const(bool, False)
DEBUG:numba.core.ssa:on stmt: exp.1 = b
DEBUG:numba.core.ssa:on stmt: jump 190
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 190
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A160FF210>
DEBUG:numba.core.ssa:on stmt: exp.3 = phi(incoming_values=[Var(exp, old_numbers.py:220), Var(exp.1, old_numbers.py:233)], incoming_blocks=[180, 182])
DEBUG:numba.core.ssa:on stmt: invert.2 = phi(incoming_values=[Var(invert, old_numbers.py:219), Var(invert.1, old_numbers.py:232)], incoming_blocks=[180, 182])
DEBUG:numba.core.ssa:on stmt: $const192.1.7 = const(int, 65536)
DEBUG:numba.core.ssa:on stmt: $194compare_op.2 = exp.3 > $const192.1.7
DEBUG:numba.core.ssa:on stmt: bool200 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $200pred = call bool200($194compare_op.2, func=bool200, args=(Var($194compare_op.2, old_numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $200pred, 202, 270
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 202
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A160FF210>
DEBUG:numba.core.ssa:on stmt: $202load_global.0 = global(math: <module 'math' (built-in)>)
DEBUG:numba.core.ssa:on stmt: $214load_attr.2 = getattr(value=$202load_global.0, attr=pow)
DEBUG:numba.core.ssa:on stmt: $226load_global.4 = global(float: <class 'float'>)
DEBUG:numba.core.ssa:on stmt: $244call.7 = call $226load_global.4(b, func=$226load_global.4, args=[Var(b, old_numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $258call.8 = call $214load_attr.2(a.1, $244call.7, func=$214load_attr.2, args=[Var(a.1, old_numbers.py:217), Var($244call.7, old_numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $268return_value.9 = cast(value=$258call.8)
DEBUG:numba.core.ssa:on stmt: return $268return_value.9
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 270
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A160FF210>
DEBUG:numba.core.ssa:on stmt: $const272.1.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $274compare_op.2 = exp.3 != $const272.1.2
DEBUG:numba.core.ssa:on stmt: bool280 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $280pred = call bool280($274compare_op.2, func=bool280, args=(Var($274compare_op.2, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $280pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 282
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A160FF210>
DEBUG:numba.core.ssa:on stmt: exp.4 = phi(incoming_values=[Var(exp.2, old_numbers.py:240), Var(exp.3, old_numbers.py:234)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: a.1.2 = phi(incoming_values=[Var(a.1.1, old_numbers.py:241), Var(a.1, old_numbers.py:217)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: r.2 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: $const284.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_and_286.2 = exp.4 & $const284.1.1
DEBUG:numba.core.ssa:on stmt: bool290 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $290pred = call bool290($binop_and_286.2, func=bool290, args=(Var($binop_and_286.2, old_numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $290pred, 292, 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 292
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A160FF210>
DEBUG:numba.core.ssa:on stmt: $binop_imul296.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: r.1 = $binop_imul296.2
DEBUG:numba.core.ssa:on stmt: jump 302
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 302
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A160FF210>
DEBUG:numba.core.ssa:on stmt: r.3 = phi(incoming_values=[Var(r.2, old_numbers.py:239), Var(r.1, old_numbers.py:239)], incoming_blocks=[282, 292])
DEBUG:numba.core.ssa:on stmt: $const304.1.1 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_irshift306.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const304.1.1, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: exp.2 = $binop_irshift306.2
DEBUG:numba.core.ssa:on stmt: $binop_imul316.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: a.1.1 = $binop_imul316.5
DEBUG:numba.core.ssa:on stmt: $const324.7.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: $326compare_op.8 = exp.2 != $const324.7.2
DEBUG:numba.core.ssa:on stmt: bool332 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $332pred = call bool332($326compare_op.8, func=bool332, args=(Var($326compare_op.8, old_numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $332pred, 282, 334
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 334
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A160FF210>
DEBUG:numba.core.ssa:on stmt: r.4 = phi(incoming_values=[Var(r.3, old_numbers.py:239), Var(r, old_numbers.py:216)], incoming_blocks=[302, 270])
DEBUG:numba.core.ssa:on stmt: bool336 = global(bool: <class 'bool'>)
DEBUG:numba.core.ssa:on stmt: $336pred = call bool336(invert.2, func=bool336, args=(Var(invert.2, old_numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: branch $336pred, 338, 348
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 338
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A160FF210>
DEBUG:numba.core.ssa:on stmt: $const338.0.8 = const(float, 1.0)
DEBUG:numba.core.ssa:on stmt: $binop_truediv342.2 = $const338.0.8 / r.4
DEBUG:numba.core.ssa:on stmt: $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 348
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A160FF210>
DEBUG:numba.core.ssa:on stmt: $phi350.0.1 = r.4
DEBUG:numba.core.ssa:on stmt: jump 350
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 350
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000019A160FF210>
DEBUG:numba.core.ssa:on stmt: $350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:find_def var='$phi350.0' stmt=$350return_value.1 = cast(value=$phi350.0)
DEBUG:numba.core.ssa:find_def_from_top label 350
DEBUG:numba.core.ssa:insert phi node $phi350.0.2 = phi(incoming_values=[], incoming_blocks=[]) at 350
DEBUG:numba.core.ssa:find_def_from_bottom label 338
DEBUG:numba.core.ssa:incoming_def $phi350.0 = $binop_truediv342.2
DEBUG:numba.core.ssa:find_def_from_bottom label 348
DEBUG:numba.core.ssa:incoming_def $phi350.0.1 = r.4
DEBUG:numba.core.ssa:replaced with: $350return_value.1 = cast(value=$phi350.0.2)
DEBUG:numba.core.ssa:on stmt: return $350return_value.1
DEBUG:root:send audio data 1748516246.211011
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2488)
           2	RESUME(arg=0, lineno=2488)
           4	LOAD_GLOBAL(arg=1, lineno=2492)
          16	LOAD_ATTR(arg=1, lineno=2492)
          26	LOAD_FAST(arg=0, lineno=2492)
          28	PRECALL(arg=1, lineno=2492)
          32	CALL(arg=1, lineno=2492)
          42	LOAD_CONST(arg=1, lineno=2492)
          44	LOAD_GLOBAL(arg=1, lineno=2492)
          56	LOAD_ATTR(arg=2, lineno=2492)
          66	LOAD_FAST(arg=0, lineno=2492)
          68	PRECALL(arg=1, lineno=2492)
          72	CALL(arg=1, lineno=2492)
          82	BINARY_OP(arg=5, lineno=2492)
          86	BINARY_OP(arg=0, lineno=2492)
          90	RETURN_VALUE(arg=None, lineno=2492)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2488)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=2488)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=2492)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_ATTR(arg=1, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$16load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=PRECALL(arg=1, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$16load_attr.2', '$x26.3']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=CALL(arg=1, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$16load_attr.2', '$x26.3']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_CONST(arg=1, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$32call.4']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_GLOBAL(arg=1, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$32call.4', '$const42.5.1']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_ATTR(arg=2, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$32call.4', '$const42.5.1', '$null$44.7', '$44load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$32call.4', '$const42.5.1', '$null$44.7', '$56load_attr.8']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=PRECALL(arg=1, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$32call.4', '$const42.5.1', '$null$44.7', '$56load_attr.8', '$x66.9']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=CALL(arg=1, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$32call.4', '$const42.5.1', '$null$44.7', '$56load_attr.8', '$x66.9']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=BINARY_OP(arg=5, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$32call.4', '$const42.5.1', '$72call.10']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=BINARY_OP(arg=0, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$32call.4', '$binop_mul82.11']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=RETURN_VALUE(arg=None, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$binop_add86.12']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'item': '$4load_global.0', 'res': '$16load_attr.2'}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {'res': '$x26.3'}), (28, {}), (30, {}), (32, {'func': '$16load_attr.2', 'args': ['$x26.3'], 'kw_names': None, 'res': '$32call.4'}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {'res': '$const42.5.1'}), (44, {'idx': 0, 'res': '$44load_global.6'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'item': '$44load_global.6', 'res': '$56load_attr.8'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'res': '$x66.9'}), (68, {}), (70, {}), (72, {'func': '$56load_attr.8', 'args': ['$x66.9'], 'kw_names': None, 'res': '$72call.10'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {'op': '*', 'lhs': '$const42.5.1', 'rhs': '$72call.10', 'res': '$binop_mul82.11'}), (84, {}), (86, {'op': '+', 'lhs': '$32call.4', 'rhs': '$binop_mul82.11', 'res': '$binop_add86.12'}), (88, {}), (90, {'retval': '$binop_add86.12', 'castval': '$90return_value.13'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    $4load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$4load_global.0']
    $16load_attr.2 = getattr(value=$4load_global.0, attr=cos) ['$16load_attr.2', '$4load_global.0']
    $32call.4 = call $16load_attr.2(x, func=$16load_attr.2, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_attr.2', '$32call.4', 'x']
    $const42.5.1 = const(complex, 1j)        ['$const42.5.1']
    $44load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$44load_global.6']
    $56load_attr.8 = getattr(value=$44load_global.6, attr=sin) ['$44load_global.6', '$56load_attr.8']
    $72call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_attr.8', '$72call.10', 'x']
    $binop_mul82.11 = $const42.5.1 * $72call.10 ['$72call.10', '$binop_mul82.11', '$const42.5.1']
    $binop_add86.12 = $32call.4 + $binop_mul82.11 ['$32call.4', '$binop_add86.12', '$binop_mul82.11']
    $90return_value.13 = cast(value=$binop_add86.12) ['$90return_value.13', '$binop_add86.12']
    return $90return_value.13                ['$90return_value.13']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A1778C8D0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $16load_attr.2 = getattr(value=$4load_global.0, attr=cos)
DEBUG:numba.core.ssa:on stmt: $32call.4 = call $16load_attr.2(x, func=$16load_attr.2, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const42.5.1 = const(complex, 1j)
DEBUG:numba.core.ssa:on stmt: $44load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_attr.8 = getattr(value=$44load_global.6, attr=sin)
DEBUG:numba.core.ssa:on stmt: $72call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_mul82.11 = $const42.5.1 * $72call.10
DEBUG:numba.core.ssa:on stmt: $binop_add86.12 = $32call.4 + $binop_mul82.11
DEBUG:numba.core.ssa:on stmt: $90return_value.13 = cast(value=$binop_add86.12)
DEBUG:numba.core.ssa:on stmt: return $90return_value.13
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$16load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A162D2E10>,
                                 0)],
             '$32call.4': [(<numba.core.ir.Assign object at 0x0000019A17572F90>,
                            0)],
             '$44load_global.6': [(<numba.core.ir.Assign object at 0x0000019A17571B50>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A162D06D0>,
                                  0)],
             '$56load_attr.8': [(<numba.core.ir.Assign object at 0x0000019A175725D0>,
                                 0)],
             '$72call.10': [(<numba.core.ir.Assign object at 0x0000019A17D1B010>,
                             0)],
             '$90return_value.13': [(<numba.core.ir.Assign object at 0x0000019A1778F150>,
                                     0)],
             '$binop_add86.12': [(<numba.core.ir.Assign object at 0x0000019A1778FF10>,
                                  0)],
             '$binop_mul82.11': [(<numba.core.ir.Assign object at 0x0000019A1778CB10>,
                                  0)],
             '$const42.5.1': [(<numba.core.ir.Assign object at 0x0000019A175712D0>,
                               0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A18E98810>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A1778C8D0>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=2488)
           2	RESUME(arg=0, lineno=2488)
           4	LOAD_GLOBAL(arg=1, lineno=2492)
          16	LOAD_ATTR(arg=1, lineno=2492)
          26	LOAD_FAST(arg=0, lineno=2492)
          28	PRECALL(arg=1, lineno=2492)
          32	CALL(arg=1, lineno=2492)
          42	LOAD_CONST(arg=1, lineno=2492)
          44	LOAD_GLOBAL(arg=1, lineno=2492)
          56	LOAD_ATTR(arg=2, lineno=2492)
          66	LOAD_FAST(arg=0, lineno=2492)
          68	PRECALL(arg=1, lineno=2492)
          72	CALL(arg=1, lineno=2492)
          82	BINARY_OP(arg=5, lineno=2492)
          86	BINARY_OP(arg=0, lineno=2492)
          90	RETURN_VALUE(arg=None, lineno=2492)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=2488)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=2488)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=2492)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_ATTR(arg=1, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=0, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$16load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=PRECALL(arg=1, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$16load_attr.2', '$x26.3']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=CALL(arg=1, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$16load_attr.2', '$x26.3']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=LOAD_CONST(arg=1, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$32call.4']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_GLOBAL(arg=1, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$32call.4', '$const42.5.1']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_ATTR(arg=2, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$32call.4', '$const42.5.1', '$null$44.7', '$44load_global.6']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$32call.4', '$const42.5.1', '$null$44.7', '$56load_attr.8']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=PRECALL(arg=1, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$32call.4', '$const42.5.1', '$null$44.7', '$56load_attr.8', '$x66.9']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=CALL(arg=1, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$32call.4', '$const42.5.1', '$null$44.7', '$56load_attr.8', '$x66.9']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=BINARY_OP(arg=5, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$32call.4', '$const42.5.1', '$72call.10']
DEBUG:numba.core.byteflow:dispatch pc=86, inst=BINARY_OP(arg=0, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$32call.4', '$binop_mul82.11']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=RETURN_VALUE(arg=None, lineno=2492)
DEBUG:numba.core.byteflow:stack ['$binop_add86.12']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'item': '$4load_global.0', 'res': '$16load_attr.2'}), (18, {}), (20, {}), (22, {}), (24, {}), (26, {'res': '$x26.3'}), (28, {}), (30, {}), (32, {'func': '$16load_attr.2', 'args': ['$x26.3'], 'kw_names': None, 'res': '$32call.4'}), (34, {}), (36, {}), (38, {}), (40, {}), (42, {'res': '$const42.5.1'}), (44, {'idx': 0, 'res': '$44load_global.6'}), (46, {}), (48, {}), (50, {}), (52, {}), (54, {}), (56, {'item': '$44load_global.6', 'res': '$56load_attr.8'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'res': '$x66.9'}), (68, {}), (70, {}), (72, {'func': '$56load_attr.8', 'args': ['$x66.9'], 'kw_names': None, 'res': '$72call.10'}), (74, {}), (76, {}), (78, {}), (80, {}), (82, {'op': '*', 'lhs': '$const42.5.1', 'rhs': '$72call.10', 'res': '$binop_mul82.11'}), (84, {}), (86, {'op': '+', 'lhs': '$32call.4', 'rhs': '$binop_mul82.11', 'res': '$binop_add86.12'}), (88, {}), (90, {'retval': '$binop_add86.12', 'castval': '$90return_value.13'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    $4load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$4load_global.0']
    $16load_attr.2 = getattr(value=$4load_global.0, attr=cos) ['$16load_attr.2', '$4load_global.0']
    $32call.4 = call $16load_attr.2(x, func=$16load_attr.2, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_attr.2', '$32call.4', 'x']
    $const42.5.1 = const(complex, 1j)        ['$const42.5.1']
    $44load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$44load_global.6']
    $56load_attr.8 = getattr(value=$44load_global.6, attr=sin) ['$44load_global.6', '$56load_attr.8']
    $72call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None) ['$56load_attr.8', '$72call.10', 'x']
    $binop_mul82.11 = $const42.5.1 * $72call.10 ['$72call.10', '$binop_mul82.11', '$const42.5.1']
    $binop_add86.12 = $32call.4 + $binop_mul82.11 ['$32call.4', '$binop_add86.12', '$binop_mul82.11']
    $90return_value.13 = cast(value=$binop_add86.12) ['$90return_value.13', '$binop_add86.12']
    return $90return_value.13                ['$90return_value.13']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000019A17635C90>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $16load_attr.2 = getattr(value=$4load_global.0, attr=cos)
DEBUG:numba.core.ssa:on stmt: $32call.4 = call $16load_attr.2(x, func=$16load_attr.2, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const42.5.1 = const(complex, 1j)
DEBUG:numba.core.ssa:on stmt: $44load_global.6 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>)
DEBUG:numba.core.ssa:on stmt: $56load_attr.8 = getattr(value=$44load_global.6, attr=sin)
DEBUG:numba.core.ssa:on stmt: $72call.10 = call $56load_attr.8(x, func=$56load_attr.8, args=[Var(x, utils.py:2488)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_mul82.11 = $const42.5.1 * $72call.10
DEBUG:numba.core.ssa:on stmt: $binop_add86.12 = $32call.4 + $binop_mul82.11
DEBUG:numba.core.ssa:on stmt: $90return_value.13 = cast(value=$binop_add86.12)
DEBUG:numba.core.ssa:on stmt: return $90return_value.13
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$16load_attr.2': [(<numba.core.ir.Assign object at 0x0000019A17642D90>,
                                 0)],
             '$32call.4': [(<numba.core.ir.Assign object at 0x0000019A17641650>,
                            0)],
             '$44load_global.6': [(<numba.core.ir.Assign object at 0x0000019A17641050>,
                                   0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000019A17641ED0>,
                                  0)],
             '$56load_attr.8': [(<numba.core.ir.Assign object at 0x0000019A17640B90>,
                                 0)],
             '$72call.10': [(<numba.core.ir.Assign object at 0x0000019A17640DD0>,
                             0)],
             '$90return_value.13': [(<numba.core.ir.Assign object at 0x0000019A174F0990>,
                                     0)],
             '$binop_add86.12': [(<numba.core.ir.Assign object at 0x0000019A17642150>,
                                  0)],
             '$binop_mul82.11': [(<numba.core.ir.Assign object at 0x0000019A17640690>,
                                  0)],
             '$const42.5.1': [(<numba.core.ir.Assign object at 0x0000019A17643AD0>,
                               0)],
             'x': [(<numba.core.ir.Assign object at 0x0000019A176411D0>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000019A17635C90>
DEBUG:root:send audio data 1748516248.911064
DEBUG:root:send audio data 1748516252.230973
DEBUG:root:send audio data 1748516255.500824
DEBUG:root:send audio data 1748516258.631203
DEBUG:root:send audio data 1748516261.711191
DEBUG:root:send audio data 1748516264.710765
DEBUG:root:send audio data 1748516267.721141
DEBUG:root:send audio data 1748516270.731468
DEBUG:root:send audio data 1748516273.161112
DEBUG:root:send audio data 1748516276.231580
DEBUG:root:send audio data 1748516279.372037
DEBUG:root:send audio data 1748516282.381799
DEBUG:root:send audio data 1748516285.511380
