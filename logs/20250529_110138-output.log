DEBUG:root:send audio data 1748516528.466760
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1137)
           2	RESUME(arg=0, lineno=1137)
           4	LOAD_FAST(arg=0, lineno=1140)
           6	LOAD_CONST(arg=1, lineno=1140)
           8	BINARY_SUBSCR(arg=None, lineno=1140)
          18	STORE_FAST(arg=3, lineno=1140)
          20	LOAD_FAST(arg=1, lineno=1141)
          22	UNARY_NEGATIVE(arg=None, lineno=1141)
          24	LOAD_FAST(arg=3, lineno=1141)
          26	SWAP(arg=2, lineno=1141)
          28	COPY(arg=2, lineno=1141)
          30	COMPARE_OP(arg=1, lineno=1141)
          36	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1141)
          38	LOAD_FAST(arg=1, lineno=1141)
          40	COMPARE_OP(arg=1, lineno=1141)
          46	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1141)
          48	JUMP_FORWARD(arg=2, lineno=1141)
>         50	POP_TOP(arg=None, lineno=1141)
          52	JUMP_FORWARD(arg=2, lineno=1141)
>         54	LOAD_CONST(arg=1, lineno=1142)
          56	STORE_FAST(arg=3, lineno=1142)
>         58	LOAD_FAST(arg=0, lineno=1144)
          60	LOAD_CONST(arg=2, lineno=1144)
          62	BINARY_SUBSCR(arg=None, lineno=1144)
          72	STORE_FAST(arg=4, lineno=1144)
          74	LOAD_FAST(arg=1, lineno=1145)
          76	UNARY_NEGATIVE(arg=None, lineno=1145)
          78	LOAD_FAST(arg=4, lineno=1145)
          80	SWAP(arg=2, lineno=1145)
          82	COPY(arg=2, lineno=1145)
          84	COMPARE_OP(arg=1, lineno=1145)
          90	POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
          92	LOAD_FAST(arg=1, lineno=1145)
          94	COMPARE_OP(arg=1, lineno=1145)
         100	POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
         102	JUMP_FORWARD(arg=2, lineno=1145)
>        104	POP_TOP(arg=None, lineno=1145)
         106	JUMP_FORWARD(arg=2, lineno=1145)
>        108	LOAD_CONST(arg=1, lineno=1146)
         110	STORE_FAST(arg=4, lineno=1146)
>        112	LOAD_FAST(arg=2, lineno=1148)
         114	POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1148)
         116	LOAD_GLOBAL(arg=1, lineno=1149)
         128	LOAD_ATTR(arg=1, lineno=1149)
         138	LOAD_FAST(arg=3, lineno=1149)
         140	PRECALL(arg=1, lineno=1149)
         144	CALL(arg=1, lineno=1149)
         154	LOAD_GLOBAL(arg=1, lineno=1149)
         166	LOAD_ATTR(arg=1, lineno=1149)
         176	LOAD_FAST(arg=4, lineno=1149)
         178	PRECALL(arg=1, lineno=1149)
         182	CALL(arg=1, lineno=1149)
         192	COMPARE_OP(arg=3, lineno=1149)
         198	RETURN_VALUE(arg=None, lineno=1149)
>        200	LOAD_GLOBAL(arg=1, lineno=1151)
         212	LOAD_ATTR(arg=2, lineno=1151)
         222	LOAD_FAST(arg=3, lineno=1151)
         224	PRECALL(arg=1, lineno=1151)
         228	CALL(arg=1, lineno=1151)
         238	LOAD_GLOBAL(arg=1, lineno=1151)
         250	LOAD_ATTR(arg=2, lineno=1151)
         260	LOAD_FAST(arg=4, lineno=1151)
         262	PRECALL(arg=1, lineno=1151)
         266	CALL(arg=1, lineno=1151)
         276	COMPARE_OP(arg=3, lineno=1151)
         282	RETURN_VALUE(arg=None, lineno=1151)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1137)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1137)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1140)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1140)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1140)
DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=STORE_FAST(arg=3, lineno=1140)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=1141)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$threshold20.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$22unary_negative.4']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=SWAP(arg=2, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$22unary_negative.4', '$x024.5']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=COPY(arg=2, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$x024.5', '$22unary_negative.4']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=COMPARE_OP(arg=1, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$x024.5', '$22unary_negative.4', '$x024.5']
DEBUG:numba.core.byteflow:dispatch pc=36, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$x024.5', '$30compare_op.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=38, stack=('$x024.5',), blockstack=(), npush=0), Edge(pc=50, stack=('$x024.5',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=38 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi38.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=38 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=1, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$phi38.0']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=COMPARE_OP(arg=1, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$phi38.0', '$threshold38.1']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$40compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=48, stack=(), blockstack=(), npush=0), Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi50.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=50 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=50, inst=POP_TOP(arg=None, lineno=1141)
DEBUG:numba.core.byteflow:stack ['$phi50.0']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=JUMP_FORWARD(arg=2, lineno=1141)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=48 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=48, inst=JUMP_FORWARD(arg=2, lineno=1141)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=54, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=58 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=58, inst=LOAD_FAST(arg=0, lineno=1144)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=2, lineno=1144)
DEBUG:numba.core.byteflow:stack ['$x58.0']
DEBUG:numba.core.byteflow:dispatch pc=62, inst=BINARY_SUBSCR(arg=None, lineno=1144)
DEBUG:numba.core.byteflow:stack ['$x58.0', '$const60.1.2']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=STORE_FAST(arg=4, lineno=1144)
DEBUG:numba.core.byteflow:stack ['$62binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=74, inst=LOAD_FAST(arg=1, lineno=1145)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$threshold74.3']
DEBUG:numba.core.byteflow:dispatch pc=78, inst=LOAD_FAST(arg=4, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$76unary_negative.4']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=SWAP(arg=2, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$76unary_negative.4', '$x178.5']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=COPY(arg=2, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$x178.5', '$76unary_negative.4']
DEBUG:numba.core.byteflow:dispatch pc=84, inst=COMPARE_OP(arg=1, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$x178.5', '$76unary_negative.4', '$x178.5']
DEBUG:numba.core.byteflow:dispatch pc=90, inst=POP_JUMP_FORWARD_IF_FALSE(arg=6, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$x178.5', '$84compare_op.6']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=92, stack=('$x178.5',), blockstack=(), npush=0), Edge(pc=104, stack=('$x178.5',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=54 nstack_initial=0), State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=54 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1142)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=56, inst=STORE_FAST(arg=3, lineno=1142)
DEBUG:numba.core.byteflow:stack ['$const54.0.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=92 nstack_initial=1), State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi92.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=92 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=92, inst=LOAD_FAST(arg=1, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$phi92.0']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=COMPARE_OP(arg=1, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$phi92.0', '$threshold92.1']
DEBUG:numba.core.byteflow:dispatch pc=100, inst=POP_JUMP_FORWARD_IF_FALSE(arg=5, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$94compare_op.2']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=104 nstack_initial=1), State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: ['$phi104.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=104 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=104, inst=POP_TOP(arg=None, lineno=1145)
DEBUG:numba.core.byteflow:stack ['$phi104.0']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=JUMP_FORWARD(arg=2, lineno=1145)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=102 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=102, inst=JUMP_FORWARD(arg=2, lineno=1145)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=108, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=112 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=112, inst=LOAD_FAST(arg=2, lineno=1148)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=114, inst=POP_JUMP_FORWARD_IF_FALSE(arg=42, lineno=1148)
DEBUG:numba.core.byteflow:stack ['$zero_pos112.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=116, stack=(), blockstack=(), npush=0), Edge(pc=200, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=112 nstack_initial=0), State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=108 nstack_initial=0), State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=108 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=1146)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=110, inst=STORE_FAST(arg=4, lineno=1146)
DEBUG:numba.core.byteflow:stack ['$const108.0.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=112, stack=(), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=116 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=116, inst=LOAD_GLOBAL(arg=1, lineno=1149)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=128, inst=LOAD_ATTR(arg=1, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$116load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=138, inst=LOAD_FAST(arg=3, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$128load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=140, inst=PRECALL(arg=1, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=CALL(arg=1, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$null$116.1', '$128load_attr.2', '$x0138.3']
DEBUG:numba.core.byteflow:dispatch pc=154, inst=LOAD_GLOBAL(arg=1, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$144call.4']
DEBUG:numba.core.byteflow:dispatch pc=166, inst=LOAD_ATTR(arg=1, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$144call.4', '$null$154.6', '$154load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=176, inst=LOAD_FAST(arg=4, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$144call.4', '$null$154.6', '$166load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=178, inst=PRECALL(arg=1, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
DEBUG:numba.core.byteflow:dispatch pc=182, inst=CALL(arg=1, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$144call.4', '$null$154.6', '$166load_attr.7', '$x1176.8']
DEBUG:numba.core.byteflow:dispatch pc=192, inst=COMPARE_OP(arg=3, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$144call.4', '$182call.9']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=RETURN_VALUE(arg=None, lineno=1149)
DEBUG:numba.core.byteflow:stack ['$192compare_op.10']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=200 nstack_initial=0), State(pc_initial=112 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=200 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=200, inst=LOAD_GLOBAL(arg=1, lineno=1151)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=212, inst=LOAD_ATTR(arg=2, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$null$200.1', '$200load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=222, inst=LOAD_FAST(arg=3, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$null$200.1', '$212load_attr.2']
DEBUG:numba.core.byteflow:dispatch pc=224, inst=PRECALL(arg=1, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=CALL(arg=1, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$null$200.1', '$212load_attr.2', '$x0222.3']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=LOAD_GLOBAL(arg=1, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$228call.4']
DEBUG:numba.core.byteflow:dispatch pc=250, inst=LOAD_ATTR(arg=2, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$228call.4', '$null$238.6', '$238load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=260, inst=LOAD_FAST(arg=4, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$228call.4', '$null$238.6', '$250load_attr.7']
DEBUG:numba.core.byteflow:dispatch pc=262, inst=PRECALL(arg=1, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
DEBUG:numba.core.byteflow:dispatch pc=266, inst=CALL(arg=1, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$228call.4', '$null$238.6', '$250load_attr.7', '$x1260.8']
DEBUG:numba.core.byteflow:dispatch pc=276, inst=COMPARE_OP(arg=3, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$228call.4', '$266call.9']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=RETURN_VALUE(arg=None, lineno=1151)
DEBUG:numba.core.byteflow:stack ['$276compare_op.10']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=112 nstack_initial=0)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=38 nstack_initial=1): {'$phi38.0'},
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=54 nstack_initial=0): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=1): {'$phi92.0'},
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=104 nstack_initial=1): set(),
             State(pc_initial=108 nstack_initial=0): set(),
             State(pc_initial=112 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=200 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi104.0': State(pc_initial=58 nstack_initial=0),
 '$phi38.0': State(pc_initial=0 nstack_initial=0),
 '$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi92.0': State(pc_initial=58 nstack_initial=0)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi104.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))},
             '$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
             '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi38.0': {('$x024.5', State(pc_initial=0 nstack_initial=0))},
 '$phi92.0': {('$x178.5', State(pc_initial=58 nstack_initial=0))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi38.0': '$x024.5'},
             State(pc_initial=58 nstack_initial=0): {'$phi92.0': '$x178.5'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'value': '$8binary_subscr.2'}), (20, {'res': '$threshold20.3'}), (22, {'value': '$threshold20.3', 'res': '$22unary_negative.4'}), (24, {'res': '$x024.5'}), (30, {'lhs': '$22unary_negative.4', 'rhs': '$x024.5', 'res': '$30compare_op.6'}), (32, {}), (34, {}), (36, {'pred': '$30compare_op.6'})), outgoing_phis={'$phi38.0': '$x024.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={38: ('$x024.5',), 50: ('$x024.5',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=38 nstack_initial=1):
AdaptBlockInfo(insts=((38, {'res': '$threshold38.1'}), (40, {'lhs': '$phi38.0', 'rhs': '$threshold38.1', 'res': '$40compare_op.2'}), (42, {}), (44, {}), (46, {'pred': '$40compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={48: (), 58: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={54: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((52, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=54 nstack_initial=0):
AdaptBlockInfo(insts=((54, {'res': '$const54.0.1'}), (56, {'value': '$const54.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$x58.0'}), (60, {'res': '$const60.1.2'}), (62, {'index': '$const60.1.2', 'target': '$x58.0', 'res': '$62binary_subscr.2'}), (64, {}), (66, {}), (68, {}), (70, {}), (72, {'value': '$62binary_subscr.2'}), (74, {'res': '$threshold74.3'}), (76, {'value': '$threshold74.3', 'res': '$76unary_negative.4'}), (78, {'res': '$x178.5'}), (84, {'lhs': '$76unary_negative.4', 'rhs': '$x178.5', 'res': '$84compare_op.6'}), (86, {}), (88, {}), (90, {'pred': '$84compare_op.6'})), outgoing_phis={'$phi92.0': '$x178.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: ('$x178.5',), 104: ('$x178.5',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=92 nstack_initial=1):
AdaptBlockInfo(insts=((92, {'res': '$threshold92.1'}), (94, {'lhs': '$phi92.0', 'rhs': '$threshold92.1', 'res': '$94compare_op.2'}), (96, {}), (98, {}), (100, {'pred': '$94compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 112: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={108: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=104 nstack_initial=1):
AdaptBlockInfo(insts=((106, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=108 nstack_initial=0):
AdaptBlockInfo(insts=((108, {'res': '$const108.0.1'}), (110, {'value': '$const108.0.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={112: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=112 nstack_initial=0):
AdaptBlockInfo(insts=((112, {'res': '$zero_pos112.0'}), (114, {'pred': '$zero_pos112.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={116: (), 200: ()})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'idx': 0, 'res': '$116load_global.0'}), (118, {}), (120, {}), (122, {}), (124, {}), (126, {}), (128, {'item': '$116load_global.0', 'res': '$128load_attr.2'}), (130, {}), (132, {}), (134, {}), (136, {}), (138, {'res': '$x0138.3'}), (140, {}), (142, {}), (144, {'func': '$128load_attr.2', 'args': ['$x0138.3'], 'kw_names': None, 'res': '$144call.4'}), (146, {}), (148, {}), (150, {}), (152, {}), (154, {'idx': 0, 'res': '$154load_global.5'}), (156, {}), (158, {}), (160, {}), (162, {}), (164, {}), (166, {'item': '$154load_global.5', 'res': '$166load_attr.7'}), (168, {}), (170, {}), (172, {}), (174, {}), (176, {'res': '$x1176.8'}), (178, {}), (180, {}), (182, {'func': '$166load_attr.7', 'args': ['$x1176.8'], 'kw_names': None, 'res': '$182call.9'}), (184, {}), (186, {}), (188, {}), (190, {}), (192, {'lhs': '$144call.4', 'rhs': '$182call.9', 'res': '$192compare_op.10'}), (194, {}), (196, {}), (198, {'retval': '$192compare_op.10', 'castval': '$198return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=200 nstack_initial=0):
AdaptBlockInfo(insts=((200, {'idx': 0, 'res': '$200load_global.0'}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {}), (212, {'item': '$200load_global.0', 'res': '$212load_attr.2'}), (214, {}), (216, {}), (218, {}), (220, {}), (222, {'res': '$x0222.3'}), (224, {}), (226, {}), (228, {'func': '$212load_attr.2', 'args': ['$x0222.3'], 'kw_names': None, 'res': '$228call.4'}), (230, {}), (232, {}), (234, {}), (236, {}), (238, {'idx': 0, 'res': '$238load_global.5'}), (240, {}), (242, {}), (244, {}), (246, {}), (248, {}), (250, {'item': '$238load_global.5', 'res': '$250load_attr.7'}), (252, {}), (254, {}), (256, {}), (258, {}), (260, {'res': '$x1260.8'}), (262, {}), (264, {}), (266, {'func': '$250load_attr.7', 'args': ['$x1260.8'], 'kw_names': None, 'res': '$266call.9'}), (268, {}), (270, {}), (272, {}), (274, {}), (276, {'lhs': '$228call.4', 'rhs': '$266call.9', 'res': '$276compare_op.10'}), (278, {}), (280, {}), (282, {'retval': '$276compare_op.10', 'castval': '$282return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    x0 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$const6.1.1', 'x', 'x0']
    $22unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$22unary_negative.4', 'threshold']
    $30compare_op.6 = $22unary_negative.4 <= x0 ['$22unary_negative.4', '$30compare_op.6', 'x0']
    bool36 = global(bool: <class 'bool'>)    ['bool36']
    $36pred = call bool36($30compare_op.6, func=bool36, args=(Var($30compare_op.6, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.6', '$36pred', 'bool36']
    $phi38.0 = x0                            ['$phi38.0', 'x0']
    branch $36pred, 38, 50                   ['$36pred']
label 38:
    $40compare_op.2 = $phi38.0 <= threshold  ['$40compare_op.2', '$phi38.0', 'threshold']
    bool46 = global(bool: <class 'bool'>)    ['bool46']
    $46pred = call bool46($40compare_op.2, func=bool46, args=(Var($40compare_op.2, audio.py:1141),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.2', '$46pred', 'bool46']
    branch $46pred, 48, 58                   ['$46pred']
label 48:
    jump 54                                  []
label 50:
    jump 58                                  []
label 54:
    x0 = const(int, 0)                       ['x0']
    jump 58                                  []
label 58:
    $const60.1.2 = const(int, -1)            ['$const60.1.2']
    x1 = getitem(value=x, index=$const60.1.2, fn=<built-in function getitem>) ['$const60.1.2', 'x', 'x1']
    $76unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$76unary_negative.4', 'threshold']
    $84compare_op.6 = $76unary_negative.4 <= x1 ['$76unary_negative.4', '$84compare_op.6', 'x1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($84compare_op.6, func=bool90, args=(Var($84compare_op.6, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$84compare_op.6', '$90pred', 'bool90']
    $phi92.0 = x1                            ['$phi92.0', 'x1']
    branch $90pred, 92, 104                  ['$90pred']
label 92:
    $94compare_op.2 = $phi92.0 <= threshold  ['$94compare_op.2', '$phi92.0', 'threshold']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($94compare_op.2, func=bool100, args=(Var($94compare_op.2, audio.py:1145),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$94compare_op.2', 'bool100']
    branch $100pred, 102, 112                ['$100pred']
label 102:
    jump 108                                 []
label 104:
    jump 112                                 []
label 108:
    x1 = const(int, 0)                       ['x1']
    jump 112                                 []
label 112:
    bool114 = global(bool: <class 'bool'>)   ['bool114']
    $114pred = call bool114(zero_pos, func=bool114, args=(Var(zero_pos, audio.py:1137),), kws=(), vararg=None, varkwarg=None, target=None) ['$114pred', 'bool114', 'zero_pos']
    branch $114pred, 116, 200                ['$114pred']
label 116:
    $116load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$116load_global.0']
    $128load_attr.2 = getattr(value=$116load_global.0, attr=signbit) ['$116load_global.0', '$128load_attr.2']
    $144call.4 = call $128load_attr.2(x0, func=$128load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$128load_attr.2', '$144call.4', 'x0']
    $154load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$154load_global.5']
    $166load_attr.7 = getattr(value=$154load_global.5, attr=signbit) ['$154load_global.5', '$166load_attr.7']
    $182call.9 = call $166load_attr.7(x1, func=$166load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$166load_attr.7', '$182call.9', 'x1']
    $192compare_op.10 = $144call.4 != $182call.9 ['$144call.4', '$182call.9', '$192compare_op.10']
    $198return_value.11 = cast(value=$192compare_op.10) ['$192compare_op.10', '$198return_value.11']
    return $198return_value.11               ['$198return_value.11']
label 200:
    $200load_global.0 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$200load_global.0']
    $212load_attr.2 = getattr(value=$200load_global.0, attr=sign) ['$200load_global.0', '$212load_attr.2']
    $228call.4 = call $212load_attr.2(x0, func=$212load_attr.2, args=[Var(x0, audio.py:1140)], kws=(), vararg=None, varkwarg=None, target=None) ['$212load_attr.2', '$228call.4', 'x0']
    $238load_global.5 = global(np: <module 'numpy' from 'C:\\Users\\Administrator\\.conda\\envs\\speech-to-speech\\Lib\\site-packages\\numpy\\__init__.py'>) ['$238load_global.5']
    $250load_attr.7 = getattr(value=$238load_global.5, attr=sign) ['$238load_global.5', '$250load_attr.7']
    $266call.9 = call $250load_attr.7(x1, func=$250load_attr.7, args=[Var(x1, audio.py:1144)], kws=(), vararg=None, varkwarg=None, target=None) ['$250load_attr.7', '$266call.9', 'x1']
    $276compare_op.10 = $228call.4 != $266call.9 ['$228call.4', '$266call.9', '$276compare_op.10']
    $282return_value.11 = cast(value=$276compare_op.10) ['$276compare_op.10', '$282return_value.11']
    return $282return_value.11               ['$282return_value.11']

DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1023)
           2	RESUME(arg=0, lineno=1023)
           4	LOAD_FAST(arg=0, lineno=1026)
           6	LOAD_CONST(arg=1, lineno=1026)
           8	BINARY_SUBSCR(arg=None, lineno=1026)
          18	LOAD_FAST(arg=0, lineno=1026)
          20	LOAD_CONST(arg=2, lineno=1026)
          22	BINARY_SUBSCR(arg=None, lineno=1026)
          32	COMPARE_OP(arg=4, lineno=1026)
          38	LOAD_FAST(arg=0, lineno=1026)
          40	LOAD_CONST(arg=1, lineno=1026)
          42	BINARY_SUBSCR(arg=None, lineno=1026)
          52	LOAD_FAST(arg=0, lineno=1026)
          54	LOAD_CONST(arg=3, lineno=1026)
          56	BINARY_SUBSCR(arg=None, lineno=1026)
          66	COMPARE_OP(arg=5, lineno=1026)
          72	BINARY_OP(arg=1, lineno=1026)
          76	RETURN_VALUE(arg=None, lineno=1026)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1023)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1023)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1026)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x18.3']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=COMPARE_OP(arg=4, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$x38.7']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$x38.7', '$const40.8.1']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$42binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11.3']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$66compare_op.13']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1026)
DEBUG:numba.core.byteflow:stack ['$binop_and_72.14']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8.1'}), (42, {'index': '$const40.8.1', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11.3'}), (56, {'index': '$const54.11.3', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $32compare_op.6 = $8binary_subscr.2 > $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8.1 = const(int, 0)             ['$const40.8.1']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8.1, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8.1', 'x']
    $const54.11.3 = const(int, 1)            ['$const54.11.3']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11.3, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11.3', 'x']
    $66compare_op.13 = $42binary_subscr.9 >= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=1029)
           2	RESUME(arg=0, lineno=1029)
           4	LOAD_FAST(arg=0, lineno=1032)
           6	LOAD_CONST(arg=1, lineno=1032)
           8	BINARY_SUBSCR(arg=None, lineno=1032)
          18	LOAD_FAST(arg=0, lineno=1032)
          20	LOAD_CONST(arg=2, lineno=1032)
          22	BINARY_SUBSCR(arg=None, lineno=1032)
          32	COMPARE_OP(arg=0, lineno=1032)
          38	LOAD_FAST(arg=0, lineno=1032)
          40	LOAD_CONST(arg=1, lineno=1032)
          42	BINARY_SUBSCR(arg=None, lineno=1032)
          52	LOAD_FAST(arg=0, lineno=1032)
          54	LOAD_CONST(arg=3, lineno=1032)
          56	BINARY_SUBSCR(arg=None, lineno=1032)
          66	COMPARE_OP(arg=1, lineno=1032)
          72	BINARY_OP(arg=1, lineno=1032)
          76	RETURN_VALUE(arg=None, lineno=1032)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=1029)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=1029)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1032)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$x4.0']
DEBUG:numba.core.byteflow:dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$x4.0', '$const6.1.1']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x18.3']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$x18.3', '$const20.4.2']
DEBUG:numba.core.byteflow:dispatch pc=32, inst=COMPARE_OP(arg=0, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$8binary_subscr.2', '$22binary_subscr.5']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$x38.7']
DEBUG:numba.core.byteflow:dispatch pc=42, inst=BINARY_SUBSCR(arg=None, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$x38.7', '$const40.8.1']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$42binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=54, inst=LOAD_CONST(arg=3, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$42binary_subscr.9', '$x52.10', '$const54.11.3']
DEBUG:numba.core.byteflow:dispatch pc=66, inst=COMPARE_OP(arg=1, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$42binary_subscr.9', '$56binary_subscr.12']
DEBUG:numba.core.byteflow:dispatch pc=72, inst=BINARY_OP(arg=1, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$32compare_op.6', '$66compare_op.13']
DEBUG:numba.core.byteflow:dispatch pc=76, inst=RETURN_VALUE(arg=None, lineno=1032)
DEBUG:numba.core.byteflow:stack ['$binop_and_72.14']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'res': '$x4.0'}), (6, {'res': '$const6.1.1'}), (8, {'index': '$const6.1.1', 'target': '$x4.0', 'res': '$8binary_subscr.2'}), (10, {}), (12, {}), (14, {}), (16, {}), (18, {'res': '$x18.3'}), (20, {'res': '$const20.4.2'}), (22, {'index': '$const20.4.2', 'target': '$x18.3', 'res': '$22binary_subscr.5'}), (24, {}), (26, {}), (28, {}), (30, {}), (32, {'lhs': '$8binary_subscr.2', 'rhs': '$22binary_subscr.5', 'res': '$32compare_op.6'}), (34, {}), (36, {}), (38, {'res': '$x38.7'}), (40, {'res': '$const40.8.1'}), (42, {'index': '$const40.8.1', 'target': '$x38.7', 'res': '$42binary_subscr.9'}), (44, {}), (46, {}), (48, {}), (50, {}), (52, {'res': '$x52.10'}), (54, {'res': '$const54.11.3'}), (56, {'index': '$const54.11.3', 'target': '$x52.10', 'res': '$56binary_subscr.12'}), (58, {}), (60, {}), (62, {}), (64, {}), (66, {'lhs': '$42binary_subscr.9', 'rhs': '$56binary_subscr.12', 'res': '$66compare_op.13'}), (68, {}), (70, {}), (72, {'op': '&', 'lhs': '$32compare_op.6', 'rhs': '$66compare_op.13', 'res': '$binop_and_72.14'}), (74, {}), (76, {'retval': '$binop_and_72.14', 'castval': '$76return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    $const6.1.1 = const(int, 0)              ['$const6.1.1']
    $8binary_subscr.2 = getitem(value=x, index=$const6.1.1, fn=<built-in function getitem>) ['$8binary_subscr.2', '$const6.1.1', 'x']
    $const20.4.2 = const(int, -1)            ['$const20.4.2']
    $22binary_subscr.5 = getitem(value=x, index=$const20.4.2, fn=<built-in function getitem>) ['$22binary_subscr.5', '$const20.4.2', 'x']
    $32compare_op.6 = $8binary_subscr.2 < $22binary_subscr.5 ['$22binary_subscr.5', '$32compare_op.6', '$8binary_subscr.2']
    $const40.8.1 = const(int, 0)             ['$const40.8.1']
    $42binary_subscr.9 = getitem(value=x, index=$const40.8.1, fn=<built-in function getitem>) ['$42binary_subscr.9', '$const40.8.1', 'x']
    $const54.11.3 = const(int, 1)            ['$const54.11.3']
    $56binary_subscr.12 = getitem(value=x, index=$const54.11.3, fn=<built-in function getitem>) ['$56binary_subscr.12', '$const54.11.3', 'x']
    $66compare_op.13 = $42binary_subscr.9 <= $56binary_subscr.12 ['$42binary_subscr.9', '$56binary_subscr.12', '$66compare_op.13']
    $binop_and_72.14 = $32compare_op.6 & $66compare_op.13 ['$32compare_op.6', '$66compare_op.13', '$binop_and_72.14']
    $76return_value.15 = cast(value=$binop_and_72.14) ['$76return_value.15', '$binop_and_72.14']
    return $76return_value.15                ['$76return_value.15']

DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	RESUME(arg=0, lineno=81)
           4	LOAD_GLOBAL(arg=1, lineno=86)
          16	LOAD_FAST(arg=0, lineno=86)
          18	LOAD_FAST(arg=1, lineno=86)
          20	LOAD_FAST(arg=2, lineno=86)
          22	LOAD_FAST(arg=3, lineno=86)
          24	LOAD_FAST(arg=4, lineno=86)
          26	LOAD_FAST(arg=5, lineno=86)
          28	LOAD_FAST(arg=6, lineno=86)
          30	PRECALL(arg=7, lineno=86)
          34	CALL(arg=7, lineno=86)
          44	POP_TOP(arg=None, lineno=86)
          46	LOAD_CONST(arg=0, lineno=86)
          48	RETURN_VALUE(arg=None, lineno=86)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=81)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=81)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=86)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=86)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=86)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=86)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3']
DEBUG:numba.core.byteflow:dispatch pc=22, inst=LOAD_FAST(arg=3, lineno=86)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=86)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5']
DEBUG:numba.core.byteflow:dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=86)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=LOAD_FAST(arg=6, lineno=86)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7']
DEBUG:numba.core.byteflow:dispatch pc=30, inst=PRECALL(arg=7, lineno=86)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
DEBUG:numba.core.byteflow:dispatch pc=34, inst=CALL(arg=7, lineno=86)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=POP_TOP(arg=None, lineno=86)
DEBUG:numba.core.byteflow:stack ['$34call.9']
DEBUG:numba.core.byteflow:dispatch pc=46, inst=LOAD_CONST(arg=0, lineno=86)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=48, inst=RETURN_VALUE(arg=None, lineno=86)
DEBUG:numba.core.byteflow:stack ['$const46.10.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>, {})
DEBUG:numba.core.byteflow:keep phismap: {}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>, {})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$x16.2'}), (18, {'res': '$t_out18.3'}), (20, {'res': '$interp_win20.4'}), (22, {'res': '$interp_delta22.5'}), (24, {'res': '$num_table24.6'}), (26, {'res': '$scale26.7'}), (28, {'res': '$y28.8'}), (30, {}), (32, {}), (34, {'func': '$4load_global.0', 'args': ['$x16.2', '$t_out18.3', '$interp_win20.4', '$interp_delta22.5', '$num_table24.6', '$scale26.7', '$y28.8'], 'kw_names': None, 'res': '$34call.9'}), (36, {}), (38, {}), (40, {}), (42, {}), (46, {'res': '$const46.10.0'}), (48, {'retval': '$const46.10.0', 'castval': '$48return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000023E664FE340>)) ['$4load_global.0']
    $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$34call.9', '$4load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const46.10.0 = const(NoneType, None)    ['$const46.10.0']
    $48return_value.11 = cast(value=$const46.10.0) ['$48return_value.11', '$const46.10.0']
    return $48return_value.11                ['$48return_value.11']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000023E675DC810>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: t_out = arg(1, name=t_out)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(2, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(4, name=num_table)
DEBUG:numba.core.ssa:on stmt: scale = arg(5, name=scale)
DEBUG:numba.core.ssa:on stmt: y = arg(6, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x0000023E664FE340>))
DEBUG:numba.core.ssa:on stmt: $34call.9 = call $4load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$4load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $const46.10.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $48return_value.11 = cast(value=$const46.10.0)
DEBUG:numba.core.ssa:on stmt: return $48return_value.11
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$34call.9': [(<numba.core.ir.Assign object at 0x0000023E675C7D90>,
                            0)],
             '$48return_value.11': [(<numba.core.ir.Assign object at 0x0000023E675C6250>,
                                     0)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000023E675C74D0>,
                                  0)],
             '$const46.10.0': [(<numba.core.ir.Assign object at 0x0000023E675C7BD0>,
                                0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000023E675C5990>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000023E675C6DD0>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000023E675C5910>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x0000023E675C7A10>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x0000023E675C5650>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x0000023E675C60D0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000023E675C6C50>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000023E675E6590>
DEBUG:numba.core.byteflow:bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	RESUME(arg=0, lineno=7)
           4	LOAD_GLOBAL(arg=1, lineno=9)
          16	LOAD_FAST(arg=5, lineno=9)
          18	LOAD_FAST(arg=4, lineno=9)
          20	BINARY_OP(arg=5, lineno=9)
          24	PRECALL(arg=1, lineno=9)
          28	CALL(arg=1, lineno=9)
          38	STORE_FAST(arg=7, lineno=9)
          40	LOAD_CONST(arg=1, lineno=10)
          42	STORE_FAST(arg=8, lineno=10)
          44	LOAD_CONST(arg=2, lineno=12)
          46	STORE_FAST(arg=9, lineno=12)
          48	LOAD_CONST(arg=1, lineno=13)
          50	STORE_FAST(arg=10, lineno=13)
          52	LOAD_CONST(arg=1, lineno=14)
          54	STORE_FAST(arg=11, lineno=14)
          56	LOAD_CONST(arg=2, lineno=15)
          58	STORE_FAST(arg=12, lineno=15)
          60	LOAD_CONST(arg=1, lineno=16)
          62	STORE_FAST(arg=13, lineno=16)
          64	LOAD_CONST(arg=1, lineno=17)
          66	STORE_FAST(arg=14, lineno=17)
          68	LOAD_FAST(arg=2, lineno=19)
          70	LOAD_ATTR(arg=1, lineno=19)
          80	LOAD_CONST(arg=2, lineno=19)
          82	BINARY_SUBSCR(arg=None, lineno=19)
          92	STORE_FAST(arg=15, lineno=19)
          94	LOAD_FAST(arg=0, lineno=20)
          96	LOAD_ATTR(arg=1, lineno=20)
         106	LOAD_CONST(arg=2, lineno=20)
         108	BINARY_SUBSCR(arg=None, lineno=20)
         118	STORE_FAST(arg=16, lineno=20)
         120	LOAD_FAST(arg=1, lineno=21)
         122	LOAD_ATTR(arg=1, lineno=21)
         132	LOAD_CONST(arg=2, lineno=21)
         134	BINARY_SUBSCR(arg=None, lineno=21)
         144	STORE_FAST(arg=17, lineno=21)
         146	LOAD_GLOBAL(arg=5, lineno=23)
         158	LOAD_FAST(arg=17, lineno=23)
         160	PRECALL(arg=1, lineno=23)
         164	CALL(arg=1, lineno=23)
         174	GET_ITER(arg=None, lineno=23)
>        176	NOP(arg=1, lineno=23)
         178	FOR_ITER(arg=301, lineno=23)
         180	STORE_FAST(arg=18, lineno=23)
         182	LOAD_FAST(arg=1, lineno=24)
         184	LOAD_FAST(arg=18, lineno=24)
         186	BINARY_SUBSCR(arg=None, lineno=24)
         196	STORE_FAST(arg=8, lineno=24)
         198	LOAD_GLOBAL(arg=1, lineno=27)
         210	LOAD_FAST(arg=8, lineno=27)
         212	PRECALL(arg=1, lineno=27)
         216	CALL(arg=1, lineno=27)
         226	STORE_FAST(arg=9, lineno=27)
         228	LOAD_FAST(arg=5, lineno=30)
         230	LOAD_FAST(arg=8, lineno=30)
         232	LOAD_FAST(arg=9, lineno=30)
         234	BINARY_OP(arg=10, lineno=30)
         238	BINARY_OP(arg=5, lineno=30)
         242	STORE_FAST(arg=10, lineno=30)
         244	LOAD_FAST(arg=10, lineno=33)
         246	LOAD_FAST(arg=4, lineno=33)
         248	BINARY_OP(arg=5, lineno=33)
         252	STORE_FAST(arg=11, lineno=33)
         254	LOAD_GLOBAL(arg=1, lineno=34)
         266	LOAD_FAST(arg=11, lineno=34)
         268	PRECALL(arg=1, lineno=34)
         272	CALL(arg=1, lineno=34)
         282	STORE_FAST(arg=12, lineno=34)
         284	LOAD_FAST(arg=11, lineno=37)
         286	LOAD_FAST(arg=12, lineno=37)
         288	BINARY_OP(arg=10, lineno=37)
         292	STORE_FAST(arg=13, lineno=37)
         294	LOAD_GLOBAL(arg=7, lineno=40)
         306	LOAD_FAST(arg=9, lineno=40)
         308	LOAD_CONST(arg=3, lineno=40)
         310	BINARY_OP(arg=0, lineno=40)
         314	LOAD_FAST(arg=15, lineno=40)
         316	LOAD_FAST(arg=12, lineno=40)
         318	BINARY_OP(arg=10, lineno=40)
         322	LOAD_FAST(arg=7, lineno=40)
         324	BINARY_OP(arg=2, lineno=40)
         328	PRECALL(arg=2, lineno=40)
         332	CALL(arg=2, lineno=40)
         342	STORE_FAST(arg=19, lineno=40)
         344	LOAD_GLOBAL(arg=9, lineno=41)
         356	LOAD_FAST(arg=19, lineno=41)
         358	PRECALL(arg=1, lineno=41)
         362	CALL(arg=1, lineno=41)
         372	GET_ITER(arg=None, lineno=41)
>        374	FOR_ITER(arg=62, lineno=41)
         376	STORE_FAST(arg=20, lineno=41)
         378	LOAD_FAST(arg=2, lineno=44)
         380	LOAD_FAST(arg=12, lineno=44)
         382	LOAD_FAST(arg=20, lineno=44)
         384	LOAD_FAST(arg=7, lineno=44)
         386	BINARY_OP(arg=5, lineno=44)
         390	BINARY_OP(arg=0, lineno=44)
         394	BINARY_SUBSCR(arg=None, lineno=44)
         404	LOAD_FAST(arg=13, lineno=45)
         406	LOAD_FAST(arg=3, lineno=45)
         408	LOAD_FAST(arg=12, lineno=45)
         410	LOAD_FAST(arg=20, lineno=45)
         412	LOAD_FAST(arg=7, lineno=45)
         414	BINARY_OP(arg=5, lineno=45)
         418	BINARY_OP(arg=0, lineno=45)
         422	BINARY_SUBSCR(arg=None, lineno=45)
         432	BINARY_OP(arg=5, lineno=45)
         436	BINARY_OP(arg=0, lineno=44)
         440	STORE_FAST(arg=14, lineno=43)
         442	LOAD_FAST(arg=6, lineno=47)
         444	LOAD_FAST(arg=18, lineno=47)
         446	COPY(arg=2, lineno=47)
         448	COPY(arg=2, lineno=47)
         450	BINARY_SUBSCR(arg=None, lineno=47)
         460	LOAD_FAST(arg=14, lineno=47)
         462	LOAD_FAST(arg=0, lineno=47)
         464	LOAD_FAST(arg=9, lineno=47)
         466	LOAD_FAST(arg=20, lineno=47)
         468	BINARY_OP(arg=10, lineno=47)
         472	BINARY_SUBSCR(arg=None, lineno=47)
         482	BINARY_OP(arg=5, lineno=47)
         486	BINARY_OP(arg=13, lineno=47)
         490	SWAP(arg=3, lineno=47)
         492	SWAP(arg=2, lineno=47)
         494	STORE_SUBSCR(arg=None, lineno=47)
         498	JUMP_BACKWARD(arg=63, lineno=47)
>        500	LOAD_FAST(arg=5, lineno=50)
         502	LOAD_FAST(arg=10, lineno=50)
         504	BINARY_OP(arg=10, lineno=50)
         508	STORE_FAST(arg=10, lineno=50)
         510	LOAD_FAST(arg=10, lineno=53)
         512	LOAD_FAST(arg=4, lineno=53)
         514	BINARY_OP(arg=5, lineno=53)
         518	STORE_FAST(arg=11, lineno=53)
         520	LOAD_GLOBAL(arg=1, lineno=54)
         532	LOAD_FAST(arg=11, lineno=54)
         534	PRECALL(arg=1, lineno=54)
         538	CALL(arg=1, lineno=54)
         548	STORE_FAST(arg=12, lineno=54)
         550	LOAD_FAST(arg=11, lineno=57)
         552	LOAD_FAST(arg=12, lineno=57)
         554	BINARY_OP(arg=10, lineno=57)
         558	STORE_FAST(arg=13, lineno=57)
         560	LOAD_GLOBAL(arg=7, lineno=60)
         572	LOAD_FAST(arg=16, lineno=60)
         574	LOAD_FAST(arg=9, lineno=60)
         576	BINARY_OP(arg=10, lineno=60)
         580	LOAD_CONST(arg=3, lineno=60)
         582	BINARY_OP(arg=10, lineno=60)
         586	LOAD_FAST(arg=15, lineno=60)
         588	LOAD_FAST(arg=12, lineno=60)
         590	BINARY_OP(arg=10, lineno=60)
         594	LOAD_FAST(arg=7, lineno=60)
         596	BINARY_OP(arg=2, lineno=60)
         600	PRECALL(arg=2, lineno=60)
         604	CALL(arg=2, lineno=60)
         614	STORE_FAST(arg=21, lineno=60)
         616	LOAD_GLOBAL(arg=9, lineno=61)
         628	LOAD_FAST(arg=21, lineno=61)
         630	PRECALL(arg=1, lineno=61)
         634	CALL(arg=1, lineno=61)
         644	GET_ITER(arg=None, lineno=61)
>        646	FOR_ITER(arg=65, lineno=61)
         648	STORE_FAST(arg=22, lineno=61)
         650	LOAD_FAST(arg=2, lineno=63)
         652	LOAD_FAST(arg=12, lineno=63)
         654	LOAD_FAST(arg=22, lineno=63)
         656	LOAD_FAST(arg=7, lineno=63)
         658	BINARY_OP(arg=5, lineno=63)
         662	BINARY_OP(arg=0, lineno=63)
         666	BINARY_SUBSCR(arg=None, lineno=63)
         676	LOAD_FAST(arg=13, lineno=64)
         678	LOAD_FAST(arg=3, lineno=64)
         680	LOAD_FAST(arg=12, lineno=64)
         682	LOAD_FAST(arg=22, lineno=64)
         684	LOAD_FAST(arg=7, lineno=64)
         686	BINARY_OP(arg=5, lineno=64)
         690	BINARY_OP(arg=0, lineno=64)
         694	BINARY_SUBSCR(arg=None, lineno=64)
         704	BINARY_OP(arg=5, lineno=64)
         708	BINARY_OP(arg=0, lineno=63)
         712	STORE_FAST(arg=14, lineno=62)
         714	LOAD_FAST(arg=6, lineno=66)
         716	LOAD_FAST(arg=18, lineno=66)
         718	COPY(arg=2, lineno=66)
         720	COPY(arg=2, lineno=66)
         722	BINARY_SUBSCR(arg=None, lineno=66)
         732	LOAD_FAST(arg=14, lineno=66)
         734	LOAD_FAST(arg=0, lineno=66)
         736	LOAD_FAST(arg=9, lineno=66)
         738	LOAD_FAST(arg=22, lineno=66)
         740	BINARY_OP(arg=0, lineno=66)
         744	LOAD_CONST(arg=3, lineno=66)
         746	BINARY_OP(arg=0, lineno=66)
         750	BINARY_SUBSCR(arg=None, lineno=66)
         760	BINARY_OP(arg=5, lineno=66)
         764	BINARY_OP(arg=13, lineno=66)
         768	SWAP(arg=3, lineno=66)
         770	SWAP(arg=2, lineno=66)
         772	STORE_SUBSCR(arg=None, lineno=66)
         776	JUMP_BACKWARD(arg=66, lineno=66)
>        778	NOP(arg=1, lineno=61)
         780	JUMP_BACKWARD(arg=303, lineno=61)
>        782	LOAD_CONST(arg=0, lineno=23)
         784	RETURN_VALUE(arg=None, lineno=23)
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=0 nstack_initial=0)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=0 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=0, inst=NOP(arg=None, lineno=7)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=2, inst=RESUME(arg=0, lineno=7)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=4, inst=LOAD_GLOBAL(arg=1, lineno=9)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=16, inst=LOAD_FAST(arg=5, lineno=9)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0']
DEBUG:numba.core.byteflow:dispatch pc=18, inst=LOAD_FAST(arg=4, lineno=9)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$scale16.2']
DEBUG:numba.core.byteflow:dispatch pc=20, inst=BINARY_OP(arg=5, lineno=9)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$scale16.2', '$num_table18.3']
DEBUG:numba.core.byteflow:dispatch pc=24, inst=PRECALL(arg=1, lineno=9)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
DEBUG:numba.core.byteflow:dispatch pc=28, inst=CALL(arg=1, lineno=9)
DEBUG:numba.core.byteflow:stack ['$null$4.1', '$4load_global.0', '$binop_mul20.4']
DEBUG:numba.core.byteflow:dispatch pc=38, inst=STORE_FAST(arg=7, lineno=9)
DEBUG:numba.core.byteflow:stack ['$28call.5']
DEBUG:numba.core.byteflow:dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=10)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=42, inst=STORE_FAST(arg=8, lineno=10)
DEBUG:numba.core.byteflow:stack ['$const40.6.1']
DEBUG:numba.core.byteflow:dispatch pc=44, inst=LOAD_CONST(arg=2, lineno=12)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=46, inst=STORE_FAST(arg=9, lineno=12)
DEBUG:numba.core.byteflow:stack ['$const44.7.2']
DEBUG:numba.core.byteflow:dispatch pc=48, inst=LOAD_CONST(arg=1, lineno=13)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=50, inst=STORE_FAST(arg=10, lineno=13)
DEBUG:numba.core.byteflow:stack ['$const48.8.1']
DEBUG:numba.core.byteflow:dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=14)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=54, inst=STORE_FAST(arg=11, lineno=14)
DEBUG:numba.core.byteflow:stack ['$const52.9.1']
DEBUG:numba.core.byteflow:dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=15)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=58, inst=STORE_FAST(arg=12, lineno=15)
DEBUG:numba.core.byteflow:stack ['$const56.10.2']
DEBUG:numba.core.byteflow:dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=16)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=62, inst=STORE_FAST(arg=13, lineno=16)
DEBUG:numba.core.byteflow:stack ['$const60.11.1']
DEBUG:numba.core.byteflow:dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=17)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=66, inst=STORE_FAST(arg=14, lineno=17)
DEBUG:numba.core.byteflow:stack ['$const64.12.1']
DEBUG:numba.core.byteflow:dispatch pc=68, inst=LOAD_FAST(arg=2, lineno=19)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=70, inst=LOAD_ATTR(arg=1, lineno=19)
DEBUG:numba.core.byteflow:stack ['$interp_win68.13']
DEBUG:numba.core.byteflow:dispatch pc=80, inst=LOAD_CONST(arg=2, lineno=19)
DEBUG:numba.core.byteflow:stack ['$70load_attr.14']
DEBUG:numba.core.byteflow:dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=19)
DEBUG:numba.core.byteflow:stack ['$70load_attr.14', '$const80.15.2']
DEBUG:numba.core.byteflow:dispatch pc=92, inst=STORE_FAST(arg=15, lineno=19)
DEBUG:numba.core.byteflow:stack ['$82binary_subscr.16']
DEBUG:numba.core.byteflow:dispatch pc=94, inst=LOAD_FAST(arg=0, lineno=20)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=96, inst=LOAD_ATTR(arg=1, lineno=20)
DEBUG:numba.core.byteflow:stack ['$x94.17']
DEBUG:numba.core.byteflow:dispatch pc=106, inst=LOAD_CONST(arg=2, lineno=20)
DEBUG:numba.core.byteflow:stack ['$96load_attr.18']
DEBUG:numba.core.byteflow:dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=20)
DEBUG:numba.core.byteflow:stack ['$96load_attr.18', '$const106.19.2']
DEBUG:numba.core.byteflow:dispatch pc=118, inst=STORE_FAST(arg=16, lineno=20)
DEBUG:numba.core.byteflow:stack ['$108binary_subscr.20']
DEBUG:numba.core.byteflow:dispatch pc=120, inst=LOAD_FAST(arg=1, lineno=21)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=122, inst=LOAD_ATTR(arg=1, lineno=21)
DEBUG:numba.core.byteflow:stack ['$t_out120.21']
DEBUG:numba.core.byteflow:dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=21)
DEBUG:numba.core.byteflow:stack ['$122load_attr.22']
DEBUG:numba.core.byteflow:dispatch pc=134, inst=BINARY_SUBSCR(arg=None, lineno=21)
DEBUG:numba.core.byteflow:stack ['$122load_attr.22', '$const132.23.2']
DEBUG:numba.core.byteflow:dispatch pc=144, inst=STORE_FAST(arg=17, lineno=21)
DEBUG:numba.core.byteflow:stack ['$134binary_subscr.24']
DEBUG:numba.core.byteflow:dispatch pc=146, inst=LOAD_GLOBAL(arg=5, lineno=23)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=158, inst=LOAD_FAST(arg=17, lineno=23)
DEBUG:numba.core.byteflow:stack ['$null$146.26', '$146load_global.25']
DEBUG:numba.core.byteflow:dispatch pc=160, inst=PRECALL(arg=1, lineno=23)
DEBUG:numba.core.byteflow:stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
DEBUG:numba.core.byteflow:dispatch pc=164, inst=CALL(arg=1, lineno=23)
DEBUG:numba.core.byteflow:stack ['$null$146.26', '$146load_global.25', '$n_out158.27']
DEBUG:numba.core.byteflow:dispatch pc=174, inst=GET_ITER(arg=None, lineno=23)
DEBUG:numba.core.byteflow:stack ['$164call.28']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=176, stack=('$174get_iter.29',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=176 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi176.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=176 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=176, inst=NOP(arg=1, lineno=23)
DEBUG:numba.core.byteflow:stack ['$phi176.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=178, stack=('$phi176.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=178 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi178.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=178 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=178, inst=FOR_ITER(arg=301, lineno=23)
DEBUG:numba.core.byteflow:stack ['$phi178.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=782, stack=(), blockstack=(), npush=0), Edge(pc=180, stack=('$phi178.0', '$178for_iter.2'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=782 nstack_initial=0), State(pc_initial=180 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: []
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=782 nstack_initial=0)
DEBUG:numba.core.byteflow:dispatch pc=782, inst=LOAD_CONST(arg=0, lineno=23)
DEBUG:numba.core.byteflow:stack []
DEBUG:numba.core.byteflow:dispatch pc=784, inst=RETURN_VALUE(arg=None, lineno=23)
DEBUG:numba.core.byteflow:stack ['$const782.0.0']
DEBUG:numba.core.byteflow:end state. edges=[]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=180 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi180.0', '$phi180.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=180 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=180, inst=STORE_FAST(arg=18, lineno=23)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$phi180.1']
DEBUG:numba.core.byteflow:dispatch pc=182, inst=LOAD_FAST(arg=1, lineno=24)
DEBUG:numba.core.byteflow:stack ['$phi180.0']
DEBUG:numba.core.byteflow:dispatch pc=184, inst=LOAD_FAST(arg=18, lineno=24)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$t_out182.2']
DEBUG:numba.core.byteflow:dispatch pc=186, inst=BINARY_SUBSCR(arg=None, lineno=24)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$t_out182.2', '$t184.3']
DEBUG:numba.core.byteflow:dispatch pc=196, inst=STORE_FAST(arg=8, lineno=24)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$186binary_subscr.4']
DEBUG:numba.core.byteflow:dispatch pc=198, inst=LOAD_GLOBAL(arg=1, lineno=27)
DEBUG:numba.core.byteflow:stack ['$phi180.0']
DEBUG:numba.core.byteflow:dispatch pc=210, inst=LOAD_FAST(arg=8, lineno=27)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$null$198.6', '$198load_global.5']
DEBUG:numba.core.byteflow:dispatch pc=212, inst=PRECALL(arg=1, lineno=27)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
DEBUG:numba.core.byteflow:dispatch pc=216, inst=CALL(arg=1, lineno=27)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$null$198.6', '$198load_global.5', '$time_register210.7']
DEBUG:numba.core.byteflow:dispatch pc=226, inst=STORE_FAST(arg=9, lineno=27)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$216call.8']
DEBUG:numba.core.byteflow:dispatch pc=228, inst=LOAD_FAST(arg=5, lineno=30)
DEBUG:numba.core.byteflow:stack ['$phi180.0']
DEBUG:numba.core.byteflow:dispatch pc=230, inst=LOAD_FAST(arg=8, lineno=30)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$scale228.9']
DEBUG:numba.core.byteflow:dispatch pc=232, inst=LOAD_FAST(arg=9, lineno=30)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$scale228.9', '$time_register230.10']
DEBUG:numba.core.byteflow:dispatch pc=234, inst=BINARY_OP(arg=10, lineno=30)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$scale228.9', '$time_register230.10', '$n232.11']
DEBUG:numba.core.byteflow:dispatch pc=238, inst=BINARY_OP(arg=5, lineno=30)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$scale228.9', '$binop_sub234.12']
DEBUG:numba.core.byteflow:dispatch pc=242, inst=STORE_FAST(arg=10, lineno=30)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$binop_mul238.13']
DEBUG:numba.core.byteflow:dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=33)
DEBUG:numba.core.byteflow:stack ['$phi180.0']
DEBUG:numba.core.byteflow:dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=33)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$frac244.14']
DEBUG:numba.core.byteflow:dispatch pc=248, inst=BINARY_OP(arg=5, lineno=33)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$frac244.14', '$num_table246.15']
DEBUG:numba.core.byteflow:dispatch pc=252, inst=STORE_FAST(arg=11, lineno=33)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$binop_mul248.16']
DEBUG:numba.core.byteflow:dispatch pc=254, inst=LOAD_GLOBAL(arg=1, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi180.0']
DEBUG:numba.core.byteflow:dispatch pc=266, inst=LOAD_FAST(arg=11, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$null$254.18', '$254load_global.17']
DEBUG:numba.core.byteflow:dispatch pc=268, inst=PRECALL(arg=1, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
DEBUG:numba.core.byteflow:dispatch pc=272, inst=CALL(arg=1, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$null$254.18', '$254load_global.17', '$index_frac266.19']
DEBUG:numba.core.byteflow:dispatch pc=282, inst=STORE_FAST(arg=12, lineno=34)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$272call.20']
DEBUG:numba.core.byteflow:dispatch pc=284, inst=LOAD_FAST(arg=11, lineno=37)
DEBUG:numba.core.byteflow:stack ['$phi180.0']
DEBUG:numba.core.byteflow:dispatch pc=286, inst=LOAD_FAST(arg=12, lineno=37)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$index_frac284.21']
DEBUG:numba.core.byteflow:dispatch pc=288, inst=BINARY_OP(arg=10, lineno=37)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$index_frac284.21', '$offset286.22']
DEBUG:numba.core.byteflow:dispatch pc=292, inst=STORE_FAST(arg=13, lineno=37)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$binop_sub288.23']
DEBUG:numba.core.byteflow:dispatch pc=294, inst=LOAD_GLOBAL(arg=7, lineno=40)
DEBUG:numba.core.byteflow:stack ['$phi180.0']
DEBUG:numba.core.byteflow:dispatch pc=306, inst=LOAD_FAST(arg=9, lineno=40)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$null$294.25', '$294load_global.24']
DEBUG:numba.core.byteflow:dispatch pc=308, inst=LOAD_CONST(arg=3, lineno=40)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26']
DEBUG:numba.core.byteflow:dispatch pc=310, inst=BINARY_OP(arg=0, lineno=40)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$n306.26', '$const308.27.3']
DEBUG:numba.core.byteflow:dispatch pc=314, inst=LOAD_FAST(arg=15, lineno=40)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28']
DEBUG:numba.core.byteflow:dispatch pc=316, inst=LOAD_FAST(arg=12, lineno=40)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29']
DEBUG:numba.core.byteflow:dispatch pc=318, inst=BINARY_OP(arg=10, lineno=40)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$nwin314.29', '$offset316.30']
DEBUG:numba.core.byteflow:dispatch pc=322, inst=LOAD_FAST(arg=7, lineno=40)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31']
DEBUG:numba.core.byteflow:dispatch pc=324, inst=BINARY_OP(arg=2, lineno=40)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_sub318.31', '$index_step322.32']
DEBUG:numba.core.byteflow:dispatch pc=328, inst=PRECALL(arg=2, lineno=40)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
DEBUG:numba.core.byteflow:dispatch pc=332, inst=CALL(arg=2, lineno=40)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$null$294.25', '$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33']
DEBUG:numba.core.byteflow:dispatch pc=342, inst=STORE_FAST(arg=19, lineno=40)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$332call.34']
DEBUG:numba.core.byteflow:dispatch pc=344, inst=LOAD_GLOBAL(arg=9, lineno=41)
DEBUG:numba.core.byteflow:stack ['$phi180.0']
DEBUG:numba.core.byteflow:dispatch pc=356, inst=LOAD_FAST(arg=19, lineno=41)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$null$344.36', '$344load_global.35']
DEBUG:numba.core.byteflow:dispatch pc=358, inst=PRECALL(arg=1, lineno=41)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
DEBUG:numba.core.byteflow:dispatch pc=362, inst=CALL(arg=1, lineno=41)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$null$344.36', '$344load_global.35', '$i_max356.37']
DEBUG:numba.core.byteflow:dispatch pc=372, inst=GET_ITER(arg=None, lineno=41)
DEBUG:numba.core.byteflow:stack ['$phi180.0', '$362call.38']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=374, stack=('$phi180.0', '$372get_iter.39'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=374 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi374.0', '$phi374.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=374 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=374, inst=FOR_ITER(arg=62, lineno=41)
DEBUG:numba.core.byteflow:stack ['$phi374.0', '$phi374.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=500, stack=('$phi374.0',), blockstack=(), npush=0), Edge(pc=376, stack=('$phi374.0', '$phi374.1', '$374for_iter.3'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=500 nstack_initial=1), State(pc_initial=376 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi500.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=500 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=500, inst=LOAD_FAST(arg=5, lineno=50)
DEBUG:numba.core.byteflow:stack ['$phi500.0']
DEBUG:numba.core.byteflow:dispatch pc=502, inst=LOAD_FAST(arg=10, lineno=50)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$scale500.1']
DEBUG:numba.core.byteflow:dispatch pc=504, inst=BINARY_OP(arg=10, lineno=50)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$scale500.1', '$frac502.2']
DEBUG:numba.core.byteflow:dispatch pc=508, inst=STORE_FAST(arg=10, lineno=50)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$binop_sub504.3']
DEBUG:numba.core.byteflow:dispatch pc=510, inst=LOAD_FAST(arg=10, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi500.0']
DEBUG:numba.core.byteflow:dispatch pc=512, inst=LOAD_FAST(arg=4, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$frac510.4']
DEBUG:numba.core.byteflow:dispatch pc=514, inst=BINARY_OP(arg=5, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$frac510.4', '$num_table512.5']
DEBUG:numba.core.byteflow:dispatch pc=518, inst=STORE_FAST(arg=11, lineno=53)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$binop_mul514.6']
DEBUG:numba.core.byteflow:dispatch pc=520, inst=LOAD_GLOBAL(arg=1, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi500.0']
DEBUG:numba.core.byteflow:dispatch pc=532, inst=LOAD_FAST(arg=11, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$null$520.8', '$520load_global.7']
DEBUG:numba.core.byteflow:dispatch pc=534, inst=PRECALL(arg=1, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
DEBUG:numba.core.byteflow:dispatch pc=538, inst=CALL(arg=1, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$null$520.8', '$520load_global.7', '$index_frac532.9']
DEBUG:numba.core.byteflow:dispatch pc=548, inst=STORE_FAST(arg=12, lineno=54)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$538call.10']
DEBUG:numba.core.byteflow:dispatch pc=550, inst=LOAD_FAST(arg=11, lineno=57)
DEBUG:numba.core.byteflow:stack ['$phi500.0']
DEBUG:numba.core.byteflow:dispatch pc=552, inst=LOAD_FAST(arg=12, lineno=57)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$index_frac550.11']
DEBUG:numba.core.byteflow:dispatch pc=554, inst=BINARY_OP(arg=10, lineno=57)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$index_frac550.11', '$offset552.12']
DEBUG:numba.core.byteflow:dispatch pc=558, inst=STORE_FAST(arg=13, lineno=57)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$binop_sub554.13']
DEBUG:numba.core.byteflow:dispatch pc=560, inst=LOAD_GLOBAL(arg=7, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi500.0']
DEBUG:numba.core.byteflow:dispatch pc=572, inst=LOAD_FAST(arg=16, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$null$560.15', '$560load_global.14']
DEBUG:numba.core.byteflow:dispatch pc=574, inst=LOAD_FAST(arg=9, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16']
DEBUG:numba.core.byteflow:dispatch pc=576, inst=BINARY_OP(arg=10, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$n_orig572.16', '$n574.17']
DEBUG:numba.core.byteflow:dispatch pc=580, inst=LOAD_CONST(arg=3, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18']
DEBUG:numba.core.byteflow:dispatch pc=582, inst=BINARY_OP(arg=10, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub576.18', '$const580.19.3']
DEBUG:numba.core.byteflow:dispatch pc=586, inst=LOAD_FAST(arg=15, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20']
DEBUG:numba.core.byteflow:dispatch pc=588, inst=LOAD_FAST(arg=12, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21']
DEBUG:numba.core.byteflow:dispatch pc=590, inst=BINARY_OP(arg=10, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$nwin586.21', '$offset588.22']
DEBUG:numba.core.byteflow:dispatch pc=594, inst=LOAD_FAST(arg=7, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23']
DEBUG:numba.core.byteflow:dispatch pc=596, inst=BINARY_OP(arg=2, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_sub590.23', '$index_step594.24']
DEBUG:numba.core.byteflow:dispatch pc=600, inst=PRECALL(arg=2, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
DEBUG:numba.core.byteflow:dispatch pc=604, inst=CALL(arg=2, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$null$560.15', '$560load_global.14', '$binop_sub582.20', '$binop_floordiv596.25']
DEBUG:numba.core.byteflow:dispatch pc=614, inst=STORE_FAST(arg=21, lineno=60)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$604call.26']
DEBUG:numba.core.byteflow:dispatch pc=616, inst=LOAD_GLOBAL(arg=9, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi500.0']
DEBUG:numba.core.byteflow:dispatch pc=628, inst=LOAD_FAST(arg=21, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$null$616.28', '$616load_global.27']
DEBUG:numba.core.byteflow:dispatch pc=630, inst=PRECALL(arg=1, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
DEBUG:numba.core.byteflow:dispatch pc=634, inst=CALL(arg=1, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$null$616.28', '$616load_global.27', '$k_max628.29']
DEBUG:numba.core.byteflow:dispatch pc=644, inst=GET_ITER(arg=None, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi500.0', '$634call.30']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=646, stack=('$phi500.0', '$644get_iter.31'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=376 nstack_initial=3), State(pc_initial=646 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi376.0', '$phi376.1', '$phi376.2']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=376 nstack_initial=3)
DEBUG:numba.core.byteflow:dispatch pc=376, inst=STORE_FAST(arg=20, lineno=41)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$phi376.2']
DEBUG:numba.core.byteflow:dispatch pc=378, inst=LOAD_FAST(arg=2, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1']
DEBUG:numba.core.byteflow:dispatch pc=380, inst=LOAD_FAST(arg=12, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$interp_win378.3']
DEBUG:numba.core.byteflow:dispatch pc=382, inst=LOAD_FAST(arg=20, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4']
DEBUG:numba.core.byteflow:dispatch pc=384, inst=LOAD_FAST(arg=7, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5']
DEBUG:numba.core.byteflow:dispatch pc=386, inst=BINARY_OP(arg=5, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$i382.5', '$index_step384.6']
DEBUG:numba.core.byteflow:dispatch pc=390, inst=BINARY_OP(arg=0, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$offset380.4', '$binop_mul386.7']
DEBUG:numba.core.byteflow:dispatch pc=394, inst=BINARY_SUBSCR(arg=None, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$interp_win378.3', '$binop_add390.8']
DEBUG:numba.core.byteflow:dispatch pc=404, inst=LOAD_FAST(arg=13, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=406, inst=LOAD_FAST(arg=3, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10']
DEBUG:numba.core.byteflow:dispatch pc=408, inst=LOAD_FAST(arg=12, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11']
DEBUG:numba.core.byteflow:dispatch pc=410, inst=LOAD_FAST(arg=20, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12']
DEBUG:numba.core.byteflow:dispatch pc=412, inst=LOAD_FAST(arg=7, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13']
DEBUG:numba.core.byteflow:dispatch pc=414, inst=BINARY_OP(arg=5, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$i410.13', '$index_step412.14']
DEBUG:numba.core.byteflow:dispatch pc=418, inst=BINARY_OP(arg=0, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$offset408.12', '$binop_mul414.15']
DEBUG:numba.core.byteflow:dispatch pc=422, inst=BINARY_SUBSCR(arg=None, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$interp_delta406.11', '$binop_add418.16']
DEBUG:numba.core.byteflow:dispatch pc=432, inst=BINARY_OP(arg=5, lineno=45)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$eta404.10', '$422binary_subscr.17']
DEBUG:numba.core.byteflow:dispatch pc=436, inst=BINARY_OP(arg=0, lineno=44)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$394binary_subscr.9', '$binop_mul432.18']
DEBUG:numba.core.byteflow:dispatch pc=440, inst=STORE_FAST(arg=14, lineno=43)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$binop_add436.19']
DEBUG:numba.core.byteflow:dispatch pc=442, inst=LOAD_FAST(arg=6, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1']
DEBUG:numba.core.byteflow:dispatch pc=444, inst=LOAD_FAST(arg=18, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$y442.20']
DEBUG:numba.core.byteflow:dispatch pc=446, inst=COPY(arg=2, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21']
DEBUG:numba.core.byteflow:dispatch pc=448, inst=COPY(arg=2, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20']
DEBUG:numba.core.byteflow:dispatch pc=450, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$y442.20', '$t444.21']
DEBUG:numba.core.byteflow:dispatch pc=460, inst=LOAD_FAST(arg=14, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22']
DEBUG:numba.core.byteflow:dispatch pc=462, inst=LOAD_FAST(arg=0, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23']
DEBUG:numba.core.byteflow:dispatch pc=464, inst=LOAD_FAST(arg=9, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24']
DEBUG:numba.core.byteflow:dispatch pc=466, inst=LOAD_FAST(arg=20, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25']
DEBUG:numba.core.byteflow:dispatch pc=468, inst=BINARY_OP(arg=10, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$n464.25', '$i466.26']
DEBUG:numba.core.byteflow:dispatch pc=472, inst=BINARY_SUBSCR(arg=None, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$x462.24', '$binop_sub468.27']
DEBUG:numba.core.byteflow:dispatch pc=482, inst=BINARY_OP(arg=5, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$weight460.23', '$472binary_subscr.28']
DEBUG:numba.core.byteflow:dispatch pc=486, inst=BINARY_OP(arg=13, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$450binary_subscr.22', '$binop_mul482.29']
DEBUG:numba.core.byteflow:dispatch pc=490, inst=SWAP(arg=3, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$y442.20', '$t444.21', '$binop_iadd486.30']
DEBUG:numba.core.byteflow:dispatch pc=492, inst=SWAP(arg=2, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$t444.21', '$y442.20']
DEBUG:numba.core.byteflow:dispatch pc=494, inst=STORE_SUBSCR(arg=None, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1', '$binop_iadd486.30', '$y442.20', '$t444.21']
DEBUG:numba.core.byteflow:dispatch pc=498, inst=JUMP_BACKWARD(arg=63, lineno=47)
DEBUG:numba.core.byteflow:stack ['$phi376.0', '$phi376.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=374, stack=('$phi376.0', '$phi376.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=646 nstack_initial=2), State(pc_initial=374 nstack_initial=2)])
DEBUG:numba.core.byteflow:stack: ['$phi646.0', '$phi646.1']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=646 nstack_initial=2)
DEBUG:numba.core.byteflow:dispatch pc=646, inst=FOR_ITER(arg=65, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi646.0', '$phi646.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=778, stack=('$phi646.0',), blockstack=(), npush=0), Edge(pc=648, stack=('$phi646.0', '$phi646.1', '$646for_iter.3'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=374 nstack_initial=2), State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=778 nstack_initial=1), State(pc_initial=648 nstack_initial=3)])
DEBUG:numba.core.byteflow:stack: ['$phi778.0']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=778 nstack_initial=1)
DEBUG:numba.core.byteflow:dispatch pc=778, inst=NOP(arg=1, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi778.0']
DEBUG:numba.core.byteflow:dispatch pc=780, inst=JUMP_BACKWARD(arg=303, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi778.0']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=176, stack=('$phi778.0',), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=648 nstack_initial=3), State(pc_initial=176 nstack_initial=1)])
DEBUG:numba.core.byteflow:stack: ['$phi648.0', '$phi648.1', '$phi648.2']
DEBUG:numba.core.byteflow:state.pc_initial: State(pc_initial=648 nstack_initial=3)
DEBUG:numba.core.byteflow:dispatch pc=648, inst=STORE_FAST(arg=22, lineno=61)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$phi648.2']
DEBUG:numba.core.byteflow:dispatch pc=650, inst=LOAD_FAST(arg=2, lineno=63)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1']
DEBUG:numba.core.byteflow:dispatch pc=652, inst=LOAD_FAST(arg=12, lineno=63)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$interp_win650.3']
DEBUG:numba.core.byteflow:dispatch pc=654, inst=LOAD_FAST(arg=22, lineno=63)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4']
DEBUG:numba.core.byteflow:dispatch pc=656, inst=LOAD_FAST(arg=7, lineno=63)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5']
DEBUG:numba.core.byteflow:dispatch pc=658, inst=BINARY_OP(arg=5, lineno=63)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$k654.5', '$index_step656.6']
DEBUG:numba.core.byteflow:dispatch pc=662, inst=BINARY_OP(arg=0, lineno=63)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$offset652.4', '$binop_mul658.7']
DEBUG:numba.core.byteflow:dispatch pc=666, inst=BINARY_SUBSCR(arg=None, lineno=63)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$interp_win650.3', '$binop_add662.8']
DEBUG:numba.core.byteflow:dispatch pc=676, inst=LOAD_FAST(arg=13, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9']
DEBUG:numba.core.byteflow:dispatch pc=678, inst=LOAD_FAST(arg=3, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10']
DEBUG:numba.core.byteflow:dispatch pc=680, inst=LOAD_FAST(arg=12, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11']
DEBUG:numba.core.byteflow:dispatch pc=682, inst=LOAD_FAST(arg=22, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12']
DEBUG:numba.core.byteflow:dispatch pc=684, inst=LOAD_FAST(arg=7, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13']
DEBUG:numba.core.byteflow:dispatch pc=686, inst=BINARY_OP(arg=5, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$k682.13', '$index_step684.14']
DEBUG:numba.core.byteflow:dispatch pc=690, inst=BINARY_OP(arg=0, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$offset680.12', '$binop_mul686.15']
DEBUG:numba.core.byteflow:dispatch pc=694, inst=BINARY_SUBSCR(arg=None, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$interp_delta678.11', '$binop_add690.16']
DEBUG:numba.core.byteflow:dispatch pc=704, inst=BINARY_OP(arg=5, lineno=64)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$eta676.10', '$694binary_subscr.17']
DEBUG:numba.core.byteflow:dispatch pc=708, inst=BINARY_OP(arg=0, lineno=63)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$666binary_subscr.9', '$binop_mul704.18']
DEBUG:numba.core.byteflow:dispatch pc=712, inst=STORE_FAST(arg=14, lineno=62)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$binop_add708.19']
DEBUG:numba.core.byteflow:dispatch pc=714, inst=LOAD_FAST(arg=6, lineno=66)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1']
DEBUG:numba.core.byteflow:dispatch pc=716, inst=LOAD_FAST(arg=18, lineno=66)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$y714.20']
DEBUG:numba.core.byteflow:dispatch pc=718, inst=COPY(arg=2, lineno=66)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21']
DEBUG:numba.core.byteflow:dispatch pc=720, inst=COPY(arg=2, lineno=66)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20']
DEBUG:numba.core.byteflow:dispatch pc=722, inst=BINARY_SUBSCR(arg=None, lineno=66)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$y714.20', '$t716.21']
DEBUG:numba.core.byteflow:dispatch pc=732, inst=LOAD_FAST(arg=14, lineno=66)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22']
DEBUG:numba.core.byteflow:dispatch pc=734, inst=LOAD_FAST(arg=0, lineno=66)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23']
DEBUG:numba.core.byteflow:dispatch pc=736, inst=LOAD_FAST(arg=9, lineno=66)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24']
DEBUG:numba.core.byteflow:dispatch pc=738, inst=LOAD_FAST(arg=22, lineno=66)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25']
DEBUG:numba.core.byteflow:dispatch pc=740, inst=BINARY_OP(arg=0, lineno=66)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$n736.25', '$k738.26']
DEBUG:numba.core.byteflow:dispatch pc=744, inst=LOAD_CONST(arg=3, lineno=66)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27']
DEBUG:numba.core.byteflow:dispatch pc=746, inst=BINARY_OP(arg=0, lineno=66)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add740.27', '$const744.28.3']
DEBUG:numba.core.byteflow:dispatch pc=750, inst=BINARY_SUBSCR(arg=None, lineno=66)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$x734.24', '$binop_add746.29']
DEBUG:numba.core.byteflow:dispatch pc=760, inst=BINARY_OP(arg=5, lineno=66)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$weight732.23', '$750binary_subscr.30']
DEBUG:numba.core.byteflow:dispatch pc=764, inst=BINARY_OP(arg=13, lineno=66)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$722binary_subscr.22', '$binop_mul760.31']
DEBUG:numba.core.byteflow:dispatch pc=768, inst=SWAP(arg=3, lineno=66)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$y714.20', '$t716.21', '$binop_iadd764.32']
DEBUG:numba.core.byteflow:dispatch pc=770, inst=SWAP(arg=2, lineno=66)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$t716.21', '$y714.20']
DEBUG:numba.core.byteflow:dispatch pc=772, inst=STORE_SUBSCR(arg=None, lineno=66)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1', '$binop_iadd764.32', '$y714.20', '$t716.21']
DEBUG:numba.core.byteflow:dispatch pc=776, inst=JUMP_BACKWARD(arg=66, lineno=66)
DEBUG:numba.core.byteflow:stack ['$phi648.0', '$phi648.1']
DEBUG:numba.core.byteflow:end state. edges=[Edge(pc=646, stack=('$phi648.0', '$phi648.1'), blockstack=(), npush=0)]
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=176 nstack_initial=1), State(pc_initial=646 nstack_initial=2)])
DEBUG:numba.core.byteflow:pending: deque([State(pc_initial=646 nstack_initial=2)])
DEBUG:numba.core.byteflow:-------------------------Prune PHIs-------------------------
DEBUG:numba.core.byteflow:Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=176 nstack_initial=1): set(),
             State(pc_initial=178 nstack_initial=1): {'$phi178.0'},
             State(pc_initial=180 nstack_initial=2): {'$phi180.1'},
             State(pc_initial=374 nstack_initial=2): {'$phi374.1'},
             State(pc_initial=376 nstack_initial=3): {'$phi376.2'},
             State(pc_initial=500 nstack_initial=1): set(),
             State(pc_initial=646 nstack_initial=2): {'$phi646.1'},
             State(pc_initial=648 nstack_initial=3): {'$phi648.2'},
             State(pc_initial=778 nstack_initial=1): set(),
             State(pc_initial=782 nstack_initial=0): set()})
DEBUG:numba.core.byteflow:defmap: {'$phi176.0': State(pc_initial=0 nstack_initial=0),
 '$phi180.1': State(pc_initial=178 nstack_initial=1),
 '$phi374.1': State(pc_initial=180 nstack_initial=2),
 '$phi376.2': State(pc_initial=374 nstack_initial=2),
 '$phi646.1': State(pc_initial=500 nstack_initial=1),
 '$phi648.2': State(pc_initial=646 nstack_initial=2)}
DEBUG:numba.core.byteflow:phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi778.0',
                            State(pc_initial=778 nstack_initial=1))},
             '$phi178.0': {('$phi176.0',
                            State(pc_initial=176 nstack_initial=1))},
             '$phi180.0': {('$phi178.0',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$phi180.0',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.0',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi376.1',
                            State(pc_initial=376 nstack_initial=3))},
             '$phi376.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.1': {('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$phi374.0',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi646.0': {('$phi500.0',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.0',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi648.1',
                            State(pc_initial=648 nstack_initial=3))},
             '$phi648.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.1': {('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi374.0',
                            State(pc_initial=374 nstack_initial=2)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2)),
                           ('$phi374.1',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0)),
                           ('$phi646.0',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1)),
                           ('$phi646.1',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:changing phismap: defaultdict(<class 'set'>,
            {'$phi176.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi178.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi180.1': {('$178for_iter.2',
                            State(pc_initial=178 nstack_initial=1))},
             '$phi374.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi374.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi376.1': {('$372get_iter.39',
                            State(pc_initial=180 nstack_initial=2))},
             '$phi376.2': {('$374for_iter.3',
                            State(pc_initial=374 nstack_initial=2))},
             '$phi500.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi646.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi648.1': {('$644get_iter.31',
                            State(pc_initial=500 nstack_initial=1))},
             '$phi648.2': {('$646for_iter.3',
                            State(pc_initial=646 nstack_initial=2))},
             '$phi778.0': {('$174get_iter.29',
                            State(pc_initial=0 nstack_initial=0))}})
DEBUG:numba.core.byteflow:keep phismap: {'$phi178.0': {('$174get_iter.29', State(pc_initial=0 nstack_initial=0))},
 '$phi180.1': {('$178for_iter.2', State(pc_initial=178 nstack_initial=1))},
 '$phi374.1': {('$372get_iter.39', State(pc_initial=180 nstack_initial=2))},
 '$phi376.2': {('$374for_iter.3', State(pc_initial=374 nstack_initial=2))},
 '$phi646.1': {('$644get_iter.31', State(pc_initial=500 nstack_initial=1))},
 '$phi648.2': {('$646for_iter.3', State(pc_initial=646 nstack_initial=2))}}
DEBUG:numba.core.byteflow:new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi178.0': '$174get_iter.29'},
             State(pc_initial=178 nstack_initial=1): {'$phi180.1': '$178for_iter.2'},
             State(pc_initial=180 nstack_initial=2): {'$phi374.1': '$372get_iter.39'},
             State(pc_initial=374 nstack_initial=2): {'$phi376.2': '$374for_iter.3'},
             State(pc_initial=500 nstack_initial=1): {'$phi646.1': '$644get_iter.31'},
             State(pc_initial=646 nstack_initial=2): {'$phi648.2': '$646for_iter.3'}})
DEBUG:numba.core.byteflow:----------------------DONE Prune PHIs-----------------------
DEBUG:numba.core.byteflow:block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {}), (4, {'idx': 0, 'res': '$4load_global.0'}), (6, {}), (8, {}), (10, {}), (12, {}), (14, {}), (16, {'res': '$scale16.2'}), (18, {'res': '$num_table18.3'}), (20, {'op': '*', 'lhs': '$scale16.2', 'rhs': '$num_table18.3', 'res': '$binop_mul20.4'}), (22, {}), (24, {}), (26, {}), (28, {'func': '$4load_global.0', 'args': ['$binop_mul20.4'], 'kw_names': None, 'res': '$28call.5'}), (30, {}), (32, {}), (34, {}), (36, {}), (38, {'value': '$28call.5'}), (40, {'res': '$const40.6.1'}), (42, {'value': '$const40.6.1'}), (44, {'res': '$const44.7.2'}), (46, {'value': '$const44.7.2'}), (48, {'res': '$const48.8.1'}), (50, {'value': '$const48.8.1'}), (52, {'res': '$const52.9.1'}), (54, {'value': '$const52.9.1'}), (56, {'res': '$const56.10.2'}), (58, {'value': '$const56.10.2'}), (60, {'res': '$const60.11.1'}), (62, {'value': '$const60.11.1'}), (64, {'res': '$const64.12.1'}), (66, {'value': '$const64.12.1'}), (68, {'res': '$interp_win68.13'}), (70, {'item': '$interp_win68.13', 'res': '$70load_attr.14'}), (72, {}), (74, {}), (76, {}), (78, {}), (80, {'res': '$const80.15.2'}), (82, {'index': '$const80.15.2', 'target': '$70load_attr.14', 'res': '$82binary_subscr.16'}), (84, {}), (86, {}), (88, {}), (90, {}), (92, {'value': '$82binary_subscr.16'}), (94, {'res': '$x94.17'}), (96, {'item': '$x94.17', 'res': '$96load_attr.18'}), (98, {}), (100, {}), (102, {}), (104, {}), (106, {'res': '$const106.19.2'}), (108, {'index': '$const106.19.2', 'target': '$96load_attr.18', 'res': '$108binary_subscr.20'}), (110, {}), (112, {}), (114, {}), (116, {}), (118, {'value': '$108binary_subscr.20'}), (120, {'res': '$t_out120.21'}), (122, {'item': '$t_out120.21', 'res': '$122load_attr.22'}), (124, {}), (126, {}), (128, {}), (130, {}), (132, {'res': '$const132.23.2'}), (134, {'index': '$const132.23.2', 'target': '$122load_attr.22', 'res': '$134binary_subscr.24'}), (136, {}), (138, {}), (140, {}), (142, {}), (144, {'value': '$134binary_subscr.24'}), (146, {'idx': 2, 'res': '$146load_global.25'}), (148, {}), (150, {}), (152, {}), (154, {}), (156, {}), (158, {'res': '$n_out158.27'}), (160, {}), (162, {}), (164, {'func': '$146load_global.25', 'args': ['$n_out158.27'], 'kw_names': None, 'res': '$164call.28'}), (166, {}), (168, {}), (170, {}), (172, {}), (174, {'value': '$164call.28', 'res': '$174get_iter.29'})), outgoing_phis={'$phi178.0': '$174get_iter.29'}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$174get_iter.29',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=176 nstack_initial=1):
AdaptBlockInfo(insts=((176, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: ('$phi176.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=178 nstack_initial=1):
AdaptBlockInfo(insts=((178, {'iterator': '$phi178.0', 'pair': '$178for_iter.1', 'indval': '$178for_iter.2', 'pred': '$178for_iter.3'}),), outgoing_phis={'$phi180.1': '$178for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={782: (), 180: ('$phi178.0', '$178for_iter.2')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=180 nstack_initial=2):
AdaptBlockInfo(insts=((180, {'value': '$phi180.1'}), (182, {'res': '$t_out182.2'}), (184, {'res': '$t184.3'}), (186, {'index': '$t184.3', 'target': '$t_out182.2', 'res': '$186binary_subscr.4'}), (188, {}), (190, {}), (192, {}), (194, {}), (196, {'value': '$186binary_subscr.4'}), (198, {'idx': 0, 'res': '$198load_global.5'}), (200, {}), (202, {}), (204, {}), (206, {}), (208, {}), (210, {'res': '$time_register210.7'}), (212, {}), (214, {}), (216, {'func': '$198load_global.5', 'args': ['$time_register210.7'], 'kw_names': None, 'res': '$216call.8'}), (218, {}), (220, {}), (222, {}), (224, {}), (226, {'value': '$216call.8'}), (228, {'res': '$scale228.9'}), (230, {'res': '$time_register230.10'}), (232, {'res': '$n232.11'}), (234, {'op': '-', 'lhs': '$time_register230.10', 'rhs': '$n232.11', 'res': '$binop_sub234.12'}), (236, {}), (238, {'op': '*', 'lhs': '$scale228.9', 'rhs': '$binop_sub234.12', 'res': '$binop_mul238.13'}), (240, {}), (242, {'value': '$binop_mul238.13'}), (244, {'res': '$frac244.14'}), (246, {'res': '$num_table246.15'}), (248, {'op': '*', 'lhs': '$frac244.14', 'rhs': '$num_table246.15', 'res': '$binop_mul248.16'}), (250, {}), (252, {'value': '$binop_mul248.16'}), (254, {'idx': 0, 'res': '$254load_global.17'}), (256, {}), (258, {}), (260, {}), (262, {}), (264, {}), (266, {'res': '$index_frac266.19'}), (268, {}), (270, {}), (272, {'func': '$254load_global.17', 'args': ['$index_frac266.19'], 'kw_names': None, 'res': '$272call.20'}), (274, {}), (276, {}), (278, {}), (280, {}), (282, {'value': '$272call.20'}), (284, {'res': '$index_frac284.21'}), (286, {'res': '$offset286.22'}), (288, {'op': '-', 'lhs': '$index_frac284.21', 'rhs': '$offset286.22', 'res': '$binop_sub288.23'}), (290, {}), (292, {'value': '$binop_sub288.23'}), (294, {'idx': 3, 'res': '$294load_global.24'}), (296, {}), (298, {}), (300, {}), (302, {}), (304, {}), (306, {'res': '$n306.26'}), (308, {'res': '$const308.27.3'}), (310, {'op': '+', 'lhs': '$n306.26', 'rhs': '$const308.27.3', 'res': '$binop_add310.28'}), (312, {}), (314, {'res': '$nwin314.29'}), (316, {'res': '$offset316.30'}), (318, {'op': '-', 'lhs': '$nwin314.29', 'rhs': '$offset316.30', 'res': '$binop_sub318.31'}), (320, {}), (322, {'res': '$index_step322.32'}), (324, {'op': '//', 'lhs': '$binop_sub318.31', 'rhs': '$index_step322.32', 'res': '$binop_floordiv324.33'}), (326, {}), (328, {}), (330, {}), (332, {'func': '$294load_global.24', 'args': ['$binop_add310.28', '$binop_floordiv324.33'], 'kw_names': None, 'res': '$332call.34'}), (334, {}), (336, {}), (338, {}), (340, {}), (342, {'value': '$332call.34'}), (344, {'idx': 4, 'res': '$344load_global.35'}), (346, {}), (348, {}), (350, {}), (352, {}), (354, {}), (356, {'res': '$i_max356.37'}), (358, {}), (360, {}), (362, {'func': '$344load_global.35', 'args': ['$i_max356.37'], 'kw_names': None, 'res': '$362call.38'}), (364, {}), (366, {}), (368, {}), (370, {}), (372, {'value': '$362call.38', 'res': '$372get_iter.39'})), outgoing_phis={'$phi374.1': '$372get_iter.39'}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi180.0', '$372get_iter.39')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=374 nstack_initial=2):
AdaptBlockInfo(insts=((374, {'iterator': '$phi374.1', 'pair': '$374for_iter.2', 'indval': '$374for_iter.3', 'pred': '$374for_iter.4'}),), outgoing_phis={'$phi376.2': '$374for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={500: ('$phi374.0',), 376: ('$phi374.0', '$phi374.1', '$374for_iter.3')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=376 nstack_initial=3):
AdaptBlockInfo(insts=((376, {'value': '$phi376.2'}), (378, {'res': '$interp_win378.3'}), (380, {'res': '$offset380.4'}), (382, {'res': '$i382.5'}), (384, {'res': '$index_step384.6'}), (386, {'op': '*', 'lhs': '$i382.5', 'rhs': '$index_step384.6', 'res': '$binop_mul386.7'}), (388, {}), (390, {'op': '+', 'lhs': '$offset380.4', 'rhs': '$binop_mul386.7', 'res': '$binop_add390.8'}), (392, {}), (394, {'index': '$binop_add390.8', 'target': '$interp_win378.3', 'res': '$394binary_subscr.9'}), (396, {}), (398, {}), (400, {}), (402, {}), (404, {'res': '$eta404.10'}), (406, {'res': '$interp_delta406.11'}), (408, {'res': '$offset408.12'}), (410, {'res': '$i410.13'}), (412, {'res': '$index_step412.14'}), (414, {'op': '*', 'lhs': '$i410.13', 'rhs': '$index_step412.14', 'res': '$binop_mul414.15'}), (416, {}), (418, {'op': '+', 'lhs': '$offset408.12', 'rhs': '$binop_mul414.15', 'res': '$binop_add418.16'}), (420, {}), (422, {'index': '$binop_add418.16', 'target': '$interp_delta406.11', 'res': '$422binary_subscr.17'}), (424, {}), (426, {}), (428, {}), (430, {}), (432, {'op': '*', 'lhs': '$eta404.10', 'rhs': '$422binary_subscr.17', 'res': '$binop_mul432.18'}), (434, {}), (436, {'op': '+', 'lhs': '$394binary_subscr.9', 'rhs': '$binop_mul432.18', 'res': '$binop_add436.19'}), (438, {}), (440, {'value': '$binop_add436.19'}), (442, {'res': '$y442.20'}), (444, {'res': '$t444.21'}), (450, {'index': '$t444.21', 'target': '$y442.20', 'res': '$450binary_subscr.22'}), (452, {}), (454, {}), (456, {}), (458, {}), (460, {'res': '$weight460.23'}), (462, {'res': '$x462.24'}), (464, {'res': '$n464.25'}), (466, {'res': '$i466.26'}), (468, {'op': '-', 'lhs': '$n464.25', 'rhs': '$i466.26', 'res': '$binop_sub468.27'}), (470, {}), (472, {'index': '$binop_sub468.27', 'target': '$x462.24', 'res': '$472binary_subscr.28'}), (474, {}), (476, {}), (478, {}), (480, {}), (482, {'op': '*', 'lhs': '$weight460.23', 'rhs': '$472binary_subscr.28', 'res': '$binop_mul482.29'}), (484, {}), (486, {'op': '+=', 'lhs': '$450binary_subscr.22', 'rhs': '$binop_mul482.29', 'res': '$binop_iadd486.30'}), (488, {}), (494, {'target': '$y442.20', 'index': '$t444.21', 'value': '$binop_iadd486.30'}), (496, {}), (498, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={374: ('$phi376.0', '$phi376.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=500 nstack_initial=1):
AdaptBlockInfo(insts=((500, {'res': '$scale500.1'}), (502, {'res': '$frac502.2'}), (504, {'op': '-', 'lhs': '$scale500.1', 'rhs': '$frac502.2', 'res': '$binop_sub504.3'}), (506, {}), (508, {'value': '$binop_sub504.3'}), (510, {'res': '$frac510.4'}), (512, {'res': '$num_table512.5'}), (514, {'op': '*', 'lhs': '$frac510.4', 'rhs': '$num_table512.5', 'res': '$binop_mul514.6'}), (516, {}), (518, {'value': '$binop_mul514.6'}), (520, {'idx': 0, 'res': '$520load_global.7'}), (522, {}), (524, {}), (526, {}), (528, {}), (530, {}), (532, {'res': '$index_frac532.9'}), (534, {}), (536, {}), (538, {'func': '$520load_global.7', 'args': ['$index_frac532.9'], 'kw_names': None, 'res': '$538call.10'}), (540, {}), (542, {}), (544, {}), (546, {}), (548, {'value': '$538call.10'}), (550, {'res': '$index_frac550.11'}), (552, {'res': '$offset552.12'}), (554, {'op': '-', 'lhs': '$index_frac550.11', 'rhs': '$offset552.12', 'res': '$binop_sub554.13'}), (556, {}), (558, {'value': '$binop_sub554.13'}), (560, {'idx': 3, 'res': '$560load_global.14'}), (562, {}), (564, {}), (566, {}), (568, {}), (570, {}), (572, {'res': '$n_orig572.16'}), (574, {'res': '$n574.17'}), (576, {'op': '-', 'lhs': '$n_orig572.16', 'rhs': '$n574.17', 'res': '$binop_sub576.18'}), (578, {}), (580, {'res': '$const580.19.3'}), (582, {'op': '-', 'lhs': '$binop_sub576.18', 'rhs': '$const580.19.3', 'res': '$binop_sub582.20'}), (584, {}), (586, {'res': '$nwin586.21'}), (588, {'res': '$offset588.22'}), (590, {'op': '-', 'lhs': '$nwin586.21', 'rhs': '$offset588.22', 'res': '$binop_sub590.23'}), (592, {}), (594, {'res': '$index_step594.24'}), (596, {'op': '//', 'lhs': '$binop_sub590.23', 'rhs': '$index_step594.24', 'res': '$binop_floordiv596.25'}), (598, {}), (600, {}), (602, {}), (604, {'func': '$560load_global.14', 'args': ['$binop_sub582.20', '$binop_floordiv596.25'], 'kw_names': None, 'res': '$604call.26'}), (606, {}), (608, {}), (610, {}), (612, {}), (614, {'value': '$604call.26'}), (616, {'idx': 4, 'res': '$616load_global.27'}), (618, {}), (620, {}), (622, {}), (624, {}), (626, {}), (628, {'res': '$k_max628.29'}), (630, {}), (632, {}), (634, {'func': '$616load_global.27', 'args': ['$k_max628.29'], 'kw_names': None, 'res': '$634call.30'}), (636, {}), (638, {}), (640, {}), (642, {}), (644, {'value': '$634call.30', 'res': '$644get_iter.31'})), outgoing_phis={'$phi646.1': '$644get_iter.31'}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi500.0', '$644get_iter.31')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=646 nstack_initial=2):
AdaptBlockInfo(insts=((646, {'iterator': '$phi646.1', 'pair': '$646for_iter.2', 'indval': '$646for_iter.3', 'pred': '$646for_iter.4'}),), outgoing_phis={'$phi648.2': '$646for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={778: ('$phi646.0',), 648: ('$phi646.0', '$phi646.1', '$646for_iter.3')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=648 nstack_initial=3):
AdaptBlockInfo(insts=((648, {'value': '$phi648.2'}), (650, {'res': '$interp_win650.3'}), (652, {'res': '$offset652.4'}), (654, {'res': '$k654.5'}), (656, {'res': '$index_step656.6'}), (658, {'op': '*', 'lhs': '$k654.5', 'rhs': '$index_step656.6', 'res': '$binop_mul658.7'}), (660, {}), (662, {'op': '+', 'lhs': '$offset652.4', 'rhs': '$binop_mul658.7', 'res': '$binop_add662.8'}), (664, {}), (666, {'index': '$binop_add662.8', 'target': '$interp_win650.3', 'res': '$666binary_subscr.9'}), (668, {}), (670, {}), (672, {}), (674, {}), (676, {'res': '$eta676.10'}), (678, {'res': '$interp_delta678.11'}), (680, {'res': '$offset680.12'}), (682, {'res': '$k682.13'}), (684, {'res': '$index_step684.14'}), (686, {'op': '*', 'lhs': '$k682.13', 'rhs': '$index_step684.14', 'res': '$binop_mul686.15'}), (688, {}), (690, {'op': '+', 'lhs': '$offset680.12', 'rhs': '$binop_mul686.15', 'res': '$binop_add690.16'}), (692, {}), (694, {'index': '$binop_add690.16', 'target': '$interp_delta678.11', 'res': '$694binary_subscr.17'}), (696, {}), (698, {}), (700, {}), (702, {}), (704, {'op': '*', 'lhs': '$eta676.10', 'rhs': '$694binary_subscr.17', 'res': '$binop_mul704.18'}), (706, {}), (708, {'op': '+', 'lhs': '$666binary_subscr.9', 'rhs': '$binop_mul704.18', 'res': '$binop_add708.19'}), (710, {}), (712, {'value': '$binop_add708.19'}), (714, {'res': '$y714.20'}), (716, {'res': '$t716.21'}), (722, {'index': '$t716.21', 'target': '$y714.20', 'res': '$722binary_subscr.22'}), (724, {}), (726, {}), (728, {}), (730, {}), (732, {'res': '$weight732.23'}), (734, {'res': '$x734.24'}), (736, {'res': '$n736.25'}), (738, {'res': '$k738.26'}), (740, {'op': '+', 'lhs': '$n736.25', 'rhs': '$k738.26', 'res': '$binop_add740.27'}), (742, {}), (744, {'res': '$const744.28.3'}), (746, {'op': '+', 'lhs': '$binop_add740.27', 'rhs': '$const744.28.3', 'res': '$binop_add746.29'}), (748, {}), (750, {'index': '$binop_add746.29', 'target': '$x734.24', 'res': '$750binary_subscr.30'}), (752, {}), (754, {}), (756, {}), (758, {}), (760, {'op': '*', 'lhs': '$weight732.23', 'rhs': '$750binary_subscr.30', 'res': '$binop_mul760.31'}), (762, {}), (764, {'op': '+=', 'lhs': '$722binary_subscr.22', 'rhs': '$binop_mul760.31', 'res': '$binop_iadd764.32'}), (766, {}), (772, {'target': '$y714.20', 'index': '$t716.21', 'value': '$binop_iadd764.32'}), (774, {}), (776, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={646: ('$phi648.0', '$phi648.1')})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=778 nstack_initial=1):
AdaptBlockInfo(insts=((778, {}), (780, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={176: ('$phi778.0',)})
DEBUG:numba.core.byteflow:block_infos State(pc_initial=782 nstack_initial=0):
AdaptBlockInfo(insts=((782, {'res': '$const782.0.0'}), (784, {'retval': '$const782.0.0', 'castval': '$784return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
DEBUG:numba.core.interpreter:label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $4load_global.0 = global(int: <class 'int'>) ['$4load_global.0']
    $binop_mul20.4 = scale * num_table       ['$binop_mul20.4', 'num_table', 'scale']
    index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_global.0', '$binop_mul20.4', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $70load_attr.14 = getattr(value=interp_win, attr=shape) ['$70load_attr.14', 'interp_win']
    $const80.15.2 = const(int, 0)            ['$const80.15.2']
    nwin = getitem(value=$70load_attr.14, index=$const80.15.2, fn=<built-in function getitem>) ['$70load_attr.14', '$const80.15.2', 'nwin']
    $96load_attr.18 = getattr(value=x, attr=shape) ['$96load_attr.18', 'x']
    $const106.19.2 = const(int, 0)           ['$const106.19.2']
    n_orig = getitem(value=$96load_attr.18, index=$const106.19.2, fn=<built-in function getitem>) ['$96load_attr.18', '$const106.19.2', 'n_orig']
    $122load_attr.22 = getattr(value=t_out, attr=shape) ['$122load_attr.22', 't_out']
    $const132.23.2 = const(int, 0)           ['$const132.23.2']
    n_out = getitem(value=$122load_attr.22, index=$const132.23.2, fn=<built-in function getitem>) ['$122load_attr.22', '$const132.23.2', 'n_out']
    $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>) ['$146load_global.25']
    $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$146load_global.25', '$164call.28', 'n_out']
    $174get_iter.29 = getiter(value=$164call.28) ['$164call.28', '$174get_iter.29']
    $phi178.0 = $174get_iter.29              ['$174get_iter.29', '$phi178.0']
    jump 176                                 []
label 176:
    jump 178                                 []
label 178:
    $178for_iter.1 = iternext(value=$phi178.0) ['$178for_iter.1', '$phi178.0']
    $178for_iter.2 = pair_first(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.2']
    $178for_iter.3 = pair_second(value=$178for_iter.1) ['$178for_iter.1', '$178for_iter.3']
    $phi180.1 = $178for_iter.2               ['$178for_iter.2', '$phi180.1']
    branch $178for_iter.3, 180, 782          ['$178for_iter.3']
label 180:
    t = $phi180.1                            ['$phi180.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $198load_global.5 = global(int: <class 'int'>) ['$198load_global.5']
    n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$198load_global.5', 'n', 'time_register']
    $binop_sub234.12 = time_register - n     ['$binop_sub234.12', 'n', 'time_register']
    frac = scale * $binop_sub234.12          ['$binop_sub234.12', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $254load_global.17 = global(int: <class 'int'>) ['$254load_global.17']
    offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$254load_global.17', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $294load_global.24 = global(min: <built-in function min>) ['$294load_global.24']
    $const308.27.3 = const(int, 1)           ['$const308.27.3']
    $binop_add310.28 = n + $const308.27.3    ['$binop_add310.28', '$const308.27.3', 'n']
    $binop_sub318.31 = nwin - offset         ['$binop_sub318.31', 'nwin', 'offset']
    $binop_floordiv324.33 = $binop_sub318.31 // index_step ['$binop_floordiv324.33', '$binop_sub318.31', 'index_step']
    i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.24', '$binop_add310.28', '$binop_floordiv324.33', 'i_max']
    $344load_global.35 = global(range: <class 'range'>) ['$344load_global.35']
    $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$344load_global.35', '$362call.38', 'i_max']
    $372get_iter.39 = getiter(value=$362call.38) ['$362call.38', '$372get_iter.39']
    $phi374.1 = $372get_iter.39              ['$372get_iter.39', '$phi374.1']
    jump 374                                 []
label 374:
    $374for_iter.2 = iternext(value=$phi374.1) ['$374for_iter.2', '$phi374.1']
    $374for_iter.3 = pair_first(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.3']
    $374for_iter.4 = pair_second(value=$374for_iter.2) ['$374for_iter.2', '$374for_iter.4']
    $phi376.2 = $374for_iter.3               ['$374for_iter.3', '$phi376.2']
    branch $374for_iter.4, 376, 500          ['$374for_iter.4']
label 376:
    i = $phi376.2                            ['$phi376.2', 'i']
    $binop_mul386.7 = i * index_step         ['$binop_mul386.7', 'i', 'index_step']
    $binop_add390.8 = offset + $binop_mul386.7 ['$binop_add390.8', '$binop_mul386.7', 'offset']
    $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>) ['$394binary_subscr.9', '$binop_add390.8', 'interp_win']
    $binop_mul414.15 = i * index_step        ['$binop_mul414.15', 'i', 'index_step']
    $binop_add418.16 = offset + $binop_mul414.15 ['$binop_add418.16', '$binop_mul414.15', 'offset']
    $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>) ['$422binary_subscr.17', '$binop_add418.16', 'interp_delta']
    $binop_mul432.18 = eta * $422binary_subscr.17 ['$422binary_subscr.17', '$binop_mul432.18', 'eta']
    weight = $394binary_subscr.9 + $binop_mul432.18 ['$394binary_subscr.9', '$binop_mul432.18', 'weight']
    $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$450binary_subscr.22', 't', 'y']
    $binop_sub468.27 = n - i                 ['$binop_sub468.27', 'i', 'n']
    $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>) ['$472binary_subscr.28', '$binop_sub468.27', 'x']
    $binop_mul482.29 = weight * $472binary_subscr.28 ['$472binary_subscr.28', '$binop_mul482.29', 'weight']
    $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined) ['$450binary_subscr.22', '$binop_iadd486.30', '$binop_mul482.29']
    y[t] = $binop_iadd486.30                 ['$binop_iadd486.30', 't', 'y']
    jump 374                                 []
label 500:
    $binop_sub504.3 = scale - frac           ['$binop_sub504.3', 'frac', 'scale']
    frac = $binop_sub504.3                   ['$binop_sub504.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $520load_global.7 = global(int: <class 'int'>) ['$520load_global.7']
    offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$520load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $560load_global.14 = global(min: <built-in function min>) ['$560load_global.14']
    $binop_sub576.18 = n_orig - n            ['$binop_sub576.18', 'n', 'n_orig']
    $const580.19.3 = const(int, 1)           ['$const580.19.3']
    $binop_sub582.20 = $binop_sub576.18 - $const580.19.3 ['$binop_sub576.18', '$binop_sub582.20', '$const580.19.3']
    $binop_sub590.23 = nwin - offset         ['$binop_sub590.23', 'nwin', 'offset']
    $binop_floordiv596.25 = $binop_sub590.23 // index_step ['$binop_floordiv596.25', '$binop_sub590.23', 'index_step']
    k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$560load_global.14', '$binop_floordiv596.25', '$binop_sub582.20', 'k_max']
    $616load_global.27 = global(range: <class 'range'>) ['$616load_global.27']
    $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$616load_global.27', '$634call.30', 'k_max']
    $644get_iter.31 = getiter(value=$634call.30) ['$634call.30', '$644get_iter.31']
    $phi646.1 = $644get_iter.31              ['$644get_iter.31', '$phi646.1']
    jump 646                                 []
label 646:
    $646for_iter.2 = iternext(value=$phi646.1) ['$646for_iter.2', '$phi646.1']
    $646for_iter.3 = pair_first(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.3']
    $646for_iter.4 = pair_second(value=$646for_iter.2) ['$646for_iter.2', '$646for_iter.4']
    $phi648.2 = $646for_iter.3               ['$646for_iter.3', '$phi648.2']
    branch $646for_iter.4, 648, 778          ['$646for_iter.4']
label 648:
    k = $phi648.2                            ['$phi648.2', 'k']
    $binop_mul658.7 = k * index_step         ['$binop_mul658.7', 'index_step', 'k']
    $binop_add662.8 = offset + $binop_mul658.7 ['$binop_add662.8', '$binop_mul658.7', 'offset']
    $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>) ['$666binary_subscr.9', '$binop_add662.8', 'interp_win']
    $binop_mul686.15 = k * index_step        ['$binop_mul686.15', 'index_step', 'k']
    $binop_add690.16 = offset + $binop_mul686.15 ['$binop_add690.16', '$binop_mul686.15', 'offset']
    $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>) ['$694binary_subscr.17', '$binop_add690.16', 'interp_delta']
    $binop_mul704.18 = eta * $694binary_subscr.17 ['$694binary_subscr.17', '$binop_mul704.18', 'eta']
    weight = $666binary_subscr.9 + $binop_mul704.18 ['$666binary_subscr.9', '$binop_mul704.18', 'weight']
    $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$722binary_subscr.22', 't', 'y']
    $binop_add740.27 = n + k                 ['$binop_add740.27', 'k', 'n']
    $const744.28.3 = const(int, 1)           ['$const744.28.3']
    $binop_add746.29 = $binop_add740.27 + $const744.28.3 ['$binop_add740.27', '$binop_add746.29', '$const744.28.3']
    $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>) ['$750binary_subscr.30', '$binop_add746.29', 'x']
    $binop_mul760.31 = weight * $750binary_subscr.30 ['$750binary_subscr.30', '$binop_mul760.31', 'weight']
    $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined) ['$722binary_subscr.22', '$binop_iadd764.32', '$binop_mul760.31']
    y[t] = $binop_iadd764.32                 ['$binop_iadd764.32', 't', 'y']
    jump 646                                 []
label 778:
    jump 176                                 []
label 782:
    $const782.0.0 = const(NoneType, None)    ['$const782.0.0']
    $784return_value.1 = cast(value=$const782.0.0) ['$784return_value.1', '$const782.0.0']
    return $784return_value.1                ['$784return_value.1']

DEBUG:numba.core.ssa:==== SSA block analysis pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: t_out = arg(1, name=t_out)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(2, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(4, name=num_table)
DEBUG:numba.core.ssa:on stmt: scale = arg(5, name=scale)
DEBUG:numba.core.ssa:on stmt: y = arg(6, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $binop_mul20.4 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const80.15.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const106.19.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const132.23.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG:numba.core.ssa:on stmt: $phi178.0 = $174get_iter.29
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block analysis pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block analysis pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG:numba.core.ssa:on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $178for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $178for_iter.3, 180, 782
DEBUG:numba.core.ssa:==== SSA block analysis pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: t = $phi180.1
DEBUG:numba.core.ssa:on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub234.12 = time_register - n
DEBUG:numba.core.ssa:on stmt: frac = scale * $binop_sub234.12
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const308.27.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add310.28 = n + $const308.27.3
DEBUG:numba.core.ssa:on stmt: $binop_sub318.31 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG:numba.core.ssa:on stmt: $phi374.1 = $372get_iter.39
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block analysis pass on 374
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG:numba.core.ssa:on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi376.2 = $374for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $374for_iter.4, 376, 500
DEBUG:numba.core.ssa:==== SSA block analysis pass on 376
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: i = $phi376.2
DEBUG:numba.core.ssa:on stmt: $binop_mul386.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG:numba.core.ssa:on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul414.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG:numba.core.ssa:on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG:numba.core.ssa:on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_sub468.27 = n - i
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG:numba.core.ssa:on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd486.30
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block analysis pass on 500
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $binop_sub504.3 = scale - frac
DEBUG:numba.core.ssa:on stmt: frac = $binop_sub504.3
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_sub576.18 = n_orig - n
DEBUG:numba.core.ssa:on stmt: $const580.19.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
DEBUG:numba.core.ssa:on stmt: $binop_sub590.23 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG:numba.core.ssa:on stmt: $phi646.1 = $644get_iter.31
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block analysis pass on 646
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG:numba.core.ssa:on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi648.2 = $646for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $646for_iter.4, 648, 778
DEBUG:numba.core.ssa:==== SSA block analysis pass on 648
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: k = $phi648.2
DEBUG:numba.core.ssa:on stmt: $binop_mul658.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG:numba.core.ssa:on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul686.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG:numba.core.ssa:on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG:numba.core.ssa:on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add740.27 = n + k
DEBUG:numba.core.ssa:on stmt: $const744.28.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
DEBUG:numba.core.ssa:on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG:numba.core.ssa:on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd764.32
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block analysis pass on 778
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block analysis pass on 782
DEBUG:numba.core.ssa:Running <numba.core.ssa._GatherDefsHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $const782.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $784return_value.1 = cast(value=$const782.0.0)
DEBUG:numba.core.ssa:on stmt: return $784return_value.1
DEBUG:numba.core.ssa:defs defaultdict(<class 'list'>,
            {'$122load_attr.22': [(<numba.core.ir.Assign object at 0x0000023E67593CD0>,
                                   0)],
             '$146load_global.25': [(<numba.core.ir.Assign object at 0x0000023E67591E10>,
                                     0)],
             '$164call.28': [(<numba.core.ir.Assign object at 0x0000023E67591AD0>,
                              0)],
             '$174get_iter.29': [(<numba.core.ir.Assign object at 0x0000023E67591510>,
                                  0)],
             '$178for_iter.1': [(<numba.core.ir.Assign object at 0x0000023E67591790>,
                                 178)],
             '$178for_iter.2': [(<numba.core.ir.Assign object at 0x0000023E67591390>,
                                 178)],
             '$178for_iter.3': [(<numba.core.ir.Assign object at 0x0000023E67590990>,
                                 178)],
             '$198load_global.5': [(<numba.core.ir.Assign object at 0x0000023E67592D10>,
                                    180)],
             '$254load_global.17': [(<numba.core.ir.Assign object at 0x0000023E6758EC10>,
                                     180)],
             '$294load_global.24': [(<numba.core.ir.Assign object at 0x0000023E6758D510>,
                                     180)],
             '$344load_global.35': [(<numba.core.ir.Assign object at 0x0000023E6758CB90>,
                                     180)],
             '$362call.38': [(<numba.core.ir.Assign object at 0x0000023E6758FA50>,
                              180)],
             '$372get_iter.39': [(<numba.core.ir.Assign object at 0x0000023E6758F4D0>,
                                  180)],
             '$374for_iter.2': [(<numba.core.ir.Assign object at 0x0000023E67590110>,
                                 374)],
             '$374for_iter.3': [(<numba.core.ir.Assign object at 0x0000023E6758D6D0>,
                                 374)],
             '$374for_iter.4': [(<numba.core.ir.Assign object at 0x0000023E6758ECD0>,
                                 374)],
             '$394binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000023E675A5150>,
                                      376)],
             '$422binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000023E675A4810>,
                                       376)],
             '$450binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000023E675A5C10>,
                                       376)],
             '$472binary_subscr.28': [(<numba.core.ir.Assign object at 0x0000023E675A7790>,
                                       376)],
             '$4load_global.0': [(<numba.core.ir.Assign object at 0x0000023E675E21D0>,
                                  0)],
             '$520load_global.7': [(<numba.core.ir.Assign object at 0x0000023E675A6C10>,
                                    500)],
             '$560load_global.14': [(<numba.core.ir.Assign object at 0x0000023E664975D0>,
                                     500)],
             '$616load_global.27': [(<numba.core.ir.Assign object at 0x0000023E664A6B10>,
                                     500)],
             '$634call.30': [(<numba.core.ir.Assign object at 0x0000023E66501B10>,
                              500)],
             '$644get_iter.31': [(<numba.core.ir.Assign object at 0x0000023E66502AD0>,
                                  500)],
             '$646for_iter.2': [(<numba.core.ir.Assign object at 0x0000023E675BD350>,
                                 646)],
             '$646for_iter.3': [(<numba.core.ir.Assign object at 0x0000023E66495210>,
                                 646)],
             '$646for_iter.4': [(<numba.core.ir.Assign object at 0x0000023E664A6050>,
                                 646)],
             '$666binary_subscr.9': [(<numba.core.ir.Assign object at 0x0000023E665009D0>,
                                      648)],
             '$694binary_subscr.17': [(<numba.core.ir.Assign object at 0x0000023E66503090>,
                                       648)],
             '$70load_attr.14': [(<numba.core.ir.Assign object at 0x0000023E67574850>,
                                  0)],
             '$722binary_subscr.22': [(<numba.core.ir.Assign object at 0x0000023E66501C10>,
                                       648)],
             '$750binary_subscr.30': [(<numba.core.ir.Assign object at 0x0000023E665001D0>,
                                       648)],
             '$784return_value.1': [(<numba.core.ir.Assign object at 0x0000023E665010D0>,
                                     782)],
             '$96load_attr.18': [(<numba.core.ir.Assign object at 0x0000023E67593310>,
                                  0)],
             '$binop_add310.28': [(<numba.core.ir.Assign object at 0x0000023E6758D650>,
                                   180)],
             '$binop_add390.8': [(<numba.core.ir.Assign object at 0x0000023E675A4F10>,
                                  376)],
             '$binop_add418.16': [(<numba.core.ir.Assign object at 0x0000023E675A42D0>,
                                   376)],
             '$binop_add662.8': [(<numba.core.ir.Assign object at 0x0000023E665023D0>,
                                  648)],
             '$binop_add690.16': [(<numba.core.ir.Assign object at 0x0000023E66503490>,
                                   648)],
             '$binop_add740.27': [(<numba.core.ir.Assign object at 0x0000023E66501850>,
                                   648)],
             '$binop_add746.29': [(<numba.core.ir.Assign object at 0x0000023E66500390>,
                                   648)],
             '$binop_floordiv324.33': [(<numba.core.ir.Assign object at 0x0000023E6758C410>,
                                        180)],
             '$binop_floordiv596.25': [(<numba.core.ir.Assign object at 0x0000023E664A5A90>,
                                        500)],
             '$binop_iadd486.30': [(<numba.core.ir.Assign object at 0x0000023E675A7390>,
                                    376)],
             '$binop_iadd764.32': [(<numba.core.ir.Assign object at 0x0000023E66523B90>,
                                    648)],
             '$binop_mul20.4': [(<numba.core.ir.Assign object at 0x0000023E675BC5D0>,
                                 0)],
             '$binop_mul386.7': [(<numba.core.ir.Assign object at 0x0000023E6758E910>,
                                  376)],
             '$binop_mul414.15': [(<numba.core.ir.Assign object at 0x0000023E675A4110>,
                                   376)],
             '$binop_mul432.18': [(<numba.core.ir.Assign object at 0x0000023E675A5610>,
                                   376)],
             '$binop_mul482.29': [(<numba.core.ir.Assign object at 0x0000023E675A7610>,
                                   376)],
             '$binop_mul658.7': [(<numba.core.ir.Assign object at 0x0000023E66502790>,
                                  648)],
             '$binop_mul686.15': [(<numba.core.ir.Assign object at 0x0000023E665039D0>,
                                   648)],
             '$binop_mul704.18': [(<numba.core.ir.Assign object at 0x0000023E665026D0>,
                                   648)],
             '$binop_mul760.31': [(<numba.core.ir.Assign object at 0x0000023E66502A90>,
                                   648)],
             '$binop_sub234.12': [(<numba.core.ir.Assign object at 0x0000023E675923D0>,
                                   180)],
             '$binop_sub318.31': [(<numba.core.ir.Assign object at 0x0000023E6758C750>,
                                   180)],
             '$binop_sub468.27': [(<numba.core.ir.Assign object at 0x0000023E675A7C10>,
                                   376)],
             '$binop_sub504.3': [(<numba.core.ir.Assign object at 0x0000023E675A54D0>,
                                  500)],
             '$binop_sub576.18': [(<numba.core.ir.Assign object at 0x0000023E664BACD0>,
                                   500)],
             '$binop_sub582.20': [(<numba.core.ir.Assign object at 0x0000023E664B9550>,
                                   500)],
             '$binop_sub590.23': [(<numba.core.ir.Assign object at 0x0000023E664A6310>,
                                   500)],
             '$const106.19.2': [(<numba.core.ir.Assign object at 0x0000023E67593390>,
                                 0)],
             '$const132.23.2': [(<numba.core.ir.Assign object at 0x0000023E67593290>,
                                 0)],
             '$const308.27.3': [(<numba.core.ir.Assign object at 0x0000023E6758D690>,
                                 180)],
             '$const580.19.3': [(<numba.core.ir.Assign object at 0x0000023E664BBC50>,
                                 500)],
             '$const744.28.3': [(<numba.core.ir.Assign object at 0x0000023E66500D90>,
                                 648)],
             '$const782.0.0': [(<numba.core.ir.Assign object at 0x0000023E665037D0>,
                                782)],
             '$const80.15.2': [(<numba.core.ir.Assign object at 0x0000023E67574150>,
                                0)],
             '$phi178.0': [(<numba.core.ir.Assign object at 0x0000023E675BF9D0>,
                            0)],
             '$phi180.1': [(<numba.core.ir.Assign object at 0x0000023E675E4210>,
                            178)],
             '$phi374.1': [(<numba.core.ir.Assign object at 0x0000023E67590B90>,
                            180)],
             '$phi376.2': [(<numba.core.ir.Assign object at 0x0000023E6758FB90>,
                            374)],
             '$phi646.1': [(<numba.core.ir.Assign object at 0x0000023E6758EC50>,
                            500)],
             '$phi648.2': [(<numba.core.ir.Assign object at 0x0000023E664A5550>,
                            646)],
             'eta': [(<numba.core.ir.Assign object at 0x0000023E67576810>, 0),
                     (<numba.core.ir.Assign object at 0x0000023E6758E090>, 180),
                     (<numba.core.ir.Assign object at 0x0000023E664DD190>,
                      500)],
             'frac': [(<numba.core.ir.Assign object at 0x0000023E67574CD0>, 0),
                      (<numba.core.ir.Assign object at 0x0000023E6758DF10>,
                       180),
                      (<numba.core.ir.Assign object at 0x0000023E675A4750>,
                       500)],
             'i': [(<numba.core.ir.Assign object at 0x0000023E6758D1D0>, 376)],
             'i_max': [(<numba.core.ir.Assign object at 0x0000023E6758C290>,
                        180)],
             'index_frac': [(<numba.core.ir.Assign object at 0x0000023E67576A50>,
                             0),
                            (<numba.core.ir.Assign object at 0x0000023E6758EED0>,
                             180),
                            (<numba.core.ir.Assign object at 0x0000023E675A66D0>,
                             500)],
             'index_step': [(<numba.core.ir.Assign object at 0x0000023E6757E750>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x0000023E675DF410>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x0000023E675D4750>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x0000023E665002D0>, 648)],
             'k_max': [(<numba.core.ir.Assign object at 0x0000023E664A6C50>,
                        500)],
             'n': [(<numba.core.ir.Assign object at 0x0000023E67575D90>, 0),
                   (<numba.core.ir.Assign object at 0x0000023E67591910>, 180)],
             'n_orig': [(<numba.core.ir.Assign object at 0x0000023E675C5290>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x0000023E675E3A10>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x0000023E675C6790>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x0000023E675E7550>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x0000023E67574AD0>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000023E6758E050>,
                         180),
                        (<numba.core.ir.Assign object at 0x0000023E675A6210>,
                         500)],
             'scale': [(<numba.core.ir.Assign object at 0x0000023E675C6AD0>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x0000023E67590DD0>, 180)],
             't_out': [(<numba.core.ir.Assign object at 0x0000023E675D4890>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x0000023E6757D450>,
                                0),
                               (<numba.core.ir.Assign object at 0x0000023E675907D0>,
                                180)],
             'weight': [(<numba.core.ir.Assign object at 0x0000023E67576C50>,
                         0),
                        (<numba.core.ir.Assign object at 0x0000023E675A5D90>,
                         376),
                        (<numba.core.ir.Assign object at 0x0000023E66502450>,
                         648)],
             'x': [(<numba.core.ir.Assign object at 0x0000023E675D7C90>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x0000023E675C6C90>, 0)]})
DEBUG:numba.core.ssa:SSA violators <numba.core.utils.OrderedSet object at 0x0000023E675D7DD0>
DEBUG:numba.core.ssa:Fix SSA violator on var time_register
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E65AEA510>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: t_out = arg(1, name=t_out)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(2, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(4, name=num_table)
DEBUG:numba.core.ssa:on stmt: scale = arg(5, name=scale)
DEBUG:numba.core.ssa:on stmt: y = arg(6, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $binop_mul20.4 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: time_register
DEBUG:numba.core.ssa:replaced with: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const80.15.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const106.19.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const132.23.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG:numba.core.ssa:on stmt: $phi178.0 = $174get_iter.29
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E65AEA510>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E65AEA510>
DEBUG:numba.core.ssa:on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG:numba.core.ssa:on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $178for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $178for_iter.3, 180, 782
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E65AEA510>
DEBUG:numba.core.ssa:on stmt: t = $phi180.1
DEBUG:numba.core.ssa:on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub234.12 = time_register - n
DEBUG:numba.core.ssa:on stmt: frac = scale * $binop_sub234.12
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const308.27.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add310.28 = n + $const308.27.3
DEBUG:numba.core.ssa:on stmt: $binop_sub318.31 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG:numba.core.ssa:on stmt: $phi374.1 = $372get_iter.39
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 374
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E65AEA510>
DEBUG:numba.core.ssa:on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG:numba.core.ssa:on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi376.2 = $374for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $374for_iter.4, 376, 500
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 376
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E65AEA510>
DEBUG:numba.core.ssa:on stmt: i = $phi376.2
DEBUG:numba.core.ssa:on stmt: $binop_mul386.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG:numba.core.ssa:on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul414.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG:numba.core.ssa:on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG:numba.core.ssa:on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_sub468.27 = n - i
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG:numba.core.ssa:on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd486.30
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 500
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E65AEA510>
DEBUG:numba.core.ssa:on stmt: $binop_sub504.3 = scale - frac
DEBUG:numba.core.ssa:on stmt: frac = $binop_sub504.3
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_sub576.18 = n_orig - n
DEBUG:numba.core.ssa:on stmt: $const580.19.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
DEBUG:numba.core.ssa:on stmt: $binop_sub590.23 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG:numba.core.ssa:on stmt: $phi646.1 = $644get_iter.31
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 646
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E65AEA510>
DEBUG:numba.core.ssa:on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG:numba.core.ssa:on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi648.2 = $646for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $646for_iter.4, 648, 778
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 648
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E65AEA510>
DEBUG:numba.core.ssa:on stmt: k = $phi648.2
DEBUG:numba.core.ssa:on stmt: $binop_mul658.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG:numba.core.ssa:on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul686.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG:numba.core.ssa:on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG:numba.core.ssa:on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add740.27 = n + k
DEBUG:numba.core.ssa:on stmt: $const744.28.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
DEBUG:numba.core.ssa:on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG:numba.core.ssa:on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd764.32
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 778
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E65AEA510>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 782
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E65AEA510>
DEBUG:numba.core.ssa:on stmt: $const782.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $784return_value.1 = cast(value=$const782.0.0)
DEBUG:numba.core.ssa:on stmt: return $784return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000023E676098D0>],
             180: [<numba.core.ir.Assign object at 0x0000023E675E0410>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D78D0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: t_out = arg(1, name=t_out)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(2, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(4, name=num_table)
DEBUG:numba.core.ssa:on stmt: scale = arg(5, name=scale)
DEBUG:numba.core.ssa:on stmt: y = arg(6, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $binop_mul20.4 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const80.15.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const106.19.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const132.23.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG:numba.core.ssa:on stmt: $phi178.0 = $174get_iter.29
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D78D0>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D78D0>
DEBUG:numba.core.ssa:on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG:numba.core.ssa:on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $178for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $178for_iter.3, 180, 782
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D78D0>
DEBUG:numba.core.ssa:on stmt: t = $phi180.1
DEBUG:numba.core.ssa:on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='time_register' stmt=n = call $198load_global.5(time_register, func=$198load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub234.12 = time_register - n
DEBUG:numba.core.ssa:find_def var='time_register' stmt=$binop_sub234.12 = time_register - n
DEBUG:numba.core.ssa:replaced with: $binop_sub234.12 = time_register.1 - n
DEBUG:numba.core.ssa:on stmt: frac = scale * $binop_sub234.12
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const308.27.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add310.28 = n + $const308.27.3
DEBUG:numba.core.ssa:on stmt: $binop_sub318.31 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG:numba.core.ssa:on stmt: $phi374.1 = $372get_iter.39
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 374
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D78D0>
DEBUG:numba.core.ssa:on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG:numba.core.ssa:on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi376.2 = $374for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $374for_iter.4, 376, 500
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 376
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D78D0>
DEBUG:numba.core.ssa:on stmt: i = $phi376.2
DEBUG:numba.core.ssa:on stmt: $binop_mul386.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG:numba.core.ssa:on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul414.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG:numba.core.ssa:on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG:numba.core.ssa:on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_sub468.27 = n - i
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG:numba.core.ssa:on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd486.30
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 500
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D78D0>
DEBUG:numba.core.ssa:on stmt: $binop_sub504.3 = scale - frac
DEBUG:numba.core.ssa:on stmt: frac = $binop_sub504.3
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_sub576.18 = n_orig - n
DEBUG:numba.core.ssa:on stmt: $const580.19.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
DEBUG:numba.core.ssa:on stmt: $binop_sub590.23 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG:numba.core.ssa:on stmt: $phi646.1 = $644get_iter.31
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 646
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D78D0>
DEBUG:numba.core.ssa:on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG:numba.core.ssa:on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi648.2 = $646for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $646for_iter.4, 648, 778
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 648
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D78D0>
DEBUG:numba.core.ssa:on stmt: k = $phi648.2
DEBUG:numba.core.ssa:on stmt: $binop_mul658.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG:numba.core.ssa:on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul686.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG:numba.core.ssa:on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG:numba.core.ssa:on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add740.27 = n + k
DEBUG:numba.core.ssa:on stmt: $const744.28.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
DEBUG:numba.core.ssa:on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG:numba.core.ssa:on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd764.32
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 778
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D78D0>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 782
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D78D0>
DEBUG:numba.core.ssa:on stmt: $const782.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $784return_value.1 = cast(value=$const782.0.0)
DEBUG:numba.core.ssa:on stmt: return $784return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var n
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: t_out = arg(1, name=t_out)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(2, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(4, name=num_table)
DEBUG:numba.core.ssa:on stmt: scale = arg(5, name=scale)
DEBUG:numba.core.ssa:on stmt: y = arg(6, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $binop_mul20.4 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:first assign: n
DEBUG:numba.core.ssa:replaced with: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const80.15.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const106.19.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const132.23.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG:numba.core.ssa:on stmt: $phi178.0 = $174get_iter.29
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG:numba.core.ssa:on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $178for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $178for_iter.3, 180, 782
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: t = $phi180.1
DEBUG:numba.core.ssa:on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub234.12 = time_register.1 - n
DEBUG:numba.core.ssa:on stmt: frac = scale * $binop_sub234.12
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const308.27.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add310.28 = n + $const308.27.3
DEBUG:numba.core.ssa:on stmt: $binop_sub318.31 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG:numba.core.ssa:on stmt: $phi374.1 = $372get_iter.39
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 374
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG:numba.core.ssa:on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi376.2 = $374for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $374for_iter.4, 376, 500
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 376
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: i = $phi376.2
DEBUG:numba.core.ssa:on stmt: $binop_mul386.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG:numba.core.ssa:on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul414.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG:numba.core.ssa:on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG:numba.core.ssa:on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_sub468.27 = n - i
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG:numba.core.ssa:on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd486.30
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 500
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $binop_sub504.3 = scale - frac
DEBUG:numba.core.ssa:on stmt: frac = $binop_sub504.3
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_sub576.18 = n_orig - n
DEBUG:numba.core.ssa:on stmt: $const580.19.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
DEBUG:numba.core.ssa:on stmt: $binop_sub590.23 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG:numba.core.ssa:on stmt: $phi646.1 = $644get_iter.31
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 646
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG:numba.core.ssa:on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi648.2 = $646for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $646for_iter.4, 648, 778
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 648
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: k = $phi648.2
DEBUG:numba.core.ssa:on stmt: $binop_mul658.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG:numba.core.ssa:on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul686.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG:numba.core.ssa:on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG:numba.core.ssa:on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add740.27 = n + k
DEBUG:numba.core.ssa:on stmt: $const744.28.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
DEBUG:numba.core.ssa:on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG:numba.core.ssa:on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd764.32
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 778
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 782
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $const782.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $784return_value.1 = cast(value=$const782.0.0)
DEBUG:numba.core.ssa:on stmt: return $784return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000023E67575850>],
             180: [<numba.core.ir.Assign object at 0x0000023E675DE290>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: t_out = arg(1, name=t_out)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(2, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(4, name=num_table)
DEBUG:numba.core.ssa:on stmt: scale = arg(5, name=scale)
DEBUG:numba.core.ssa:on stmt: y = arg(6, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $binop_mul20.4 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const80.15.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const106.19.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const132.23.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG:numba.core.ssa:on stmt: $phi178.0 = $174get_iter.29
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG:numba.core.ssa:on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $178for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $178for_iter.3, 180, 782
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: t = $phi180.1
DEBUG:numba.core.ssa:on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub234.12 = time_register.1 - n
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_sub234.12 = time_register.1 - n
DEBUG:numba.core.ssa:replaced with: $binop_sub234.12 = time_register.1 - n.1
DEBUG:numba.core.ssa:on stmt: frac = scale * $binop_sub234.12
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const308.27.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add310.28 = n + $const308.27.3
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_add310.28 = n + $const308.27.3
DEBUG:numba.core.ssa:replaced with: $binop_add310.28 = n.1 + $const308.27.3
DEBUG:numba.core.ssa:on stmt: $binop_sub318.31 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG:numba.core.ssa:on stmt: $phi374.1 = $372get_iter.39
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 374
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG:numba.core.ssa:on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi376.2 = $374for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $374for_iter.4, 376, 500
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 376
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: i = $phi376.2
DEBUG:numba.core.ssa:on stmt: $binop_mul386.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG:numba.core.ssa:on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul414.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG:numba.core.ssa:on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG:numba.core.ssa:on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_sub468.27 = n - i
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_sub468.27 = n - i
DEBUG:numba.core.ssa:find_def_from_top label 376
DEBUG:numba.core.ssa:idom 374 from label 376
DEBUG:numba.core.ssa:find_def_from_bottom label 374
DEBUG:numba.core.ssa:find_def_from_top label 374
DEBUG:numba.core.ssa:idom 180 from label 374
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:replaced with: $binop_sub468.27 = n.1 - i
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG:numba.core.ssa:on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd486.30
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 500
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $binop_sub504.3 = scale - frac
DEBUG:numba.core.ssa:on stmt: frac = $binop_sub504.3
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_sub576.18 = n_orig - n
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_sub576.18 = n_orig - n
DEBUG:numba.core.ssa:find_def_from_top label 500
DEBUG:numba.core.ssa:idom 374 from label 500
DEBUG:numba.core.ssa:find_def_from_bottom label 374
DEBUG:numba.core.ssa:find_def_from_top label 374
DEBUG:numba.core.ssa:idom 180 from label 374
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:replaced with: $binop_sub576.18 = n_orig - n.1
DEBUG:numba.core.ssa:on stmt: $const580.19.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
DEBUG:numba.core.ssa:on stmt: $binop_sub590.23 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG:numba.core.ssa:on stmt: $phi646.1 = $644get_iter.31
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 646
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG:numba.core.ssa:on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi648.2 = $646for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $646for_iter.4, 648, 778
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 648
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: k = $phi648.2
DEBUG:numba.core.ssa:on stmt: $binop_mul658.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG:numba.core.ssa:on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul686.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG:numba.core.ssa:on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG:numba.core.ssa:on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add740.27 = n + k
DEBUG:numba.core.ssa:find_def var='n' stmt=$binop_add740.27 = n + k
DEBUG:numba.core.ssa:find_def_from_top label 648
DEBUG:numba.core.ssa:idom 646 from label 648
DEBUG:numba.core.ssa:find_def_from_bottom label 646
DEBUG:numba.core.ssa:find_def_from_top label 646
DEBUG:numba.core.ssa:idom 500 from label 646
DEBUG:numba.core.ssa:find_def_from_bottom label 500
DEBUG:numba.core.ssa:find_def_from_top label 500
DEBUG:numba.core.ssa:idom 374 from label 500
DEBUG:numba.core.ssa:find_def_from_bottom label 374
DEBUG:numba.core.ssa:find_def_from_top label 374
DEBUG:numba.core.ssa:idom 180 from label 374
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:replaced with: $binop_add740.27 = n.1 + k
DEBUG:numba.core.ssa:on stmt: $const744.28.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
DEBUG:numba.core.ssa:on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG:numba.core.ssa:on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd764.32
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 778
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 782
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $const782.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $784return_value.1 = cast(value=$const782.0.0)
DEBUG:numba.core.ssa:on stmt: return $784return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var frac
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: t_out = arg(1, name=t_out)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(2, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(4, name=num_table)
DEBUG:numba.core.ssa:on stmt: scale = arg(5, name=scale)
DEBUG:numba.core.ssa:on stmt: y = arg(6, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $binop_mul20.4 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: frac
DEBUG:numba.core.ssa:replaced with: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const80.15.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const106.19.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const132.23.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG:numba.core.ssa:on stmt: $phi178.0 = $174get_iter.29
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG:numba.core.ssa:on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $178for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $178for_iter.3, 180, 782
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: t = $phi180.1
DEBUG:numba.core.ssa:on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG:numba.core.ssa:on stmt: frac = scale * $binop_sub234.12
DEBUG:numba.core.ssa:replaced with: frac.1 = scale * $binop_sub234.12
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const308.27.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add310.28 = n.1 + $const308.27.3
DEBUG:numba.core.ssa:on stmt: $binop_sub318.31 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG:numba.core.ssa:on stmt: $phi374.1 = $372get_iter.39
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 374
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG:numba.core.ssa:on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi376.2 = $374for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $374for_iter.4, 376, 500
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 376
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: i = $phi376.2
DEBUG:numba.core.ssa:on stmt: $binop_mul386.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG:numba.core.ssa:on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul414.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG:numba.core.ssa:on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG:numba.core.ssa:on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_sub468.27 = n.1 - i
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG:numba.core.ssa:on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd486.30
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 500
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: $binop_sub504.3 = scale - frac
DEBUG:numba.core.ssa:on stmt: frac = $binop_sub504.3
DEBUG:numba.core.ssa:replaced with: frac.2 = $binop_sub504.3
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG:numba.core.ssa:on stmt: $const580.19.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
DEBUG:numba.core.ssa:on stmt: $binop_sub590.23 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG:numba.core.ssa:on stmt: $phi646.1 = $644get_iter.31
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 646
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG:numba.core.ssa:on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi648.2 = $646for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $646for_iter.4, 648, 778
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 648
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: k = $phi648.2
DEBUG:numba.core.ssa:on stmt: $binop_mul658.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG:numba.core.ssa:on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul686.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG:numba.core.ssa:on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG:numba.core.ssa:on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add740.27 = n.1 + k
DEBUG:numba.core.ssa:on stmt: $const744.28.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
DEBUG:numba.core.ssa:on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG:numba.core.ssa:on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd764.32
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 778
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 782
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: $const782.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $784return_value.1 = cast(value=$const782.0.0)
DEBUG:numba.core.ssa:on stmt: return $784return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000023E675D6650>],
             180: [<numba.core.ir.Assign object at 0x0000023E67577550>],
             500: [<numba.core.ir.Assign object at 0x0000023E675F1B90>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E664A6BD0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: t_out = arg(1, name=t_out)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(2, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(4, name=num_table)
DEBUG:numba.core.ssa:on stmt: scale = arg(5, name=scale)
DEBUG:numba.core.ssa:on stmt: y = arg(6, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $binop_mul20.4 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const80.15.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const106.19.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const132.23.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG:numba.core.ssa:on stmt: $phi178.0 = $174get_iter.29
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E664A6BD0>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E664A6BD0>
DEBUG:numba.core.ssa:on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG:numba.core.ssa:on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $178for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $178for_iter.3, 180, 782
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E664A6BD0>
DEBUG:numba.core.ssa:on stmt: t = $phi180.1
DEBUG:numba.core.ssa:on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $binop_sub234.12
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:find_def var='frac' stmt=index_frac = frac * num_table
DEBUG:numba.core.ssa:replaced with: index_frac = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const308.27.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add310.28 = n.1 + $const308.27.3
DEBUG:numba.core.ssa:on stmt: $binop_sub318.31 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG:numba.core.ssa:on stmt: $phi374.1 = $372get_iter.39
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 374
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E664A6BD0>
DEBUG:numba.core.ssa:on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG:numba.core.ssa:on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi376.2 = $374for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $374for_iter.4, 376, 500
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 376
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E664A6BD0>
DEBUG:numba.core.ssa:on stmt: i = $phi376.2
DEBUG:numba.core.ssa:on stmt: $binop_mul386.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG:numba.core.ssa:on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul414.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG:numba.core.ssa:on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG:numba.core.ssa:on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_sub468.27 = n.1 - i
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG:numba.core.ssa:on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd486.30
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 500
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E664A6BD0>
DEBUG:numba.core.ssa:on stmt: $binop_sub504.3 = scale - frac
DEBUG:numba.core.ssa:find_def var='frac' stmt=$binop_sub504.3 = scale - frac
DEBUG:numba.core.ssa:find_def_from_top label 500
DEBUG:numba.core.ssa:idom 374 from label 500
DEBUG:numba.core.ssa:find_def_from_bottom label 374
DEBUG:numba.core.ssa:find_def_from_top label 374
DEBUG:numba.core.ssa:idom 180 from label 374
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:replaced with: $binop_sub504.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $binop_sub504.3
DEBUG:numba.core.ssa:on stmt: index_frac = frac * num_table
DEBUG:numba.core.ssa:find_def var='frac' stmt=index_frac = frac * num_table
DEBUG:numba.core.ssa:replaced with: index_frac = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG:numba.core.ssa:on stmt: $const580.19.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
DEBUG:numba.core.ssa:on stmt: $binop_sub590.23 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG:numba.core.ssa:on stmt: $phi646.1 = $644get_iter.31
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 646
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E664A6BD0>
DEBUG:numba.core.ssa:on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG:numba.core.ssa:on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi648.2 = $646for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $646for_iter.4, 648, 778
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 648
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E664A6BD0>
DEBUG:numba.core.ssa:on stmt: k = $phi648.2
DEBUG:numba.core.ssa:on stmt: $binop_mul658.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG:numba.core.ssa:on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul686.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG:numba.core.ssa:on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG:numba.core.ssa:on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add740.27 = n.1 + k
DEBUG:numba.core.ssa:on stmt: $const744.28.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
DEBUG:numba.core.ssa:on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG:numba.core.ssa:on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd764.32
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 778
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E664A6BD0>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 782
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E664A6BD0>
DEBUG:numba.core.ssa:on stmt: $const782.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $784return_value.1 = cast(value=$const782.0.0)
DEBUG:numba.core.ssa:on stmt: return $784return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var index_frac
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: t_out = arg(1, name=t_out)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(2, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(4, name=num_table)
DEBUG:numba.core.ssa:on stmt: scale = arg(5, name=scale)
DEBUG:numba.core.ssa:on stmt: y = arg(6, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $binop_mul20.4 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: index_frac
DEBUG:numba.core.ssa:replaced with: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const80.15.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const106.19.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const132.23.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG:numba.core.ssa:on stmt: $phi178.0 = $174get_iter.29
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG:numba.core.ssa:on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $178for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $178for_iter.3, 180, 782
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: t = $phi180.1
DEBUG:numba.core.ssa:on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $binop_sub234.12
DEBUG:numba.core.ssa:on stmt: index_frac = frac.1 * num_table
DEBUG:numba.core.ssa:replaced with: index_frac.1 = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const308.27.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add310.28 = n.1 + $const308.27.3
DEBUG:numba.core.ssa:on stmt: $binop_sub318.31 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG:numba.core.ssa:on stmt: $phi374.1 = $372get_iter.39
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 374
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG:numba.core.ssa:on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi376.2 = $374for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $374for_iter.4, 376, 500
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 376
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: i = $phi376.2
DEBUG:numba.core.ssa:on stmt: $binop_mul386.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG:numba.core.ssa:on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul414.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG:numba.core.ssa:on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG:numba.core.ssa:on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_sub468.27 = n.1 - i
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG:numba.core.ssa:on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd486.30
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 500
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $binop_sub504.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $binop_sub504.3
DEBUG:numba.core.ssa:on stmt: index_frac = frac.2 * num_table
DEBUG:numba.core.ssa:replaced with: index_frac.2 = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG:numba.core.ssa:on stmt: $const580.19.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
DEBUG:numba.core.ssa:on stmt: $binop_sub590.23 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG:numba.core.ssa:on stmt: $phi646.1 = $644get_iter.31
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 646
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG:numba.core.ssa:on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi648.2 = $646for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $646for_iter.4, 648, 778
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 648
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: k = $phi648.2
DEBUG:numba.core.ssa:on stmt: $binop_mul658.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG:numba.core.ssa:on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul686.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG:numba.core.ssa:on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG:numba.core.ssa:on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add740.27 = n.1 + k
DEBUG:numba.core.ssa:on stmt: $const744.28.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
DEBUG:numba.core.ssa:on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG:numba.core.ssa:on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd764.32
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 778
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 782
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $const782.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $784return_value.1 = cast(value=$const782.0.0)
DEBUG:numba.core.ssa:on stmt: return $784return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000023E675E7510>],
             180: [<numba.core.ir.Assign object at 0x0000023E675F0690>],
             500: [<numba.core.ir.Assign object at 0x0000023E675F1ED0>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: t_out = arg(1, name=t_out)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(2, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(4, name=num_table)
DEBUG:numba.core.ssa:on stmt: scale = arg(5, name=scale)
DEBUG:numba.core.ssa:on stmt: y = arg(6, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $binop_mul20.4 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const80.15.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const106.19.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const132.23.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG:numba.core.ssa:on stmt: $phi178.0 = $174get_iter.29
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG:numba.core.ssa:on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $178for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $178for_iter.3, 180, 782
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: t = $phi180.1
DEBUG:numba.core.ssa:on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $binop_sub234.12
DEBUG:numba.core.ssa:on stmt: index_frac.1 = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='index_frac' stmt=offset = call $254load_global.17(index_frac, func=$254load_global.17, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:find_def var='index_frac' stmt=eta = index_frac - offset
DEBUG:numba.core.ssa:replaced with: eta = index_frac.1 - offset
DEBUG:numba.core.ssa:on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const308.27.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add310.28 = n.1 + $const308.27.3
DEBUG:numba.core.ssa:on stmt: $binop_sub318.31 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG:numba.core.ssa:on stmt: $phi374.1 = $372get_iter.39
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 374
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG:numba.core.ssa:on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi376.2 = $374for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $374for_iter.4, 376, 500
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 376
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: i = $phi376.2
DEBUG:numba.core.ssa:on stmt: $binop_mul386.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG:numba.core.ssa:on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul414.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG:numba.core.ssa:on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG:numba.core.ssa:on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_sub468.27 = n.1 - i
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG:numba.core.ssa:on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd486.30
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 500
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: $binop_sub504.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $binop_sub504.3
DEBUG:numba.core.ssa:on stmt: index_frac.2 = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:find_def var='index_frac' stmt=offset = call $520load_global.7(index_frac, func=$520load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac - offset
DEBUG:numba.core.ssa:find_def var='index_frac' stmt=eta = index_frac - offset
DEBUG:numba.core.ssa:replaced with: eta = index_frac.2 - offset
DEBUG:numba.core.ssa:on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG:numba.core.ssa:on stmt: $const580.19.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
DEBUG:numba.core.ssa:on stmt: $binop_sub590.23 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG:numba.core.ssa:on stmt: $phi646.1 = $644get_iter.31
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 646
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG:numba.core.ssa:on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi648.2 = $646for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $646for_iter.4, 648, 778
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 648
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: k = $phi648.2
DEBUG:numba.core.ssa:on stmt: $binop_mul658.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG:numba.core.ssa:on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul686.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG:numba.core.ssa:on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG:numba.core.ssa:on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add740.27 = n.1 + k
DEBUG:numba.core.ssa:on stmt: $const744.28.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
DEBUG:numba.core.ssa:on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG:numba.core.ssa:on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd764.32
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 778
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 782
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D66D0>
DEBUG:numba.core.ssa:on stmt: $const782.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $784return_value.1 = cast(value=$const782.0.0)
DEBUG:numba.core.ssa:on stmt: return $784return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var offset
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675BFC50>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: t_out = arg(1, name=t_out)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(2, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(4, name=num_table)
DEBUG:numba.core.ssa:on stmt: scale = arg(5, name=scale)
DEBUG:numba.core.ssa:on stmt: y = arg(6, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $binop_mul20.4 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:first assign: offset
DEBUG:numba.core.ssa:replaced with: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const80.15.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const106.19.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const132.23.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG:numba.core.ssa:on stmt: $phi178.0 = $174get_iter.29
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675BFC50>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675BFC50>
DEBUG:numba.core.ssa:on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG:numba.core.ssa:on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $178for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $178for_iter.3, 180, 782
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675BFC50>
DEBUG:numba.core.ssa:on stmt: t = $phi180.1
DEBUG:numba.core.ssa:on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $binop_sub234.12
DEBUG:numba.core.ssa:on stmt: index_frac.1 = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac.1 - offset
DEBUG:numba.core.ssa:on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const308.27.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add310.28 = n.1 + $const308.27.3
DEBUG:numba.core.ssa:on stmt: $binop_sub318.31 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG:numba.core.ssa:on stmt: $phi374.1 = $372get_iter.39
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 374
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675BFC50>
DEBUG:numba.core.ssa:on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG:numba.core.ssa:on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi376.2 = $374for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $374for_iter.4, 376, 500
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 376
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675BFC50>
DEBUG:numba.core.ssa:on stmt: i = $phi376.2
DEBUG:numba.core.ssa:on stmt: $binop_mul386.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG:numba.core.ssa:on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul414.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG:numba.core.ssa:on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG:numba.core.ssa:on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_sub468.27 = n.1 - i
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG:numba.core.ssa:on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd486.30
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 500
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675BFC50>
DEBUG:numba.core.ssa:on stmt: $binop_sub504.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $binop_sub504.3
DEBUG:numba.core.ssa:on stmt: index_frac.2 = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:replaced with: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac.2 - offset
DEBUG:numba.core.ssa:on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG:numba.core.ssa:on stmt: $const580.19.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
DEBUG:numba.core.ssa:on stmt: $binop_sub590.23 = nwin - offset
DEBUG:numba.core.ssa:on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG:numba.core.ssa:on stmt: $phi646.1 = $644get_iter.31
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 646
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675BFC50>
DEBUG:numba.core.ssa:on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG:numba.core.ssa:on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi648.2 = $646for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $646for_iter.4, 648, 778
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 648
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675BFC50>
DEBUG:numba.core.ssa:on stmt: k = $phi648.2
DEBUG:numba.core.ssa:on stmt: $binop_mul658.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG:numba.core.ssa:on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul686.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG:numba.core.ssa:on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG:numba.core.ssa:on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add740.27 = n.1 + k
DEBUG:numba.core.ssa:on stmt: $const744.28.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
DEBUG:numba.core.ssa:on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG:numba.core.ssa:on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd764.32
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 778
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675BFC50>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 782
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675BFC50>
DEBUG:numba.core.ssa:on stmt: $const782.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $784return_value.1 = cast(value=$const782.0.0)
DEBUG:numba.core.ssa:on stmt: return $784return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000023E675D63D0>],
             180: [<numba.core.ir.Assign object at 0x0000023E675F1A90>],
             500: [<numba.core.ir.Assign object at 0x0000023E675F2F90>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D4A90>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: t_out = arg(1, name=t_out)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(2, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(4, name=num_table)
DEBUG:numba.core.ssa:on stmt: scale = arg(5, name=scale)
DEBUG:numba.core.ssa:on stmt: y = arg(6, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $binop_mul20.4 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const80.15.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const106.19.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const132.23.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG:numba.core.ssa:on stmt: $phi178.0 = $174get_iter.29
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D4A90>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D4A90>
DEBUG:numba.core.ssa:on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG:numba.core.ssa:on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $178for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $178for_iter.3, 180, 782
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D4A90>
DEBUG:numba.core.ssa:on stmt: t = $phi180.1
DEBUG:numba.core.ssa:on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $binop_sub234.12
DEBUG:numba.core.ssa:on stmt: index_frac.1 = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac.1 - offset
DEBUG:numba.core.ssa:find_def var='offset' stmt=eta = index_frac.1 - offset
DEBUG:numba.core.ssa:replaced with: eta = index_frac.1 - offset.1
DEBUG:numba.core.ssa:on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const308.27.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add310.28 = n.1 + $const308.27.3
DEBUG:numba.core.ssa:on stmt: $binop_sub318.31 = nwin - offset
DEBUG:numba.core.ssa:find_def var='offset' stmt=$binop_sub318.31 = nwin - offset
DEBUG:numba.core.ssa:replaced with: $binop_sub318.31 = nwin - offset.1
DEBUG:numba.core.ssa:on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG:numba.core.ssa:on stmt: $phi374.1 = $372get_iter.39
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 374
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D4A90>
DEBUG:numba.core.ssa:on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG:numba.core.ssa:on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi376.2 = $374for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $374for_iter.4, 376, 500
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 376
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D4A90>
DEBUG:numba.core.ssa:on stmt: i = $phi376.2
DEBUG:numba.core.ssa:on stmt: $binop_mul386.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add390.8 = offset + $binop_mul386.7
DEBUG:numba.core.ssa:find_def var='offset' stmt=$binop_add390.8 = offset + $binop_mul386.7
DEBUG:numba.core.ssa:find_def_from_top label 376
DEBUG:numba.core.ssa:idom 374 from label 376
DEBUG:numba.core.ssa:find_def_from_bottom label 374
DEBUG:numba.core.ssa:find_def_from_top label 374
DEBUG:numba.core.ssa:idom 180 from label 374
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:replaced with: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG:numba.core.ssa:on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul414.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add418.16 = offset + $binop_mul414.15
DEBUG:numba.core.ssa:find_def var='offset' stmt=$binop_add418.16 = offset + $binop_mul414.15
DEBUG:numba.core.ssa:find_def_from_top label 376
DEBUG:numba.core.ssa:idom 374 from label 376
DEBUG:numba.core.ssa:find_def_from_bottom label 374
DEBUG:numba.core.ssa:find_def_from_top label 374
DEBUG:numba.core.ssa:idom 180 from label 374
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:replaced with: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG:numba.core.ssa:on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG:numba.core.ssa:on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_sub468.27 = n.1 - i
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG:numba.core.ssa:on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd486.30
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 500
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D4A90>
DEBUG:numba.core.ssa:on stmt: $binop_sub504.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $binop_sub504.3
DEBUG:numba.core.ssa:on stmt: index_frac.2 = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac.2 - offset
DEBUG:numba.core.ssa:find_def var='offset' stmt=eta = index_frac.2 - offset
DEBUG:numba.core.ssa:replaced with: eta = index_frac.2 - offset.2
DEBUG:numba.core.ssa:on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG:numba.core.ssa:on stmt: $const580.19.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
DEBUG:numba.core.ssa:on stmt: $binop_sub590.23 = nwin - offset
DEBUG:numba.core.ssa:find_def var='offset' stmt=$binop_sub590.23 = nwin - offset
DEBUG:numba.core.ssa:replaced with: $binop_sub590.23 = nwin - offset.2
DEBUG:numba.core.ssa:on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG:numba.core.ssa:on stmt: $phi646.1 = $644get_iter.31
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 646
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D4A90>
DEBUG:numba.core.ssa:on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG:numba.core.ssa:on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi648.2 = $646for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $646for_iter.4, 648, 778
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 648
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D4A90>
DEBUG:numba.core.ssa:on stmt: k = $phi648.2
DEBUG:numba.core.ssa:on stmt: $binop_mul658.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add662.8 = offset + $binop_mul658.7
DEBUG:numba.core.ssa:find_def var='offset' stmt=$binop_add662.8 = offset + $binop_mul658.7
DEBUG:numba.core.ssa:find_def_from_top label 648
DEBUG:numba.core.ssa:idom 646 from label 648
DEBUG:numba.core.ssa:find_def_from_bottom label 646
DEBUG:numba.core.ssa:find_def_from_top label 646
DEBUG:numba.core.ssa:idom 500 from label 646
DEBUG:numba.core.ssa:find_def_from_bottom label 500
DEBUG:numba.core.ssa:replaced with: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG:numba.core.ssa:on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul686.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add690.16 = offset + $binop_mul686.15
DEBUG:numba.core.ssa:find_def var='offset' stmt=$binop_add690.16 = offset + $binop_mul686.15
DEBUG:numba.core.ssa:find_def_from_top label 648
DEBUG:numba.core.ssa:idom 646 from label 648
DEBUG:numba.core.ssa:find_def_from_bottom label 646
DEBUG:numba.core.ssa:find_def_from_top label 646
DEBUG:numba.core.ssa:idom 500 from label 646
DEBUG:numba.core.ssa:find_def_from_bottom label 500
DEBUG:numba.core.ssa:replaced with: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG:numba.core.ssa:on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG:numba.core.ssa:on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add740.27 = n.1 + k
DEBUG:numba.core.ssa:on stmt: $const744.28.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
DEBUG:numba.core.ssa:on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG:numba.core.ssa:on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd764.32
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 778
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D4A90>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 782
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D4A90>
DEBUG:numba.core.ssa:on stmt: $const782.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $784return_value.1 = cast(value=$const782.0.0)
DEBUG:numba.core.ssa:on stmt: return $784return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var eta
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675F2A10>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: t_out = arg(1, name=t_out)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(2, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(4, name=num_table)
DEBUG:numba.core.ssa:on stmt: scale = arg(5, name=scale)
DEBUG:numba.core.ssa:on stmt: y = arg(6, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $binop_mul20.4 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: eta
DEBUG:numba.core.ssa:replaced with: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const80.15.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const106.19.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const132.23.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG:numba.core.ssa:on stmt: $phi178.0 = $174get_iter.29
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675F2A10>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675F2A10>
DEBUG:numba.core.ssa:on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG:numba.core.ssa:on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $178for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $178for_iter.3, 180, 782
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675F2A10>
DEBUG:numba.core.ssa:on stmt: t = $phi180.1
DEBUG:numba.core.ssa:on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $binop_sub234.12
DEBUG:numba.core.ssa:on stmt: index_frac.1 = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac.1 - offset.1
DEBUG:numba.core.ssa:replaced with: eta.1 = index_frac.1 - offset.1
DEBUG:numba.core.ssa:on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const308.27.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add310.28 = n.1 + $const308.27.3
DEBUG:numba.core.ssa:on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG:numba.core.ssa:on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG:numba.core.ssa:on stmt: $phi374.1 = $372get_iter.39
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 374
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675F2A10>
DEBUG:numba.core.ssa:on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG:numba.core.ssa:on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi376.2 = $374for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $374for_iter.4, 376, 500
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 376
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675F2A10>
DEBUG:numba.core.ssa:on stmt: i = $phi376.2
DEBUG:numba.core.ssa:on stmt: $binop_mul386.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG:numba.core.ssa:on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul414.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG:numba.core.ssa:on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG:numba.core.ssa:on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_sub468.27 = n.1 - i
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG:numba.core.ssa:on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd486.30
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 500
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675F2A10>
DEBUG:numba.core.ssa:on stmt: $binop_sub504.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $binop_sub504.3
DEBUG:numba.core.ssa:on stmt: index_frac.2 = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta = index_frac.2 - offset.2
DEBUG:numba.core.ssa:replaced with: eta.2 = index_frac.2 - offset.2
DEBUG:numba.core.ssa:on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG:numba.core.ssa:on stmt: $const580.19.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
DEBUG:numba.core.ssa:on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG:numba.core.ssa:on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG:numba.core.ssa:on stmt: $phi646.1 = $644get_iter.31
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 646
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675F2A10>
DEBUG:numba.core.ssa:on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG:numba.core.ssa:on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi648.2 = $646for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $646for_iter.4, 648, 778
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 648
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675F2A10>
DEBUG:numba.core.ssa:on stmt: k = $phi648.2
DEBUG:numba.core.ssa:on stmt: $binop_mul658.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG:numba.core.ssa:on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul686.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG:numba.core.ssa:on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG:numba.core.ssa:on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add740.27 = n.1 + k
DEBUG:numba.core.ssa:on stmt: $const744.28.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
DEBUG:numba.core.ssa:on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG:numba.core.ssa:on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd764.32
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 778
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675F2A10>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 782
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675F2A10>
DEBUG:numba.core.ssa:on stmt: $const782.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $784return_value.1 = cast(value=$const782.0.0)
DEBUG:numba.core.ssa:on stmt: return $784return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000023E675F2510>],
             180: [<numba.core.ir.Assign object at 0x0000023E675F20D0>],
             500: [<numba.core.ir.Assign object at 0x0000023E6757C490>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: t_out = arg(1, name=t_out)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(2, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(4, name=num_table)
DEBUG:numba.core.ssa:on stmt: scale = arg(5, name=scale)
DEBUG:numba.core.ssa:on stmt: y = arg(6, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $binop_mul20.4 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const80.15.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const106.19.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const132.23.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG:numba.core.ssa:on stmt: $phi178.0 = $174get_iter.29
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG:numba.core.ssa:on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $178for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $178for_iter.3, 180, 782
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: t = $phi180.1
DEBUG:numba.core.ssa:on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $binop_sub234.12
DEBUG:numba.core.ssa:on stmt: index_frac.1 = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta.1 = index_frac.1 - offset.1
DEBUG:numba.core.ssa:on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const308.27.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add310.28 = n.1 + $const308.27.3
DEBUG:numba.core.ssa:on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG:numba.core.ssa:on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG:numba.core.ssa:on stmt: $phi374.1 = $372get_iter.39
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 374
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG:numba.core.ssa:on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi376.2 = $374for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $374for_iter.4, 376, 500
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 376
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: i = $phi376.2
DEBUG:numba.core.ssa:on stmt: $binop_mul386.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG:numba.core.ssa:on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul414.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG:numba.core.ssa:on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul432.18 = eta * $422binary_subscr.17
DEBUG:numba.core.ssa:find_def var='eta' stmt=$binop_mul432.18 = eta * $422binary_subscr.17
DEBUG:numba.core.ssa:find_def_from_top label 376
DEBUG:numba.core.ssa:idom 374 from label 376
DEBUG:numba.core.ssa:find_def_from_bottom label 374
DEBUG:numba.core.ssa:find_def_from_top label 374
DEBUG:numba.core.ssa:idom 180 from label 374
DEBUG:numba.core.ssa:find_def_from_bottom label 180
DEBUG:numba.core.ssa:replaced with: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG:numba.core.ssa:on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_sub468.27 = n.1 - i
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG:numba.core.ssa:on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd486.30
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 500
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $binop_sub504.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $binop_sub504.3
DEBUG:numba.core.ssa:on stmt: index_frac.2 = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta.2 = index_frac.2 - offset.2
DEBUG:numba.core.ssa:on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG:numba.core.ssa:on stmt: $const580.19.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
DEBUG:numba.core.ssa:on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG:numba.core.ssa:on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG:numba.core.ssa:on stmt: $phi646.1 = $644get_iter.31
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 646
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG:numba.core.ssa:on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi648.2 = $646for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $646for_iter.4, 648, 778
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 648
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: k = $phi648.2
DEBUG:numba.core.ssa:on stmt: $binop_mul658.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG:numba.core.ssa:on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul686.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG:numba.core.ssa:on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul704.18 = eta * $694binary_subscr.17
DEBUG:numba.core.ssa:find_def var='eta' stmt=$binop_mul704.18 = eta * $694binary_subscr.17
DEBUG:numba.core.ssa:find_def_from_top label 648
DEBUG:numba.core.ssa:idom 646 from label 648
DEBUG:numba.core.ssa:find_def_from_bottom label 646
DEBUG:numba.core.ssa:find_def_from_top label 646
DEBUG:numba.core.ssa:idom 500 from label 646
DEBUG:numba.core.ssa:find_def_from_bottom label 500
DEBUG:numba.core.ssa:replaced with: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG:numba.core.ssa:on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add740.27 = n.1 + k
DEBUG:numba.core.ssa:on stmt: $const744.28.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
DEBUG:numba.core.ssa:on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG:numba.core.ssa:on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd764.32
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 778
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 782
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675754D0>
DEBUG:numba.core.ssa:on stmt: $const782.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $784return_value.1 = cast(value=$const782.0.0)
DEBUG:numba.core.ssa:on stmt: return $784return_value.1
DEBUG:numba.core.ssa:Fix SSA violator on var weight
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D6690>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: t_out = arg(1, name=t_out)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(2, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(4, name=num_table)
DEBUG:numba.core.ssa:on stmt: scale = arg(5, name=scale)
DEBUG:numba.core.ssa:on stmt: y = arg(6, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $binop_mul20.4 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:first assign: weight
DEBUG:numba.core.ssa:replaced with: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const80.15.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const106.19.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const132.23.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG:numba.core.ssa:on stmt: $phi178.0 = $174get_iter.29
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D6690>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D6690>
DEBUG:numba.core.ssa:on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG:numba.core.ssa:on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $178for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $178for_iter.3, 180, 782
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D6690>
DEBUG:numba.core.ssa:on stmt: t = $phi180.1
DEBUG:numba.core.ssa:on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $binop_sub234.12
DEBUG:numba.core.ssa:on stmt: index_frac.1 = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta.1 = index_frac.1 - offset.1
DEBUG:numba.core.ssa:on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const308.27.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add310.28 = n.1 + $const308.27.3
DEBUG:numba.core.ssa:on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG:numba.core.ssa:on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG:numba.core.ssa:on stmt: $phi374.1 = $372get_iter.39
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 374
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D6690>
DEBUG:numba.core.ssa:on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG:numba.core.ssa:on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi376.2 = $374for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $374for_iter.4, 376, 500
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 376
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D6690>
DEBUG:numba.core.ssa:on stmt: i = $phi376.2
DEBUG:numba.core.ssa:on stmt: $binop_mul386.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG:numba.core.ssa:on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul414.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG:numba.core.ssa:on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $394binary_subscr.9 + $binop_mul432.18
DEBUG:numba.core.ssa:replaced with: weight.1 = $394binary_subscr.9 + $binop_mul432.18
DEBUG:numba.core.ssa:on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_sub468.27 = n.1 - i
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG:numba.core.ssa:on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd486.30
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 500
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D6690>
DEBUG:numba.core.ssa:on stmt: $binop_sub504.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $binop_sub504.3
DEBUG:numba.core.ssa:on stmt: index_frac.2 = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta.2 = index_frac.2 - offset.2
DEBUG:numba.core.ssa:on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG:numba.core.ssa:on stmt: $const580.19.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
DEBUG:numba.core.ssa:on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG:numba.core.ssa:on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG:numba.core.ssa:on stmt: $phi646.1 = $644get_iter.31
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 646
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D6690>
DEBUG:numba.core.ssa:on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG:numba.core.ssa:on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi648.2 = $646for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $646for_iter.4, 648, 778
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 648
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D6690>
DEBUG:numba.core.ssa:on stmt: k = $phi648.2
DEBUG:numba.core.ssa:on stmt: $binop_mul658.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG:numba.core.ssa:on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul686.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG:numba.core.ssa:on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight = $666binary_subscr.9 + $binop_mul704.18
DEBUG:numba.core.ssa:replaced with: weight.2 = $666binary_subscr.9 + $binop_mul704.18
DEBUG:numba.core.ssa:on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add740.27 = n.1 + k
DEBUG:numba.core.ssa:on stmt: $const744.28.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
DEBUG:numba.core.ssa:on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG:numba.core.ssa:on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd764.32
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 778
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D6690>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 782
DEBUG:numba.core.ssa:Running <numba.core.ssa._FreshVarHandler object at 0x0000023E675D6690>
DEBUG:numba.core.ssa:on stmt: $const782.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $784return_value.1 = cast(value=$const782.0.0)
DEBUG:numba.core.ssa:on stmt: return $784return_value.1
DEBUG:numba.core.ssa:Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x0000023E675754D0>],
             376: [<numba.core.ir.Assign object at 0x0000023E6757DAD0>],
             648: [<numba.core.ir.Assign object at 0x0000023E6757C050>]})
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 0
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D6F10>
DEBUG:numba.core.ssa:on stmt: x = arg(0, name=x)
DEBUG:numba.core.ssa:on stmt: t_out = arg(1, name=t_out)
DEBUG:numba.core.ssa:on stmt: interp_win = arg(2, name=interp_win)
DEBUG:numba.core.ssa:on stmt: interp_delta = arg(3, name=interp_delta)
DEBUG:numba.core.ssa:on stmt: num_table = arg(4, name=num_table)
DEBUG:numba.core.ssa:on stmt: scale = arg(5, name=scale)
DEBUG:numba.core.ssa:on stmt: y = arg(6, name=y)
DEBUG:numba.core.ssa:on stmt: $4load_global.0 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: $binop_mul20.4 = scale * num_table
DEBUG:numba.core.ssa:on stmt: index_step = call $4load_global.0($binop_mul20.4, func=$4load_global.0, args=[Var($binop_mul20.4, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: time_register = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: n = const(int, 0)
DEBUG:numba.core.ssa:on stmt: frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: index_frac = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: offset = const(int, 0)
DEBUG:numba.core.ssa:on stmt: eta = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: weight = const(float, 0.0)
DEBUG:numba.core.ssa:on stmt: $70load_attr.14 = getattr(value=interp_win, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const80.15.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: nwin = static_getitem(value=$70load_attr.14, index=0, index_var=$const80.15.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $96load_attr.18 = getattr(value=x, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const106.19.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_orig = static_getitem(value=$96load_attr.18, index=0, index_var=$const106.19.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $122load_attr.22 = getattr(value=t_out, attr=shape)
DEBUG:numba.core.ssa:on stmt: $const132.23.2 = const(int, 0)
DEBUG:numba.core.ssa:on stmt: n_out = static_getitem(value=$122load_attr.22, index=0, index_var=$const132.23.2, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $146load_global.25 = global(prange: <class 'numba.misc.special.prange'>)
DEBUG:numba.core.ssa:on stmt: $164call.28 = call $146load_global.25(n_out, func=$146load_global.25, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $174get_iter.29 = getiter(value=$164call.28)
DEBUG:numba.core.ssa:on stmt: $phi178.0 = $174get_iter.29
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 176
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D6F10>
DEBUG:numba.core.ssa:on stmt: jump 178
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 178
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D6F10>
DEBUG:numba.core.ssa:on stmt: $178for_iter.1 = iternext(value=$phi178.0)
DEBUG:numba.core.ssa:on stmt: $178for_iter.2 = pair_first(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $178for_iter.3 = pair_second(value=$178for_iter.1)
DEBUG:numba.core.ssa:on stmt: $phi180.1 = $178for_iter.2
DEBUG:numba.core.ssa:on stmt: branch $178for_iter.3, 180, 782
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 180
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D6F10>
DEBUG:numba.core.ssa:on stmt: t = $phi180.1
DEBUG:numba.core.ssa:on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $198load_global.5 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: n.1 = call $198load_global.5(time_register.1, func=$198load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $binop_sub234.12 = time_register.1 - n.1
DEBUG:numba.core.ssa:on stmt: frac.1 = scale * $binop_sub234.12
DEBUG:numba.core.ssa:on stmt: index_frac.1 = frac.1 * num_table
DEBUG:numba.core.ssa:on stmt: $254load_global.17 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.1 = call $254load_global.17(index_frac.1, func=$254load_global.17, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta.1 = index_frac.1 - offset.1
DEBUG:numba.core.ssa:on stmt: $294load_global.24 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $const308.27.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add310.28 = n.1 + $const308.27.3
DEBUG:numba.core.ssa:on stmt: $binop_sub318.31 = nwin - offset.1
DEBUG:numba.core.ssa:on stmt: $binop_floordiv324.33 = $binop_sub318.31 // index_step
DEBUG:numba.core.ssa:on stmt: i_max = call $294load_global.24($binop_add310.28, $binop_floordiv324.33, func=$294load_global.24, args=[Var($binop_add310.28, interpn.py:40), Var($binop_floordiv324.33, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $344load_global.35 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $362call.38 = call $344load_global.35(i_max, func=$344load_global.35, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $372get_iter.39 = getiter(value=$362call.38)
DEBUG:numba.core.ssa:on stmt: $phi374.1 = $372get_iter.39
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 374
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D6F10>
DEBUG:numba.core.ssa:on stmt: $374for_iter.2 = iternext(value=$phi374.1)
DEBUG:numba.core.ssa:on stmt: $374for_iter.3 = pair_first(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $374for_iter.4 = pair_second(value=$374for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi376.2 = $374for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $374for_iter.4, 376, 500
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 376
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D6F10>
DEBUG:numba.core.ssa:on stmt: i = $phi376.2
DEBUG:numba.core.ssa:on stmt: $binop_mul386.7 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add390.8 = offset.1 + $binop_mul386.7
DEBUG:numba.core.ssa:on stmt: $394binary_subscr.9 = getitem(value=interp_win, index=$binop_add390.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul414.15 = i * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add418.16 = offset.1 + $binop_mul414.15
DEBUG:numba.core.ssa:on stmt: $422binary_subscr.17 = getitem(value=interp_delta, index=$binop_add418.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul432.18 = eta.1 * $422binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.1 = $394binary_subscr.9 + $binop_mul432.18
DEBUG:numba.core.ssa:on stmt: $450binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_sub468.27 = n.1 - i
DEBUG:numba.core.ssa:on stmt: $472binary_subscr.28 = getitem(value=x, index=$binop_sub468.27, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul482.29 = weight * $472binary_subscr.28
DEBUG:numba.core.ssa:find_def var='weight' stmt=$binop_mul482.29 = weight * $472binary_subscr.28
DEBUG:numba.core.ssa:replaced with: $binop_mul482.29 = weight.1 * $472binary_subscr.28
DEBUG:numba.core.ssa:on stmt: $binop_iadd486.30 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$450binary_subscr.22, rhs=$binop_mul482.29, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd486.30
DEBUG:numba.core.ssa:on stmt: jump 374
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 500
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D6F10>
DEBUG:numba.core.ssa:on stmt: $binop_sub504.3 = scale - frac.1
DEBUG:numba.core.ssa:on stmt: frac.2 = $binop_sub504.3
DEBUG:numba.core.ssa:on stmt: index_frac.2 = frac.2 * num_table
DEBUG:numba.core.ssa:on stmt: $520load_global.7 = global(int: <class 'int'>)
DEBUG:numba.core.ssa:on stmt: offset.2 = call $520load_global.7(index_frac.2, func=$520load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: eta.2 = index_frac.2 - offset.2
DEBUG:numba.core.ssa:on stmt: $560load_global.14 = global(min: <built-in function min>)
DEBUG:numba.core.ssa:on stmt: $binop_sub576.18 = n_orig - n.1
DEBUG:numba.core.ssa:on stmt: $const580.19.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_sub582.20 = $binop_sub576.18 - $const580.19.3
DEBUG:numba.core.ssa:on stmt: $binop_sub590.23 = nwin - offset.2
DEBUG:numba.core.ssa:on stmt: $binop_floordiv596.25 = $binop_sub590.23 // index_step
DEBUG:numba.core.ssa:on stmt: k_max = call $560load_global.14($binop_sub582.20, $binop_floordiv596.25, func=$560load_global.14, args=[Var($binop_sub582.20, interpn.py:60), Var($binop_floordiv596.25, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $616load_global.27 = global(range: <class 'range'>)
DEBUG:numba.core.ssa:on stmt: $634call.30 = call $616load_global.27(k_max, func=$616load_global.27, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
DEBUG:numba.core.ssa:on stmt: $644get_iter.31 = getiter(value=$634call.30)
DEBUG:numba.core.ssa:on stmt: $phi646.1 = $644get_iter.31
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 646
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D6F10>
DEBUG:numba.core.ssa:on stmt: $646for_iter.2 = iternext(value=$phi646.1)
DEBUG:numba.core.ssa:on stmt: $646for_iter.3 = pair_first(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $646for_iter.4 = pair_second(value=$646for_iter.2)
DEBUG:numba.core.ssa:on stmt: $phi648.2 = $646for_iter.3
DEBUG:numba.core.ssa:on stmt: branch $646for_iter.4, 648, 778
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 648
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D6F10>
DEBUG:numba.core.ssa:on stmt: k = $phi648.2
DEBUG:numba.core.ssa:on stmt: $binop_mul658.7 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add662.8 = offset.2 + $binop_mul658.7
DEBUG:numba.core.ssa:on stmt: $666binary_subscr.9 = getitem(value=interp_win, index=$binop_add662.8, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul686.15 = k * index_step
DEBUG:numba.core.ssa:on stmt: $binop_add690.16 = offset.2 + $binop_mul686.15
DEBUG:numba.core.ssa:on stmt: $694binary_subscr.17 = getitem(value=interp_delta, index=$binop_add690.16, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul704.18 = eta.2 * $694binary_subscr.17
DEBUG:numba.core.ssa:on stmt: weight.2 = $666binary_subscr.9 + $binop_mul704.18
DEBUG:numba.core.ssa:on stmt: $722binary_subscr.22 = getitem(value=y, index=t, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_add740.27 = n.1 + k
DEBUG:numba.core.ssa:on stmt: $const744.28.3 = const(int, 1)
DEBUG:numba.core.ssa:on stmt: $binop_add746.29 = $binop_add740.27 + $const744.28.3
DEBUG:numba.core.ssa:on stmt: $750binary_subscr.30 = getitem(value=x, index=$binop_add746.29, fn=<built-in function getitem>)
DEBUG:numba.core.ssa:on stmt: $binop_mul760.31 = weight * $750binary_subscr.30
DEBUG:numba.core.ssa:find_def var='weight' stmt=$binop_mul760.31 = weight * $750binary_subscr.30
DEBUG:numba.core.ssa:replaced with: $binop_mul760.31 = weight.2 * $750binary_subscr.30
DEBUG:numba.core.ssa:on stmt: $binop_iadd764.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$722binary_subscr.22, rhs=$binop_mul760.31, static_lhs=Undefined, static_rhs=Undefined)
DEBUG:numba.core.ssa:on stmt: y[t] = $binop_iadd764.32
DEBUG:numba.core.ssa:on stmt: jump 646
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 778
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D6F10>
DEBUG:numba.core.ssa:on stmt: jump 176
DEBUG:numba.core.ssa:==== SSA block rewrite pass on 782
DEBUG:numba.core.ssa:Running <numba.core.ssa._FixSSAVars object at 0x0000023E675D6F10>
DEBUG:numba.core.ssa:on stmt: $const782.0.0 = const(NoneType, None)
DEBUG:numba.core.ssa:on stmt: $784return_value.1 = cast(value=$const782.0.0)
DEBUG:numba.core.ssa:on stmt: return $784return_value.1
DEBUG:root:send audio data 1748516541.077280
DEBUG:root:send audio data 1748516543.436517
DEBUG:root:send audio data 1748516546.896596
DEBUG:root:send audio data 1748516549.586175
DEBUG:root:send audio data 1748516552.847469
DEBUG:root:send audio data 1748516556.047043
DEBUG:root:send audio data 1748516561.807152
DEBUG:root:send audio data 1748516564.757538
DEBUG:root:send audio data 1748516566.867771
DEBUG:root:send audio data 1748516573.647693
DEBUG:root:send audio data 1748516586.767909
